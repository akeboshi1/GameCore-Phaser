/*! For license information please see 586f6a45204c9b6e4aad.heartbeatworker.js.LICENSE */
!function(e){var r={};function __webpack_require__(t){if(r[t])return r[t].exports;var n=r[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,__webpack_require__),n.l=!0,n.exports}__webpack_require__.m=e,__webpack_require__.c=r,__webpack_require__.d=function(e,r,t){__webpack_require__.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},__webpack_require__.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},__webpack_require__.t=function(e,r){if(1&r&&(e=__webpack_require__(e)),8&r)return e;if(4&r&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(__webpack_require__.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&r&&"string"!=typeof e)for(var n in e)__webpack_require__.d(t,n,function(r){return e[r]}.bind(null,n));return t},__webpack_require__.n=function(e){var r=e&&e.__esModule?function getDefault(){return e.default}:function getModuleExports(){return e};return __webpack_require__.d(r,"a",r),r},__webpack_require__.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},__webpack_require__.p="",__webpack_require__(__webpack_require__.s="./node_modules/ts-loader/index.js!./src/net/heartbeatworker.ts")}({"./node_modules/ts-loader/index.js!./src/net/heartbeatworker.ts":function(module,exports){eval('var heartWorker = self;\r\nvar delayTime = 3000;\r\nvar reConnectCount = 0;\r\nvar startDelay;\r\nfunction startBeat() {\r\n    startDelay = setInterval(function () {\r\n        if (reConnectCount >= 5) {\r\n            postMessage({ "method": "reConnect" });\r\n            return;\r\n        }\r\n        reConnectCount++;\r\n        // Logger.getInstance().debug("heartBeat:" + reConnectCount);\r\n        postMessage({ "method": "heartBeat" });\r\n    }, delayTime);\r\n}\r\nfunction endBeat() {\r\n    reConnectCount = 0;\r\n    if (startDelay) {\r\n        clearInterval(startDelay);\r\n    }\r\n    postMessage({ "method": "endHeartBeat" });\r\n}\r\nheartWorker.onmessage = function (ev) {\r\n    var data = ev.data;\r\n    switch (data.method) {\r\n        case "startBeat":\r\n            startBeat();\r\n            break;\r\n        case "clearBeat":\r\n            reConnectCount = 0;\r\n            // Logger.getInstance().debug("clearHeartBeat:" + reConnectCount);\r\n            break;\r\n        case "endBeat":\r\n            endBeat();\r\n            break;\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://TooqingCore/./src/net/heartbeatworker.ts?./node_modules/ts-loader')}});