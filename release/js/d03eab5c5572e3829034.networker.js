/*! For license information please see d03eab5c5572e3829034.networker.js.LICENSE */
!function(e){var n={};function __webpack_require__(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,__webpack_require__),t.l=!0,t.exports}__webpack_require__.m=e,__webpack_require__.c=n,__webpack_require__.d=function(e,n,r){__webpack_require__.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},__webpack_require__.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},__webpack_require__.t=function(e,n){if(1&n&&(e=__webpack_require__(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(__webpack_require__.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var t in e)__webpack_require__.d(r,t,function(n){return e[n]}.bind(null,t));return r},__webpack_require__.n=function(e){var n=e&&e.__esModule?function getDefault(){return e.default}:function getModuleExports(){return e};return __webpack_require__.d(n,"a",n),n},__webpack_require__.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},__webpack_require__.p="",__webpack_require__(__webpack_require__.s="./node_modules/ts-loader/index.js!./src/net/networker.ts")}({"./node_modules/@protobufjs/aspromise/index.js":function(module,exports,__webpack_require__){"use strict";eval("\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n\n\n//# sourceURL=webpack://TooqingCore/./node_modules/@protobufjs/aspromise/index.js?")},"./node_modules/@protobufjs/base64/index.js":function(module,exports,__webpack_require__){"use strict";eval('\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === "=")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join("");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = "invalid encoding";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n\n\n//# sourceURL=webpack://TooqingCore/./node_modules/@protobufjs/base64/index.js?')},"./node_modules/@protobufjs/eventemitter/index.js":function(module,exports,__webpack_require__){"use strict";eval("\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n\n\n//# sourceURL=webpack://TooqingCore/./node_modules/@protobufjs/eventemitter/index.js?")},"./node_modules/@protobufjs/float/index.js":function(module,exports,__webpack_require__){"use strict";eval('\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== "undefined") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== "undefined") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n\n\n//# sourceURL=webpack://TooqingCore/./node_modules/@protobufjs/float/index.js?')},"./node_modules/@protobufjs/inquire/index.js":function(module,exports,__webpack_require__){"use strict";eval('\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval("quire".replace(/^/,"re"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n\n\n//# sourceURL=webpack://TooqingCore/./node_modules/@protobufjs/inquire/index.js?')},"./node_modules/@protobufjs/pool/index.js":function(module,exports,__webpack_require__){"use strict";eval("\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n\n\n//# sourceURL=webpack://TooqingCore/./node_modules/@protobufjs/pool/index.js?")},"./node_modules/@protobufjs/utf8/index.js":function(module,exports,__webpack_require__){"use strict";eval('\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return "";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join("");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n\n\n//# sourceURL=webpack://TooqingCore/./node_modules/@protobufjs/utf8/index.js?')},"./node_modules/base64-js/index.js":function(module,exports,__webpack_require__){"use strict";eval("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n//# sourceURL=webpack://TooqingCore/./node_modules/base64-js/index.js?")},"./node_modules/events/events.js":function(module,exports,__webpack_require__){"use strict";eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\n\n//# sourceURL=webpack://TooqingCore/./node_modules/events/events.js?")},"./node_modules/ieee754/index.js":function(module,exports){eval("exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n//# sourceURL=webpack://TooqingCore/./node_modules/ieee754/index.js?")},"./node_modules/isarray/index.js":function(module,exports){eval("var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n//# sourceURL=webpack://TooqingCore/./node_modules/isarray/index.js?")},"./node_modules/net-socket-packet/dist/index.js":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nvar PacketHandler_1 = __webpack_require__(/*! ./src/PacketHandler */ "./node_modules/net-socket-packet/dist/src/PacketHandler.js");\nexports.PacketHandler = PacketHandler_1.PacketHandler;\nvar Packet_1 = __webpack_require__(/*! ./src/Packet */ "./node_modules/net-socket-packet/dist/src/Packet.js");\nexports.Packet = Packet_1.Packet;\nexports.PBpacket = Packet_1.PBpacket;\nvar buffer_1 = __webpack_require__(/*! buffer/ */ "./node_modules/node-libs-browser/node_modules/buffer/index.js");\nexports.Buffer = buffer_1.Buffer;\n\n\n//# sourceURL=webpack://TooqingCore/./node_modules/net-socket-packet/dist/index.js?')},"./node_modules/net-socket-packet/dist/src/Packet.js":function(module,exports,__webpack_require__){"use strict";eval('\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, "__esModule", { value: true });\nvar buffer_1 = __webpack_require__(/*! buffer/ */ "./node_modules/node-libs-browser/node_modules/buffer/index.js");\nvar protocols = [];\nvar _S = new String(\'S\').charCodeAt(0), _D = new String(\'D\').charCodeAt(0), _C = new String(\'C\').charCodeAt(0);\nvar PACKET_MAGIC_D = (_S << 8 | _D); //\'DS\'   default=not zip\nvar PACKET_MAGIC_C = (_S << 8 | _C); //\'CS\'    zip\nvar HEAD_BYTES_SIZE = 2 + 4 + 4 + 4 + 4;\nvar PacketHeader = /** @class */ (function () {\n    function PacketHeader(op, param) {\n        /**\n         * // --- Header structure --- \\\\\n         * +------------------------------------------------------------+\n         * |    magic   +   uint16  +   2Bytes  +       zip or not      |\n         * +------------------------------------------------------------+\n         * |  body_len  +   uint16  +   2Bytes  +   Packet body length  |\n         * +------------------------------------------------------------+\n         * |    opcode  +   uint32  +   4Bytes  +    operation code     |\n         * +------------------------------------------------------------+\n         * |    uuid    +   uint64  +   4Bytes  +  Connection SessionID |\n         * +------------------------------------------------------------+\n         * |    param   +   uint32  +   4Bytes  +   parameter of packet |\n         * +------------------------------------------------------------+\n         */\n        this._head_len = HEAD_BYTES_SIZE;\n        this._len = 0;\n        this._buf = buffer_1.Buffer.alloc(0);\n        this._offset = 0;\n        this._opcode = 0;\n        this._param = 0;\n        this._magic = PACKET_MAGIC_D;\n        this._uuid = 0; // useless for client\n        if (typeof op == "number") {\n            this._opcode = op;\n        }\n        if (typeof param == "number") {\n            this._param = param;\n        }\n    }\n    Object.defineProperty(PacketHeader.prototype, "length", {\n        get: function () {\n            return this._buf.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PacketHeader.prototype, "opcode", {\n        get: function () {\n            return this._opcode;\n        },\n        set: function (op) {\n            this._opcode = op;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PacketHeader.prototype, "param", {\n        get: function () {\n            return this._param;\n        },\n        set: function (p) {\n            this._param = p;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PacketHeader.prototype, "magic", {\n        get: function () {\n            return this._magic;\n        },\n        set: function (mc) {\n            this._magic = mc;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PacketHeader.prototype, "uuid", {\n        get: function () {\n            return this._uuid;\n        },\n        set: function (id) {\n            this._uuid = id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PacketHeader.prototype, "blen", {\n        get: function () {\n            return this._len;\n        },\n        set: function (l) {\n            this._len = l;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PacketHeader.prototype.pack = function () {\n        this.clean_buf();\n        this._buf.writeUInt16LE(this._magic, this._offset);\n        this._offset += 2;\n        this._buf.writeUInt32LE(this._len, this._offset);\n        this._offset += 4;\n        this._buf.writeUInt32LE(this._opcode, this._offset);\n        this._offset += 4;\n        this._buf.writeUInt32LE(this._uuid, this._offset);\n        this._offset += 4;\n        this._buf.writeUInt32LE(this._param, this._offset);\n        this._offset += 4;\n        return this._buf;\n    };\n    PacketHeader.prototype.unpack = function (buffer) {\n        if (buffer.length < this._head_len) {\n            throw new Error("Packet header length invalid.");\n        }\n        var offset = 0;\n        this._magic = buffer.readUInt16LE(offset);\n        offset += 2;\n        this._len = buffer.readUInt32LE(offset);\n        offset += 4;\n        this._opcode = buffer.readUInt32LE(offset);\n        offset += 4;\n        // Do not read uuid\n        this._uuid = buffer.readUInt32LE(offset);\n        offset += 4;\n        this._param = buffer.readUInt32LE(offset);\n        offset += 4;\n        return offset;\n    };\n    PacketHeader.prototype.clean_buf = function () {\n        this._buf = buffer_1.Buffer.alloc(this._head_len);\n        this._offset = 0;\n    };\n    return PacketHeader;\n}());\nexports.PacketHeader = PacketHeader;\nvar Packet = /** @class */ (function () {\n    function Packet(opcode, param) {\n        this.mContentBuf = buffer_1.Buffer.alloc(0);\n        this.mHeader = new PacketHeader();\n        this._init(opcode, param);\n    }\n    Object.defineProperty(Packet.prototype, "header", {\n        get: function () {\n            return this.mHeader;\n        },\n        set: function (head) {\n            this.mHeader = head;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Packet.prototype, "opcode", {\n        get: function () {\n            return this.mHeader.opcode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Packet.prototype, "content", {\n        get: function () {\n            return this.mContent;\n        },\n        set: function (content) {\n            this.mContent = content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Packet.prototype.Serialization = function () {\n        this._contentEncode();\n        var buf;\n        var _a = this._mkHead(), headBuf = _a.headBuf, headLength = _a.headLength;\n        buf = buffer_1.Buffer.concat([headBuf, this.mContentBuf], headLength + this.mContentBuf.length);\n        return buf;\n    };\n    Packet.prototype.Deserialization = function (buf) {\n        if (buf.length < HEAD_BYTES_SIZE) {\n            throw new Error("Packet is smaller than header size.");\n        }\n        var pos = this.mHeader.unpack(buf);\n        var content_len = this.mHeader.blen;\n        this.mContentBuf = buffer_1.Buffer.alloc(content_len);\n        buf.copy(this.mContentBuf, 0, pos);\n        this._contentDecode();\n        return false;\n    };\n    Packet.prototype._init = function (opcode, param) {\n        if (typeof opcode !== \'undefined\') {\n            this.mHeader = new PacketHeader(opcode, param);\n        }\n        else {\n            this.mHeader = new PacketHeader();\n        }\n    };\n    Packet.prototype._contentEncode = function () {\n    };\n    Packet.prototype._contentDecode = function () {\n    };\n    Packet.prototype._mkHead = function () {\n        this.mHeader.blen = this.mContentBuf.length;\n        var headBuf = this.mHeader.pack(), headLength = headBuf.length;\n        return { headBuf: headBuf, headLength: headLength };\n    };\n    return Packet;\n}());\nexports.Packet = Packet;\nvar OPCODE_REGXP = /^_(OP_.+)/;\nvar PBpacket = /** @class */ (function (_super) {\n    __extends(PBpacket, _super);\n    function PBpacket(opcode, param) {\n        var _this = _super.call(this) || this;\n        _this._opcode_str = \'\';\n        _this._pbClass = undefined;\n        _this._init(opcode, param);\n        return _this;\n    }\n    Object.defineProperty(PBpacket.prototype, "pbClass", {\n        get: function () {\n            return this._pbClass;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PBpacket.getProtocol = function () {\n        return protocols;\n    };\n    PBpacket.addProtocol = function (proto) {\n        protocols.push(proto);\n    };\n    PBpacket.prototype._init = function (opcode, param) {\n        _super.prototype._init.call(this, opcode, param);\n        this._reflection();\n    };\n    PBpacket.prototype._contentEncode = function () {\n        if (typeof this._pbClass === \'undefined\') {\n            // console.warn(new Error(`_pbClass is undefined.`));\n            return;\n        }\n        if (typeof this.mContent === \'undefined\') {\n            return console.warn(new Error("Content is undefined."));\n        }\n        this.mContentBuf = new buffer_1.Buffer(this._pbClass.encode(this.mContent).finish());\n    };\n    ;\n    PBpacket.prototype._contentDecode = function () {\n        // reflection first, transform opcode to protocol class.\n        this._reflection();\n        if (typeof this._pbClass === \'undefined\') {\n            // console.warn(new Error(`_pbClass is undefined.`));\n            return;\n        }\n        if (typeof this.mContentBuf === \'undefined\') {\n            return console.warn(new Error("Content buffer is undefined."));\n        }\n        // override the Content object from buff\n        try {\n            this.mContent = this._pbClass.decode(this.mContentBuf);\n        }\n        catch (e) {\n            console.error("_contentDecode error: " + e);\n        }\n    };\n    ;\n    PBpacket.prototype._reflection = function () {\n        var _this = this;\n        var op = this.mHeader.opcode;\n        if (op !== undefined) {\n            // find opcode_T from all protos\n            var self_1 = this;\n            protocols.forEach(function (proto) {\n                if (\'OPCODE\' in proto && op in proto[\'OPCODE\']) {\n                    self_1._opcode_str = proto[\'OPCODE\'][op];\n                    var class_reg = OPCODE_REGXP.exec(_this._opcode_str);\n                    if (class_reg && class_reg.length > 0) {\n                        var class_T = class_reg[1];\n                        if (class_T in proto) {\n                            self_1._pbClass = proto[class_T];\n                        }\n                    }\n                }\n            });\n            if (typeof this._pbClass !== \'undefined\')\n                this._buildContent();\n        }\n    };\n    ;\n    PBpacket.prototype._buildContent = function () {\n        if (typeof this._pbClass !== \'undefined\' && \'create\' in this._pbClass)\n            this.mContent = new this._pbClass.create();\n    };\n    PBpacket.prototype.toString = function () {\n        return "OP[" + this.mHeader.opcode + "] " + this._opcode_str + " - Content_Len: " + this.mContentBuf.length;\n    };\n    return PBpacket;\n}(Packet));\nexports.PBpacket = PBpacket;\n\n\n//# sourceURL=webpack://TooqingCore/./node_modules/net-socket-packet/dist/src/Packet.js?')},"./node_modules/net-socket-packet/dist/src/PacketHandler.js":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nvar Collections = __webpack_require__(/*! typescript-collections */ "./node_modules/typescript-collections/dist/lib/index.js");\nvar PacketHandler = /** @class */ (function () {\n    function PacketHandler() {\n        this.mOnReceivedFunDict = new Collections.Dictionary();\n    }\n    PacketHandler.prototype.onPacketArrived = function (packet) {\n        var callbackFun = this.mOnReceivedFunDict.getValue(packet.opcode);\n        if (callbackFun) {\n            try {\n                callbackFun.call(this, packet);\n                console.info("Finish handle OPCODE: 0x" + packet.opcode.toString(16) + " / " + packet.opcode.toString());\n                return true;\n            }\n            catch (e) {\n                console.error(e);\n            }\n        }\n        return false;\n    };\n    PacketHandler.prototype.addHandlerFun = function (opcode, fun) {\n        this.mOnReceivedFunDict.setValue(opcode, fun);\n    };\n    return PacketHandler;\n}());\nexports.PacketHandler = PacketHandler;\n\n\n//# sourceURL=webpack://TooqingCore/./node_modules/net-socket-packet/dist/src/PacketHandler.js?')},"./node_modules/node-libs-browser/node_modules/buffer/index.js":function(module,exports,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function(global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(/*! base64-js */ \"./node_modules/base64-js/index.js\")\nvar ieee754 = __webpack_require__(/*! ieee754 */ \"./node_modules/ieee754/index.js\")\nvar isArray = __webpack_require__(/*! isarray */ \"./node_modules/isarray/index.js\")\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack://TooqingCore/./node_modules/node-libs-browser/node_modules/buffer/index.js?")},"./node_modules/pixelpai_proto/protocols.js":function(module,exports,__webpack_require__){eval('var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n(function(global, factory) { /* global define, require, module */\n\n    /* AMD */ if (true)\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! protobufjs/minimal */ "./node_modules/protobufjs/minimal.js")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \'function\' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n    /* CommonJS */ else {}\n\n})(this, function($protobuf) {\n    "use strict";\n\n    // Common aliases\n    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n    \n    // Exported root namespace\n    var $root = $protobuf.roots["default"] || ($protobuf.roots["default"] = {});\n    \n    $root.op_client = (function() {\n    \n        /**\n         * Namespace op_client.\n         * @exports op_client\n         * @namespace\n         */\n        var op_client = {};\n    \n        /**\n         * OPCODE enum.\n         * @name op_client.OPCODE\n         * @enum {string}\n         * @property {number} OP_MAJOR=20 OP_MAJOR value\n         * @property {number} _OP_UNKNOWN=0 _OP_UNKNOWN value\n         * @property {number} _OP_CLIENT_PING=1376255 _OP_CLIENT_PING value\n         * @property {number} _OP_GALAXY_RES_CLIENT_START_NEW_WORLD=1310722 _OP_GALAXY_RES_CLIENT_START_NEW_WORLD value\n         * @property {number} _OP_GATEWAY_RES_CLIENT_ERROR=1314816 _OP_GATEWAY_RES_CLIENT_ERROR value\n         * @property {number} _OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER=1314817 _OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER value\n         * @property {number} _OP_GATEWAY_RES_CLIENT_START_NEW_WORLD=1314818 _OP_GATEWAY_RES_CLIENT_START_NEW_WORLD value\n         * @property {number} _OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT=1314820 _OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT value\n         * @property {number} _OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT=1314819 _OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT value\n         * @property {number} _OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION=1314821 _OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION value\n         * @property {number} _OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION=1314823 _OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION value\n         * @property {number} _OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION=1314825 _OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION value\n         * @property {number} _OP_GATEWAY_RES_CLIENT_PONG=1314826 _OP_GATEWAY_RES_CLIENT_PONG value\n         * @property {number} _OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS=1314833 _OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS value\n         * @property {number} _OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION=1314835 _OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION value\n         * @property {number} _OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION=1314837 _OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION value\n         * @property {number} _OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION=1314839 _OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION value\n         * @property {number} _OP_VIRTUAL_WORLD_REQ_CLIENT_FORCE_OFFLINE=1314841 _OP_VIRTUAL_WORLD_REQ_CLIENT_FORCE_OFFLINE value\n         * @property {number} _OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING=1314849 _OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING value\n         * @property {number} _OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP=1314851 _OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP value\n         * @property {number} _OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE=1314822 _OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE value\n         * @property {number} _OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER=1314824 _OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER value\n         * @property {number} _OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER=1314832 _OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER value\n         * @property {number} _OP_VIRTUAL_WORLD_RES_CLIENT_CHAT=1314834 _OP_VIRTUAL_WORLD_RES_CLIENT_CHAT value\n         * @property {number} _OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG=1314836 _OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG value\n         * @property {number} _OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT=1314838 _OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT value\n         * @property {number} _OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT=1314840 _OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT value\n         * @property {number} _OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE=1314848 _OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE value\n         * @property {number} _OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER=1314850 _OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER value\n         * @property {number} _OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER=1314852 _OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER value\n         * @property {number} _OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN=1314854 _OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN value\n         * @property {number} _OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER=1314856 _OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER value\n         * @property {number} _OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE=1314864 _OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE value\n         * @property {number} _OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN_END=1314866 _OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN_END value\n         * @property {number} _OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE=1314868 _OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE value\n         * @property {number} _OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM=1314870 _OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM value\n         * @property {number} _OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM=1314872 _OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM value\n         * @property {number} _OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS=1314880 _OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS value\n         * @property {number} _OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN=1314882 _OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN value\n         * @property {number} _OP_VIRTUAL_WORLD_RES_CLIENT_RESET_CAMERA_SIZE=1314884 _OP_VIRTUAL_WORLD_RES_CLIENT_RESET_CAMERA_SIZE value\n         * @property {number} _OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI=1314888 _OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI value\n         * @property {number} _OP_VIRTUAL_WORLD_RES_CLIENT_PACKAGE_ITEM_USE=1314896 _OP_VIRTUAL_WORLD_RES_CLIENT_PACKAGE_ITEM_USE value\n         * @property {number} _OP_VIRTUAL_WORLD_RES_CLIENT_STORED_ITEM=1314898 _OP_VIRTUAL_WORLD_RES_CLIENT_STORED_ITEM value\n         * @property {number} _OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI=1314902 _OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI value\n         * @property {number} _OP_VIRTUAL_WORLD_RES_CLIENT_OPEN_PACKAGE=1314904 _OP_VIRTUAL_WORLD_RES_CLIENT_OPEN_PACKAGE value\n         * @property {number} _OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER=1314912 _OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER value\n         * @property {number} _OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE=1314914 _OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE value\n         * @property {number} _OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE=1314916 _OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE value\n         * @property {number} _OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN=1314918 _OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN value\n         * @property {number} _OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP=1314920 _OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP value\n         * @property {number} _OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE=1314928 _OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE value\n         * @property {number} _OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE=1314930 _OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE value\n         * @property {number} _OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI=1314932 _OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI value\n         * @property {number} _OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT=1314934 _OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT value\n         * @property {number} _OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME=1314936 _OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME value\n         * @property {number} _OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE=1318913 _OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE value\n         * @property {number} _OP_EDITOR_REQ_CLIENT_SET_EDITOR_ELEMENT=1318915 _OP_EDITOR_REQ_CLIENT_SET_EDITOR_ELEMENT value\n         * @property {number} _OP_EDITOR_REQ_CLIENT_ADD_ELEMENT=1318917 _OP_EDITOR_REQ_CLIENT_ADD_ELEMENT value\n         * @property {number} _OP_EDITOR_REQ_CLIENT_ADD_TERRAIN=1318919 _OP_EDITOR_REQ_CLIENT_ADD_TERRAIN value\n         * @property {number} _OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT=1318921 _OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT value\n         * @property {number} _OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN=1318929 _OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN value\n         * @property {number} _OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW=1318931 _OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW value\n         * @property {number} _OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT=1318933 _OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT value\n         * @property {number} _OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT=1318935 _OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT value\n         * @property {number} _OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT=1318937 _OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT value\n         * @property {number} _OP_EDITOR_REQ_CLIENT_ALIGN_GRID=1318945 _OP_EDITOR_REQ_CLIENT_ALIGN_GRID value\n         * @property {number} _OP_EDITOR_REQ_CLIENT_VISIBLE_GRID=1318947 _OP_EDITOR_REQ_CLIENT_VISIBLE_GRID value\n         * @property {number} _OP_EDITOR_REQ_CLIENT_CREATE_SPRITE=1318914 _OP_EDITOR_REQ_CLIENT_CREATE_SPRITE value\n         * @property {number} _OP_EDITOR_REQ_CLIENT_DELETE_SPRITE=1318916 _OP_EDITOR_REQ_CLIENT_DELETE_SPRITE value\n         * @property {number} _OP_EDITOR_REQ_CLIENT_SYNC_SPRITE=1318918 _OP_EDITOR_REQ_CLIENT_SYNC_SPRITE value\n         * @property {number} _OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE=1318949 _OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE value\n         * @property {number} _OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE=1318950 _OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE value\n         * @property {number} _OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE=1318951 _OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE value\n         * @property {number} _OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION=1318953 _OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION value\n         * @property {number} _OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME=1318960 _OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME value\n         * @property {number} _OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE=1318961 _OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE value\n         * @property {number} _OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE=1318962 _OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE value\n         * @property {number} _OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE=1318963 _OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE value\n         * @property {number} _OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE=1318964 _OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE value\n         * @property {number} _OP_EDITOR_REQ_CLIENT_FETCH_SPRITE=1318965 _OP_EDITOR_REQ_CLIENT_FETCH_SPRITE value\n         * @property {number} _OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW=1318966 _OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW value\n         * @property {number} _OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION=1318967 _OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION value\n         */\n        op_client.OPCODE = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[20] = "OP_MAJOR"] = 20;\n            values[valuesById[0] = "_OP_UNKNOWN"] = 0;\n            values[valuesById[1376255] = "_OP_CLIENT_PING"] = 1376255;\n            values[valuesById[1310722] = "_OP_GALAXY_RES_CLIENT_START_NEW_WORLD"] = 1310722;\n            values[valuesById[1314816] = "_OP_GATEWAY_RES_CLIENT_ERROR"] = 1314816;\n            values[valuesById[1314817] = "_OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER"] = 1314817;\n            values[valuesById[1314818] = "_OP_GATEWAY_RES_CLIENT_START_NEW_WORLD"] = 1314818;\n            values[valuesById[1314820] = "_OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT"] = 1314820;\n            values[valuesById[1314819] = "_OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT"] = 1314819;\n            values[valuesById[1314821] = "_OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION"] = 1314821;\n            values[valuesById[1314823] = "_OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION"] = 1314823;\n            values[valuesById[1314825] = "_OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION"] = 1314825;\n            values[valuesById[1314826] = "_OP_GATEWAY_RES_CLIENT_PONG"] = 1314826;\n            values[valuesById[1314833] = "_OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS"] = 1314833;\n            values[valuesById[1314835] = "_OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION"] = 1314835;\n            values[valuesById[1314837] = "_OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION"] = 1314837;\n            values[valuesById[1314839] = "_OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION"] = 1314839;\n            values[valuesById[1314841] = "_OP_VIRTUAL_WORLD_REQ_CLIENT_FORCE_OFFLINE"] = 1314841;\n            values[valuesById[1314849] = "_OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING"] = 1314849;\n            values[valuesById[1314851] = "_OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP"] = 1314851;\n            values[valuesById[1314822] = "_OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE"] = 1314822;\n            values[valuesById[1314824] = "_OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER"] = 1314824;\n            values[valuesById[1314832] = "_OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER"] = 1314832;\n            values[valuesById[1314834] = "_OP_VIRTUAL_WORLD_RES_CLIENT_CHAT"] = 1314834;\n            values[valuesById[1314836] = "_OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG"] = 1314836;\n            values[valuesById[1314838] = "_OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT"] = 1314838;\n            values[valuesById[1314840] = "_OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT"] = 1314840;\n            values[valuesById[1314848] = "_OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE"] = 1314848;\n            values[valuesById[1314850] = "_OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER"] = 1314850;\n            values[valuesById[1314852] = "_OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER"] = 1314852;\n            values[valuesById[1314854] = "_OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN"] = 1314854;\n            values[valuesById[1314856] = "_OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER"] = 1314856;\n            values[valuesById[1314864] = "_OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE"] = 1314864;\n            values[valuesById[1314866] = "_OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN_END"] = 1314866;\n            values[valuesById[1314868] = "_OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE"] = 1314868;\n            values[valuesById[1314870] = "_OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM"] = 1314870;\n            values[valuesById[1314872] = "_OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM"] = 1314872;\n            values[valuesById[1314880] = "_OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS"] = 1314880;\n            values[valuesById[1314882] = "_OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN"] = 1314882;\n            values[valuesById[1314884] = "_OP_VIRTUAL_WORLD_RES_CLIENT_RESET_CAMERA_SIZE"] = 1314884;\n            values[valuesById[1314888] = "_OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI"] = 1314888;\n            values[valuesById[1314896] = "_OP_VIRTUAL_WORLD_RES_CLIENT_PACKAGE_ITEM_USE"] = 1314896;\n            values[valuesById[1314898] = "_OP_VIRTUAL_WORLD_RES_CLIENT_STORED_ITEM"] = 1314898;\n            values[valuesById[1314902] = "_OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI"] = 1314902;\n            values[valuesById[1314904] = "_OP_VIRTUAL_WORLD_RES_CLIENT_OPEN_PACKAGE"] = 1314904;\n            values[valuesById[1314912] = "_OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER"] = 1314912;\n            values[valuesById[1314914] = "_OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE"] = 1314914;\n            values[valuesById[1314916] = "_OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE"] = 1314916;\n            values[valuesById[1314918] = "_OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN"] = 1314918;\n            values[valuesById[1314920] = "_OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP"] = 1314920;\n            values[valuesById[1314928] = "_OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE"] = 1314928;\n            values[valuesById[1314930] = "_OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE"] = 1314930;\n            values[valuesById[1314932] = "_OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI"] = 1314932;\n            values[valuesById[1314934] = "_OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT"] = 1314934;\n            values[valuesById[1314936] = "_OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME"] = 1314936;\n            values[valuesById[1318913] = "_OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE"] = 1318913;\n            values[valuesById[1318915] = "_OP_EDITOR_REQ_CLIENT_SET_EDITOR_ELEMENT"] = 1318915;\n            values[valuesById[1318917] = "_OP_EDITOR_REQ_CLIENT_ADD_ELEMENT"] = 1318917;\n            values[valuesById[1318919] = "_OP_EDITOR_REQ_CLIENT_ADD_TERRAIN"] = 1318919;\n            values[valuesById[1318921] = "_OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT"] = 1318921;\n            values[valuesById[1318929] = "_OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN"] = 1318929;\n            values[valuesById[1318931] = "_OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW"] = 1318931;\n            values[valuesById[1318933] = "_OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT"] = 1318933;\n            values[valuesById[1318935] = "_OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT"] = 1318935;\n            values[valuesById[1318937] = "_OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT"] = 1318937;\n            values[valuesById[1318945] = "_OP_EDITOR_REQ_CLIENT_ALIGN_GRID"] = 1318945;\n            values[valuesById[1318947] = "_OP_EDITOR_REQ_CLIENT_VISIBLE_GRID"] = 1318947;\n            values[valuesById[1318914] = "_OP_EDITOR_REQ_CLIENT_CREATE_SPRITE"] = 1318914;\n            values[valuesById[1318916] = "_OP_EDITOR_REQ_CLIENT_DELETE_SPRITE"] = 1318916;\n            values[valuesById[1318918] = "_OP_EDITOR_REQ_CLIENT_SYNC_SPRITE"] = 1318918;\n            values[valuesById[1318949] = "_OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE"] = 1318949;\n            values[valuesById[1318950] = "_OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE"] = 1318950;\n            values[valuesById[1318951] = "_OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE"] = 1318951;\n            values[valuesById[1318953] = "_OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION"] = 1318953;\n            values[valuesById[1318960] = "_OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME"] = 1318960;\n            values[valuesById[1318961] = "_OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE"] = 1318961;\n            values[valuesById[1318962] = "_OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE"] = 1318962;\n            values[valuesById[1318963] = "_OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE"] = 1318963;\n            values[valuesById[1318964] = "_OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE"] = 1318964;\n            values[valuesById[1318965] = "_OP_EDITOR_REQ_CLIENT_FETCH_SPRITE"] = 1318965;\n            values[valuesById[1318966] = "_OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW"] = 1318966;\n            values[valuesById[1318967] = "_OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION"] = 1318967;\n            return values;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP\n             * @property {op_gameconfig.IShop} shop OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP shop\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP.\n             * @implements IOP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP shop.\n             * @member {op_gameconfig.IShop} shop\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP.prototype.shop = null;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP} OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP} message OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                $root.op_gameconfig.Shop.encode(message.shop, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP} message OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP} OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.shop = $root.op_gameconfig.Shop.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("shop"))\n                    throw $util.ProtocolError("missing required \'shop\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP} OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                {\n                    var error = $root.op_gameconfig.Shop.verify(message.shop);\n                    if (error)\n                        return "shop." + error;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP} OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP();\n                if (object.shop != null) {\n                    if (typeof object.shop !== "object")\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP.shop: object expected");\n                    message.shop = $root.op_gameconfig.Shop.fromObject(object.shop);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP} message OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.shop = null;\n                if (message.shop != null && message.hasOwnProperty("shop"))\n                    object.shop = $root.op_gameconfig.Shop.toObject(message.shop, options);\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_SHOP;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG\n             * @property {string} logContext OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG logContext\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG.\n             * @implements IOP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG logContext.\n             * @member {string} logContext\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG.prototype.logContext = "";\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG} OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG} message OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.logContext);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG} message OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG} OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.logContext = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("logContext"))\n                    throw $util.ProtocolError("missing required \'logContext\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG} OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.logContext))\n                    return "logContext: string expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG} OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG();\n                if (object.logContext != null)\n                    message.logContext = String(object.logContext);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG} message OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.logContext = "";\n                if (message.logContext != null && message.hasOwnProperty("logContext"))\n                    object.logContext = message.logContext;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_RES_CLIENT_LUA_LOG;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE\n             * @property {Array.<op_gameconfig.ISlot>|null} [slot] OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE slot\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE.\n             * @implements IOP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE(properties) {\n                this.slot = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE slot.\n             * @member {Array.<op_gameconfig.ISlot>} slot\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE.prototype.slot = $util.emptyArray;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE} OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE} message OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.slot != null && message.slot.length)\n                    for (var i = 0; i < message.slot.length; ++i)\n                        $root.op_gameconfig.Slot.encode(message.slot[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE} message OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE} OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.slot && message.slot.length))\n                            message.slot = [];\n                        message.slot.push($root.op_gameconfig.Slot.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE} OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.slot != null && message.hasOwnProperty("slot")) {\n                    if (!Array.isArray(message.slot))\n                        return "slot: array expected";\n                    for (var i = 0; i < message.slot.length; ++i) {\n                        var error = $root.op_gameconfig.Slot.verify(message.slot[i]);\n                        if (error)\n                            return "slot." + error;\n                    }\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE} OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE();\n                if (object.slot) {\n                    if (!Array.isArray(object.slot))\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE.slot: array expected");\n                    message.slot = [];\n                    for (var i = 0; i < object.slot.length; ++i) {\n                        if (typeof object.slot[i] !== "object")\n                            throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE.slot: object expected");\n                        message.slot[i] = $root.op_gameconfig.Slot.fromObject(object.slot[i]);\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE} message OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.slot = [];\n                if (message.slot && message.slot.length) {\n                    object.slot = [];\n                    for (var j = 0; j < message.slot.length; ++j)\n                        object.slot[j] = $root.op_gameconfig.Slot.toObject(message.slot[j], options);\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_RES_CLIENT_UI_BIND_ATTRIBUTE;\n        })();\n    \n        op_client.OP_CLIENT_PING = (function() {\n    \n            /**\n             * Properties of a OP_CLIENT_PING.\n             * @memberof op_client\n             * @interface IOP_CLIENT_PING\n             * @property {string} msg OP_CLIENT_PING msg\n             * @property {op_def.ResponseStatus} rs OP_CLIENT_PING rs\n             */\n    \n            /**\n             * Constructs a new OP_CLIENT_PING.\n             * @memberof op_client\n             * @classdesc Represents a OP_CLIENT_PING.\n             * @implements IOP_CLIENT_PING\n             * @constructor\n             * @param {op_client.IOP_CLIENT_PING=} [properties] Properties to set\n             */\n            function OP_CLIENT_PING(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_CLIENT_PING msg.\n             * @member {string} msg\n             * @memberof op_client.OP_CLIENT_PING\n             * @instance\n             */\n            OP_CLIENT_PING.prototype.msg = "";\n    \n            /**\n             * OP_CLIENT_PING rs.\n             * @member {op_def.ResponseStatus} rs\n             * @memberof op_client.OP_CLIENT_PING\n             * @instance\n             */\n            OP_CLIENT_PING.prototype.rs = 0;\n    \n            /**\n             * Creates a new OP_CLIENT_PING instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_CLIENT_PING\n             * @static\n             * @param {op_client.IOP_CLIENT_PING=} [properties] Properties to set\n             * @returns {op_client.OP_CLIENT_PING} OP_CLIENT_PING instance\n             */\n            OP_CLIENT_PING.create = function create(properties) {\n                return new OP_CLIENT_PING(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_PING message. Does not implicitly {@link op_client.OP_CLIENT_PING.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_CLIENT_PING\n             * @static\n             * @param {op_client.IOP_CLIENT_PING} message OP_CLIENT_PING message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_PING.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.msg);\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.rs);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_PING message, length delimited. Does not implicitly {@link op_client.OP_CLIENT_PING.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_CLIENT_PING\n             * @static\n             * @param {op_client.IOP_CLIENT_PING} message OP_CLIENT_PING message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_PING.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_PING message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_CLIENT_PING\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_CLIENT_PING} OP_CLIENT_PING\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_PING.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_CLIENT_PING();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.msg = reader.string();\n                        break;\n                    case 2:\n                        message.rs = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("msg"))\n                    throw $util.ProtocolError("missing required \'msg\'", { instance: message });\n                if (!message.hasOwnProperty("rs"))\n                    throw $util.ProtocolError("missing required \'rs\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_PING message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_CLIENT_PING\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_CLIENT_PING} OP_CLIENT_PING\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_PING.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_CLIENT_PING message.\n             * @function verify\n             * @memberof op_client.OP_CLIENT_PING\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_CLIENT_PING.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.msg))\n                    return "msg: string expected";\n                switch (message.rs) {\n                default:\n                    return "rs: enum value expected";\n                case 0:\n                case 4096:\n                case 4098:\n                case 4099:\n                case 4100:\n                case 8193:\n                case 12289:\n                case 16385:\n                case 20481:\n                case 37888:\n                case 37889:\n                case 45056:\n                    break;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_CLIENT_PING message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_CLIENT_PING\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_CLIENT_PING} OP_CLIENT_PING\n             */\n            OP_CLIENT_PING.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_CLIENT_PING)\n                    return object;\n                var message = new $root.op_client.OP_CLIENT_PING();\n                if (object.msg != null)\n                    message.msg = String(object.msg);\n                switch (object.rs) {\n                case "SUCCESS":\n                case 0:\n                    message.rs = 0;\n                    break;\n                case "SERVER_ERROR_UNKNOWN":\n                case 4096:\n                    message.rs = 4096;\n                    break;\n                case "SERVER_ERROR_BUSY":\n                case 4098:\n                    message.rs = 4098;\n                    break;\n                case "SERVER_ERROR_TIMEOUT":\n                case 4099:\n                    message.rs = 4099;\n                    break;\n                case "SERVER_ERROR_SERVICE_NOT_FOUND":\n                case 4100:\n                    message.rs = 4100;\n                    break;\n                case "SERVER_ERROR_BAD_GATEWAY":\n                case 8193:\n                    message.rs = 8193;\n                    break;\n                case "SERVER_ERROR_GALAXY_SERVICE_NOT_FOUND":\n                case 12289:\n                    message.rs = 12289;\n                    break;\n                case "SERVER_ERROR_WORLD_SERVICE_NOT_FOUND":\n                case 16385:\n                    message.rs = 16385;\n                    break;\n                case "SERVER_ERROR_VIRTUAL_WORLD_SERVICE_NOT_FOUND":\n                case 20481:\n                    message.rs = 20481;\n                    break;\n                case "REQUEST_ERROR_WRONG_PARAM":\n                case 37888:\n                    message.rs = 37888;\n                    break;\n                case "REQUEST_UNAUTHORIZED":\n                case 37889:\n                    message.rs = 37889;\n                    break;\n                case "RANSFER_TO_GAME_BILLER_ERROR":\n                case 45056:\n                    message.rs = 45056;\n                    break;\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_CLIENT_PING message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_CLIENT_PING\n             * @static\n             * @param {op_client.OP_CLIENT_PING} message OP_CLIENT_PING\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_CLIENT_PING.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.msg = "";\n                    object.rs = options.enums === String ? "SUCCESS" : 0;\n                }\n                if (message.msg != null && message.hasOwnProperty("msg"))\n                    object.msg = message.msg;\n                if (message.rs != null && message.hasOwnProperty("rs"))\n                    object.rs = options.enums === String ? $root.op_def.ResponseStatus[message.rs] : message.rs;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_CLIENT_PING to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_CLIENT_PING\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_CLIENT_PING.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_CLIENT_PING;\n        })();\n    \n        op_client.OP_GATEWAY_RES_CLIENT_START_NEW_WORLD = (function() {\n    \n            /**\n             * Properties of a OP_GATEWAY_RES_CLIENT_START_NEW_WORLD.\n             * @memberof op_client\n             * @interface IOP_GATEWAY_RES_CLIENT_START_NEW_WORLD\n             * @property {string|null} [msg] OP_GATEWAY_RES_CLIENT_START_NEW_WORLD msg\n             */\n    \n            /**\n             * Constructs a new OP_GATEWAY_RES_CLIENT_START_NEW_WORLD.\n             * @memberof op_client\n             * @classdesc Represents a OP_GATEWAY_RES_CLIENT_START_NEW_WORLD.\n             * @implements IOP_GATEWAY_RES_CLIENT_START_NEW_WORLD\n             * @constructor\n             * @param {op_client.IOP_GATEWAY_RES_CLIENT_START_NEW_WORLD=} [properties] Properties to set\n             */\n            function OP_GATEWAY_RES_CLIENT_START_NEW_WORLD(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_GATEWAY_RES_CLIENT_START_NEW_WORLD msg.\n             * @member {string} msg\n             * @memberof op_client.OP_GATEWAY_RES_CLIENT_START_NEW_WORLD\n             * @instance\n             */\n            OP_GATEWAY_RES_CLIENT_START_NEW_WORLD.prototype.msg = "";\n    \n            /**\n             * Creates a new OP_GATEWAY_RES_CLIENT_START_NEW_WORLD instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_GATEWAY_RES_CLIENT_START_NEW_WORLD\n             * @static\n             * @param {op_client.IOP_GATEWAY_RES_CLIENT_START_NEW_WORLD=} [properties] Properties to set\n             * @returns {op_client.OP_GATEWAY_RES_CLIENT_START_NEW_WORLD} OP_GATEWAY_RES_CLIENT_START_NEW_WORLD instance\n             */\n            OP_GATEWAY_RES_CLIENT_START_NEW_WORLD.create = function create(properties) {\n                return new OP_GATEWAY_RES_CLIENT_START_NEW_WORLD(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_GATEWAY_RES_CLIENT_START_NEW_WORLD message. Does not implicitly {@link op_client.OP_GATEWAY_RES_CLIENT_START_NEW_WORLD.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_GATEWAY_RES_CLIENT_START_NEW_WORLD\n             * @static\n             * @param {op_client.IOP_GATEWAY_RES_CLIENT_START_NEW_WORLD} message OP_GATEWAY_RES_CLIENT_START_NEW_WORLD message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_GATEWAY_RES_CLIENT_START_NEW_WORLD.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.msg != null && message.hasOwnProperty("msg"))\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.msg);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_GATEWAY_RES_CLIENT_START_NEW_WORLD message, length delimited. Does not implicitly {@link op_client.OP_GATEWAY_RES_CLIENT_START_NEW_WORLD.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_GATEWAY_RES_CLIENT_START_NEW_WORLD\n             * @static\n             * @param {op_client.IOP_GATEWAY_RES_CLIENT_START_NEW_WORLD} message OP_GATEWAY_RES_CLIENT_START_NEW_WORLD message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_GATEWAY_RES_CLIENT_START_NEW_WORLD.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_GATEWAY_RES_CLIENT_START_NEW_WORLD message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_GATEWAY_RES_CLIENT_START_NEW_WORLD\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_GATEWAY_RES_CLIENT_START_NEW_WORLD} OP_GATEWAY_RES_CLIENT_START_NEW_WORLD\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_GATEWAY_RES_CLIENT_START_NEW_WORLD.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_GATEWAY_RES_CLIENT_START_NEW_WORLD();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.msg = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_GATEWAY_RES_CLIENT_START_NEW_WORLD message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_GATEWAY_RES_CLIENT_START_NEW_WORLD\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_GATEWAY_RES_CLIENT_START_NEW_WORLD} OP_GATEWAY_RES_CLIENT_START_NEW_WORLD\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_GATEWAY_RES_CLIENT_START_NEW_WORLD.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_GATEWAY_RES_CLIENT_START_NEW_WORLD message.\n             * @function verify\n             * @memberof op_client.OP_GATEWAY_RES_CLIENT_START_NEW_WORLD\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_GATEWAY_RES_CLIENT_START_NEW_WORLD.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.msg != null && message.hasOwnProperty("msg"))\n                    if (!$util.isString(message.msg))\n                        return "msg: string expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_GATEWAY_RES_CLIENT_START_NEW_WORLD message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_GATEWAY_RES_CLIENT_START_NEW_WORLD\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_GATEWAY_RES_CLIENT_START_NEW_WORLD} OP_GATEWAY_RES_CLIENT_START_NEW_WORLD\n             */\n            OP_GATEWAY_RES_CLIENT_START_NEW_WORLD.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_GATEWAY_RES_CLIENT_START_NEW_WORLD)\n                    return object;\n                var message = new $root.op_client.OP_GATEWAY_RES_CLIENT_START_NEW_WORLD();\n                if (object.msg != null)\n                    message.msg = String(object.msg);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_GATEWAY_RES_CLIENT_START_NEW_WORLD message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_GATEWAY_RES_CLIENT_START_NEW_WORLD\n             * @static\n             * @param {op_client.OP_GATEWAY_RES_CLIENT_START_NEW_WORLD} message OP_GATEWAY_RES_CLIENT_START_NEW_WORLD\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_GATEWAY_RES_CLIENT_START_NEW_WORLD.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.msg = "";\n                if (message.msg != null && message.hasOwnProperty("msg"))\n                    object.msg = message.msg;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_GATEWAY_RES_CLIENT_START_NEW_WORLD to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_GATEWAY_RES_CLIENT_START_NEW_WORLD\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_GATEWAY_RES_CLIENT_START_NEW_WORLD.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_GATEWAY_RES_CLIENT_START_NEW_WORLD;\n        })();\n    \n        op_client.OP_GATEWAY_RES_CLIENT_ERROR = (function() {\n    \n            /**\n             * Properties of a OP_GATEWAY_RES_CLIENT_ERROR.\n             * @memberof op_client\n             * @interface IOP_GATEWAY_RES_CLIENT_ERROR\n             * @property {string} msg OP_GATEWAY_RES_CLIENT_ERROR msg\n             * @property {op_def.ResponseStatus} responseStatus OP_GATEWAY_RES_CLIENT_ERROR responseStatus\n             */\n    \n            /**\n             * Constructs a new OP_GATEWAY_RES_CLIENT_ERROR.\n             * @memberof op_client\n             * @classdesc Represents a OP_GATEWAY_RES_CLIENT_ERROR.\n             * @implements IOP_GATEWAY_RES_CLIENT_ERROR\n             * @constructor\n             * @param {op_client.IOP_GATEWAY_RES_CLIENT_ERROR=} [properties] Properties to set\n             */\n            function OP_GATEWAY_RES_CLIENT_ERROR(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_GATEWAY_RES_CLIENT_ERROR msg.\n             * @member {string} msg\n             * @memberof op_client.OP_GATEWAY_RES_CLIENT_ERROR\n             * @instance\n             */\n            OP_GATEWAY_RES_CLIENT_ERROR.prototype.msg = "";\n    \n            /**\n             * OP_GATEWAY_RES_CLIENT_ERROR responseStatus.\n             * @member {op_def.ResponseStatus} responseStatus\n             * @memberof op_client.OP_GATEWAY_RES_CLIENT_ERROR\n             * @instance\n             */\n            OP_GATEWAY_RES_CLIENT_ERROR.prototype.responseStatus = 0;\n    \n            /**\n             * Creates a new OP_GATEWAY_RES_CLIENT_ERROR instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_GATEWAY_RES_CLIENT_ERROR\n             * @static\n             * @param {op_client.IOP_GATEWAY_RES_CLIENT_ERROR=} [properties] Properties to set\n             * @returns {op_client.OP_GATEWAY_RES_CLIENT_ERROR} OP_GATEWAY_RES_CLIENT_ERROR instance\n             */\n            OP_GATEWAY_RES_CLIENT_ERROR.create = function create(properties) {\n                return new OP_GATEWAY_RES_CLIENT_ERROR(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_GATEWAY_RES_CLIENT_ERROR message. Does not implicitly {@link op_client.OP_GATEWAY_RES_CLIENT_ERROR.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_GATEWAY_RES_CLIENT_ERROR\n             * @static\n             * @param {op_client.IOP_GATEWAY_RES_CLIENT_ERROR} message OP_GATEWAY_RES_CLIENT_ERROR message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_GATEWAY_RES_CLIENT_ERROR.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.msg);\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.responseStatus);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_GATEWAY_RES_CLIENT_ERROR message, length delimited. Does not implicitly {@link op_client.OP_GATEWAY_RES_CLIENT_ERROR.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_GATEWAY_RES_CLIENT_ERROR\n             * @static\n             * @param {op_client.IOP_GATEWAY_RES_CLIENT_ERROR} message OP_GATEWAY_RES_CLIENT_ERROR message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_GATEWAY_RES_CLIENT_ERROR.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_GATEWAY_RES_CLIENT_ERROR message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_GATEWAY_RES_CLIENT_ERROR\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_GATEWAY_RES_CLIENT_ERROR} OP_GATEWAY_RES_CLIENT_ERROR\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_GATEWAY_RES_CLIENT_ERROR.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_GATEWAY_RES_CLIENT_ERROR();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.msg = reader.string();\n                        break;\n                    case 2:\n                        message.responseStatus = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("msg"))\n                    throw $util.ProtocolError("missing required \'msg\'", { instance: message });\n                if (!message.hasOwnProperty("responseStatus"))\n                    throw $util.ProtocolError("missing required \'responseStatus\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_GATEWAY_RES_CLIENT_ERROR message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_GATEWAY_RES_CLIENT_ERROR\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_GATEWAY_RES_CLIENT_ERROR} OP_GATEWAY_RES_CLIENT_ERROR\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_GATEWAY_RES_CLIENT_ERROR.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_GATEWAY_RES_CLIENT_ERROR message.\n             * @function verify\n             * @memberof op_client.OP_GATEWAY_RES_CLIENT_ERROR\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_GATEWAY_RES_CLIENT_ERROR.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.msg))\n                    return "msg: string expected";\n                switch (message.responseStatus) {\n                default:\n                    return "responseStatus: enum value expected";\n                case 0:\n                case 4096:\n                case 4098:\n                case 4099:\n                case 4100:\n                case 8193:\n                case 12289:\n                case 16385:\n                case 20481:\n                case 37888:\n                case 37889:\n                case 45056:\n                    break;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_GATEWAY_RES_CLIENT_ERROR message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_GATEWAY_RES_CLIENT_ERROR\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_GATEWAY_RES_CLIENT_ERROR} OP_GATEWAY_RES_CLIENT_ERROR\n             */\n            OP_GATEWAY_RES_CLIENT_ERROR.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_GATEWAY_RES_CLIENT_ERROR)\n                    return object;\n                var message = new $root.op_client.OP_GATEWAY_RES_CLIENT_ERROR();\n                if (object.msg != null)\n                    message.msg = String(object.msg);\n                switch (object.responseStatus) {\n                case "SUCCESS":\n                case 0:\n                    message.responseStatus = 0;\n                    break;\n                case "SERVER_ERROR_UNKNOWN":\n                case 4096:\n                    message.responseStatus = 4096;\n                    break;\n                case "SERVER_ERROR_BUSY":\n                case 4098:\n                    message.responseStatus = 4098;\n                    break;\n                case "SERVER_ERROR_TIMEOUT":\n                case 4099:\n                    message.responseStatus = 4099;\n                    break;\n                case "SERVER_ERROR_SERVICE_NOT_FOUND":\n                case 4100:\n                    message.responseStatus = 4100;\n                    break;\n                case "SERVER_ERROR_BAD_GATEWAY":\n                case 8193:\n                    message.responseStatus = 8193;\n                    break;\n                case "SERVER_ERROR_GALAXY_SERVICE_NOT_FOUND":\n                case 12289:\n                    message.responseStatus = 12289;\n                    break;\n                case "SERVER_ERROR_WORLD_SERVICE_NOT_FOUND":\n                case 16385:\n                    message.responseStatus = 16385;\n                    break;\n                case "SERVER_ERROR_VIRTUAL_WORLD_SERVICE_NOT_FOUND":\n                case 20481:\n                    message.responseStatus = 20481;\n                    break;\n                case "REQUEST_ERROR_WRONG_PARAM":\n                case 37888:\n                    message.responseStatus = 37888;\n                    break;\n                case "REQUEST_UNAUTHORIZED":\n                case 37889:\n                    message.responseStatus = 37889;\n                    break;\n                case "RANSFER_TO_GAME_BILLER_ERROR":\n                case 45056:\n                    message.responseStatus = 45056;\n                    break;\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_GATEWAY_RES_CLIENT_ERROR message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_GATEWAY_RES_CLIENT_ERROR\n             * @static\n             * @param {op_client.OP_GATEWAY_RES_CLIENT_ERROR} message OP_GATEWAY_RES_CLIENT_ERROR\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_GATEWAY_RES_CLIENT_ERROR.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.msg = "";\n                    object.responseStatus = options.enums === String ? "SUCCESS" : 0;\n                }\n                if (message.msg != null && message.hasOwnProperty("msg"))\n                    object.msg = message.msg;\n                if (message.responseStatus != null && message.hasOwnProperty("responseStatus"))\n                    object.responseStatus = options.enums === String ? $root.op_def.ResponseStatus[message.responseStatus] : message.responseStatus;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_GATEWAY_RES_CLIENT_ERROR to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_GATEWAY_RES_CLIENT_ERROR\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_GATEWAY_RES_CLIENT_ERROR.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_GATEWAY_RES_CLIENT_ERROR;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER\n             * @property {string} msg OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER msg\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER.\n             * @implements IOP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER msg.\n             * @member {string} msg\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER.prototype.msg = "";\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER} OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER} message OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.msg);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER} message OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER} OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.msg = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("msg"))\n                    throw $util.ProtocolError("missing required \'msg\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER} OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.msg))\n                    return "msg: string expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER} OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER();\n                if (object.msg != null)\n                    message.msg = String(object.msg);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER} message OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.msg = "";\n                if (message.msg != null && message.hasOwnProperty("msg"))\n                    object.msg = message.msg;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_RES_CLIENT_GAME_OVER;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE\n             * @property {op_client.IScene} scene OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE scene\n             * @property {op_client.IActor} actor OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE actor\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE.\n             * @implements IOP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE scene.\n             * @member {op_client.IScene} scene\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE.prototype.scene = null;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE actor.\n             * @member {op_client.IActor} actor\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE.prototype.actor = null;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE} OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE} message OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                $root.op_client.Scene.encode(message.scene, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                $root.op_client.Actor.encode(message.actor, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE} message OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE} OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.scene = $root.op_client.Scene.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        message.actor = $root.op_client.Actor.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("scene"))\n                    throw $util.ProtocolError("missing required \'scene\'", { instance: message });\n                if (!message.hasOwnProperty("actor"))\n                    throw $util.ProtocolError("missing required \'actor\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE} OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                {\n                    var error = $root.op_client.Scene.verify(message.scene);\n                    if (error)\n                        return "scene." + error;\n                }\n                {\n                    var error = $root.op_client.Actor.verify(message.actor);\n                    if (error)\n                        return "actor." + error;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE} OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE();\n                if (object.scene != null) {\n                    if (typeof object.scene !== "object")\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE.scene: object expected");\n                    message.scene = $root.op_client.Scene.fromObject(object.scene);\n                }\n                if (object.actor != null) {\n                    if (typeof object.actor !== "object")\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE.actor: object expected");\n                    message.actor = $root.op_client.Actor.fromObject(object.actor);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE} message OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.scene = null;\n                    object.actor = null;\n                }\n                if (message.scene != null && message.hasOwnProperty("scene"))\n                    object.scene = $root.op_client.Scene.toObject(message.scene, options);\n                if (message.actor != null && message.hasOwnProperty("actor"))\n                    object.actor = $root.op_client.Actor.toObject(message.actor, options);\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_RES_CLIENT_CHANGE_SCENE;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE\n             * @property {op_gameconfig.IPackage} "package" OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE package\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE.\n             * @implements IOP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE package.\n             * @member {op_gameconfig.IPackage} package\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE.prototype["package"] = null;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE} OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE} message OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                $root.op_gameconfig.Package.encode(message["package"], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE} message OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE} OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message["package"] = $root.op_gameconfig.Package.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("package"))\n                    throw $util.ProtocolError("missing required \'package\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE} OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                {\n                    var error = $root.op_gameconfig.Package.verify(message["package"]);\n                    if (error)\n                        return "package." + error;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE} OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE();\n                if (object["package"] != null) {\n                    if (typeof object["package"] !== "object")\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE.package: object expected");\n                    message["package"] = $root.op_gameconfig.Package.fromObject(object["package"]);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE} message OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object["package"] = null;\n                if (message["package"] != null && message.hasOwnProperty("package"))\n                    object["package"] = $root.op_gameconfig.Package.toObject(message["package"], options);\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_PACKAGE;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM\n             * @property {Array.<op_gameconfig.IItem>|null} [item] OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM item\n             * @property {number} packageid OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM packageid\n             * @property {number} id OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM id\n             * @property {op_def.NodeType} nodetype OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM nodetype\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM.\n             * @implements IOP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM(properties) {\n                this.item = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM item.\n             * @member {Array.<op_gameconfig.IItem>} item\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM.prototype.item = $util.emptyArray;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM packageid.\n             * @member {number} packageid\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM.prototype.packageid = 0;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM id.\n             * @member {number} id\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM.prototype.id = 0;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM nodetype.\n             * @member {op_def.NodeType} nodetype\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM.prototype.nodetype = 0;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM} OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM} message OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.item != null && message.item.length)\n                    for (var i = 0; i < message.item.length; ++i)\n                        $root.op_gameconfig.Item.encode(message.item[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.packageid);\n                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.id);\n                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.nodetype);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM} message OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM} OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.item && message.item.length))\n                            message.item = [];\n                        message.item.push($root.op_gameconfig.Item.decode(reader, reader.uint32()));\n                        break;\n                    case 2:\n                        message.packageid = reader.int32();\n                        break;\n                    case 3:\n                        message.id = reader.int32();\n                        break;\n                    case 4:\n                        message.nodetype = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("packageid"))\n                    throw $util.ProtocolError("missing required \'packageid\'", { instance: message });\n                if (!message.hasOwnProperty("id"))\n                    throw $util.ProtocolError("missing required \'id\'", { instance: message });\n                if (!message.hasOwnProperty("nodetype"))\n                    throw $util.ProtocolError("missing required \'nodetype\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM} OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.item != null && message.hasOwnProperty("item")) {\n                    if (!Array.isArray(message.item))\n                        return "item: array expected";\n                    for (var i = 0; i < message.item.length; ++i) {\n                        var error = $root.op_gameconfig.Item.verify(message.item[i]);\n                        if (error)\n                            return "item." + error;\n                    }\n                }\n                if (!$util.isInteger(message.packageid))\n                    return "packageid: integer expected";\n                if (!$util.isInteger(message.id))\n                    return "id: integer expected";\n                switch (message.nodetype) {\n                default:\n                    return "nodetype: enum value expected";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                case 9:\n                case 10:\n                case 11:\n                case 12:\n                case 13:\n                case 14:\n                case 15:\n                case 16:\n                case 17:\n                case 18:\n                case 19:\n                case 20:\n                case 21:\n                case 22:\n                case 23:\n                case 24:\n                case 25:\n                case 26:\n                case 27:\n                case 28:\n                case 29:\n                    break;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM} OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM();\n                if (object.item) {\n                    if (!Array.isArray(object.item))\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM.item: array expected");\n                    message.item = [];\n                    for (var i = 0; i < object.item.length; ++i) {\n                        if (typeof object.item[i] !== "object")\n                            throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM.item: object expected");\n                        message.item[i] = $root.op_gameconfig.Item.fromObject(object.item[i]);\n                    }\n                }\n                if (object.packageid != null)\n                    message.packageid = object.packageid | 0;\n                if (object.id != null)\n                    message.id = object.id | 0;\n                switch (object.nodetype) {\n                case "UnknownNodeType":\n                case 0:\n                    message.nodetype = 0;\n                    break;\n                case "GameNodeType":\n                case 1:\n                    message.nodetype = 1;\n                    break;\n                case "SceneNodeType":\n                case 2:\n                    message.nodetype = 2;\n                    break;\n                case "ElementNodeType":\n                case 3:\n                    message.nodetype = 3;\n                    break;\n                case "TerrainNodeType":\n                case 4:\n                    message.nodetype = 4;\n                    break;\n                case "CharacterNodeType":\n                case 5:\n                    message.nodetype = 5;\n                    break;\n                case "LocationType":\n                case 6:\n                    message.nodetype = 6;\n                    break;\n                case "MovableType":\n                case 7:\n                    message.nodetype = 7;\n                    break;\n                case "DisplayType":\n                case 8:\n                    message.nodetype = 8;\n                    break;\n                case "AttributeType":\n                case 9:\n                    message.nodetype = 9;\n                    break;\n                case "FunctionType":\n                case 10:\n                    message.nodetype = 10;\n                    break;\n                case "AnimationsType":\n                case 11:\n                    message.nodetype = 11;\n                    break;\n                case "EventType":\n                case 12:\n                    message.nodetype = 12;\n                    break;\n                case "MapSizeType":\n                case 13:\n                    message.nodetype = 13;\n                    break;\n                case "UIType":\n                case 14:\n                    message.nodetype = 14;\n                    break;\n                case "TimerType":\n                case 15:\n                    message.nodetype = 15;\n                    break;\n                case "PackageType":\n                case 16:\n                    message.nodetype = 16;\n                    break;\n                case "PackageItemType":\n                case 17:\n                    message.nodetype = 17;\n                    break;\n                case "AvatarType":\n                case 18:\n                    message.nodetype = 18;\n                    break;\n                case "SettingsType":\n                case 19:\n                    message.nodetype = 19;\n                    break;\n                case "CampType":\n                case 20:\n                    message.nodetype = 20;\n                    break;\n                case "MutexType":\n                case 21:\n                    message.nodetype = 21;\n                    break;\n                case "AnimationDataType":\n                case 22:\n                    message.nodetype = 22;\n                    break;\n                case "ForkType":\n                case 23:\n                    message.nodetype = 23;\n                    break;\n                case "ButtonType":\n                case 24:\n                    message.nodetype = 24;\n                    break;\n                case "TextType":\n                case 25:\n                    message.nodetype = 25;\n                    break;\n                case "AccessType":\n                case 26:\n                    message.nodetype = 26;\n                    break;\n                case "SpawnPointType":\n                case 27:\n                    message.nodetype = 27;\n                    break;\n                case "CommodityType":\n                case 28:\n                    message.nodetype = 28;\n                    break;\n                case "ShopType":\n                case 29:\n                    message.nodetype = 29;\n                    break;\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM} message OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.item = [];\n                if (options.defaults) {\n                    object.packageid = 0;\n                    object.id = 0;\n                    object.nodetype = options.enums === String ? "UnknownNodeType" : 0;\n                }\n                if (message.item && message.item.length) {\n                    object.item = [];\n                    for (var j = 0; j < message.item.length; ++j)\n                        object.item[j] = $root.op_gameconfig.Item.toObject(message.item[j], options);\n                }\n                if (message.packageid != null && message.hasOwnProperty("packageid"))\n                    object.packageid = message.packageid;\n                if (message.id != null && message.hasOwnProperty("id"))\n                    object.id = message.id;\n                if (message.nodetype != null && message.hasOwnProperty("nodetype"))\n                    object.nodetype = options.enums === String ? $root.op_def.NodeType[message.nodetype] : message.nodetype;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ITEM;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM\n             * @property {number} id OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM id\n             * @property {number} packageid OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM packageid\n             * @property {Array.<number>|null} [itemId] OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM itemId\n             * @property {op_def.NodeType} nodetype OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM nodetype\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM.\n             * @implements IOP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM(properties) {\n                this.itemId = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM id.\n             * @member {number} id\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM.prototype.id = 0;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM packageid.\n             * @member {number} packageid\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM.prototype.packageid = 0;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM itemId.\n             * @member {Array.<number>} itemId\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM.prototype.itemId = $util.emptyArray;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM nodetype.\n             * @member {op_def.NodeType} nodetype\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM.prototype.nodetype = 0;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM} OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM} message OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.id);\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.packageid);\n                if (message.itemId != null && message.itemId.length)\n                    for (var i = 0; i < message.itemId.length; ++i)\n                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.itemId[i]);\n                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.nodetype);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM} message OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM} OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.id = reader.int32();\n                        break;\n                    case 2:\n                        message.packageid = reader.int32();\n                        break;\n                    case 3:\n                        if (!(message.itemId && message.itemId.length))\n                            message.itemId = [];\n                        if ((tag & 7) === 2) {\n                            var end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2)\n                                message.itemId.push(reader.int32());\n                        } else\n                            message.itemId.push(reader.int32());\n                        break;\n                    case 4:\n                        message.nodetype = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("id"))\n                    throw $util.ProtocolError("missing required \'id\'", { instance: message });\n                if (!message.hasOwnProperty("packageid"))\n                    throw $util.ProtocolError("missing required \'packageid\'", { instance: message });\n                if (!message.hasOwnProperty("nodetype"))\n                    throw $util.ProtocolError("missing required \'nodetype\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM} OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.id))\n                    return "id: integer expected";\n                if (!$util.isInteger(message.packageid))\n                    return "packageid: integer expected";\n                if (message.itemId != null && message.hasOwnProperty("itemId")) {\n                    if (!Array.isArray(message.itemId))\n                        return "itemId: array expected";\n                    for (var i = 0; i < message.itemId.length; ++i)\n                        if (!$util.isInteger(message.itemId[i]))\n                            return "itemId: integer[] expected";\n                }\n                switch (message.nodetype) {\n                default:\n                    return "nodetype: enum value expected";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                case 9:\n                case 10:\n                case 11:\n                case 12:\n                case 13:\n                case 14:\n                case 15:\n                case 16:\n                case 17:\n                case 18:\n                case 19:\n                case 20:\n                case 21:\n                case 22:\n                case 23:\n                case 24:\n                case 25:\n                case 26:\n                case 27:\n                case 28:\n                case 29:\n                    break;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM} OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM();\n                if (object.id != null)\n                    message.id = object.id | 0;\n                if (object.packageid != null)\n                    message.packageid = object.packageid | 0;\n                if (object.itemId) {\n                    if (!Array.isArray(object.itemId))\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM.itemId: array expected");\n                    message.itemId = [];\n                    for (var i = 0; i < object.itemId.length; ++i)\n                        message.itemId[i] = object.itemId[i] | 0;\n                }\n                switch (object.nodetype) {\n                case "UnknownNodeType":\n                case 0:\n                    message.nodetype = 0;\n                    break;\n                case "GameNodeType":\n                case 1:\n                    message.nodetype = 1;\n                    break;\n                case "SceneNodeType":\n                case 2:\n                    message.nodetype = 2;\n                    break;\n                case "ElementNodeType":\n                case 3:\n                    message.nodetype = 3;\n                    break;\n                case "TerrainNodeType":\n                case 4:\n                    message.nodetype = 4;\n                    break;\n                case "CharacterNodeType":\n                case 5:\n                    message.nodetype = 5;\n                    break;\n                case "LocationType":\n                case 6:\n                    message.nodetype = 6;\n                    break;\n                case "MovableType":\n                case 7:\n                    message.nodetype = 7;\n                    break;\n                case "DisplayType":\n                case 8:\n                    message.nodetype = 8;\n                    break;\n                case "AttributeType":\n                case 9:\n                    message.nodetype = 9;\n                    break;\n                case "FunctionType":\n                case 10:\n                    message.nodetype = 10;\n                    break;\n                case "AnimationsType":\n                case 11:\n                    message.nodetype = 11;\n                    break;\n                case "EventType":\n                case 12:\n                    message.nodetype = 12;\n                    break;\n                case "MapSizeType":\n                case 13:\n                    message.nodetype = 13;\n                    break;\n                case "UIType":\n                case 14:\n                    message.nodetype = 14;\n                    break;\n                case "TimerType":\n                case 15:\n                    message.nodetype = 15;\n                    break;\n                case "PackageType":\n                case 16:\n                    message.nodetype = 16;\n                    break;\n                case "PackageItemType":\n                case 17:\n                    message.nodetype = 17;\n                    break;\n                case "AvatarType":\n                case 18:\n                    message.nodetype = 18;\n                    break;\n                case "SettingsType":\n                case 19:\n                    message.nodetype = 19;\n                    break;\n                case "CampType":\n                case 20:\n                    message.nodetype = 20;\n                    break;\n                case "MutexType":\n                case 21:\n                    message.nodetype = 21;\n                    break;\n                case "AnimationDataType":\n                case 22:\n                    message.nodetype = 22;\n                    break;\n                case "ForkType":\n                case 23:\n                    message.nodetype = 23;\n                    break;\n                case "ButtonType":\n                case 24:\n                    message.nodetype = 24;\n                    break;\n                case "TextType":\n                case 25:\n                    message.nodetype = 25;\n                    break;\n                case "AccessType":\n                case 26:\n                    message.nodetype = 26;\n                    break;\n                case "SpawnPointType":\n                case 27:\n                    message.nodetype = 27;\n                    break;\n                case "CommodityType":\n                case 28:\n                    message.nodetype = 28;\n                    break;\n                case "ShopType":\n                case 29:\n                    message.nodetype = 29;\n                    break;\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM} message OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.itemId = [];\n                if (options.defaults) {\n                    object.id = 0;\n                    object.packageid = 0;\n                    object.nodetype = options.enums === String ? "UnknownNodeType" : 0;\n                }\n                if (message.id != null && message.hasOwnProperty("id"))\n                    object.id = message.id;\n                if (message.packageid != null && message.hasOwnProperty("packageid"))\n                    object.packageid = message.packageid;\n                if (message.itemId && message.itemId.length) {\n                    object.itemId = [];\n                    for (var j = 0; j < message.itemId.length; ++j)\n                        object.itemId[j] = message.itemId[j];\n                }\n                if (message.nodetype != null && message.hasOwnProperty("nodetype"))\n                    object.nodetype = options.enums === String ? $root.op_def.NodeType[message.nodetype] : message.nodetype;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ITEM;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS\n             * @property {number|null} [firstPos] OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS firstPos\n             * @property {op_gameconfig.IItem|null} [firstItem] OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS firstItem\n             * @property {number|null} [secondPos] OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS secondPos\n             * @property {op_gameconfig.IItem|null} [secondItem] OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS secondItem\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS.\n             * @implements IOP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS firstPos.\n             * @member {number} firstPos\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS.prototype.firstPos = 0;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS firstItem.\n             * @member {op_gameconfig.IItem|null|undefined} firstItem\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS.prototype.firstItem = null;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS secondPos.\n             * @member {number} secondPos\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS.prototype.secondPos = 0;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS secondItem.\n             * @member {op_gameconfig.IItem|null|undefined} secondItem\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS.prototype.secondItem = null;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS} OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS} message OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.firstPos != null && message.hasOwnProperty("firstPos"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.firstPos);\n                if (message.firstItem != null && message.hasOwnProperty("firstItem"))\n                    $root.op_gameconfig.Item.encode(message.firstItem, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                if (message.secondPos != null && message.hasOwnProperty("secondPos"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.secondPos);\n                if (message.secondItem != null && message.hasOwnProperty("secondItem"))\n                    $root.op_gameconfig.Item.encode(message.secondItem, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS} message OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS} OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.firstPos = reader.int32();\n                        break;\n                    case 2:\n                        message.firstItem = $root.op_gameconfig.Item.decode(reader, reader.uint32());\n                        break;\n                    case 3:\n                        message.secondPos = reader.int32();\n                        break;\n                    case 4:\n                        message.secondItem = $root.op_gameconfig.Item.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS} OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.firstPos != null && message.hasOwnProperty("firstPos"))\n                    if (!$util.isInteger(message.firstPos))\n                        return "firstPos: integer expected";\n                if (message.firstItem != null && message.hasOwnProperty("firstItem")) {\n                    var error = $root.op_gameconfig.Item.verify(message.firstItem);\n                    if (error)\n                        return "firstItem." + error;\n                }\n                if (message.secondPos != null && message.hasOwnProperty("secondPos"))\n                    if (!$util.isInteger(message.secondPos))\n                        return "secondPos: integer expected";\n                if (message.secondItem != null && message.hasOwnProperty("secondItem")) {\n                    var error = $root.op_gameconfig.Item.verify(message.secondItem);\n                    if (error)\n                        return "secondItem." + error;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS} OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS();\n                if (object.firstPos != null)\n                    message.firstPos = object.firstPos | 0;\n                if (object.firstItem != null) {\n                    if (typeof object.firstItem !== "object")\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS.firstItem: object expected");\n                    message.firstItem = $root.op_gameconfig.Item.fromObject(object.firstItem);\n                }\n                if (object.secondPos != null)\n                    message.secondPos = object.secondPos | 0;\n                if (object.secondItem != null) {\n                    if (typeof object.secondItem !== "object")\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS.secondItem: object expected");\n                    message.secondItem = $root.op_gameconfig.Item.fromObject(object.secondItem);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS} message OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.firstPos = 0;\n                    object.firstItem = null;\n                    object.secondPos = 0;\n                    object.secondItem = null;\n                }\n                if (message.firstPos != null && message.hasOwnProperty("firstPos"))\n                    object.firstPos = message.firstPos;\n                if (message.firstItem != null && message.hasOwnProperty("firstItem"))\n                    object.firstItem = $root.op_gameconfig.Item.toObject(message.firstItem, options);\n                if (message.secondPos != null && message.hasOwnProperty("secondPos"))\n                    object.secondPos = message.secondPos;\n                if (message.secondItem != null && message.hasOwnProperty("secondItem"))\n                    object.secondItem = $root.op_gameconfig.Item.toObject(message.secondItem, options);\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_RES_CLIENT_EXCHANGE_ITEM_POS;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI\n             * @property {number} uiId OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI uiId\n             * @property {number} componentId OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI componentId\n             * @property {Array.<number>|null} [data] OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI data\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI.\n             * @implements IOP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI(properties) {\n                this.data = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI uiId.\n             * @member {number} uiId\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI.prototype.uiId = 0;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI componentId.\n             * @member {number} componentId\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI.prototype.componentId = 0;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI data.\n             * @member {Array.<number>} data\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI.prototype.data = $util.emptyArray;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI} OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI} message OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.uiId);\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.componentId);\n                if (message.data != null && message.data.length)\n                    for (var i = 0; i < message.data.length; ++i)\n                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.data[i]);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI} message OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI} OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.uiId = reader.int32();\n                        break;\n                    case 2:\n                        message.componentId = reader.int32();\n                        break;\n                    case 3:\n                        if (!(message.data && message.data.length))\n                            message.data = [];\n                        if ((tag & 7) === 2) {\n                            var end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2)\n                                message.data.push(reader.int32());\n                        } else\n                            message.data.push(reader.int32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("uiId"))\n                    throw $util.ProtocolError("missing required \'uiId\'", { instance: message });\n                if (!message.hasOwnProperty("componentId"))\n                    throw $util.ProtocolError("missing required \'componentId\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI} OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.uiId))\n                    return "uiId: integer expected";\n                if (!$util.isInteger(message.componentId))\n                    return "componentId: integer expected";\n                if (message.data != null && message.hasOwnProperty("data")) {\n                    if (!Array.isArray(message.data))\n                        return "data: array expected";\n                    for (var i = 0; i < message.data.length; ++i)\n                        if (!$util.isInteger(message.data[i]))\n                            return "data: integer[] expected";\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI} OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI();\n                if (object.uiId != null)\n                    message.uiId = object.uiId | 0;\n                if (object.componentId != null)\n                    message.componentId = object.componentId | 0;\n                if (object.data) {\n                    if (!Array.isArray(object.data))\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI.data: array expected");\n                    message.data = [];\n                    for (var i = 0; i < object.data.length; ++i)\n                        message.data[i] = object.data[i] | 0;\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI} message OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.data = [];\n                if (options.defaults) {\n                    object.uiId = 0;\n                    object.componentId = 0;\n                }\n                if (message.uiId != null && message.hasOwnProperty("uiId"))\n                    object.uiId = message.uiId;\n                if (message.componentId != null && message.hasOwnProperty("componentId"))\n                    object.componentId = message.componentId;\n                if (message.data && message.data.length) {\n                    object.data = [];\n                    for (var j = 0; j < message.data.length; ++j)\n                        object.data[j] = message.data[j];\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_RES_CLIENT_TARGET_UI;\n        })();\n    \n        op_client.KeyValuePairs = (function() {\n    \n            /**\n             * Properties of a KeyValuePairs.\n             * @memberof op_client\n             * @interface IKeyValuePairs\n             * @property {string} key KeyValuePairs key\n             * @property {string} value KeyValuePairs value\n             */\n    \n            /**\n             * Constructs a new KeyValuePairs.\n             * @memberof op_client\n             * @classdesc Represents a KeyValuePairs.\n             * @implements IKeyValuePairs\n             * @constructor\n             * @param {op_client.IKeyValuePairs=} [properties] Properties to set\n             */\n            function KeyValuePairs(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * KeyValuePairs key.\n             * @member {string} key\n             * @memberof op_client.KeyValuePairs\n             * @instance\n             */\n            KeyValuePairs.prototype.key = "";\n    \n            /**\n             * KeyValuePairs value.\n             * @member {string} value\n             * @memberof op_client.KeyValuePairs\n             * @instance\n             */\n            KeyValuePairs.prototype.value = "";\n    \n            /**\n             * Creates a new KeyValuePairs instance using the specified properties.\n             * @function create\n             * @memberof op_client.KeyValuePairs\n             * @static\n             * @param {op_client.IKeyValuePairs=} [properties] Properties to set\n             * @returns {op_client.KeyValuePairs} KeyValuePairs instance\n             */\n            KeyValuePairs.create = function create(properties) {\n                return new KeyValuePairs(properties);\n            };\n    \n            /**\n             * Encodes the specified KeyValuePairs message. Does not implicitly {@link op_client.KeyValuePairs.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.KeyValuePairs\n             * @static\n             * @param {op_client.IKeyValuePairs} message KeyValuePairs message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            KeyValuePairs.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified KeyValuePairs message, length delimited. Does not implicitly {@link op_client.KeyValuePairs.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.KeyValuePairs\n             * @static\n             * @param {op_client.IKeyValuePairs} message KeyValuePairs message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            KeyValuePairs.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a KeyValuePairs message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.KeyValuePairs\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.KeyValuePairs} KeyValuePairs\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            KeyValuePairs.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.KeyValuePairs();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.key = reader.string();\n                        break;\n                    case 2:\n                        message.value = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("key"))\n                    throw $util.ProtocolError("missing required \'key\'", { instance: message });\n                if (!message.hasOwnProperty("value"))\n                    throw $util.ProtocolError("missing required \'value\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a KeyValuePairs message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.KeyValuePairs\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.KeyValuePairs} KeyValuePairs\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            KeyValuePairs.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a KeyValuePairs message.\n             * @function verify\n             * @memberof op_client.KeyValuePairs\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            KeyValuePairs.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.key))\n                    return "key: string expected";\n                if (!$util.isString(message.value))\n                    return "value: string expected";\n                return null;\n            };\n    \n            /**\n             * Creates a KeyValuePairs message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.KeyValuePairs\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.KeyValuePairs} KeyValuePairs\n             */\n            KeyValuePairs.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.KeyValuePairs)\n                    return object;\n                var message = new $root.op_client.KeyValuePairs();\n                if (object.key != null)\n                    message.key = String(object.key);\n                if (object.value != null)\n                    message.value = String(object.value);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a KeyValuePairs message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.KeyValuePairs\n             * @static\n             * @param {op_client.KeyValuePairs} message KeyValuePairs\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            KeyValuePairs.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.key = "";\n                    object.value = "";\n                }\n                if (message.key != null && message.hasOwnProperty("key"))\n                    object.key = message.key;\n                if (message.value != null && message.hasOwnProperty("value"))\n                    object.value = message.value;\n                return object;\n            };\n    \n            /**\n             * Converts this KeyValuePairs to JSON.\n             * @function toJSON\n             * @memberof op_client.KeyValuePairs\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            KeyValuePairs.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return KeyValuePairs;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI\n             * @property {Array.<op_gameconfig_01.IText>|null} [text] OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI text\n             * @property {Array.<op_gameconfig_01.IButton>|null} [button] OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI button\n             * @property {number} id OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI id\n             * @property {Array.<number>|null} [time] OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI time\n             * @property {string} name OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI name\n             * @property {Array.<number>|null} [data] OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI data\n             * @property {Array.<op_client.IActor>|null} [actors] OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI actors\n             * @property {Array.<op_client.IKeyValuePairs>|null} [kvps] OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI kvps\n             * @property {Array.<op_gameconfig_01.IMenuItem>|null} [menuItem] OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI menuItem\n             * @property {Array.<op_gameconfig_01.IDisplay>|null} [display] OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI display\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI.\n             * @implements IOP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI(properties) {\n                this.text = [];\n                this.button = [];\n                this.time = [];\n                this.data = [];\n                this.actors = [];\n                this.kvps = [];\n                this.menuItem = [];\n                this.display = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI text.\n             * @member {Array.<op_gameconfig_01.IText>} text\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI.prototype.text = $util.emptyArray;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI button.\n             * @member {Array.<op_gameconfig_01.IButton>} button\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI.prototype.button = $util.emptyArray;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI id.\n             * @member {number} id\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI.prototype.id = 0;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI time.\n             * @member {Array.<number>} time\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI.prototype.time = $util.emptyArray;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI name.\n             * @member {string} name\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI.prototype.name = "";\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI data.\n             * @member {Array.<number>} data\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI.prototype.data = $util.emptyArray;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI actors.\n             * @member {Array.<op_client.IActor>} actors\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI.prototype.actors = $util.emptyArray;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI kvps.\n             * @member {Array.<op_client.IKeyValuePairs>} kvps\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI.prototype.kvps = $util.emptyArray;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI menuItem.\n             * @member {Array.<op_gameconfig_01.IMenuItem>} menuItem\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI.prototype.menuItem = $util.emptyArray;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI display.\n             * @member {Array.<op_gameconfig_01.IDisplay>} display\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI.prototype.display = $util.emptyArray;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI} OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI} message OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.text != null && message.text.length)\n                    for (var i = 0; i < message.text.length; ++i)\n                        $root.op_gameconfig_01.Text.encode(message.text[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.button != null && message.button.length)\n                    for (var i = 0; i < message.button.length; ++i)\n                        $root.op_gameconfig_01.Button.encode(message.button[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.id);\n                if (message.time != null && message.time.length)\n                    for (var i = 0; i < message.time.length; ++i)\n                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.time[i]);\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.name);\n                if (message.data != null && message.data.length)\n                    for (var i = 0; i < message.data.length; ++i)\n                        writer.uint32(/* id 7, wireType 0 =*/56).int32(message.data[i]);\n                if (message.actors != null && message.actors.length)\n                    for (var i = 0; i < message.actors.length; ++i)\n                        $root.op_client.Actor.encode(message.actors[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n                if (message.kvps != null && message.kvps.length)\n                    for (var i = 0; i < message.kvps.length; ++i)\n                        $root.op_client.KeyValuePairs.encode(message.kvps[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();\n                if (message.menuItem != null && message.menuItem.length)\n                    for (var i = 0; i < message.menuItem.length; ++i)\n                        $root.op_gameconfig_01.MenuItem.encode(message.menuItem[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n                if (message.display != null && message.display.length)\n                    for (var i = 0; i < message.display.length; ++i)\n                        $root.op_gameconfig_01.Display.encode(message.display[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI} message OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI} OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.text && message.text.length))\n                            message.text = [];\n                        message.text.push($root.op_gameconfig_01.Text.decode(reader, reader.uint32()));\n                        break;\n                    case 3:\n                        if (!(message.button && message.button.length))\n                            message.button = [];\n                        message.button.push($root.op_gameconfig_01.Button.decode(reader, reader.uint32()));\n                        break;\n                    case 4:\n                        message.id = reader.int32();\n                        break;\n                    case 5:\n                        if (!(message.time && message.time.length))\n                            message.time = [];\n                        if ((tag & 7) === 2) {\n                            var end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2)\n                                message.time.push(reader.int32());\n                        } else\n                            message.time.push(reader.int32());\n                        break;\n                    case 6:\n                        message.name = reader.string();\n                        break;\n                    case 7:\n                        if (!(message.data && message.data.length))\n                            message.data = [];\n                        if ((tag & 7) === 2) {\n                            var end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2)\n                                message.data.push(reader.int32());\n                        } else\n                            message.data.push(reader.int32());\n                        break;\n                    case 8:\n                        if (!(message.actors && message.actors.length))\n                            message.actors = [];\n                        message.actors.push($root.op_client.Actor.decode(reader, reader.uint32()));\n                        break;\n                    case 9:\n                        if (!(message.kvps && message.kvps.length))\n                            message.kvps = [];\n                        message.kvps.push($root.op_client.KeyValuePairs.decode(reader, reader.uint32()));\n                        break;\n                    case 10:\n                        if (!(message.menuItem && message.menuItem.length))\n                            message.menuItem = [];\n                        message.menuItem.push($root.op_gameconfig_01.MenuItem.decode(reader, reader.uint32()));\n                        break;\n                    case 11:\n                        if (!(message.display && message.display.length))\n                            message.display = [];\n                        message.display.push($root.op_gameconfig_01.Display.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("id"))\n                    throw $util.ProtocolError("missing required \'id\'", { instance: message });\n                if (!message.hasOwnProperty("name"))\n                    throw $util.ProtocolError("missing required \'name\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI} OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.text != null && message.hasOwnProperty("text")) {\n                    if (!Array.isArray(message.text))\n                        return "text: array expected";\n                    for (var i = 0; i < message.text.length; ++i) {\n                        var error = $root.op_gameconfig_01.Text.verify(message.text[i]);\n                        if (error)\n                            return "text." + error;\n                    }\n                }\n                if (message.button != null && message.hasOwnProperty("button")) {\n                    if (!Array.isArray(message.button))\n                        return "button: array expected";\n                    for (var i = 0; i < message.button.length; ++i) {\n                        var error = $root.op_gameconfig_01.Button.verify(message.button[i]);\n                        if (error)\n                            return "button." + error;\n                    }\n                }\n                if (!$util.isInteger(message.id))\n                    return "id: integer expected";\n                if (message.time != null && message.hasOwnProperty("time")) {\n                    if (!Array.isArray(message.time))\n                        return "time: array expected";\n                    for (var i = 0; i < message.time.length; ++i)\n                        if (!$util.isInteger(message.time[i]))\n                            return "time: integer[] expected";\n                }\n                if (!$util.isString(message.name))\n                    return "name: string expected";\n                if (message.data != null && message.hasOwnProperty("data")) {\n                    if (!Array.isArray(message.data))\n                        return "data: array expected";\n                    for (var i = 0; i < message.data.length; ++i)\n                        if (!$util.isInteger(message.data[i]))\n                            return "data: integer[] expected";\n                }\n                if (message.actors != null && message.hasOwnProperty("actors")) {\n                    if (!Array.isArray(message.actors))\n                        return "actors: array expected";\n                    for (var i = 0; i < message.actors.length; ++i) {\n                        var error = $root.op_client.Actor.verify(message.actors[i]);\n                        if (error)\n                            return "actors." + error;\n                    }\n                }\n                if (message.kvps != null && message.hasOwnProperty("kvps")) {\n                    if (!Array.isArray(message.kvps))\n                        return "kvps: array expected";\n                    for (var i = 0; i < message.kvps.length; ++i) {\n                        var error = $root.op_client.KeyValuePairs.verify(message.kvps[i]);\n                        if (error)\n                            return "kvps." + error;\n                    }\n                }\n                if (message.menuItem != null && message.hasOwnProperty("menuItem")) {\n                    if (!Array.isArray(message.menuItem))\n                        return "menuItem: array expected";\n                    for (var i = 0; i < message.menuItem.length; ++i) {\n                        var error = $root.op_gameconfig_01.MenuItem.verify(message.menuItem[i]);\n                        if (error)\n                            return "menuItem." + error;\n                    }\n                }\n                if (message.display != null && message.hasOwnProperty("display")) {\n                    if (!Array.isArray(message.display))\n                        return "display: array expected";\n                    for (var i = 0; i < message.display.length; ++i) {\n                        var error = $root.op_gameconfig_01.Display.verify(message.display[i]);\n                        if (error)\n                            return "display." + error;\n                    }\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI} OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI();\n                if (object.text) {\n                    if (!Array.isArray(object.text))\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI.text: array expected");\n                    message.text = [];\n                    for (var i = 0; i < object.text.length; ++i) {\n                        if (typeof object.text[i] !== "object")\n                            throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI.text: object expected");\n                        message.text[i] = $root.op_gameconfig_01.Text.fromObject(object.text[i]);\n                    }\n                }\n                if (object.button) {\n                    if (!Array.isArray(object.button))\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI.button: array expected");\n                    message.button = [];\n                    for (var i = 0; i < object.button.length; ++i) {\n                        if (typeof object.button[i] !== "object")\n                            throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI.button: object expected");\n                        message.button[i] = $root.op_gameconfig_01.Button.fromObject(object.button[i]);\n                    }\n                }\n                if (object.id != null)\n                    message.id = object.id | 0;\n                if (object.time) {\n                    if (!Array.isArray(object.time))\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI.time: array expected");\n                    message.time = [];\n                    for (var i = 0; i < object.time.length; ++i)\n                        message.time[i] = object.time[i] | 0;\n                }\n                if (object.name != null)\n                    message.name = String(object.name);\n                if (object.data) {\n                    if (!Array.isArray(object.data))\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI.data: array expected");\n                    message.data = [];\n                    for (var i = 0; i < object.data.length; ++i)\n                        message.data[i] = object.data[i] | 0;\n                }\n                if (object.actors) {\n                    if (!Array.isArray(object.actors))\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI.actors: array expected");\n                    message.actors = [];\n                    for (var i = 0; i < object.actors.length; ++i) {\n                        if (typeof object.actors[i] !== "object")\n                            throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI.actors: object expected");\n                        message.actors[i] = $root.op_client.Actor.fromObject(object.actors[i]);\n                    }\n                }\n                if (object.kvps) {\n                    if (!Array.isArray(object.kvps))\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI.kvps: array expected");\n                    message.kvps = [];\n                    for (var i = 0; i < object.kvps.length; ++i) {\n                        if (typeof object.kvps[i] !== "object")\n                            throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI.kvps: object expected");\n                        message.kvps[i] = $root.op_client.KeyValuePairs.fromObject(object.kvps[i]);\n                    }\n                }\n                if (object.menuItem) {\n                    if (!Array.isArray(object.menuItem))\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI.menuItem: array expected");\n                    message.menuItem = [];\n                    for (var i = 0; i < object.menuItem.length; ++i) {\n                        if (typeof object.menuItem[i] !== "object")\n                            throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI.menuItem: object expected");\n                        message.menuItem[i] = $root.op_gameconfig_01.MenuItem.fromObject(object.menuItem[i]);\n                    }\n                }\n                if (object.display) {\n                    if (!Array.isArray(object.display))\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI.display: array expected");\n                    message.display = [];\n                    for (var i = 0; i < object.display.length; ++i) {\n                        if (typeof object.display[i] !== "object")\n                            throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI.display: object expected");\n                        message.display[i] = $root.op_gameconfig_01.Display.fromObject(object.display[i]);\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI} message OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults) {\n                    object.text = [];\n                    object.button = [];\n                    object.time = [];\n                    object.data = [];\n                    object.actors = [];\n                    object.kvps = [];\n                    object.menuItem = [];\n                    object.display = [];\n                }\n                if (options.defaults) {\n                    object.id = 0;\n                    object.name = "";\n                }\n                if (message.text && message.text.length) {\n                    object.text = [];\n                    for (var j = 0; j < message.text.length; ++j)\n                        object.text[j] = $root.op_gameconfig_01.Text.toObject(message.text[j], options);\n                }\n                if (message.button && message.button.length) {\n                    object.button = [];\n                    for (var j = 0; j < message.button.length; ++j)\n                        object.button[j] = $root.op_gameconfig_01.Button.toObject(message.button[j], options);\n                }\n                if (message.id != null && message.hasOwnProperty("id"))\n                    object.id = message.id;\n                if (message.time && message.time.length) {\n                    object.time = [];\n                    for (var j = 0; j < message.time.length; ++j)\n                        object.time[j] = message.time[j];\n                }\n                if (message.name != null && message.hasOwnProperty("name"))\n                    object.name = message.name;\n                if (message.data && message.data.length) {\n                    object.data = [];\n                    for (var j = 0; j < message.data.length; ++j)\n                        object.data[j] = message.data[j];\n                }\n                if (message.actors && message.actors.length) {\n                    object.actors = [];\n                    for (var j = 0; j < message.actors.length; ++j)\n                        object.actors[j] = $root.op_client.Actor.toObject(message.actors[j], options);\n                }\n                if (message.kvps && message.kvps.length) {\n                    object.kvps = [];\n                    for (var j = 0; j < message.kvps.length; ++j)\n                        object.kvps[j] = $root.op_client.KeyValuePairs.toObject(message.kvps[j], options);\n                }\n                if (message.menuItem && message.menuItem.length) {\n                    object.menuItem = [];\n                    for (var j = 0; j < message.menuItem.length; ++j)\n                        object.menuItem[j] = $root.op_gameconfig_01.MenuItem.toObject(message.menuItem[j], options);\n                }\n                if (message.display && message.display.length) {\n                    object.display = [];\n                    for (var j = 0; j < message.display.length; ++j)\n                        object.display[j] = $root.op_gameconfig_01.Display.toObject(message.display[j], options);\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_UI;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI\n             * @property {Array.<op_gameconfig_01.IText>|null} [text] OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI text\n             * @property {Array.<op_gameconfig_01.IButton>|null} [button] OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI button\n             * @property {number} id OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI id\n             * @property {Array.<number>|null} [time] OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI time\n             * @property {string} name OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI name\n             * @property {Array.<number>|null} [data] OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI data\n             * @property {Array.<op_client.IActor>|null} [actors] OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI actors\n             * @property {Array.<op_client.IKeyValuePairs>|null} [kvps] OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI kvps\n             * @property {Array.<op_gameconfig_01.IMenuItem>|null} [menuItem] OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI menuItem\n             * @property {Array.<op_gameconfig_01.IDisplay>|null} [display] OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI display\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI.\n             * @implements IOP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI(properties) {\n                this.text = [];\n                this.button = [];\n                this.time = [];\n                this.data = [];\n                this.actors = [];\n                this.kvps = [];\n                this.menuItem = [];\n                this.display = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI text.\n             * @member {Array.<op_gameconfig_01.IText>} text\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI.prototype.text = $util.emptyArray;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI button.\n             * @member {Array.<op_gameconfig_01.IButton>} button\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI.prototype.button = $util.emptyArray;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI id.\n             * @member {number} id\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI.prototype.id = 0;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI time.\n             * @member {Array.<number>} time\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI.prototype.time = $util.emptyArray;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI name.\n             * @member {string} name\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI.prototype.name = "";\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI data.\n             * @member {Array.<number>} data\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI.prototype.data = $util.emptyArray;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI actors.\n             * @member {Array.<op_client.IActor>} actors\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI.prototype.actors = $util.emptyArray;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI kvps.\n             * @member {Array.<op_client.IKeyValuePairs>} kvps\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI.prototype.kvps = $util.emptyArray;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI menuItem.\n             * @member {Array.<op_gameconfig_01.IMenuItem>} menuItem\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI.prototype.menuItem = $util.emptyArray;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI display.\n             * @member {Array.<op_gameconfig_01.IDisplay>} display\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI.prototype.display = $util.emptyArray;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI} OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI} message OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.text != null && message.text.length)\n                    for (var i = 0; i < message.text.length; ++i)\n                        $root.op_gameconfig_01.Text.encode(message.text[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.button != null && message.button.length)\n                    for (var i = 0; i < message.button.length; ++i)\n                        $root.op_gameconfig_01.Button.encode(message.button[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.id);\n                if (message.time != null && message.time.length)\n                    for (var i = 0; i < message.time.length; ++i)\n                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.time[i]);\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.name);\n                if (message.data != null && message.data.length)\n                    for (var i = 0; i < message.data.length; ++i)\n                        writer.uint32(/* id 7, wireType 0 =*/56).int32(message.data[i]);\n                if (message.actors != null && message.actors.length)\n                    for (var i = 0; i < message.actors.length; ++i)\n                        $root.op_client.Actor.encode(message.actors[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n                if (message.kvps != null && message.kvps.length)\n                    for (var i = 0; i < message.kvps.length; ++i)\n                        $root.op_client.KeyValuePairs.encode(message.kvps[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();\n                if (message.menuItem != null && message.menuItem.length)\n                    for (var i = 0; i < message.menuItem.length; ++i)\n                        $root.op_gameconfig_01.MenuItem.encode(message.menuItem[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n                if (message.display != null && message.display.length)\n                    for (var i = 0; i < message.display.length; ++i)\n                        $root.op_gameconfig_01.Display.encode(message.display[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI} message OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI} OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.text && message.text.length))\n                            message.text = [];\n                        message.text.push($root.op_gameconfig_01.Text.decode(reader, reader.uint32()));\n                        break;\n                    case 3:\n                        if (!(message.button && message.button.length))\n                            message.button = [];\n                        message.button.push($root.op_gameconfig_01.Button.decode(reader, reader.uint32()));\n                        break;\n                    case 4:\n                        message.id = reader.int32();\n                        break;\n                    case 5:\n                        if (!(message.time && message.time.length))\n                            message.time = [];\n                        if ((tag & 7) === 2) {\n                            var end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2)\n                                message.time.push(reader.int32());\n                        } else\n                            message.time.push(reader.int32());\n                        break;\n                    case 6:\n                        message.name = reader.string();\n                        break;\n                    case 7:\n                        if (!(message.data && message.data.length))\n                            message.data = [];\n                        if ((tag & 7) === 2) {\n                            var end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2)\n                                message.data.push(reader.int32());\n                        } else\n                            message.data.push(reader.int32());\n                        break;\n                    case 8:\n                        if (!(message.actors && message.actors.length))\n                            message.actors = [];\n                        message.actors.push($root.op_client.Actor.decode(reader, reader.uint32()));\n                        break;\n                    case 9:\n                        if (!(message.kvps && message.kvps.length))\n                            message.kvps = [];\n                        message.kvps.push($root.op_client.KeyValuePairs.decode(reader, reader.uint32()));\n                        break;\n                    case 10:\n                        if (!(message.menuItem && message.menuItem.length))\n                            message.menuItem = [];\n                        message.menuItem.push($root.op_gameconfig_01.MenuItem.decode(reader, reader.uint32()));\n                        break;\n                    case 11:\n                        if (!(message.display && message.display.length))\n                            message.display = [];\n                        message.display.push($root.op_gameconfig_01.Display.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("id"))\n                    throw $util.ProtocolError("missing required \'id\'", { instance: message });\n                if (!message.hasOwnProperty("name"))\n                    throw $util.ProtocolError("missing required \'name\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI} OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.text != null && message.hasOwnProperty("text")) {\n                    if (!Array.isArray(message.text))\n                        return "text: array expected";\n                    for (var i = 0; i < message.text.length; ++i) {\n                        var error = $root.op_gameconfig_01.Text.verify(message.text[i]);\n                        if (error)\n                            return "text." + error;\n                    }\n                }\n                if (message.button != null && message.hasOwnProperty("button")) {\n                    if (!Array.isArray(message.button))\n                        return "button: array expected";\n                    for (var i = 0; i < message.button.length; ++i) {\n                        var error = $root.op_gameconfig_01.Button.verify(message.button[i]);\n                        if (error)\n                            return "button." + error;\n                    }\n                }\n                if (!$util.isInteger(message.id))\n                    return "id: integer expected";\n                if (message.time != null && message.hasOwnProperty("time")) {\n                    if (!Array.isArray(message.time))\n                        return "time: array expected";\n                    for (var i = 0; i < message.time.length; ++i)\n                        if (!$util.isInteger(message.time[i]))\n                            return "time: integer[] expected";\n                }\n                if (!$util.isString(message.name))\n                    return "name: string expected";\n                if (message.data != null && message.hasOwnProperty("data")) {\n                    if (!Array.isArray(message.data))\n                        return "data: array expected";\n                    for (var i = 0; i < message.data.length; ++i)\n                        if (!$util.isInteger(message.data[i]))\n                            return "data: integer[] expected";\n                }\n                if (message.actors != null && message.hasOwnProperty("actors")) {\n                    if (!Array.isArray(message.actors))\n                        return "actors: array expected";\n                    for (var i = 0; i < message.actors.length; ++i) {\n                        var error = $root.op_client.Actor.verify(message.actors[i]);\n                        if (error)\n                            return "actors." + error;\n                    }\n                }\n                if (message.kvps != null && message.hasOwnProperty("kvps")) {\n                    if (!Array.isArray(message.kvps))\n                        return "kvps: array expected";\n                    for (var i = 0; i < message.kvps.length; ++i) {\n                        var error = $root.op_client.KeyValuePairs.verify(message.kvps[i]);\n                        if (error)\n                            return "kvps." + error;\n                    }\n                }\n                if (message.menuItem != null && message.hasOwnProperty("menuItem")) {\n                    if (!Array.isArray(message.menuItem))\n                        return "menuItem: array expected";\n                    for (var i = 0; i < message.menuItem.length; ++i) {\n                        var error = $root.op_gameconfig_01.MenuItem.verify(message.menuItem[i]);\n                        if (error)\n                            return "menuItem." + error;\n                    }\n                }\n                if (message.display != null && message.hasOwnProperty("display")) {\n                    if (!Array.isArray(message.display))\n                        return "display: array expected";\n                    for (var i = 0; i < message.display.length; ++i) {\n                        var error = $root.op_gameconfig_01.Display.verify(message.display[i]);\n                        if (error)\n                            return "display." + error;\n                    }\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI} OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI();\n                if (object.text) {\n                    if (!Array.isArray(object.text))\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI.text: array expected");\n                    message.text = [];\n                    for (var i = 0; i < object.text.length; ++i) {\n                        if (typeof object.text[i] !== "object")\n                            throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI.text: object expected");\n                        message.text[i] = $root.op_gameconfig_01.Text.fromObject(object.text[i]);\n                    }\n                }\n                if (object.button) {\n                    if (!Array.isArray(object.button))\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI.button: array expected");\n                    message.button = [];\n                    for (var i = 0; i < object.button.length; ++i) {\n                        if (typeof object.button[i] !== "object")\n                            throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI.button: object expected");\n                        message.button[i] = $root.op_gameconfig_01.Button.fromObject(object.button[i]);\n                    }\n                }\n                if (object.id != null)\n                    message.id = object.id | 0;\n                if (object.time) {\n                    if (!Array.isArray(object.time))\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI.time: array expected");\n                    message.time = [];\n                    for (var i = 0; i < object.time.length; ++i)\n                        message.time[i] = object.time[i] | 0;\n                }\n                if (object.name != null)\n                    message.name = String(object.name);\n                if (object.data) {\n                    if (!Array.isArray(object.data))\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI.data: array expected");\n                    message.data = [];\n                    for (var i = 0; i < object.data.length; ++i)\n                        message.data[i] = object.data[i] | 0;\n                }\n                if (object.actors) {\n                    if (!Array.isArray(object.actors))\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI.actors: array expected");\n                    message.actors = [];\n                    for (var i = 0; i < object.actors.length; ++i) {\n                        if (typeof object.actors[i] !== "object")\n                            throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI.actors: object expected");\n                        message.actors[i] = $root.op_client.Actor.fromObject(object.actors[i]);\n                    }\n                }\n                if (object.kvps) {\n                    if (!Array.isArray(object.kvps))\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI.kvps: array expected");\n                    message.kvps = [];\n                    for (var i = 0; i < object.kvps.length; ++i) {\n                        if (typeof object.kvps[i] !== "object")\n                            throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI.kvps: object expected");\n                        message.kvps[i] = $root.op_client.KeyValuePairs.fromObject(object.kvps[i]);\n                    }\n                }\n                if (object.menuItem) {\n                    if (!Array.isArray(object.menuItem))\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI.menuItem: array expected");\n                    message.menuItem = [];\n                    for (var i = 0; i < object.menuItem.length; ++i) {\n                        if (typeof object.menuItem[i] !== "object")\n                            throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI.menuItem: object expected");\n                        message.menuItem[i] = $root.op_gameconfig_01.MenuItem.fromObject(object.menuItem[i]);\n                    }\n                }\n                if (object.display) {\n                    if (!Array.isArray(object.display))\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI.display: array expected");\n                    message.display = [];\n                    for (var i = 0; i < object.display.length; ++i) {\n                        if (typeof object.display[i] !== "object")\n                            throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI.display: object expected");\n                        message.display[i] = $root.op_gameconfig_01.Display.fromObject(object.display[i]);\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI} message OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults) {\n                    object.text = [];\n                    object.button = [];\n                    object.time = [];\n                    object.data = [];\n                    object.actors = [];\n                    object.kvps = [];\n                    object.menuItem = [];\n                    object.display = [];\n                }\n                if (options.defaults) {\n                    object.id = 0;\n                    object.name = "";\n                }\n                if (message.text && message.text.length) {\n                    object.text = [];\n                    for (var j = 0; j < message.text.length; ++j)\n                        object.text[j] = $root.op_gameconfig_01.Text.toObject(message.text[j], options);\n                }\n                if (message.button && message.button.length) {\n                    object.button = [];\n                    for (var j = 0; j < message.button.length; ++j)\n                        object.button[j] = $root.op_gameconfig_01.Button.toObject(message.button[j], options);\n                }\n                if (message.id != null && message.hasOwnProperty("id"))\n                    object.id = message.id;\n                if (message.time && message.time.length) {\n                    object.time = [];\n                    for (var j = 0; j < message.time.length; ++j)\n                        object.time[j] = message.time[j];\n                }\n                if (message.name != null && message.hasOwnProperty("name"))\n                    object.name = message.name;\n                if (message.data && message.data.length) {\n                    object.data = [];\n                    for (var j = 0; j < message.data.length; ++j)\n                        object.data[j] = message.data[j];\n                }\n                if (message.actors && message.actors.length) {\n                    object.actors = [];\n                    for (var j = 0; j < message.actors.length; ++j)\n                        object.actors[j] = $root.op_client.Actor.toObject(message.actors[j], options);\n                }\n                if (message.kvps && message.kvps.length) {\n                    object.kvps = [];\n                    for (var j = 0; j < message.kvps.length; ++j)\n                        object.kvps[j] = $root.op_client.KeyValuePairs.toObject(message.kvps[j], options);\n                }\n                if (message.menuItem && message.menuItem.length) {\n                    object.menuItem = [];\n                    for (var j = 0; j < message.menuItem.length; ++j)\n                        object.menuItem[j] = $root.op_gameconfig_01.MenuItem.toObject(message.menuItem[j], options);\n                }\n                if (message.display && message.display.length) {\n                    object.display = [];\n                    for (var j = 0; j < message.display.length; ++j)\n                        object.display[j] = $root.op_gameconfig_01.Display.toObject(message.display[j], options);\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_RES_CLIENT_UPDATE_UI;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI\n             * @property {string} name OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI name\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI.\n             * @implements IOP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI name.\n             * @member {string} name\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI.prototype.name = "";\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI} OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI} message OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI} message OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI} OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.name = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("name"))\n                    throw $util.ProtocolError("missing required \'name\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI} OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.name))\n                    return "name: string expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI} OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI();\n                if (object.name != null)\n                    message.name = String(object.name);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI} message OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.name = "";\n                if (message.name != null && message.hasOwnProperty("name"))\n                    object.name = message.name;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_RES_CLIENT_CLOSE_UI;\n        })();\n    \n        op_client.MoveData = (function() {\n    \n            /**\n             * Properties of a MoveData.\n             * @memberof op_client\n             * @interface IMoveData\n             * @property {number} moveObjectId MoveData moveObjectId\n             * @property {op_def.MoveType} moveType MoveData moveType\n             * @property {op_def.Direction} direction MoveData direction\n             * @property {op_def.IPBPoint3f} destinationPoint3f MoveData destinationPoint3f\n             * @property {number} timeSpan MoveData timeSpan\n             * @property {number|null} [timestemp] MoveData timestemp\n             */\n    \n            /**\n             * Constructs a new MoveData.\n             * @memberof op_client\n             * @classdesc Represents a MoveData.\n             * @implements IMoveData\n             * @constructor\n             * @param {op_client.IMoveData=} [properties] Properties to set\n             */\n            function MoveData(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * MoveData moveObjectId.\n             * @member {number} moveObjectId\n             * @memberof op_client.MoveData\n             * @instance\n             */\n            MoveData.prototype.moveObjectId = 0;\n    \n            /**\n             * MoveData moveType.\n             * @member {op_def.MoveType} moveType\n             * @memberof op_client.MoveData\n             * @instance\n             */\n            MoveData.prototype.moveType = 0;\n    \n            /**\n             * MoveData direction.\n             * @member {op_def.Direction} direction\n             * @memberof op_client.MoveData\n             * @instance\n             */\n            MoveData.prototype.direction = 0;\n    \n            /**\n             * MoveData destinationPoint3f.\n             * @member {op_def.IPBPoint3f} destinationPoint3f\n             * @memberof op_client.MoveData\n             * @instance\n             */\n            MoveData.prototype.destinationPoint3f = null;\n    \n            /**\n             * MoveData timeSpan.\n             * @member {number} timeSpan\n             * @memberof op_client.MoveData\n             * @instance\n             */\n            MoveData.prototype.timeSpan = 0;\n    \n            /**\n             * MoveData timestemp.\n             * @member {number} timestemp\n             * @memberof op_client.MoveData\n             * @instance\n             */\n            MoveData.prototype.timestemp = 0;\n    \n            /**\n             * Creates a new MoveData instance using the specified properties.\n             * @function create\n             * @memberof op_client.MoveData\n             * @static\n             * @param {op_client.IMoveData=} [properties] Properties to set\n             * @returns {op_client.MoveData} MoveData instance\n             */\n            MoveData.create = function create(properties) {\n                return new MoveData(properties);\n            };\n    \n            /**\n             * Encodes the specified MoveData message. Does not implicitly {@link op_client.MoveData.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.MoveData\n             * @static\n             * @param {op_client.IMoveData} message MoveData message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            MoveData.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.moveObjectId);\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.moveType);\n                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.direction);\n                $root.op_def.PBPoint3f.encode(message.destinationPoint3f, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.timeSpan);\n                if (message.timestemp != null && message.hasOwnProperty("timestemp"))\n                    writer.uint32(/* id 6, wireType 1 =*/49).double(message.timestemp);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified MoveData message, length delimited. Does not implicitly {@link op_client.MoveData.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.MoveData\n             * @static\n             * @param {op_client.IMoveData} message MoveData message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            MoveData.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a MoveData message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.MoveData\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.MoveData} MoveData\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            MoveData.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.MoveData();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.moveObjectId = reader.int32();\n                        break;\n                    case 2:\n                        message.moveType = reader.int32();\n                        break;\n                    case 3:\n                        message.direction = reader.int32();\n                        break;\n                    case 4:\n                        message.destinationPoint3f = $root.op_def.PBPoint3f.decode(reader, reader.uint32());\n                        break;\n                    case 5:\n                        message.timeSpan = reader.int32();\n                        break;\n                    case 6:\n                        message.timestemp = reader.double();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("moveObjectId"))\n                    throw $util.ProtocolError("missing required \'moveObjectId\'", { instance: message });\n                if (!message.hasOwnProperty("moveType"))\n                    throw $util.ProtocolError("missing required \'moveType\'", { instance: message });\n                if (!message.hasOwnProperty("direction"))\n                    throw $util.ProtocolError("missing required \'direction\'", { instance: message });\n                if (!message.hasOwnProperty("destinationPoint3f"))\n                    throw $util.ProtocolError("missing required \'destinationPoint3f\'", { instance: message });\n                if (!message.hasOwnProperty("timeSpan"))\n                    throw $util.ProtocolError("missing required \'timeSpan\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a MoveData message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.MoveData\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.MoveData} MoveData\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            MoveData.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a MoveData message.\n             * @function verify\n             * @memberof op_client.MoveData\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            MoveData.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.moveObjectId))\n                    return "moveObjectId: integer expected";\n                switch (message.moveType) {\n                default:\n                    return "moveType: enum value expected";\n                case 0:\n                case 1:\n                    break;\n                }\n                switch (message.direction) {\n                default:\n                    return "direction: enum value expected";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                    break;\n                }\n                {\n                    var error = $root.op_def.PBPoint3f.verify(message.destinationPoint3f);\n                    if (error)\n                        return "destinationPoint3f." + error;\n                }\n                if (!$util.isInteger(message.timeSpan))\n                    return "timeSpan: integer expected";\n                if (message.timestemp != null && message.hasOwnProperty("timestemp"))\n                    if (typeof message.timestemp !== "number")\n                        return "timestemp: number expected";\n                return null;\n            };\n    \n            /**\n             * Creates a MoveData message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.MoveData\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.MoveData} MoveData\n             */\n            MoveData.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.MoveData)\n                    return object;\n                var message = new $root.op_client.MoveData();\n                if (object.moveObjectId != null)\n                    message.moveObjectId = object.moveObjectId | 0;\n                switch (object.moveType) {\n                case "CHARACTER":\n                case 0:\n                    message.moveType = 0;\n                    break;\n                case "ELEMENT":\n                case 1:\n                    message.moveType = 1;\n                    break;\n                }\n                switch (object.direction) {\n                case "UP":\n                case 0:\n                    message.direction = 0;\n                    break;\n                case "UPPER_LEFT":\n                case 1:\n                    message.direction = 1;\n                    break;\n                case "LEFT":\n                case 2:\n                    message.direction = 2;\n                    break;\n                case "LOWER_LEFT":\n                case 3:\n                    message.direction = 3;\n                    break;\n                case "DOWN":\n                case 4:\n                    message.direction = 4;\n                    break;\n                case "LOWER_RIGHT":\n                case 5:\n                    message.direction = 5;\n                    break;\n                case "RIGHT":\n                case 6:\n                    message.direction = 6;\n                    break;\n                case "UPPER_RIGHT":\n                case 7:\n                    message.direction = 7;\n                    break;\n                }\n                if (object.destinationPoint3f != null) {\n                    if (typeof object.destinationPoint3f !== "object")\n                        throw TypeError(".op_client.MoveData.destinationPoint3f: object expected");\n                    message.destinationPoint3f = $root.op_def.PBPoint3f.fromObject(object.destinationPoint3f);\n                }\n                if (object.timeSpan != null)\n                    message.timeSpan = object.timeSpan | 0;\n                if (object.timestemp != null)\n                    message.timestemp = Number(object.timestemp);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a MoveData message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.MoveData\n             * @static\n             * @param {op_client.MoveData} message MoveData\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            MoveData.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.moveObjectId = 0;\n                    object.moveType = options.enums === String ? "CHARACTER" : 0;\n                    object.direction = options.enums === String ? "UP" : 0;\n                    object.destinationPoint3f = null;\n                    object.timeSpan = 0;\n                    object.timestemp = 0;\n                }\n                if (message.moveObjectId != null && message.hasOwnProperty("moveObjectId"))\n                    object.moveObjectId = message.moveObjectId;\n                if (message.moveType != null && message.hasOwnProperty("moveType"))\n                    object.moveType = options.enums === String ? $root.op_def.MoveType[message.moveType] : message.moveType;\n                if (message.direction != null && message.hasOwnProperty("direction"))\n                    object.direction = options.enums === String ? $root.op_def.Direction[message.direction] : message.direction;\n                if (message.destinationPoint3f != null && message.hasOwnProperty("destinationPoint3f"))\n                    object.destinationPoint3f = $root.op_def.PBPoint3f.toObject(message.destinationPoint3f, options);\n                if (message.timeSpan != null && message.hasOwnProperty("timeSpan"))\n                    object.timeSpan = message.timeSpan;\n                if (message.timestemp != null && message.hasOwnProperty("timestemp"))\n                    object.timestemp = options.json && !isFinite(message.timestemp) ? String(message.timestemp) : message.timestemp;\n                return object;\n            };\n    \n            /**\n             * Converts this MoveData to JSON.\n             * @function toJSON\n             * @memberof op_client.MoveData\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            MoveData.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return MoveData;\n        })();\n    \n        op_client.OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER = (function() {\n    \n            /**\n             * Properties of a OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER.\n             * @memberof op_client\n             * @interface IOP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER\n             * @property {Array.<op_client.IMoveData>|null} [moveData] OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER moveData\n             */\n    \n            /**\n             * Constructs a new OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER.\n             * @memberof op_client\n             * @classdesc Represents a OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER.\n             * @implements IOP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER\n             * @constructor\n             * @param {op_client.IOP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER=} [properties] Properties to set\n             */\n            function OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER(properties) {\n                this.moveData = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER moveData.\n             * @member {Array.<op_client.IMoveData>} moveData\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER\n             * @instance\n             */\n            OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER.prototype.moveData = $util.emptyArray;\n    \n            /**\n             * Creates a new OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER\n             * @static\n             * @param {op_client.IOP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER=} [properties] Properties to set\n             * @returns {op_client.OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER} OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER instance\n             */\n            OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER.create = function create(properties) {\n                return new OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER message. Does not implicitly {@link op_client.OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER\n             * @static\n             * @param {op_client.IOP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER} message OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.moveData != null && message.moveData.length)\n                    for (var i = 0; i < message.moveData.length; ++i)\n                        $root.op_client.MoveData.encode(message.moveData[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER message, length delimited. Does not implicitly {@link op_client.OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER\n             * @static\n             * @param {op_client.IOP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER} message OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER} OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.moveData && message.moveData.length))\n                            message.moveData = [];\n                        message.moveData.push($root.op_client.MoveData.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER} OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER message.\n             * @function verify\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.moveData != null && message.hasOwnProperty("moveData")) {\n                    if (!Array.isArray(message.moveData))\n                        return "moveData: array expected";\n                    for (var i = 0; i < message.moveData.length; ++i) {\n                        var error = $root.op_client.MoveData.verify(message.moveData[i]);\n                        if (error)\n                            return "moveData." + error;\n                    }\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER} OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER\n             */\n            OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER)\n                    return object;\n                var message = new $root.op_client.OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER();\n                if (object.moveData) {\n                    if (!Array.isArray(object.moveData))\n                        throw TypeError(".op_client.OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER.moveData: array expected");\n                    message.moveData = [];\n                    for (var i = 0; i < object.moveData.length; ++i) {\n                        if (typeof object.moveData[i] !== "object")\n                            throw TypeError(".op_client.OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER.moveData: object expected");\n                        message.moveData[i] = $root.op_client.MoveData.fromObject(object.moveData[i]);\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER\n             * @static\n             * @param {op_client.OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER} message OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.moveData = [];\n                if (message.moveData && message.moveData.length) {\n                    object.moveData = [];\n                    for (var j = 0; j < message.moveData.length; ++j)\n                        object.moveData[j] = $root.op_client.MoveData.toObject(message.moveData[j], options);\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_GATEWAY_REQ_CLIENT_MOVE_CHARACTER;\n        })();\n    \n        op_client.OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT = (function() {\n    \n            /**\n             * Properties of a OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT.\n             * @memberof op_client\n             * @interface IOP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT\n             * @property {Array.<op_client.IMoveData>|null} [moveData] OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT moveData\n             */\n    \n            /**\n             * Constructs a new OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT.\n             * @memberof op_client\n             * @classdesc Represents a OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT.\n             * @implements IOP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT\n             * @constructor\n             * @param {op_client.IOP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT=} [properties] Properties to set\n             */\n            function OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT(properties) {\n                this.moveData = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT moveData.\n             * @member {Array.<op_client.IMoveData>} moveData\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT\n             * @instance\n             */\n            OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT.prototype.moveData = $util.emptyArray;\n    \n            /**\n             * Creates a new OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT\n             * @static\n             * @param {op_client.IOP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT=} [properties] Properties to set\n             * @returns {op_client.OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT} OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT instance\n             */\n            OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT.create = function create(properties) {\n                return new OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT message. Does not implicitly {@link op_client.OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT\n             * @static\n             * @param {op_client.IOP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT} message OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.moveData != null && message.moveData.length)\n                    for (var i = 0; i < message.moveData.length; ++i)\n                        $root.op_client.MoveData.encode(message.moveData[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT message, length delimited. Does not implicitly {@link op_client.OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT\n             * @static\n             * @param {op_client.IOP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT} message OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT} OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.moveData && message.moveData.length))\n                            message.moveData = [];\n                        message.moveData.push($root.op_client.MoveData.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT} OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT message.\n             * @function verify\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.moveData != null && message.hasOwnProperty("moveData")) {\n                    if (!Array.isArray(message.moveData))\n                        return "moveData: array expected";\n                    for (var i = 0; i < message.moveData.length; ++i) {\n                        var error = $root.op_client.MoveData.verify(message.moveData[i]);\n                        if (error)\n                            return "moveData." + error;\n                    }\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT} OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT\n             */\n            OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT)\n                    return object;\n                var message = new $root.op_client.OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT();\n                if (object.moveData) {\n                    if (!Array.isArray(object.moveData))\n                        throw TypeError(".op_client.OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT.moveData: array expected");\n                    message.moveData = [];\n                    for (var i = 0; i < object.moveData.length; ++i) {\n                        if (typeof object.moveData[i] !== "object")\n                            throw TypeError(".op_client.OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT.moveData: object expected");\n                        message.moveData[i] = $root.op_client.MoveData.fromObject(object.moveData[i]);\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT\n             * @static\n             * @param {op_client.OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT} message OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.moveData = [];\n                if (message.moveData && message.moveData.length) {\n                    object.moveData = [];\n                    for (var j = 0; j < message.moveData.length; ++j)\n                        object.moveData[j] = $root.op_client.MoveData.toObject(message.moveData[j], options);\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_GATEWAY_REQ_CLIENT_MOVE_ELEMENT;\n        })();\n    \n        op_client.MovePosition = (function() {\n    \n            /**\n             * Properties of a MovePosition.\n             * @memberof op_client\n             * @interface IMovePosition\n             * @property {number} moveObjectId MovePosition moveObjectId\n             * @property {op_def.MoveType} moveType MovePosition moveType\n             * @property {op_def.Direction} direction MovePosition direction\n             * @property {op_def.IPBPoint3f} destinationPoint3f MovePosition destinationPoint3f\n             */\n    \n            /**\n             * Constructs a new MovePosition.\n             * @memberof op_client\n             * @classdesc Represents a MovePosition.\n             * @implements IMovePosition\n             * @constructor\n             * @param {op_client.IMovePosition=} [properties] Properties to set\n             */\n            function MovePosition(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * MovePosition moveObjectId.\n             * @member {number} moveObjectId\n             * @memberof op_client.MovePosition\n             * @instance\n             */\n            MovePosition.prototype.moveObjectId = 0;\n    \n            /**\n             * MovePosition moveType.\n             * @member {op_def.MoveType} moveType\n             * @memberof op_client.MovePosition\n             * @instance\n             */\n            MovePosition.prototype.moveType = 0;\n    \n            /**\n             * MovePosition direction.\n             * @member {op_def.Direction} direction\n             * @memberof op_client.MovePosition\n             * @instance\n             */\n            MovePosition.prototype.direction = 0;\n    \n            /**\n             * MovePosition destinationPoint3f.\n             * @member {op_def.IPBPoint3f} destinationPoint3f\n             * @memberof op_client.MovePosition\n             * @instance\n             */\n            MovePosition.prototype.destinationPoint3f = null;\n    \n            /**\n             * Creates a new MovePosition instance using the specified properties.\n             * @function create\n             * @memberof op_client.MovePosition\n             * @static\n             * @param {op_client.IMovePosition=} [properties] Properties to set\n             * @returns {op_client.MovePosition} MovePosition instance\n             */\n            MovePosition.create = function create(properties) {\n                return new MovePosition(properties);\n            };\n    \n            /**\n             * Encodes the specified MovePosition message. Does not implicitly {@link op_client.MovePosition.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.MovePosition\n             * @static\n             * @param {op_client.IMovePosition} message MovePosition message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            MovePosition.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.moveObjectId);\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.moveType);\n                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.direction);\n                $root.op_def.PBPoint3f.encode(message.destinationPoint3f, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified MovePosition message, length delimited. Does not implicitly {@link op_client.MovePosition.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.MovePosition\n             * @static\n             * @param {op_client.IMovePosition} message MovePosition message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            MovePosition.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a MovePosition message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.MovePosition\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.MovePosition} MovePosition\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            MovePosition.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.MovePosition();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.moveObjectId = reader.int32();\n                        break;\n                    case 2:\n                        message.moveType = reader.int32();\n                        break;\n                    case 3:\n                        message.direction = reader.int32();\n                        break;\n                    case 4:\n                        message.destinationPoint3f = $root.op_def.PBPoint3f.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("moveObjectId"))\n                    throw $util.ProtocolError("missing required \'moveObjectId\'", { instance: message });\n                if (!message.hasOwnProperty("moveType"))\n                    throw $util.ProtocolError("missing required \'moveType\'", { instance: message });\n                if (!message.hasOwnProperty("direction"))\n                    throw $util.ProtocolError("missing required \'direction\'", { instance: message });\n                if (!message.hasOwnProperty("destinationPoint3f"))\n                    throw $util.ProtocolError("missing required \'destinationPoint3f\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a MovePosition message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.MovePosition\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.MovePosition} MovePosition\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            MovePosition.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a MovePosition message.\n             * @function verify\n             * @memberof op_client.MovePosition\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            MovePosition.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.moveObjectId))\n                    return "moveObjectId: integer expected";\n                switch (message.moveType) {\n                default:\n                    return "moveType: enum value expected";\n                case 0:\n                case 1:\n                    break;\n                }\n                switch (message.direction) {\n                default:\n                    return "direction: enum value expected";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                    break;\n                }\n                {\n                    var error = $root.op_def.PBPoint3f.verify(message.destinationPoint3f);\n                    if (error)\n                        return "destinationPoint3f." + error;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a MovePosition message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.MovePosition\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.MovePosition} MovePosition\n             */\n            MovePosition.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.MovePosition)\n                    return object;\n                var message = new $root.op_client.MovePosition();\n                if (object.moveObjectId != null)\n                    message.moveObjectId = object.moveObjectId | 0;\n                switch (object.moveType) {\n                case "CHARACTER":\n                case 0:\n                    message.moveType = 0;\n                    break;\n                case "ELEMENT":\n                case 1:\n                    message.moveType = 1;\n                    break;\n                }\n                switch (object.direction) {\n                case "UP":\n                case 0:\n                    message.direction = 0;\n                    break;\n                case "UPPER_LEFT":\n                case 1:\n                    message.direction = 1;\n                    break;\n                case "LEFT":\n                case 2:\n                    message.direction = 2;\n                    break;\n                case "LOWER_LEFT":\n                case 3:\n                    message.direction = 3;\n                    break;\n                case "DOWN":\n                case 4:\n                    message.direction = 4;\n                    break;\n                case "LOWER_RIGHT":\n                case 5:\n                    message.direction = 5;\n                    break;\n                case "RIGHT":\n                case 6:\n                    message.direction = 6;\n                    break;\n                case "UPPER_RIGHT":\n                case 7:\n                    message.direction = 7;\n                    break;\n                }\n                if (object.destinationPoint3f != null) {\n                    if (typeof object.destinationPoint3f !== "object")\n                        throw TypeError(".op_client.MovePosition.destinationPoint3f: object expected");\n                    message.destinationPoint3f = $root.op_def.PBPoint3f.fromObject(object.destinationPoint3f);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a MovePosition message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.MovePosition\n             * @static\n             * @param {op_client.MovePosition} message MovePosition\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            MovePosition.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.moveObjectId = 0;\n                    object.moveType = options.enums === String ? "CHARACTER" : 0;\n                    object.direction = options.enums === String ? "UP" : 0;\n                    object.destinationPoint3f = null;\n                }\n                if (message.moveObjectId != null && message.hasOwnProperty("moveObjectId"))\n                    object.moveObjectId = message.moveObjectId;\n                if (message.moveType != null && message.hasOwnProperty("moveType"))\n                    object.moveType = options.enums === String ? $root.op_def.MoveType[message.moveType] : message.moveType;\n                if (message.direction != null && message.hasOwnProperty("direction"))\n                    object.direction = options.enums === String ? $root.op_def.Direction[message.direction] : message.direction;\n                if (message.destinationPoint3f != null && message.hasOwnProperty("destinationPoint3f"))\n                    object.destinationPoint3f = $root.op_def.PBPoint3f.toObject(message.destinationPoint3f, options);\n                return object;\n            };\n    \n            /**\n             * Converts this MovePosition to JSON.\n             * @function toJSON\n             * @memberof op_client.MovePosition\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            MovePosition.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return MovePosition;\n        })();\n    \n        op_client.OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION = (function() {\n    \n            /**\n             * Properties of a OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION.\n             * @memberof op_client\n             * @interface IOP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION\n             * @property {Array.<op_client.IMovePosition>|null} [movePostion] OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION movePostion\n             */\n    \n            /**\n             * Constructs a new OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION.\n             * @memberof op_client\n             * @classdesc Represents a OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION.\n             * @implements IOP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION\n             * @constructor\n             * @param {op_client.IOP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION=} [properties] Properties to set\n             */\n            function OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION(properties) {\n                this.movePostion = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION movePostion.\n             * @member {Array.<op_client.IMovePosition>} movePostion\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION\n             * @instance\n             */\n            OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION.prototype.movePostion = $util.emptyArray;\n    \n            /**\n             * Creates a new OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION\n             * @static\n             * @param {op_client.IOP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION=} [properties] Properties to set\n             * @returns {op_client.OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION} OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION instance\n             */\n            OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION.create = function create(properties) {\n                return new OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION message. Does not implicitly {@link op_client.OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION\n             * @static\n             * @param {op_client.IOP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION} message OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.movePostion != null && message.movePostion.length)\n                    for (var i = 0; i < message.movePostion.length; ++i)\n                        $root.op_client.MovePosition.encode(message.movePostion[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION message, length delimited. Does not implicitly {@link op_client.OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION\n             * @static\n             * @param {op_client.IOP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION} message OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION} OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.movePostion && message.movePostion.length))\n                            message.movePostion = [];\n                        message.movePostion.push($root.op_client.MovePosition.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION} OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION message.\n             * @function verify\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.movePostion != null && message.hasOwnProperty("movePostion")) {\n                    if (!Array.isArray(message.movePostion))\n                        return "movePostion: array expected";\n                    for (var i = 0; i < message.movePostion.length; ++i) {\n                        var error = $root.op_client.MovePosition.verify(message.movePostion[i]);\n                        if (error)\n                            return "movePostion." + error;\n                    }\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION} OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION\n             */\n            OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION)\n                    return object;\n                var message = new $root.op_client.OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION();\n                if (object.movePostion) {\n                    if (!Array.isArray(object.movePostion))\n                        throw TypeError(".op_client.OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION.movePostion: array expected");\n                    message.movePostion = [];\n                    for (var i = 0; i < object.movePostion.length; ++i) {\n                        if (typeof object.movePostion[i] !== "object")\n                            throw TypeError(".op_client.OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION.movePostion: object expected");\n                        message.movePostion[i] = $root.op_client.MovePosition.fromObject(object.movePostion[i]);\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION\n             * @static\n             * @param {op_client.OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION} message OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.movePostion = [];\n                if (message.movePostion && message.movePostion.length) {\n                    object.movePostion = [];\n                    for (var j = 0; j < message.movePostion.length; ++j)\n                        object.movePostion[j] = $root.op_client.MovePosition.toObject(message.movePostion[j], options);\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_GATEWAY_REQ_CLIENT_SET_CHARACTER_POSITION;\n        })();\n    \n        op_client.OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION = (function() {\n    \n            /**\n             * Properties of a OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION.\n             * @memberof op_client\n             * @interface IOP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION\n             * @property {Array.<op_client.IMovePosition>|null} [movePostion] OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION movePostion\n             */\n    \n            /**\n             * Constructs a new OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION.\n             * @memberof op_client\n             * @classdesc Represents a OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION.\n             * @implements IOP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION\n             * @constructor\n             * @param {op_client.IOP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION=} [properties] Properties to set\n             */\n            function OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION(properties) {\n                this.movePostion = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION movePostion.\n             * @member {Array.<op_client.IMovePosition>} movePostion\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION\n             * @instance\n             */\n            OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION.prototype.movePostion = $util.emptyArray;\n    \n            /**\n             * Creates a new OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION\n             * @static\n             * @param {op_client.IOP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION=} [properties] Properties to set\n             * @returns {op_client.OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION} OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION instance\n             */\n            OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION.create = function create(properties) {\n                return new OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION message. Does not implicitly {@link op_client.OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION\n             * @static\n             * @param {op_client.IOP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION} message OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.movePostion != null && message.movePostion.length)\n                    for (var i = 0; i < message.movePostion.length; ++i)\n                        $root.op_client.MovePosition.encode(message.movePostion[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION message, length delimited. Does not implicitly {@link op_client.OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION\n             * @static\n             * @param {op_client.IOP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION} message OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION} OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.movePostion && message.movePostion.length))\n                            message.movePostion = [];\n                        message.movePostion.push($root.op_client.MovePosition.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION} OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION message.\n             * @function verify\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.movePostion != null && message.hasOwnProperty("movePostion")) {\n                    if (!Array.isArray(message.movePostion))\n                        return "movePostion: array expected";\n                    for (var i = 0; i < message.movePostion.length; ++i) {\n                        var error = $root.op_client.MovePosition.verify(message.movePostion[i]);\n                        if (error)\n                            return "movePostion." + error;\n                    }\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION} OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION\n             */\n            OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION)\n                    return object;\n                var message = new $root.op_client.OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION();\n                if (object.movePostion) {\n                    if (!Array.isArray(object.movePostion))\n                        throw TypeError(".op_client.OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION.movePostion: array expected");\n                    message.movePostion = [];\n                    for (var i = 0; i < object.movePostion.length; ++i) {\n                        if (typeof object.movePostion[i] !== "object")\n                            throw TypeError(".op_client.OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION.movePostion: object expected");\n                        message.movePostion[i] = $root.op_client.MovePosition.fromObject(object.movePostion[i]);\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION\n             * @static\n             * @param {op_client.OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION} message OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.movePostion = [];\n                if (message.movePostion && message.movePostion.length) {\n                    object.movePostion = [];\n                    for (var j = 0; j < message.movePostion.length; ++j)\n                        object.movePostion[j] = $root.op_client.MovePosition.toObject(message.movePostion[j], options);\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_GATEWAY_REQ_CLIENT_SET_ELEMENT_POSITION;\n        })();\n    \n        op_client.Chat_Setting = (function() {\n    \n            /**\n             * Properties of a Chat_Setting.\n             * @memberof op_client\n             * @interface IChat_Setting\n             * @property {string|null} [textColor] Chat_Setting textColor\n             * @property {number|null} [textFontsize] Chat_Setting textFontsize\n             * @property {number|null} [textPattern] Chat_Setting textPattern\n             * @property {number|null} [duration] Chat_Setting duration\n             * @property {string|null} [bubbleResource] Chat_Setting bubbleResource\n             */\n    \n            /**\n             * Constructs a new Chat_Setting.\n             * @memberof op_client\n             * @classdesc Represents a Chat_Setting.\n             * @implements IChat_Setting\n             * @constructor\n             * @param {op_client.IChat_Setting=} [properties] Properties to set\n             */\n            function Chat_Setting(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Chat_Setting textColor.\n             * @member {string} textColor\n             * @memberof op_client.Chat_Setting\n             * @instance\n             */\n            Chat_Setting.prototype.textColor = "";\n    \n            /**\n             * Chat_Setting textFontsize.\n             * @member {number} textFontsize\n             * @memberof op_client.Chat_Setting\n             * @instance\n             */\n            Chat_Setting.prototype.textFontsize = 0;\n    \n            /**\n             * Chat_Setting textPattern.\n             * @member {number} textPattern\n             * @memberof op_client.Chat_Setting\n             * @instance\n             */\n            Chat_Setting.prototype.textPattern = 0;\n    \n            /**\n             * Chat_Setting duration.\n             * @member {number} duration\n             * @memberof op_client.Chat_Setting\n             * @instance\n             */\n            Chat_Setting.prototype.duration = 0;\n    \n            /**\n             * Chat_Setting bubbleResource.\n             * @member {string} bubbleResource\n             * @memberof op_client.Chat_Setting\n             * @instance\n             */\n            Chat_Setting.prototype.bubbleResource = "";\n    \n            /**\n             * Creates a new Chat_Setting instance using the specified properties.\n             * @function create\n             * @memberof op_client.Chat_Setting\n             * @static\n             * @param {op_client.IChat_Setting=} [properties] Properties to set\n             * @returns {op_client.Chat_Setting} Chat_Setting instance\n             */\n            Chat_Setting.create = function create(properties) {\n                return new Chat_Setting(properties);\n            };\n    \n            /**\n             * Encodes the specified Chat_Setting message. Does not implicitly {@link op_client.Chat_Setting.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.Chat_Setting\n             * @static\n             * @param {op_client.IChat_Setting} message Chat_Setting message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Chat_Setting.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.textColor != null && message.hasOwnProperty("textColor"))\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.textColor);\n                if (message.textFontsize != null && message.hasOwnProperty("textFontsize"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.textFontsize);\n                if (message.textPattern != null && message.hasOwnProperty("textPattern"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.textPattern);\n                if (message.duration != null && message.hasOwnProperty("duration"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.duration);\n                if (message.bubbleResource != null && message.hasOwnProperty("bubbleResource"))\n                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.bubbleResource);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Chat_Setting message, length delimited. Does not implicitly {@link op_client.Chat_Setting.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.Chat_Setting\n             * @static\n             * @param {op_client.IChat_Setting} message Chat_Setting message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Chat_Setting.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a Chat_Setting message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.Chat_Setting\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.Chat_Setting} Chat_Setting\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Chat_Setting.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.Chat_Setting();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.textColor = reader.string();\n                        break;\n                    case 2:\n                        message.textFontsize = reader.int32();\n                        break;\n                    case 3:\n                        message.textPattern = reader.int32();\n                        break;\n                    case 4:\n                        message.duration = reader.int32();\n                        break;\n                    case 5:\n                        message.bubbleResource = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a Chat_Setting message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.Chat_Setting\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.Chat_Setting} Chat_Setting\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Chat_Setting.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a Chat_Setting message.\n             * @function verify\n             * @memberof op_client.Chat_Setting\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Chat_Setting.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.textColor != null && message.hasOwnProperty("textColor"))\n                    if (!$util.isString(message.textColor))\n                        return "textColor: string expected";\n                if (message.textFontsize != null && message.hasOwnProperty("textFontsize"))\n                    if (!$util.isInteger(message.textFontsize))\n                        return "textFontsize: integer expected";\n                if (message.textPattern != null && message.hasOwnProperty("textPattern"))\n                    if (!$util.isInteger(message.textPattern))\n                        return "textPattern: integer expected";\n                if (message.duration != null && message.hasOwnProperty("duration"))\n                    if (!$util.isInteger(message.duration))\n                        return "duration: integer expected";\n                if (message.bubbleResource != null && message.hasOwnProperty("bubbleResource"))\n                    if (!$util.isString(message.bubbleResource))\n                        return "bubbleResource: string expected";\n                return null;\n            };\n    \n            /**\n             * Creates a Chat_Setting message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.Chat_Setting\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.Chat_Setting} Chat_Setting\n             */\n            Chat_Setting.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.Chat_Setting)\n                    return object;\n                var message = new $root.op_client.Chat_Setting();\n                if (object.textColor != null)\n                    message.textColor = String(object.textColor);\n                if (object.textFontsize != null)\n                    message.textFontsize = object.textFontsize | 0;\n                if (object.textPattern != null)\n                    message.textPattern = object.textPattern | 0;\n                if (object.duration != null)\n                    message.duration = object.duration | 0;\n                if (object.bubbleResource != null)\n                    message.bubbleResource = String(object.bubbleResource);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a Chat_Setting message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.Chat_Setting\n             * @static\n             * @param {op_client.Chat_Setting} message Chat_Setting\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Chat_Setting.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.textColor = "";\n                    object.textFontsize = 0;\n                    object.textPattern = 0;\n                    object.duration = 0;\n                    object.bubbleResource = "";\n                }\n                if (message.textColor != null && message.hasOwnProperty("textColor"))\n                    object.textColor = message.textColor;\n                if (message.textFontsize != null && message.hasOwnProperty("textFontsize"))\n                    object.textFontsize = message.textFontsize;\n                if (message.textPattern != null && message.hasOwnProperty("textPattern"))\n                    object.textPattern = message.textPattern;\n                if (message.duration != null && message.hasOwnProperty("duration"))\n                    object.duration = message.duration;\n                if (message.bubbleResource != null && message.hasOwnProperty("bubbleResource"))\n                    object.bubbleResource = message.bubbleResource;\n                return object;\n            };\n    \n            /**\n             * Converts this Chat_Setting to JSON.\n             * @function toJSON\n             * @memberof op_client.Chat_Setting\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Chat_Setting.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Chat_Setting;\n        })();\n    \n        op_client.Chat_Bubble = (function() {\n    \n            /**\n             * Properties of a Chat_Bubble.\n             * @memberof op_client\n             * @interface IChat_Bubble\n             * @property {number} pattern Chat_Bubble pattern\n             * @property {op_client.IChat_Setting|null} [chatsetting] Chat_Bubble chatsetting\n             */\n    \n            /**\n             * Constructs a new Chat_Bubble.\n             * @memberof op_client\n             * @classdesc Represents a Chat_Bubble.\n             * @implements IChat_Bubble\n             * @constructor\n             * @param {op_client.IChat_Bubble=} [properties] Properties to set\n             */\n            function Chat_Bubble(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Chat_Bubble pattern.\n             * @member {number} pattern\n             * @memberof op_client.Chat_Bubble\n             * @instance\n             */\n            Chat_Bubble.prototype.pattern = 0;\n    \n            /**\n             * Chat_Bubble chatsetting.\n             * @member {op_client.IChat_Setting|null|undefined} chatsetting\n             * @memberof op_client.Chat_Bubble\n             * @instance\n             */\n            Chat_Bubble.prototype.chatsetting = null;\n    \n            /**\n             * Creates a new Chat_Bubble instance using the specified properties.\n             * @function create\n             * @memberof op_client.Chat_Bubble\n             * @static\n             * @param {op_client.IChat_Bubble=} [properties] Properties to set\n             * @returns {op_client.Chat_Bubble} Chat_Bubble instance\n             */\n            Chat_Bubble.create = function create(properties) {\n                return new Chat_Bubble(properties);\n            };\n    \n            /**\n             * Encodes the specified Chat_Bubble message. Does not implicitly {@link op_client.Chat_Bubble.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.Chat_Bubble\n             * @static\n             * @param {op_client.IChat_Bubble} message Chat_Bubble message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Chat_Bubble.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.pattern);\n                if (message.chatsetting != null && message.hasOwnProperty("chatsetting"))\n                    $root.op_client.Chat_Setting.encode(message.chatsetting, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Chat_Bubble message, length delimited. Does not implicitly {@link op_client.Chat_Bubble.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.Chat_Bubble\n             * @static\n             * @param {op_client.IChat_Bubble} message Chat_Bubble message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Chat_Bubble.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a Chat_Bubble message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.Chat_Bubble\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.Chat_Bubble} Chat_Bubble\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Chat_Bubble.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.Chat_Bubble();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.pattern = reader.int32();\n                        break;\n                    case 2:\n                        message.chatsetting = $root.op_client.Chat_Setting.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("pattern"))\n                    throw $util.ProtocolError("missing required \'pattern\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a Chat_Bubble message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.Chat_Bubble\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.Chat_Bubble} Chat_Bubble\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Chat_Bubble.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a Chat_Bubble message.\n             * @function verify\n             * @memberof op_client.Chat_Bubble\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Chat_Bubble.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.pattern))\n                    return "pattern: integer expected";\n                if (message.chatsetting != null && message.hasOwnProperty("chatsetting")) {\n                    var error = $root.op_client.Chat_Setting.verify(message.chatsetting);\n                    if (error)\n                        return "chatsetting." + error;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a Chat_Bubble message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.Chat_Bubble\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.Chat_Bubble} Chat_Bubble\n             */\n            Chat_Bubble.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.Chat_Bubble)\n                    return object;\n                var message = new $root.op_client.Chat_Bubble();\n                if (object.pattern != null)\n                    message.pattern = object.pattern | 0;\n                if (object.chatsetting != null) {\n                    if (typeof object.chatsetting !== "object")\n                        throw TypeError(".op_client.Chat_Bubble.chatsetting: object expected");\n                    message.chatsetting = $root.op_client.Chat_Setting.fromObject(object.chatsetting);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a Chat_Bubble message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.Chat_Bubble\n             * @static\n             * @param {op_client.Chat_Bubble} message Chat_Bubble\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Chat_Bubble.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.pattern = 0;\n                    object.chatsetting = null;\n                }\n                if (message.pattern != null && message.hasOwnProperty("pattern"))\n                    object.pattern = message.pattern;\n                if (message.chatsetting != null && message.hasOwnProperty("chatsetting"))\n                    object.chatsetting = $root.op_client.Chat_Setting.toObject(message.chatsetting, options);\n                return object;\n            };\n    \n            /**\n             * Converts this Chat_Bubble to JSON.\n             * @function toJSON\n             * @memberof op_client.Chat_Bubble\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Chat_Bubble.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Chat_Bubble;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHAT = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_RES_CLIENT_CHAT.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_RES_CLIENT_CHAT\n             * @property {op_def.ChatChannel} chatChannel OP_VIRTUAL_WORLD_RES_CLIENT_CHAT chatChannel\n             * @property {number|null} [chatOtheractor] OP_VIRTUAL_WORLD_RES_CLIENT_CHAT chatOtheractor\n             * @property {string} chatContext OP_VIRTUAL_WORLD_RES_CLIENT_CHAT chatContext\n             * @property {number|null} [chatSenderid] OP_VIRTUAL_WORLD_RES_CLIENT_CHAT chatSenderid\n             * @property {op_client.IChat_Bubble|null} [chatBubble] OP_VIRTUAL_WORLD_RES_CLIENT_CHAT chatBubble\n             * @property {op_client.IChat_Setting|null} [chatSetting] OP_VIRTUAL_WORLD_RES_CLIENT_CHAT chatSetting\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_RES_CLIENT_CHAT.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_RES_CLIENT_CHAT.\n             * @implements IOP_VIRTUAL_WORLD_RES_CLIENT_CHAT\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_CHAT=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_RES_CLIENT_CHAT(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_CHAT chatChannel.\n             * @member {op_def.ChatChannel} chatChannel\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHAT\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_CHAT.prototype.chatChannel = 0;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_CHAT chatOtheractor.\n             * @member {number} chatOtheractor\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHAT\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_CHAT.prototype.chatOtheractor = 0;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_CHAT chatContext.\n             * @member {string} chatContext\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHAT\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_CHAT.prototype.chatContext = "";\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_CHAT chatSenderid.\n             * @member {number} chatSenderid\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHAT\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_CHAT.prototype.chatSenderid = 0;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_CHAT chatBubble.\n             * @member {op_client.IChat_Bubble|null|undefined} chatBubble\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHAT\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_CHAT.prototype.chatBubble = null;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_CHAT chatSetting.\n             * @member {op_client.IChat_Setting|null|undefined} chatSetting\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHAT\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_CHAT.prototype.chatSetting = null;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_RES_CLIENT_CHAT instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHAT\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_CHAT=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHAT} OP_VIRTUAL_WORLD_RES_CLIENT_CHAT instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_CHAT.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_RES_CLIENT_CHAT(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_CHAT message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHAT.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHAT\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_CHAT} message OP_VIRTUAL_WORLD_RES_CLIENT_CHAT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_CHAT.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.chatChannel);\n                if (message.chatOtheractor != null && message.hasOwnProperty("chatOtheractor"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.chatOtheractor);\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.chatContext);\n                if (message.chatSenderid != null && message.hasOwnProperty("chatSenderid"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.chatSenderid);\n                if (message.chatBubble != null && message.hasOwnProperty("chatBubble"))\n                    $root.op_client.Chat_Bubble.encode(message.chatBubble, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n                if (message.chatSetting != null && message.hasOwnProperty("chatSetting"))\n                    $root.op_client.Chat_Setting.encode(message.chatSetting, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_CHAT message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHAT.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHAT\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_CHAT} message OP_VIRTUAL_WORLD_RES_CLIENT_CHAT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_CHAT.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_CHAT message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHAT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHAT} OP_VIRTUAL_WORLD_RES_CLIENT_CHAT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_CHAT.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHAT();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.chatChannel = reader.int32();\n                        break;\n                    case 2:\n                        message.chatOtheractor = reader.int32();\n                        break;\n                    case 3:\n                        message.chatContext = reader.string();\n                        break;\n                    case 4:\n                        message.chatSenderid = reader.int32();\n                        break;\n                    case 5:\n                        message.chatBubble = $root.op_client.Chat_Bubble.decode(reader, reader.uint32());\n                        break;\n                    case 6:\n                        message.chatSetting = $root.op_client.Chat_Setting.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("chatChannel"))\n                    throw $util.ProtocolError("missing required \'chatChannel\'", { instance: message });\n                if (!message.hasOwnProperty("chatContext"))\n                    throw $util.ProtocolError("missing required \'chatContext\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_CHAT message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHAT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHAT} OP_VIRTUAL_WORLD_RES_CLIENT_CHAT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_CHAT.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_RES_CLIENT_CHAT message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHAT\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_CHAT.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                switch (message.chatChannel) {\n                default:\n                    return "chatChannel: enum value expected";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                    break;\n                }\n                if (message.chatOtheractor != null && message.hasOwnProperty("chatOtheractor"))\n                    if (!$util.isInteger(message.chatOtheractor))\n                        return "chatOtheractor: integer expected";\n                if (!$util.isString(message.chatContext))\n                    return "chatContext: string expected";\n                if (message.chatSenderid != null && message.hasOwnProperty("chatSenderid"))\n                    if (!$util.isInteger(message.chatSenderid))\n                        return "chatSenderid: integer expected";\n                if (message.chatBubble != null && message.hasOwnProperty("chatBubble")) {\n                    var error = $root.op_client.Chat_Bubble.verify(message.chatBubble);\n                    if (error)\n                        return "chatBubble." + error;\n                }\n                if (message.chatSetting != null && message.hasOwnProperty("chatSetting")) {\n                    var error = $root.op_client.Chat_Setting.verify(message.chatSetting);\n                    if (error)\n                        return "chatSetting." + error;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_RES_CLIENT_CHAT message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHAT\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHAT} OP_VIRTUAL_WORLD_RES_CLIENT_CHAT\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_CHAT.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHAT)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHAT();\n                switch (object.chatChannel) {\n                case "CurrentScene":\n                case 0:\n                    message.chatChannel = 0;\n                    break;\n                case "World":\n                case 1:\n                    message.chatChannel = 1;\n                    break;\n                case "Team":\n                case 2:\n                    message.chatChannel = 2;\n                    break;\n                case "Private":\n                case 3:\n                    message.chatChannel = 3;\n                    break;\n                case "System":\n                case 4:\n                    message.chatChannel = 4;\n                    break;\n                }\n                if (object.chatOtheractor != null)\n                    message.chatOtheractor = object.chatOtheractor | 0;\n                if (object.chatContext != null)\n                    message.chatContext = String(object.chatContext);\n                if (object.chatSenderid != null)\n                    message.chatSenderid = object.chatSenderid | 0;\n                if (object.chatBubble != null) {\n                    if (typeof object.chatBubble !== "object")\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHAT.chatBubble: object expected");\n                    message.chatBubble = $root.op_client.Chat_Bubble.fromObject(object.chatBubble);\n                }\n                if (object.chatSetting != null) {\n                    if (typeof object.chatSetting !== "object")\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHAT.chatSetting: object expected");\n                    message.chatSetting = $root.op_client.Chat_Setting.fromObject(object.chatSetting);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_RES_CLIENT_CHAT message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHAT\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHAT} message OP_VIRTUAL_WORLD_RES_CLIENT_CHAT\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_CHAT.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.chatChannel = options.enums === String ? "CurrentScene" : 0;\n                    object.chatOtheractor = 0;\n                    object.chatContext = "";\n                    object.chatSenderid = 0;\n                    object.chatBubble = null;\n                    object.chatSetting = null;\n                }\n                if (message.chatChannel != null && message.hasOwnProperty("chatChannel"))\n                    object.chatChannel = options.enums === String ? $root.op_def.ChatChannel[message.chatChannel] : message.chatChannel;\n                if (message.chatOtheractor != null && message.hasOwnProperty("chatOtheractor"))\n                    object.chatOtheractor = message.chatOtheractor;\n                if (message.chatContext != null && message.hasOwnProperty("chatContext"))\n                    object.chatContext = message.chatContext;\n                if (message.chatSenderid != null && message.hasOwnProperty("chatSenderid"))\n                    object.chatSenderid = message.chatSenderid;\n                if (message.chatBubble != null && message.hasOwnProperty("chatBubble"))\n                    object.chatBubble = $root.op_client.Chat_Bubble.toObject(message.chatBubble, options);\n                if (message.chatSetting != null && message.hasOwnProperty("chatSetting"))\n                    object.chatSetting = $root.op_client.Chat_Setting.toObject(message.chatSetting, options);\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_RES_CLIENT_CHAT to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_CHAT\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_CHAT.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_RES_CLIENT_CHAT;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_RES_CLIENT_NOTICE\n             * @property {string} noticeContext OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE noticeContext\n             * @property {op_client.IChat_Setting|null} [chatsetting] OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE chatsetting\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE.\n             * @implements IOP_VIRTUAL_WORLD_RES_CLIENT_NOTICE\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_NOTICE=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE noticeContext.\n             * @member {string} noticeContext\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE.prototype.noticeContext = "";\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE chatsetting.\n             * @member {op_client.IChat_Setting|null|undefined} chatsetting\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE.prototype.chatsetting = null;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_NOTICE=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE} OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_NOTICE} message OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.noticeContext);\n                if (message.chatsetting != null && message.hasOwnProperty("chatsetting"))\n                    $root.op_client.Chat_Setting.encode(message.chatsetting, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_NOTICE} message OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE} OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.noticeContext = reader.string();\n                        break;\n                    case 2:\n                        message.chatsetting = $root.op_client.Chat_Setting.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("noticeContext"))\n                    throw $util.ProtocolError("missing required \'noticeContext\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE} OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.noticeContext))\n                    return "noticeContext: string expected";\n                if (message.chatsetting != null && message.hasOwnProperty("chatsetting")) {\n                    var error = $root.op_client.Chat_Setting.verify(message.chatsetting);\n                    if (error)\n                        return "chatsetting." + error;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE} OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE();\n                if (object.noticeContext != null)\n                    message.noticeContext = String(object.noticeContext);\n                if (object.chatsetting != null) {\n                    if (typeof object.chatsetting !== "object")\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE.chatsetting: object expected");\n                    message.chatsetting = $root.op_client.Chat_Setting.fromObject(object.chatsetting);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE} message OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.noticeContext = "";\n                    object.chatsetting = null;\n                }\n                if (message.noticeContext != null && message.hasOwnProperty("noticeContext"))\n                    object.noticeContext = message.noticeContext;\n                if (message.chatsetting != null && message.hasOwnProperty("chatsetting"))\n                    object.chatsetting = $root.op_client.Chat_Setting.toObject(message.chatsetting, options);\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_RES_CLIENT_NOTICE;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE\n             * @property {string} context OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE context\n             * @property {number} receiverid OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE receiverid\n             * @property {op_client.IChat_Setting|null} [chatsetting] OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE chatsetting\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE.\n             * @memberof op_client\n             * @classdesc 只有气泡的消息\n             * @implements IOP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE context.\n             * @member {string} context\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE.prototype.context = "";\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE receiverid.\n             * @member {number} receiverid\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE.prototype.receiverid = 0;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE chatsetting.\n             * @member {op_client.IChat_Setting|null|undefined} chatsetting\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE.prototype.chatsetting = null;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE} OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE} message OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.context);\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.receiverid);\n                if (message.chatsetting != null && message.hasOwnProperty("chatsetting"))\n                    $root.op_client.Chat_Setting.encode(message.chatsetting, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE} message OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE} OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.context = reader.string();\n                        break;\n                    case 2:\n                        message.receiverid = reader.int32();\n                        break;\n                    case 3:\n                        message.chatsetting = $root.op_client.Chat_Setting.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("context"))\n                    throw $util.ProtocolError("missing required \'context\'", { instance: message });\n                if (!message.hasOwnProperty("receiverid"))\n                    throw $util.ProtocolError("missing required \'receiverid\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE} OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.context))\n                    return "context: string expected";\n                if (!$util.isInteger(message.receiverid))\n                    return "receiverid: integer expected";\n                if (message.chatsetting != null && message.hasOwnProperty("chatsetting")) {\n                    var error = $root.op_client.Chat_Setting.verify(message.chatsetting);\n                    if (error)\n                        return "chatsetting." + error;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE} OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE();\n                if (object.context != null)\n                    message.context = String(object.context);\n                if (object.receiverid != null)\n                    message.receiverid = object.receiverid | 0;\n                if (object.chatsetting != null) {\n                    if (typeof object.chatsetting !== "object")\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE.chatsetting: object expected");\n                    message.chatsetting = $root.op_client.Chat_Setting.fromObject(object.chatsetting);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE} message OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.context = "";\n                    object.receiverid = 0;\n                    object.chatsetting = null;\n                }\n                if (message.context != null && message.hasOwnProperty("context"))\n                    object.context = message.context;\n                if (message.receiverid != null && message.hasOwnProperty("receiverid"))\n                    object.receiverid = message.receiverid;\n                if (message.chatsetting != null && message.hasOwnProperty("chatsetting"))\n                    object.chatsetting = $root.op_client.Chat_Setting.toObject(message.chatsetting, options);\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN\n             * @property {number} receiverid OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN receiverid\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN.\n             * @memberof op_client\n             * @classdesc 只有气泡的清除消息\n             * @implements IOP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN receiverid.\n             * @member {number} receiverid\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN.prototype.receiverid = 0;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN} OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN} message OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.receiverid);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN} message OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN} OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.receiverid = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("receiverid"))\n                    throw $util.ProtocolError("missing required \'receiverid\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN} OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.receiverid))\n                    return "receiverid: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN} OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN();\n                if (object.receiverid != null)\n                    message.receiverid = object.receiverid | 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN} message OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.receiverid = 0;\n                if (message.receiverid != null && message.hasOwnProperty("receiverid"))\n                    object.receiverid = message.receiverid;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_RES_CLIENT_ONLY_BUBBLE_CLEAN;\n        })();\n    \n        op_client.ShortcutKey = (function() {\n    \n            /**\n             * Properties of a ShortcutKey.\n             * @memberof op_client\n             * @interface IShortcutKey\n             * @property {number|null} [keycode] ShortcutKey keycode\n             * @property {number|null} [bindtype] ShortcutKey bindtype\n             */\n    \n            /**\n             * Constructs a new ShortcutKey.\n             * @memberof op_client\n             * @classdesc Represents a ShortcutKey.\n             * @implements IShortcutKey\n             * @constructor\n             * @param {op_client.IShortcutKey=} [properties] Properties to set\n             */\n            function ShortcutKey(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * ShortcutKey keycode.\n             * @member {number} keycode\n             * @memberof op_client.ShortcutKey\n             * @instance\n             */\n            ShortcutKey.prototype.keycode = 0;\n    \n            /**\n             * ShortcutKey bindtype.\n             * @member {number} bindtype\n             * @memberof op_client.ShortcutKey\n             * @instance\n             */\n            ShortcutKey.prototype.bindtype = 0;\n    \n            /**\n             * Creates a new ShortcutKey instance using the specified properties.\n             * @function create\n             * @memberof op_client.ShortcutKey\n             * @static\n             * @param {op_client.IShortcutKey=} [properties] Properties to set\n             * @returns {op_client.ShortcutKey} ShortcutKey instance\n             */\n            ShortcutKey.create = function create(properties) {\n                return new ShortcutKey(properties);\n            };\n    \n            /**\n             * Encodes the specified ShortcutKey message. Does not implicitly {@link op_client.ShortcutKey.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.ShortcutKey\n             * @static\n             * @param {op_client.IShortcutKey} message ShortcutKey message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ShortcutKey.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.keycode != null && message.hasOwnProperty("keycode"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.keycode);\n                if (message.bindtype != null && message.hasOwnProperty("bindtype"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.bindtype);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified ShortcutKey message, length delimited. Does not implicitly {@link op_client.ShortcutKey.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.ShortcutKey\n             * @static\n             * @param {op_client.IShortcutKey} message ShortcutKey message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ShortcutKey.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a ShortcutKey message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.ShortcutKey\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.ShortcutKey} ShortcutKey\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ShortcutKey.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.ShortcutKey();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.keycode = reader.int32();\n                        break;\n                    case 2:\n                        message.bindtype = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a ShortcutKey message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.ShortcutKey\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.ShortcutKey} ShortcutKey\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ShortcutKey.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a ShortcutKey message.\n             * @function verify\n             * @memberof op_client.ShortcutKey\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            ShortcutKey.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.keycode != null && message.hasOwnProperty("keycode"))\n                    if (!$util.isInteger(message.keycode))\n                        return "keycode: integer expected";\n                if (message.bindtype != null && message.hasOwnProperty("bindtype"))\n                    if (!$util.isInteger(message.bindtype))\n                        return "bindtype: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a ShortcutKey message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.ShortcutKey\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.ShortcutKey} ShortcutKey\n             */\n            ShortcutKey.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.ShortcutKey)\n                    return object;\n                var message = new $root.op_client.ShortcutKey();\n                if (object.keycode != null)\n                    message.keycode = object.keycode | 0;\n                if (object.bindtype != null)\n                    message.bindtype = object.bindtype | 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a ShortcutKey message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.ShortcutKey\n             * @static\n             * @param {op_client.ShortcutKey} message ShortcutKey\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            ShortcutKey.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.keycode = 0;\n                    object.bindtype = 0;\n                }\n                if (message.keycode != null && message.hasOwnProperty("keycode"))\n                    object.keycode = message.keycode;\n                if (message.bindtype != null && message.hasOwnProperty("bindtype"))\n                    object.bindtype = message.bindtype;\n                return object;\n            };\n    \n            /**\n             * Converts this ShortcutKey to JSON.\n             * @function toJSON\n             * @memberof op_client.ShortcutKey\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            ShortcutKey.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return ShortcutKey;\n        })();\n    \n        op_client.Actor = (function() {\n    \n            /**\n             * Properties of an Actor.\n             * @memberof op_client\n             * @interface IActor\n             * @property {number} id Actor id\n             * @property {string|null} [name] Actor name\n             * @property {number|null} [maxNum] Actor maxNum\n             * @property {string|null} [camp] Actor camp\n             * @property {op_gameconfig.IAvatar|null} [avatar] Actor avatar\n             * @property {Array.<op_gameconfig.IAttribute>|null} [attributes] Actor attributes\n             * @property {op_gameconfig.IPackage|null} ["package"] Actor package\n             * @property {number|null} [sceneId] Actor sceneId\n             * @property {number|null} [x] Actor x\n             * @property {number|null} [y] Actor y\n             * @property {number|null} [z] Actor z\n             * @property {number|null} [avatarDir] Actor avatarDir\n             * @property {string|null} [walkableArea] Actor walkableArea\n             * @property {string|null} [collisionArea] Actor collisionArea\n             * @property {Array.<number>|null} [originPoint] Actor originPoint\n             * @property {Array.<number>|null} [walkOriginPoint] Actor walkOriginPoint\n             * @property {string|null} [nickname] Actor nickname\n             * @property {Array.<op_gameconfig.ISlot>|null} [slot] Actor slot\n             * @property {number} uuid Actor uuid\n             * @property {boolean|null} [isInCurrentSceneVoiceRoom] Actor isInCurrentSceneVoiceRoom\n             * @property {Array.<op_def.IBadgeCard>|null} [displayBadgeCards] Actor displayBadgeCards\n             * @property {string|null} [platformId] Actor platformId\n             */\n    \n            /**\n             * Constructs a new Actor.\n             * @memberof op_client\n             * @classdesc Represents an Actor.\n             * @implements IActor\n             * @constructor\n             * @param {op_client.IActor=} [properties] Properties to set\n             */\n            function Actor(properties) {\n                this.attributes = [];\n                this.originPoint = [];\n                this.walkOriginPoint = [];\n                this.slot = [];\n                this.displayBadgeCards = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Actor id.\n             * @member {number} id\n             * @memberof op_client.Actor\n             * @instance\n             */\n            Actor.prototype.id = 0;\n    \n            /**\n             * Actor name.\n             * @member {string} name\n             * @memberof op_client.Actor\n             * @instance\n             */\n            Actor.prototype.name = "";\n    \n            /**\n             * Actor maxNum.\n             * @member {number} maxNum\n             * @memberof op_client.Actor\n             * @instance\n             */\n            Actor.prototype.maxNum = 20;\n    \n            /**\n             * Actor camp.\n             * @member {string} camp\n             * @memberof op_client.Actor\n             * @instance\n             */\n            Actor.prototype.camp = "";\n    \n            /**\n             * Actor avatar.\n             * @member {op_gameconfig.IAvatar|null|undefined} avatar\n             * @memberof op_client.Actor\n             * @instance\n             */\n            Actor.prototype.avatar = null;\n    \n            /**\n             * Actor attributes.\n             * @member {Array.<op_gameconfig.IAttribute>} attributes\n             * @memberof op_client.Actor\n             * @instance\n             */\n            Actor.prototype.attributes = $util.emptyArray;\n    \n            /**\n             * Actor package.\n             * @member {op_gameconfig.IPackage|null|undefined} package\n             * @memberof op_client.Actor\n             * @instance\n             */\n            Actor.prototype["package"] = null;\n    \n            /**\n             * Actor sceneId.\n             * @member {number} sceneId\n             * @memberof op_client.Actor\n             * @instance\n             */\n            Actor.prototype.sceneId = 0;\n    \n            /**\n             * Actor x.\n             * @member {number} x\n             * @memberof op_client.Actor\n             * @instance\n             */\n            Actor.prototype.x = 0;\n    \n            /**\n             * Actor y.\n             * @member {number} y\n             * @memberof op_client.Actor\n             * @instance\n             */\n            Actor.prototype.y = 0;\n    \n            /**\n             * Actor z.\n             * @member {number} z\n             * @memberof op_client.Actor\n             * @instance\n             */\n            Actor.prototype.z = 0;\n    \n            /**\n             * Actor avatarDir.\n             * @member {number} avatarDir\n             * @memberof op_client.Actor\n             * @instance\n             */\n            Actor.prototype.avatarDir = 0;\n    \n            /**\n             * Actor walkableArea.\n             * @member {string} walkableArea\n             * @memberof op_client.Actor\n             * @instance\n             */\n            Actor.prototype.walkableArea = "";\n    \n            /**\n             * Actor collisionArea.\n             * @member {string} collisionArea\n             * @memberof op_client.Actor\n             * @instance\n             */\n            Actor.prototype.collisionArea = "";\n    \n            /**\n             * Actor originPoint.\n             * @member {Array.<number>} originPoint\n             * @memberof op_client.Actor\n             * @instance\n             */\n            Actor.prototype.originPoint = $util.emptyArray;\n    \n            /**\n             * Actor walkOriginPoint.\n             * @member {Array.<number>} walkOriginPoint\n             * @memberof op_client.Actor\n             * @instance\n             */\n            Actor.prototype.walkOriginPoint = $util.emptyArray;\n    \n            /**\n             * Actor nickname.\n             * @member {string} nickname\n             * @memberof op_client.Actor\n             * @instance\n             */\n            Actor.prototype.nickname = "";\n    \n            /**\n             * Actor slot.\n             * @member {Array.<op_gameconfig.ISlot>} slot\n             * @memberof op_client.Actor\n             * @instance\n             */\n            Actor.prototype.slot = $util.emptyArray;\n    \n            /**\n             * Actor uuid.\n             * @member {number} uuid\n             * @memberof op_client.Actor\n             * @instance\n             */\n            Actor.prototype.uuid = 0;\n    \n            /**\n             * Actor isInCurrentSceneVoiceRoom.\n             * @member {boolean} isInCurrentSceneVoiceRoom\n             * @memberof op_client.Actor\n             * @instance\n             */\n            Actor.prototype.isInCurrentSceneVoiceRoom = false;\n    \n            /**\n             * Actor displayBadgeCards.\n             * @member {Array.<op_def.IBadgeCard>} displayBadgeCards\n             * @memberof op_client.Actor\n             * @instance\n             */\n            Actor.prototype.displayBadgeCards = $util.emptyArray;\n    \n            /**\n             * Actor platformId.\n             * @member {string} platformId\n             * @memberof op_client.Actor\n             * @instance\n             */\n            Actor.prototype.platformId = "";\n    \n            /**\n             * Creates a new Actor instance using the specified properties.\n             * @function create\n             * @memberof op_client.Actor\n             * @static\n             * @param {op_client.IActor=} [properties] Properties to set\n             * @returns {op_client.Actor} Actor instance\n             */\n            Actor.create = function create(properties) {\n                return new Actor(properties);\n            };\n    \n            /**\n             * Encodes the specified Actor message. Does not implicitly {@link op_client.Actor.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.Actor\n             * @static\n             * @param {op_client.IActor} message Actor message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Actor.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.id);\n                if (message.name != null && message.hasOwnProperty("name"))\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);\n                if (message.maxNum != null && message.hasOwnProperty("maxNum"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.maxNum);\n                if (message.camp != null && message.hasOwnProperty("camp"))\n                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.camp);\n                if (message.avatar != null && message.hasOwnProperty("avatar"))\n                    $root.op_gameconfig.Avatar.encode(message.avatar, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n                if (message.attributes != null && message.attributes.length)\n                    for (var i = 0; i < message.attributes.length; ++i)\n                        $root.op_gameconfig.Attribute.encode(message.attributes[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n                if (message["package"] != null && message.hasOwnProperty("package"))\n                    $root.op_gameconfig.Package.encode(message["package"], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n                if (message.sceneId != null && message.hasOwnProperty("sceneId"))\n                    writer.uint32(/* id 8, wireType 0 =*/64).int32(message.sceneId);\n                if (message.x != null && message.hasOwnProperty("x"))\n                    writer.uint32(/* id 9, wireType 0 =*/72).int32(message.x);\n                if (message.y != null && message.hasOwnProperty("y"))\n                    writer.uint32(/* id 10, wireType 0 =*/80).int32(message.y);\n                if (message.z != null && message.hasOwnProperty("z"))\n                    writer.uint32(/* id 11, wireType 0 =*/88).int32(message.z);\n                if (message.collisionArea != null && message.hasOwnProperty("collisionArea"))\n                    writer.uint32(/* id 12, wireType 2 =*/98).string(message.collisionArea);\n                if (message.avatarDir != null && message.hasOwnProperty("avatarDir"))\n                    writer.uint32(/* id 13, wireType 0 =*/104).int32(message.avatarDir);\n                if (message.walkableArea != null && message.hasOwnProperty("walkableArea"))\n                    writer.uint32(/* id 14, wireType 2 =*/114).string(message.walkableArea);\n                if (message.originPoint != null && message.originPoint.length)\n                    for (var i = 0; i < message.originPoint.length; ++i)\n                        writer.uint32(/* id 15, wireType 0 =*/120).int32(message.originPoint[i]);\n                if (message.walkOriginPoint != null && message.walkOriginPoint.length)\n                    for (var i = 0; i < message.walkOriginPoint.length; ++i)\n                        writer.uint32(/* id 16, wireType 0 =*/128).int32(message.walkOriginPoint[i]);\n                if (message.nickname != null && message.hasOwnProperty("nickname"))\n                    writer.uint32(/* id 17, wireType 2 =*/138).string(message.nickname);\n                if (message.slot != null && message.slot.length)\n                    for (var i = 0; i < message.slot.length; ++i)\n                        $root.op_gameconfig.Slot.encode(message.slot[i], writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();\n                writer.uint32(/* id 19, wireType 0 =*/152).int32(message.uuid);\n                if (message.isInCurrentSceneVoiceRoom != null && message.hasOwnProperty("isInCurrentSceneVoiceRoom"))\n                    writer.uint32(/* id 20, wireType 0 =*/160).bool(message.isInCurrentSceneVoiceRoom);\n                if (message.displayBadgeCards != null && message.displayBadgeCards.length)\n                    for (var i = 0; i < message.displayBadgeCards.length; ++i)\n                        $root.op_def.BadgeCard.encode(message.displayBadgeCards[i], writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();\n                if (message.platformId != null && message.hasOwnProperty("platformId"))\n                    writer.uint32(/* id 22, wireType 2 =*/178).string(message.platformId);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Actor message, length delimited. Does not implicitly {@link op_client.Actor.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.Actor\n             * @static\n             * @param {op_client.IActor} message Actor message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Actor.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes an Actor message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.Actor\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.Actor} Actor\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Actor.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.Actor();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.id = reader.int32();\n                        break;\n                    case 2:\n                        message.name = reader.string();\n                        break;\n                    case 3:\n                        message.maxNum = reader.int32();\n                        break;\n                    case 4:\n                        message.camp = reader.string();\n                        break;\n                    case 5:\n                        message.avatar = $root.op_gameconfig.Avatar.decode(reader, reader.uint32());\n                        break;\n                    case 6:\n                        if (!(message.attributes && message.attributes.length))\n                            message.attributes = [];\n                        message.attributes.push($root.op_gameconfig.Attribute.decode(reader, reader.uint32()));\n                        break;\n                    case 7:\n                        message["package"] = $root.op_gameconfig.Package.decode(reader, reader.uint32());\n                        break;\n                    case 8:\n                        message.sceneId = reader.int32();\n                        break;\n                    case 9:\n                        message.x = reader.int32();\n                        break;\n                    case 10:\n                        message.y = reader.int32();\n                        break;\n                    case 11:\n                        message.z = reader.int32();\n                        break;\n                    case 13:\n                        message.avatarDir = reader.int32();\n                        break;\n                    case 14:\n                        message.walkableArea = reader.string();\n                        break;\n                    case 12:\n                        message.collisionArea = reader.string();\n                        break;\n                    case 15:\n                        if (!(message.originPoint && message.originPoint.length))\n                            message.originPoint = [];\n                        if ((tag & 7) === 2) {\n                            var end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2)\n                                message.originPoint.push(reader.int32());\n                        } else\n                            message.originPoint.push(reader.int32());\n                        break;\n                    case 16:\n                        if (!(message.walkOriginPoint && message.walkOriginPoint.length))\n                            message.walkOriginPoint = [];\n                        if ((tag & 7) === 2) {\n                            var end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2)\n                                message.walkOriginPoint.push(reader.int32());\n                        } else\n                            message.walkOriginPoint.push(reader.int32());\n                        break;\n                    case 17:\n                        message.nickname = reader.string();\n                        break;\n                    case 18:\n                        if (!(message.slot && message.slot.length))\n                            message.slot = [];\n                        message.slot.push($root.op_gameconfig.Slot.decode(reader, reader.uint32()));\n                        break;\n                    case 19:\n                        message.uuid = reader.int32();\n                        break;\n                    case 20:\n                        message.isInCurrentSceneVoiceRoom = reader.bool();\n                        break;\n                    case 21:\n                        if (!(message.displayBadgeCards && message.displayBadgeCards.length))\n                            message.displayBadgeCards = [];\n                        message.displayBadgeCards.push($root.op_def.BadgeCard.decode(reader, reader.uint32()));\n                        break;\n                    case 22:\n                        message.platformId = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("id"))\n                    throw $util.ProtocolError("missing required \'id\'", { instance: message });\n                if (!message.hasOwnProperty("uuid"))\n                    throw $util.ProtocolError("missing required \'uuid\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes an Actor message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.Actor\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.Actor} Actor\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Actor.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies an Actor message.\n             * @function verify\n             * @memberof op_client.Actor\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Actor.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.id))\n                    return "id: integer expected";\n                if (message.name != null && message.hasOwnProperty("name"))\n                    if (!$util.isString(message.name))\n                        return "name: string expected";\n                if (message.maxNum != null && message.hasOwnProperty("maxNum"))\n                    if (!$util.isInteger(message.maxNum))\n                        return "maxNum: integer expected";\n                if (message.camp != null && message.hasOwnProperty("camp"))\n                    if (!$util.isString(message.camp))\n                        return "camp: string expected";\n                if (message.avatar != null && message.hasOwnProperty("avatar")) {\n                    var error = $root.op_gameconfig.Avatar.verify(message.avatar);\n                    if (error)\n                        return "avatar." + error;\n                }\n                if (message.attributes != null && message.hasOwnProperty("attributes")) {\n                    if (!Array.isArray(message.attributes))\n                        return "attributes: array expected";\n                    for (var i = 0; i < message.attributes.length; ++i) {\n                        var error = $root.op_gameconfig.Attribute.verify(message.attributes[i]);\n                        if (error)\n                            return "attributes." + error;\n                    }\n                }\n                if (message["package"] != null && message.hasOwnProperty("package")) {\n                    var error = $root.op_gameconfig.Package.verify(message["package"]);\n                    if (error)\n                        return "package." + error;\n                }\n                if (message.sceneId != null && message.hasOwnProperty("sceneId"))\n                    if (!$util.isInteger(message.sceneId))\n                        return "sceneId: integer expected";\n                if (message.x != null && message.hasOwnProperty("x"))\n                    if (!$util.isInteger(message.x))\n                        return "x: integer expected";\n                if (message.y != null && message.hasOwnProperty("y"))\n                    if (!$util.isInteger(message.y))\n                        return "y: integer expected";\n                if (message.z != null && message.hasOwnProperty("z"))\n                    if (!$util.isInteger(message.z))\n                        return "z: integer expected";\n                if (message.avatarDir != null && message.hasOwnProperty("avatarDir"))\n                    if (!$util.isInteger(message.avatarDir))\n                        return "avatarDir: integer expected";\n                if (message.walkableArea != null && message.hasOwnProperty("walkableArea"))\n                    if (!$util.isString(message.walkableArea))\n                        return "walkableArea: string expected";\n                if (message.collisionArea != null && message.hasOwnProperty("collisionArea"))\n                    if (!$util.isString(message.collisionArea))\n                        return "collisionArea: string expected";\n                if (message.originPoint != null && message.hasOwnProperty("originPoint")) {\n                    if (!Array.isArray(message.originPoint))\n                        return "originPoint: array expected";\n                    for (var i = 0; i < message.originPoint.length; ++i)\n                        if (!$util.isInteger(message.originPoint[i]))\n                            return "originPoint: integer[] expected";\n                }\n                if (message.walkOriginPoint != null && message.hasOwnProperty("walkOriginPoint")) {\n                    if (!Array.isArray(message.walkOriginPoint))\n                        return "walkOriginPoint: array expected";\n                    for (var i = 0; i < message.walkOriginPoint.length; ++i)\n                        if (!$util.isInteger(message.walkOriginPoint[i]))\n                            return "walkOriginPoint: integer[] expected";\n                }\n                if (message.nickname != null && message.hasOwnProperty("nickname"))\n                    if (!$util.isString(message.nickname))\n                        return "nickname: string expected";\n                if (message.slot != null && message.hasOwnProperty("slot")) {\n                    if (!Array.isArray(message.slot))\n                        return "slot: array expected";\n                    for (var i = 0; i < message.slot.length; ++i) {\n                        var error = $root.op_gameconfig.Slot.verify(message.slot[i]);\n                        if (error)\n                            return "slot." + error;\n                    }\n                }\n                if (!$util.isInteger(message.uuid))\n                    return "uuid: integer expected";\n                if (message.isInCurrentSceneVoiceRoom != null && message.hasOwnProperty("isInCurrentSceneVoiceRoom"))\n                    if (typeof message.isInCurrentSceneVoiceRoom !== "boolean")\n                        return "isInCurrentSceneVoiceRoom: boolean expected";\n                if (message.displayBadgeCards != null && message.hasOwnProperty("displayBadgeCards")) {\n                    if (!Array.isArray(message.displayBadgeCards))\n                        return "displayBadgeCards: array expected";\n                    for (var i = 0; i < message.displayBadgeCards.length; ++i) {\n                        var error = $root.op_def.BadgeCard.verify(message.displayBadgeCards[i]);\n                        if (error)\n                            return "displayBadgeCards." + error;\n                    }\n                }\n                if (message.platformId != null && message.hasOwnProperty("platformId"))\n                    if (!$util.isString(message.platformId))\n                        return "platformId: string expected";\n                return null;\n            };\n    \n            /**\n             * Creates an Actor message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.Actor\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.Actor} Actor\n             */\n            Actor.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.Actor)\n                    return object;\n                var message = new $root.op_client.Actor();\n                if (object.id != null)\n                    message.id = object.id | 0;\n                if (object.name != null)\n                    message.name = String(object.name);\n                if (object.maxNum != null)\n                    message.maxNum = object.maxNum | 0;\n                if (object.camp != null)\n                    message.camp = String(object.camp);\n                if (object.avatar != null) {\n                    if (typeof object.avatar !== "object")\n                        throw TypeError(".op_client.Actor.avatar: object expected");\n                    message.avatar = $root.op_gameconfig.Avatar.fromObject(object.avatar);\n                }\n                if (object.attributes) {\n                    if (!Array.isArray(object.attributes))\n                        throw TypeError(".op_client.Actor.attributes: array expected");\n                    message.attributes = [];\n                    for (var i = 0; i < object.attributes.length; ++i) {\n                        if (typeof object.attributes[i] !== "object")\n                            throw TypeError(".op_client.Actor.attributes: object expected");\n                        message.attributes[i] = $root.op_gameconfig.Attribute.fromObject(object.attributes[i]);\n                    }\n                }\n                if (object["package"] != null) {\n                    if (typeof object["package"] !== "object")\n                        throw TypeError(".op_client.Actor.package: object expected");\n                    message["package"] = $root.op_gameconfig.Package.fromObject(object["package"]);\n                }\n                if (object.sceneId != null)\n                    message.sceneId = object.sceneId | 0;\n                if (object.x != null)\n                    message.x = object.x | 0;\n                if (object.y != null)\n                    message.y = object.y | 0;\n                if (object.z != null)\n                    message.z = object.z | 0;\n                if (object.avatarDir != null)\n                    message.avatarDir = object.avatarDir | 0;\n                if (object.walkableArea != null)\n                    message.walkableArea = String(object.walkableArea);\n                if (object.collisionArea != null)\n                    message.collisionArea = String(object.collisionArea);\n                if (object.originPoint) {\n                    if (!Array.isArray(object.originPoint))\n                        throw TypeError(".op_client.Actor.originPoint: array expected");\n                    message.originPoint = [];\n                    for (var i = 0; i < object.originPoint.length; ++i)\n                        message.originPoint[i] = object.originPoint[i] | 0;\n                }\n                if (object.walkOriginPoint) {\n                    if (!Array.isArray(object.walkOriginPoint))\n                        throw TypeError(".op_client.Actor.walkOriginPoint: array expected");\n                    message.walkOriginPoint = [];\n                    for (var i = 0; i < object.walkOriginPoint.length; ++i)\n                        message.walkOriginPoint[i] = object.walkOriginPoint[i] | 0;\n                }\n                if (object.nickname != null)\n                    message.nickname = String(object.nickname);\n                if (object.slot) {\n                    if (!Array.isArray(object.slot))\n                        throw TypeError(".op_client.Actor.slot: array expected");\n                    message.slot = [];\n                    for (var i = 0; i < object.slot.length; ++i) {\n                        if (typeof object.slot[i] !== "object")\n                            throw TypeError(".op_client.Actor.slot: object expected");\n                        message.slot[i] = $root.op_gameconfig.Slot.fromObject(object.slot[i]);\n                    }\n                }\n                if (object.uuid != null)\n                    message.uuid = object.uuid | 0;\n                if (object.isInCurrentSceneVoiceRoom != null)\n                    message.isInCurrentSceneVoiceRoom = Boolean(object.isInCurrentSceneVoiceRoom);\n                if (object.displayBadgeCards) {\n                    if (!Array.isArray(object.displayBadgeCards))\n                        throw TypeError(".op_client.Actor.displayBadgeCards: array expected");\n                    message.displayBadgeCards = [];\n                    for (var i = 0; i < object.displayBadgeCards.length; ++i) {\n                        if (typeof object.displayBadgeCards[i] !== "object")\n                            throw TypeError(".op_client.Actor.displayBadgeCards: object expected");\n                        message.displayBadgeCards[i] = $root.op_def.BadgeCard.fromObject(object.displayBadgeCards[i]);\n                    }\n                }\n                if (object.platformId != null)\n                    message.platformId = String(object.platformId);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from an Actor message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.Actor\n             * @static\n             * @param {op_client.Actor} message Actor\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Actor.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults) {\n                    object.attributes = [];\n                    object.originPoint = [];\n                    object.walkOriginPoint = [];\n                    object.slot = [];\n                    object.displayBadgeCards = [];\n                }\n                if (options.defaults) {\n                    object.id = 0;\n                    object.name = "";\n                    object.maxNum = 20;\n                    object.camp = "";\n                    object.avatar = null;\n                    object["package"] = null;\n                    object.sceneId = 0;\n                    object.x = 0;\n                    object.y = 0;\n                    object.z = 0;\n                    object.collisionArea = "";\n                    object.avatarDir = 0;\n                    object.walkableArea = "";\n                    object.nickname = "";\n                    object.uuid = 0;\n                    object.isInCurrentSceneVoiceRoom = false;\n                    object.platformId = "";\n                }\n                if (message.id != null && message.hasOwnProperty("id"))\n                    object.id = message.id;\n                if (message.name != null && message.hasOwnProperty("name"))\n                    object.name = message.name;\n                if (message.maxNum != null && message.hasOwnProperty("maxNum"))\n                    object.maxNum = message.maxNum;\n                if (message.camp != null && message.hasOwnProperty("camp"))\n                    object.camp = message.camp;\n                if (message.avatar != null && message.hasOwnProperty("avatar"))\n                    object.avatar = $root.op_gameconfig.Avatar.toObject(message.avatar, options);\n                if (message.attributes && message.attributes.length) {\n                    object.attributes = [];\n                    for (var j = 0; j < message.attributes.length; ++j)\n                        object.attributes[j] = $root.op_gameconfig.Attribute.toObject(message.attributes[j], options);\n                }\n                if (message["package"] != null && message.hasOwnProperty("package"))\n                    object["package"] = $root.op_gameconfig.Package.toObject(message["package"], options);\n                if (message.sceneId != null && message.hasOwnProperty("sceneId"))\n                    object.sceneId = message.sceneId;\n                if (message.x != null && message.hasOwnProperty("x"))\n                    object.x = message.x;\n                if (message.y != null && message.hasOwnProperty("y"))\n                    object.y = message.y;\n                if (message.z != null && message.hasOwnProperty("z"))\n                    object.z = message.z;\n                if (message.collisionArea != null && message.hasOwnProperty("collisionArea"))\n                    object.collisionArea = message.collisionArea;\n                if (message.avatarDir != null && message.hasOwnProperty("avatarDir"))\n                    object.avatarDir = message.avatarDir;\n                if (message.walkableArea != null && message.hasOwnProperty("walkableArea"))\n                    object.walkableArea = message.walkableArea;\n                if (message.originPoint && message.originPoint.length) {\n                    object.originPoint = [];\n                    for (var j = 0; j < message.originPoint.length; ++j)\n                        object.originPoint[j] = message.originPoint[j];\n                }\n                if (message.walkOriginPoint && message.walkOriginPoint.length) {\n                    object.walkOriginPoint = [];\n                    for (var j = 0; j < message.walkOriginPoint.length; ++j)\n                        object.walkOriginPoint[j] = message.walkOriginPoint[j];\n                }\n                if (message.nickname != null && message.hasOwnProperty("nickname"))\n                    object.nickname = message.nickname;\n                if (message.slot && message.slot.length) {\n                    object.slot = [];\n                    for (var j = 0; j < message.slot.length; ++j)\n                        object.slot[j] = $root.op_gameconfig.Slot.toObject(message.slot[j], options);\n                }\n                if (message.uuid != null && message.hasOwnProperty("uuid"))\n                    object.uuid = message.uuid;\n                if (message.isInCurrentSceneVoiceRoom != null && message.hasOwnProperty("isInCurrentSceneVoiceRoom"))\n                    object.isInCurrentSceneVoiceRoom = message.isInCurrentSceneVoiceRoom;\n                if (message.displayBadgeCards && message.displayBadgeCards.length) {\n                    object.displayBadgeCards = [];\n                    for (var j = 0; j < message.displayBadgeCards.length; ++j)\n                        object.displayBadgeCards[j] = $root.op_def.BadgeCard.toObject(message.displayBadgeCards[j], options);\n                }\n                if (message.platformId != null && message.hasOwnProperty("platformId"))\n                    object.platformId = message.platformId;\n                return object;\n            };\n    \n            /**\n             * Converts this Actor to JSON.\n             * @function toJSON\n             * @memberof op_client.Actor\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Actor.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Actor;\n        })();\n    \n        op_client.Scene = (function() {\n    \n            /**\n             * Properties of a Scene.\n             * @memberof op_client\n             * @interface IScene\n             * @property {number} id Scene id\n             * @property {number} cols Scene cols\n             * @property {number} rows Scene rows\n             * @property {number} tileWidth Scene tileWidth\n             * @property {number} tileHeight Scene tileHeight\n             * @property {number|null} [zStart] Scene zStart\n             * @property {number|null} [zEnd] Scene zEnd\n             * @property {Array.<op_client.IElement>|null} [elements] Scene elements\n             * @property {Array.<op_client.ITerrain>|null} [terrains] Scene terrains\n             * @property {number|null} [voiceChatRoomId] Scene voiceChatRoomId\n             * @property {Array.<op_gameconfig.IShop>|null} [shops] Scene shops\n             */\n    \n            /**\n             * Constructs a new Scene.\n             * @memberof op_client\n             * @classdesc Represents a Scene.\n             * @implements IScene\n             * @constructor\n             * @param {op_client.IScene=} [properties] Properties to set\n             */\n            function Scene(properties) {\n                this.elements = [];\n                this.terrains = [];\n                this.shops = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Scene id.\n             * @member {number} id\n             * @memberof op_client.Scene\n             * @instance\n             */\n            Scene.prototype.id = 0;\n    \n            /**\n             * Scene cols.\n             * @member {number} cols\n             * @memberof op_client.Scene\n             * @instance\n             */\n            Scene.prototype.cols = 0;\n    \n            /**\n             * Scene rows.\n             * @member {number} rows\n             * @memberof op_client.Scene\n             * @instance\n             */\n            Scene.prototype.rows = 0;\n    \n            /**\n             * Scene tileWidth.\n             * @member {number} tileWidth\n             * @memberof op_client.Scene\n             * @instance\n             */\n            Scene.prototype.tileWidth = 0;\n    \n            /**\n             * Scene tileHeight.\n             * @member {number} tileHeight\n             * @memberof op_client.Scene\n             * @instance\n             */\n            Scene.prototype.tileHeight = 0;\n    \n            /**\n             * Scene zStart.\n             * @member {number} zStart\n             * @memberof op_client.Scene\n             * @instance\n             */\n            Scene.prototype.zStart = 0;\n    \n            /**\n             * Scene zEnd.\n             * @member {number} zEnd\n             * @memberof op_client.Scene\n             * @instance\n             */\n            Scene.prototype.zEnd = 0;\n    \n            /**\n             * Scene elements.\n             * @member {Array.<op_client.IElement>} elements\n             * @memberof op_client.Scene\n             * @instance\n             */\n            Scene.prototype.elements = $util.emptyArray;\n    \n            /**\n             * Scene terrains.\n             * @member {Array.<op_client.ITerrain>} terrains\n             * @memberof op_client.Scene\n             * @instance\n             */\n            Scene.prototype.terrains = $util.emptyArray;\n    \n            /**\n             * Scene voiceChatRoomId.\n             * @member {number} voiceChatRoomId\n             * @memberof op_client.Scene\n             * @instance\n             */\n            Scene.prototype.voiceChatRoomId = 0;\n    \n            /**\n             * Scene shops.\n             * @member {Array.<op_gameconfig.IShop>} shops\n             * @memberof op_client.Scene\n             * @instance\n             */\n            Scene.prototype.shops = $util.emptyArray;\n    \n            /**\n             * Creates a new Scene instance using the specified properties.\n             * @function create\n             * @memberof op_client.Scene\n             * @static\n             * @param {op_client.IScene=} [properties] Properties to set\n             * @returns {op_client.Scene} Scene instance\n             */\n            Scene.create = function create(properties) {\n                return new Scene(properties);\n            };\n    \n            /**\n             * Encodes the specified Scene message. Does not implicitly {@link op_client.Scene.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.Scene\n             * @static\n             * @param {op_client.IScene} message Scene message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Scene.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.id);\n                writer.uint32(/* id 2, wireType 5 =*/21).float(message.cols);\n                writer.uint32(/* id 3, wireType 5 =*/29).float(message.rows);\n                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.tileWidth);\n                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.tileHeight);\n                if (message.zStart != null && message.hasOwnProperty("zStart"))\n                    writer.uint32(/* id 6, wireType 5 =*/53).float(message.zStart);\n                if (message.zEnd != null && message.hasOwnProperty("zEnd"))\n                    writer.uint32(/* id 7, wireType 5 =*/61).float(message.zEnd);\n                if (message.elements != null && message.elements.length)\n                    for (var i = 0; i < message.elements.length; ++i)\n                        $root.op_client.Element.encode(message.elements[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n                if (message.terrains != null && message.terrains.length)\n                    for (var i = 0; i < message.terrains.length; ++i)\n                        $root.op_client.Terrain.encode(message.terrains[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();\n                if (message.voiceChatRoomId != null && message.hasOwnProperty("voiceChatRoomId"))\n                    writer.uint32(/* id 10, wireType 0 =*/80).int32(message.voiceChatRoomId);\n                if (message.shops != null && message.shops.length)\n                    for (var i = 0; i < message.shops.length; ++i)\n                        $root.op_gameconfig.Shop.encode(message.shops[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Scene message, length delimited. Does not implicitly {@link op_client.Scene.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.Scene\n             * @static\n             * @param {op_client.IScene} message Scene message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Scene.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a Scene message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.Scene\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.Scene} Scene\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Scene.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.Scene();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.id = reader.int32();\n                        break;\n                    case 2:\n                        message.cols = reader.float();\n                        break;\n                    case 3:\n                        message.rows = reader.float();\n                        break;\n                    case 4:\n                        message.tileWidth = reader.int32();\n                        break;\n                    case 5:\n                        message.tileHeight = reader.int32();\n                        break;\n                    case 6:\n                        message.zStart = reader.float();\n                        break;\n                    case 7:\n                        message.zEnd = reader.float();\n                        break;\n                    case 8:\n                        if (!(message.elements && message.elements.length))\n                            message.elements = [];\n                        message.elements.push($root.op_client.Element.decode(reader, reader.uint32()));\n                        break;\n                    case 9:\n                        if (!(message.terrains && message.terrains.length))\n                            message.terrains = [];\n                        message.terrains.push($root.op_client.Terrain.decode(reader, reader.uint32()));\n                        break;\n                    case 10:\n                        message.voiceChatRoomId = reader.int32();\n                        break;\n                    case 11:\n                        if (!(message.shops && message.shops.length))\n                            message.shops = [];\n                        message.shops.push($root.op_gameconfig.Shop.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("id"))\n                    throw $util.ProtocolError("missing required \'id\'", { instance: message });\n                if (!message.hasOwnProperty("cols"))\n                    throw $util.ProtocolError("missing required \'cols\'", { instance: message });\n                if (!message.hasOwnProperty("rows"))\n                    throw $util.ProtocolError("missing required \'rows\'", { instance: message });\n                if (!message.hasOwnProperty("tileWidth"))\n                    throw $util.ProtocolError("missing required \'tileWidth\'", { instance: message });\n                if (!message.hasOwnProperty("tileHeight"))\n                    throw $util.ProtocolError("missing required \'tileHeight\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a Scene message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.Scene\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.Scene} Scene\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Scene.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a Scene message.\n             * @function verify\n             * @memberof op_client.Scene\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Scene.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.id))\n                    return "id: integer expected";\n                if (typeof message.cols !== "number")\n                    return "cols: number expected";\n                if (typeof message.rows !== "number")\n                    return "rows: number expected";\n                if (!$util.isInteger(message.tileWidth))\n                    return "tileWidth: integer expected";\n                if (!$util.isInteger(message.tileHeight))\n                    return "tileHeight: integer expected";\n                if (message.zStart != null && message.hasOwnProperty("zStart"))\n                    if (typeof message.zStart !== "number")\n                        return "zStart: number expected";\n                if (message.zEnd != null && message.hasOwnProperty("zEnd"))\n                    if (typeof message.zEnd !== "number")\n                        return "zEnd: number expected";\n                if (message.elements != null && message.hasOwnProperty("elements")) {\n                    if (!Array.isArray(message.elements))\n                        return "elements: array expected";\n                    for (var i = 0; i < message.elements.length; ++i) {\n                        var error = $root.op_client.Element.verify(message.elements[i]);\n                        if (error)\n                            return "elements." + error;\n                    }\n                }\n                if (message.terrains != null && message.hasOwnProperty("terrains")) {\n                    if (!Array.isArray(message.terrains))\n                        return "terrains: array expected";\n                    for (var i = 0; i < message.terrains.length; ++i) {\n                        var error = $root.op_client.Terrain.verify(message.terrains[i]);\n                        if (error)\n                            return "terrains." + error;\n                    }\n                }\n                if (message.voiceChatRoomId != null && message.hasOwnProperty("voiceChatRoomId"))\n                    if (!$util.isInteger(message.voiceChatRoomId))\n                        return "voiceChatRoomId: integer expected";\n                if (message.shops != null && message.hasOwnProperty("shops")) {\n                    if (!Array.isArray(message.shops))\n                        return "shops: array expected";\n                    for (var i = 0; i < message.shops.length; ++i) {\n                        var error = $root.op_gameconfig.Shop.verify(message.shops[i]);\n                        if (error)\n                            return "shops." + error;\n                    }\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a Scene message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.Scene\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.Scene} Scene\n             */\n            Scene.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.Scene)\n                    return object;\n                var message = new $root.op_client.Scene();\n                if (object.id != null)\n                    message.id = object.id | 0;\n                if (object.cols != null)\n                    message.cols = Number(object.cols);\n                if (object.rows != null)\n                    message.rows = Number(object.rows);\n                if (object.tileWidth != null)\n                    message.tileWidth = object.tileWidth | 0;\n                if (object.tileHeight != null)\n                    message.tileHeight = object.tileHeight | 0;\n                if (object.zStart != null)\n                    message.zStart = Number(object.zStart);\n                if (object.zEnd != null)\n                    message.zEnd = Number(object.zEnd);\n                if (object.elements) {\n                    if (!Array.isArray(object.elements))\n                        throw TypeError(".op_client.Scene.elements: array expected");\n                    message.elements = [];\n                    for (var i = 0; i < object.elements.length; ++i) {\n                        if (typeof object.elements[i] !== "object")\n                            throw TypeError(".op_client.Scene.elements: object expected");\n                        message.elements[i] = $root.op_client.Element.fromObject(object.elements[i]);\n                    }\n                }\n                if (object.terrains) {\n                    if (!Array.isArray(object.terrains))\n                        throw TypeError(".op_client.Scene.terrains: array expected");\n                    message.terrains = [];\n                    for (var i = 0; i < object.terrains.length; ++i) {\n                        if (typeof object.terrains[i] !== "object")\n                            throw TypeError(".op_client.Scene.terrains: object expected");\n                        message.terrains[i] = $root.op_client.Terrain.fromObject(object.terrains[i]);\n                    }\n                }\n                if (object.voiceChatRoomId != null)\n                    message.voiceChatRoomId = object.voiceChatRoomId | 0;\n                if (object.shops) {\n                    if (!Array.isArray(object.shops))\n                        throw TypeError(".op_client.Scene.shops: array expected");\n                    message.shops = [];\n                    for (var i = 0; i < object.shops.length; ++i) {\n                        if (typeof object.shops[i] !== "object")\n                            throw TypeError(".op_client.Scene.shops: object expected");\n                        message.shops[i] = $root.op_gameconfig.Shop.fromObject(object.shops[i]);\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a Scene message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.Scene\n             * @static\n             * @param {op_client.Scene} message Scene\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Scene.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults) {\n                    object.elements = [];\n                    object.terrains = [];\n                    object.shops = [];\n                }\n                if (options.defaults) {\n                    object.id = 0;\n                    object.cols = 0;\n                    object.rows = 0;\n                    object.tileWidth = 0;\n                    object.tileHeight = 0;\n                    object.zStart = 0;\n                    object.zEnd = 0;\n                    object.voiceChatRoomId = 0;\n                }\n                if (message.id != null && message.hasOwnProperty("id"))\n                    object.id = message.id;\n                if (message.cols != null && message.hasOwnProperty("cols"))\n                    object.cols = options.json && !isFinite(message.cols) ? String(message.cols) : message.cols;\n                if (message.rows != null && message.hasOwnProperty("rows"))\n                    object.rows = options.json && !isFinite(message.rows) ? String(message.rows) : message.rows;\n                if (message.tileWidth != null && message.hasOwnProperty("tileWidth"))\n                    object.tileWidth = message.tileWidth;\n                if (message.tileHeight != null && message.hasOwnProperty("tileHeight"))\n                    object.tileHeight = message.tileHeight;\n                if (message.zStart != null && message.hasOwnProperty("zStart"))\n                    object.zStart = options.json && !isFinite(message.zStart) ? String(message.zStart) : message.zStart;\n                if (message.zEnd != null && message.hasOwnProperty("zEnd"))\n                    object.zEnd = options.json && !isFinite(message.zEnd) ? String(message.zEnd) : message.zEnd;\n                if (message.elements && message.elements.length) {\n                    object.elements = [];\n                    for (var j = 0; j < message.elements.length; ++j)\n                        object.elements[j] = $root.op_client.Element.toObject(message.elements[j], options);\n                }\n                if (message.terrains && message.terrains.length) {\n                    object.terrains = [];\n                    for (var j = 0; j < message.terrains.length; ++j)\n                        object.terrains[j] = $root.op_client.Terrain.toObject(message.terrains[j], options);\n                }\n                if (message.voiceChatRoomId != null && message.hasOwnProperty("voiceChatRoomId"))\n                    object.voiceChatRoomId = message.voiceChatRoomId;\n                if (message.shops && message.shops.length) {\n                    object.shops = [];\n                    for (var j = 0; j < message.shops.length; ++j)\n                        object.shops[j] = $root.op_gameconfig.Shop.toObject(message.shops[j], options);\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this Scene to JSON.\n             * @function toJSON\n             * @memberof op_client.Scene\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Scene.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Scene;\n        })();\n    \n        op_client.Element = (function() {\n    \n            /**\n             * Properties of an Element.\n             * @memberof op_client\n             * @interface IElement\n             * @property {number} id Element id\n             * @property {string} type Element type\n             * @property {number} dir Element dir\n             * @property {number} x Element x\n             * @property {number} y Element y\n             * @property {number} z Element z\n             * @property {string|null} [name] Element name\n             * @property {string|null} [des] Element des\n             * @property {Array.<op_gameconfig.IAnimation>|null} [animations] Element animations\n             * @property {Array.<op_gameconfig.IAttribute>|null} [attributes] Element attributes\n             * @property {string|null} [animationName] Element animationName\n             * @property {boolean|null} [scale] Element scale\n             * @property {op_gameconfig.IDisplay|null} [display] Element display\n             * @property {op_gameconfig.IPackage|null} ["package"] Element package\n             * @property {Array.<op_gameconfig.IShop>|null} [shops] Element shops\n             */\n    \n            /**\n             * Constructs a new Element.\n             * @memberof op_client\n             * @classdesc Represents an Element.\n             * @implements IElement\n             * @constructor\n             * @param {op_client.IElement=} [properties] Properties to set\n             */\n            function Element(properties) {\n                this.animations = [];\n                this.attributes = [];\n                this.shops = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Element id.\n             * @member {number} id\n             * @memberof op_client.Element\n             * @instance\n             */\n            Element.prototype.id = 0;\n    \n            /**\n             * Element type.\n             * @member {string} type\n             * @memberof op_client.Element\n             * @instance\n             */\n            Element.prototype.type = "";\n    \n            /**\n             * Element dir.\n             * @member {number} dir\n             * @memberof op_client.Element\n             * @instance\n             */\n            Element.prototype.dir = 0;\n    \n            /**\n             * Element x.\n             * @member {number} x\n             * @memberof op_client.Element\n             * @instance\n             */\n            Element.prototype.x = 0;\n    \n            /**\n             * Element y.\n             * @member {number} y\n             * @memberof op_client.Element\n             * @instance\n             */\n            Element.prototype.y = 0;\n    \n            /**\n             * Element z.\n             * @member {number} z\n             * @memberof op_client.Element\n             * @instance\n             */\n            Element.prototype.z = 0;\n    \n            /**\n             * Element name.\n             * @member {string} name\n             * @memberof op_client.Element\n             * @instance\n             */\n            Element.prototype.name = "";\n    \n            /**\n             * Element des.\n             * @member {string} des\n             * @memberof op_client.Element\n             * @instance\n             */\n            Element.prototype.des = "";\n    \n            /**\n             * Element animations.\n             * @member {Array.<op_gameconfig.IAnimation>} animations\n             * @memberof op_client.Element\n             * @instance\n             */\n            Element.prototype.animations = $util.emptyArray;\n    \n            /**\n             * Element attributes.\n             * @member {Array.<op_gameconfig.IAttribute>} attributes\n             * @memberof op_client.Element\n             * @instance\n             */\n            Element.prototype.attributes = $util.emptyArray;\n    \n            /**\n             * Element animationName.\n             * @member {string} animationName\n             * @memberof op_client.Element\n             * @instance\n             */\n            Element.prototype.animationName = "";\n    \n            /**\n             * Element scale.\n             * @member {boolean} scale\n             * @memberof op_client.Element\n             * @instance\n             */\n            Element.prototype.scale = false;\n    \n            /**\n             * Element display.\n             * @member {op_gameconfig.IDisplay|null|undefined} display\n             * @memberof op_client.Element\n             * @instance\n             */\n            Element.prototype.display = null;\n    \n            /**\n             * Element package.\n             * @member {op_gameconfig.IPackage|null|undefined} package\n             * @memberof op_client.Element\n             * @instance\n             */\n            Element.prototype["package"] = null;\n    \n            /**\n             * Element shops.\n             * @member {Array.<op_gameconfig.IShop>} shops\n             * @memberof op_client.Element\n             * @instance\n             */\n            Element.prototype.shops = $util.emptyArray;\n    \n            /**\n             * Creates a new Element instance using the specified properties.\n             * @function create\n             * @memberof op_client.Element\n             * @static\n             * @param {op_client.IElement=} [properties] Properties to set\n             * @returns {op_client.Element} Element instance\n             */\n            Element.create = function create(properties) {\n                return new Element(properties);\n            };\n    \n            /**\n             * Encodes the specified Element message. Does not implicitly {@link op_client.Element.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.Element\n             * @static\n             * @param {op_client.IElement} message Element message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Element.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.id);\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.type);\n                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.dir);\n                writer.uint32(/* id 4, wireType 5 =*/37).float(message.x);\n                writer.uint32(/* id 5, wireType 5 =*/45).float(message.y);\n                writer.uint32(/* id 6, wireType 5 =*/53).float(message.z);\n                if (message.name != null && message.hasOwnProperty("name"))\n                    writer.uint32(/* id 7, wireType 2 =*/58).string(message.name);\n                if (message.des != null && message.hasOwnProperty("des"))\n                    writer.uint32(/* id 8, wireType 2 =*/66).string(message.des);\n                if (message.animations != null && message.animations.length)\n                    for (var i = 0; i < message.animations.length; ++i)\n                        $root.op_gameconfig.Animation.encode(message.animations[i], writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();\n                if (message.attributes != null && message.attributes.length)\n                    for (var i = 0; i < message.attributes.length; ++i)\n                        $root.op_gameconfig.Attribute.encode(message.attributes[i], writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();\n                if (message.animationName != null && message.hasOwnProperty("animationName"))\n                    writer.uint32(/* id 21, wireType 2 =*/170).string(message.animationName);\n                if (message.scale != null && message.hasOwnProperty("scale"))\n                    writer.uint32(/* id 22, wireType 0 =*/176).bool(message.scale);\n                if (message.display != null && message.hasOwnProperty("display"))\n                    $root.op_gameconfig.Display.encode(message.display, writer.uint32(/* id 23, wireType 2 =*/186).fork()).ldelim();\n                if (message["package"] != null && message.hasOwnProperty("package"))\n                    $root.op_gameconfig.Package.encode(message["package"], writer.uint32(/* id 24, wireType 2 =*/194).fork()).ldelim();\n                if (message.shops != null && message.shops.length)\n                    for (var i = 0; i < message.shops.length; ++i)\n                        $root.op_gameconfig.Shop.encode(message.shops[i], writer.uint32(/* id 25, wireType 2 =*/202).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Element message, length delimited. Does not implicitly {@link op_client.Element.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.Element\n             * @static\n             * @param {op_client.IElement} message Element message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Element.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes an Element message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.Element\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.Element} Element\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Element.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.Element();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.id = reader.int32();\n                        break;\n                    case 2:\n                        message.type = reader.string();\n                        break;\n                    case 3:\n                        message.dir = reader.int32();\n                        break;\n                    case 4:\n                        message.x = reader.float();\n                        break;\n                    case 5:\n                        message.y = reader.float();\n                        break;\n                    case 6:\n                        message.z = reader.float();\n                        break;\n                    case 7:\n                        message.name = reader.string();\n                        break;\n                    case 8:\n                        message.des = reader.string();\n                        break;\n                    case 15:\n                        if (!(message.animations && message.animations.length))\n                            message.animations = [];\n                        message.animations.push($root.op_gameconfig.Animation.decode(reader, reader.uint32()));\n                        break;\n                    case 16:\n                        if (!(message.attributes && message.attributes.length))\n                            message.attributes = [];\n                        message.attributes.push($root.op_gameconfig.Attribute.decode(reader, reader.uint32()));\n                        break;\n                    case 21:\n                        message.animationName = reader.string();\n                        break;\n                    case 22:\n                        message.scale = reader.bool();\n                        break;\n                    case 23:\n                        message.display = $root.op_gameconfig.Display.decode(reader, reader.uint32());\n                        break;\n                    case 24:\n                        message["package"] = $root.op_gameconfig.Package.decode(reader, reader.uint32());\n                        break;\n                    case 25:\n                        if (!(message.shops && message.shops.length))\n                            message.shops = [];\n                        message.shops.push($root.op_gameconfig.Shop.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("id"))\n                    throw $util.ProtocolError("missing required \'id\'", { instance: message });\n                if (!message.hasOwnProperty("type"))\n                    throw $util.ProtocolError("missing required \'type\'", { instance: message });\n                if (!message.hasOwnProperty("dir"))\n                    throw $util.ProtocolError("missing required \'dir\'", { instance: message });\n                if (!message.hasOwnProperty("x"))\n                    throw $util.ProtocolError("missing required \'x\'", { instance: message });\n                if (!message.hasOwnProperty("y"))\n                    throw $util.ProtocolError("missing required \'y\'", { instance: message });\n                if (!message.hasOwnProperty("z"))\n                    throw $util.ProtocolError("missing required \'z\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes an Element message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.Element\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.Element} Element\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Element.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies an Element message.\n             * @function verify\n             * @memberof op_client.Element\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Element.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.id))\n                    return "id: integer expected";\n                if (!$util.isString(message.type))\n                    return "type: string expected";\n                if (!$util.isInteger(message.dir))\n                    return "dir: integer expected";\n                if (typeof message.x !== "number")\n                    return "x: number expected";\n                if (typeof message.y !== "number")\n                    return "y: number expected";\n                if (typeof message.z !== "number")\n                    return "z: number expected";\n                if (message.name != null && message.hasOwnProperty("name"))\n                    if (!$util.isString(message.name))\n                        return "name: string expected";\n                if (message.des != null && message.hasOwnProperty("des"))\n                    if (!$util.isString(message.des))\n                        return "des: string expected";\n                if (message.animations != null && message.hasOwnProperty("animations")) {\n                    if (!Array.isArray(message.animations))\n                        return "animations: array expected";\n                    for (var i = 0; i < message.animations.length; ++i) {\n                        var error = $root.op_gameconfig.Animation.verify(message.animations[i]);\n                        if (error)\n                            return "animations." + error;\n                    }\n                }\n                if (message.attributes != null && message.hasOwnProperty("attributes")) {\n                    if (!Array.isArray(message.attributes))\n                        return "attributes: array expected";\n                    for (var i = 0; i < message.attributes.length; ++i) {\n                        var error = $root.op_gameconfig.Attribute.verify(message.attributes[i]);\n                        if (error)\n                            return "attributes." + error;\n                    }\n                }\n                if (message.animationName != null && message.hasOwnProperty("animationName"))\n                    if (!$util.isString(message.animationName))\n                        return "animationName: string expected";\n                if (message.scale != null && message.hasOwnProperty("scale"))\n                    if (typeof message.scale !== "boolean")\n                        return "scale: boolean expected";\n                if (message.display != null && message.hasOwnProperty("display")) {\n                    var error = $root.op_gameconfig.Display.verify(message.display);\n                    if (error)\n                        return "display." + error;\n                }\n                if (message["package"] != null && message.hasOwnProperty("package")) {\n                    var error = $root.op_gameconfig.Package.verify(message["package"]);\n                    if (error)\n                        return "package." + error;\n                }\n                if (message.shops != null && message.hasOwnProperty("shops")) {\n                    if (!Array.isArray(message.shops))\n                        return "shops: array expected";\n                    for (var i = 0; i < message.shops.length; ++i) {\n                        var error = $root.op_gameconfig.Shop.verify(message.shops[i]);\n                        if (error)\n                            return "shops." + error;\n                    }\n                }\n                return null;\n            };\n    \n            /**\n             * Creates an Element message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.Element\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.Element} Element\n             */\n            Element.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.Element)\n                    return object;\n                var message = new $root.op_client.Element();\n                if (object.id != null)\n                    message.id = object.id | 0;\n                if (object.type != null)\n                    message.type = String(object.type);\n                if (object.dir != null)\n                    message.dir = object.dir | 0;\n                if (object.x != null)\n                    message.x = Number(object.x);\n                if (object.y != null)\n                    message.y = Number(object.y);\n                if (object.z != null)\n                    message.z = Number(object.z);\n                if (object.name != null)\n                    message.name = String(object.name);\n                if (object.des != null)\n                    message.des = String(object.des);\n                if (object.animations) {\n                    if (!Array.isArray(object.animations))\n                        throw TypeError(".op_client.Element.animations: array expected");\n                    message.animations = [];\n                    for (var i = 0; i < object.animations.length; ++i) {\n                        if (typeof object.animations[i] !== "object")\n                            throw TypeError(".op_client.Element.animations: object expected");\n                        message.animations[i] = $root.op_gameconfig.Animation.fromObject(object.animations[i]);\n                    }\n                }\n                if (object.attributes) {\n                    if (!Array.isArray(object.attributes))\n                        throw TypeError(".op_client.Element.attributes: array expected");\n                    message.attributes = [];\n                    for (var i = 0; i < object.attributes.length; ++i) {\n                        if (typeof object.attributes[i] !== "object")\n                            throw TypeError(".op_client.Element.attributes: object expected");\n                        message.attributes[i] = $root.op_gameconfig.Attribute.fromObject(object.attributes[i]);\n                    }\n                }\n                if (object.animationName != null)\n                    message.animationName = String(object.animationName);\n                if (object.scale != null)\n                    message.scale = Boolean(object.scale);\n                if (object.display != null) {\n                    if (typeof object.display !== "object")\n                        throw TypeError(".op_client.Element.display: object expected");\n                    message.display = $root.op_gameconfig.Display.fromObject(object.display);\n                }\n                if (object["package"] != null) {\n                    if (typeof object["package"] !== "object")\n                        throw TypeError(".op_client.Element.package: object expected");\n                    message["package"] = $root.op_gameconfig.Package.fromObject(object["package"]);\n                }\n                if (object.shops) {\n                    if (!Array.isArray(object.shops))\n                        throw TypeError(".op_client.Element.shops: array expected");\n                    message.shops = [];\n                    for (var i = 0; i < object.shops.length; ++i) {\n                        if (typeof object.shops[i] !== "object")\n                            throw TypeError(".op_client.Element.shops: object expected");\n                        message.shops[i] = $root.op_gameconfig.Shop.fromObject(object.shops[i]);\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from an Element message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.Element\n             * @static\n             * @param {op_client.Element} message Element\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Element.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults) {\n                    object.animations = [];\n                    object.attributes = [];\n                    object.shops = [];\n                }\n                if (options.defaults) {\n                    object.id = 0;\n                    object.type = "";\n                    object.dir = 0;\n                    object.x = 0;\n                    object.y = 0;\n                    object.z = 0;\n                    object.name = "";\n                    object.des = "";\n                    object.animationName = "";\n                    object.scale = false;\n                    object.display = null;\n                    object["package"] = null;\n                }\n                if (message.id != null && message.hasOwnProperty("id"))\n                    object.id = message.id;\n                if (message.type != null && message.hasOwnProperty("type"))\n                    object.type = message.type;\n                if (message.dir != null && message.hasOwnProperty("dir"))\n                    object.dir = message.dir;\n                if (message.x != null && message.hasOwnProperty("x"))\n                    object.x = options.json && !isFinite(message.x) ? String(message.x) : message.x;\n                if (message.y != null && message.hasOwnProperty("y"))\n                    object.y = options.json && !isFinite(message.y) ? String(message.y) : message.y;\n                if (message.z != null && message.hasOwnProperty("z"))\n                    object.z = options.json && !isFinite(message.z) ? String(message.z) : message.z;\n                if (message.name != null && message.hasOwnProperty("name"))\n                    object.name = message.name;\n                if (message.des != null && message.hasOwnProperty("des"))\n                    object.des = message.des;\n                if (message.animations && message.animations.length) {\n                    object.animations = [];\n                    for (var j = 0; j < message.animations.length; ++j)\n                        object.animations[j] = $root.op_gameconfig.Animation.toObject(message.animations[j], options);\n                }\n                if (message.attributes && message.attributes.length) {\n                    object.attributes = [];\n                    for (var j = 0; j < message.attributes.length; ++j)\n                        object.attributes[j] = $root.op_gameconfig.Attribute.toObject(message.attributes[j], options);\n                }\n                if (message.animationName != null && message.hasOwnProperty("animationName"))\n                    object.animationName = message.animationName;\n                if (message.scale != null && message.hasOwnProperty("scale"))\n                    object.scale = message.scale;\n                if (message.display != null && message.hasOwnProperty("display"))\n                    object.display = $root.op_gameconfig.Display.toObject(message.display, options);\n                if (message["package"] != null && message.hasOwnProperty("package"))\n                    object["package"] = $root.op_gameconfig.Package.toObject(message["package"], options);\n                if (message.shops && message.shops.length) {\n                    object.shops = [];\n                    for (var j = 0; j < message.shops.length; ++j)\n                        object.shops[j] = $root.op_gameconfig.Shop.toObject(message.shops[j], options);\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this Element to JSON.\n             * @function toJSON\n             * @memberof op_client.Element\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Element.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Element;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER\n             * @property {number} selectCharacterId OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER selectCharacterId\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER.\n             * @implements IOP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER selectCharacterId.\n             * @member {number} selectCharacterId\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER.prototype.selectCharacterId = 0;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER} OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER} message OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.selectCharacterId);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER} message OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER} OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 2:\n                        message.selectCharacterId = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("selectCharacterId"))\n                    throw $util.ProtocolError("missing required \'selectCharacterId\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER} OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.selectCharacterId))\n                    return "selectCharacterId: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER} OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER();\n                if (object.selectCharacterId != null)\n                    message.selectCharacterId = object.selectCharacterId | 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER} message OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.selectCharacterId = 0;\n                if (message.selectCharacterId != null && message.hasOwnProperty("selectCharacterId"))\n                    object.selectCharacterId = message.selectCharacterId;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_RES_CLIENT_SELECT_CHARACTER;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE\n             * @property {op_client.IActor} actor OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE actor\n             * @property {op_client.IScene} scene OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE scene\n             * @property {Array.<op_gameconfig.ITerrainType>|null} [terrain_Types] OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE terrain_Types\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE.\n             * @implements IOP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE(properties) {\n                this.terrain_Types = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE actor.\n             * @member {op_client.IActor} actor\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE.prototype.actor = null;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE scene.\n             * @member {op_client.IScene} scene\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE.prototype.scene = null;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE terrain_Types.\n             * @member {Array.<op_gameconfig.ITerrainType>} terrain_Types\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE.prototype.terrain_Types = $util.emptyArray;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE} OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE} message OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                $root.op_client.Actor.encode(message.actor, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                $root.op_client.Scene.encode(message.scene, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                if (message.terrain_Types != null && message.terrain_Types.length)\n                    for (var i = 0; i < message.terrain_Types.length; ++i)\n                        $root.op_gameconfig.TerrainType.encode(message.terrain_Types[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE} message OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE} OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.actor = $root.op_client.Actor.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        message.scene = $root.op_client.Scene.decode(reader, reader.uint32());\n                        break;\n                    case 3:\n                        if (!(message.terrain_Types && message.terrain_Types.length))\n                            message.terrain_Types = [];\n                        message.terrain_Types.push($root.op_gameconfig.TerrainType.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("actor"))\n                    throw $util.ProtocolError("missing required \'actor\'", { instance: message });\n                if (!message.hasOwnProperty("scene"))\n                    throw $util.ProtocolError("missing required \'scene\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE} OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                {\n                    var error = $root.op_client.Actor.verify(message.actor);\n                    if (error)\n                        return "actor." + error;\n                }\n                {\n                    var error = $root.op_client.Scene.verify(message.scene);\n                    if (error)\n                        return "scene." + error;\n                }\n                if (message.terrain_Types != null && message.hasOwnProperty("terrain_Types")) {\n                    if (!Array.isArray(message.terrain_Types))\n                        return "terrain_Types: array expected";\n                    for (var i = 0; i < message.terrain_Types.length; ++i) {\n                        var error = $root.op_gameconfig.TerrainType.verify(message.terrain_Types[i]);\n                        if (error)\n                            return "terrain_Types." + error;\n                    }\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE} OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE();\n                if (object.actor != null) {\n                    if (typeof object.actor !== "object")\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE.actor: object expected");\n                    message.actor = $root.op_client.Actor.fromObject(object.actor);\n                }\n                if (object.scene != null) {\n                    if (typeof object.scene !== "object")\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE.scene: object expected");\n                    message.scene = $root.op_client.Scene.fromObject(object.scene);\n                }\n                if (object.terrain_Types) {\n                    if (!Array.isArray(object.terrain_Types))\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE.terrain_Types: array expected");\n                    message.terrain_Types = [];\n                    for (var i = 0; i < object.terrain_Types.length; ++i) {\n                        if (typeof object.terrain_Types[i] !== "object")\n                            throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE.terrain_Types: object expected");\n                        message.terrain_Types[i] = $root.op_gameconfig.TerrainType.fromObject(object.terrain_Types[i]);\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE} message OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.terrain_Types = [];\n                if (options.defaults) {\n                    object.actor = null;\n                    object.scene = null;\n                }\n                if (message.actor != null && message.hasOwnProperty("actor"))\n                    object.actor = $root.op_client.Actor.toObject(message.actor, options);\n                if (message.scene != null && message.hasOwnProperty("scene"))\n                    object.scene = $root.op_client.Scene.toObject(message.scene, options);\n                if (message.terrain_Types && message.terrain_Types.length) {\n                    object.terrain_Types = [];\n                    for (var j = 0; j < message.terrain_Types.length; ++j)\n                        object.terrain_Types[j] = $root.op_gameconfig.TerrainType.toObject(message.terrain_Types[j], options);\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_RES_CLIENT_ENTER_SCENE;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS.\n             * @implements IOP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS} OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS instance\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS} message OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS} message OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS} OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS} OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS} OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS)\n                    return object;\n                return new $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS();\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS} message OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS.toObject = function toObject() {\n                return {};\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_REQ_CLIENT_SCENE_TRANSITIONS;\n        })();\n    \n        op_client.ChangeAnimation = (function() {\n    \n            /**\n             * Properties of a ChangeAnimation.\n             * @memberof op_client\n             * @interface IChangeAnimation\n             * @property {number} id ChangeAnimation id\n             * @property {string} animationName ChangeAnimation animationName\n             * @property {boolean} scale ChangeAnimation scale\n             * @property {boolean|null} [isQueue] ChangeAnimation isQueue\n             */\n    \n            /**\n             * Constructs a new ChangeAnimation.\n             * @memberof op_client\n             * @classdesc Represents a ChangeAnimation.\n             * @implements IChangeAnimation\n             * @constructor\n             * @param {op_client.IChangeAnimation=} [properties] Properties to set\n             */\n            function ChangeAnimation(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * ChangeAnimation id.\n             * @member {number} id\n             * @memberof op_client.ChangeAnimation\n             * @instance\n             */\n            ChangeAnimation.prototype.id = 0;\n    \n            /**\n             * ChangeAnimation animationName.\n             * @member {string} animationName\n             * @memberof op_client.ChangeAnimation\n             * @instance\n             */\n            ChangeAnimation.prototype.animationName = "";\n    \n            /**\n             * ChangeAnimation scale.\n             * @member {boolean} scale\n             * @memberof op_client.ChangeAnimation\n             * @instance\n             */\n            ChangeAnimation.prototype.scale = false;\n    \n            /**\n             * ChangeAnimation isQueue.\n             * @member {boolean} isQueue\n             * @memberof op_client.ChangeAnimation\n             * @instance\n             */\n            ChangeAnimation.prototype.isQueue = false;\n    \n            /**\n             * Creates a new ChangeAnimation instance using the specified properties.\n             * @function create\n             * @memberof op_client.ChangeAnimation\n             * @static\n             * @param {op_client.IChangeAnimation=} [properties] Properties to set\n             * @returns {op_client.ChangeAnimation} ChangeAnimation instance\n             */\n            ChangeAnimation.create = function create(properties) {\n                return new ChangeAnimation(properties);\n            };\n    \n            /**\n             * Encodes the specified ChangeAnimation message. Does not implicitly {@link op_client.ChangeAnimation.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.ChangeAnimation\n             * @static\n             * @param {op_client.IChangeAnimation} message ChangeAnimation message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ChangeAnimation.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.id);\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.animationName);\n                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.scale);\n                if (message.isQueue != null && message.hasOwnProperty("isQueue"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).bool(message.isQueue);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified ChangeAnimation message, length delimited. Does not implicitly {@link op_client.ChangeAnimation.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.ChangeAnimation\n             * @static\n             * @param {op_client.IChangeAnimation} message ChangeAnimation message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ChangeAnimation.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a ChangeAnimation message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.ChangeAnimation\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.ChangeAnimation} ChangeAnimation\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ChangeAnimation.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.ChangeAnimation();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.id = reader.int32();\n                        break;\n                    case 2:\n                        message.animationName = reader.string();\n                        break;\n                    case 3:\n                        message.scale = reader.bool();\n                        break;\n                    case 4:\n                        message.isQueue = reader.bool();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("id"))\n                    throw $util.ProtocolError("missing required \'id\'", { instance: message });\n                if (!message.hasOwnProperty("animationName"))\n                    throw $util.ProtocolError("missing required \'animationName\'", { instance: message });\n                if (!message.hasOwnProperty("scale"))\n                    throw $util.ProtocolError("missing required \'scale\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a ChangeAnimation message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.ChangeAnimation\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.ChangeAnimation} ChangeAnimation\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ChangeAnimation.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a ChangeAnimation message.\n             * @function verify\n             * @memberof op_client.ChangeAnimation\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            ChangeAnimation.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.id))\n                    return "id: integer expected";\n                if (!$util.isString(message.animationName))\n                    return "animationName: string expected";\n                if (typeof message.scale !== "boolean")\n                    return "scale: boolean expected";\n                if (message.isQueue != null && message.hasOwnProperty("isQueue"))\n                    if (typeof message.isQueue !== "boolean")\n                        return "isQueue: boolean expected";\n                return null;\n            };\n    \n            /**\n             * Creates a ChangeAnimation message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.ChangeAnimation\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.ChangeAnimation} ChangeAnimation\n             */\n            ChangeAnimation.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.ChangeAnimation)\n                    return object;\n                var message = new $root.op_client.ChangeAnimation();\n                if (object.id != null)\n                    message.id = object.id | 0;\n                if (object.animationName != null)\n                    message.animationName = String(object.animationName);\n                if (object.scale != null)\n                    message.scale = Boolean(object.scale);\n                if (object.isQueue != null)\n                    message.isQueue = Boolean(object.isQueue);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a ChangeAnimation message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.ChangeAnimation\n             * @static\n             * @param {op_client.ChangeAnimation} message ChangeAnimation\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            ChangeAnimation.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.id = 0;\n                    object.animationName = "";\n                    object.scale = false;\n                    object.isQueue = false;\n                }\n                if (message.id != null && message.hasOwnProperty("id"))\n                    object.id = message.id;\n                if (message.animationName != null && message.hasOwnProperty("animationName"))\n                    object.animationName = message.animationName;\n                if (message.scale != null && message.hasOwnProperty("scale"))\n                    object.scale = message.scale;\n                if (message.isQueue != null && message.hasOwnProperty("isQueue"))\n                    object.isQueue = message.isQueue;\n                return object;\n            };\n    \n            /**\n             * Converts this ChangeAnimation to JSON.\n             * @function toJSON\n             * @memberof op_client.ChangeAnimation\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            ChangeAnimation.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return ChangeAnimation;\n        })();\n    \n        op_client.OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT = (function() {\n    \n            /**\n             * Properties of a OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT.\n             * @memberof op_client\n             * @interface IOP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT\n             * @property {Array.<op_gameconfig.ITerrainType>|null} [terrain_Types] OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT terrain_Types\n             * @property {Array.<op_gameconfig.IElement_type>|null} [element_Types] OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT element_Types\n             * @property {Array.<op_gameconfig.IItemType>|null} [item_Types] OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT item_Types\n             * @property {Array.<op_gameconfig.IAvatarBackbone>|null} [avatarBackbone] OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT avatarBackbone\n             * @property {Array.<string>|null} [resourceRoot] OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT resourceRoot\n             * @property {Array.<op_gameconfig.IShop>|null} [shops] OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT shops\n             * @property {Array.<string>|null} [configUrls] OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT configUrls\n             * @property {Array.<op_def.IKeyCodeEvent>|null} [keyEvents] OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT keyEvents\n             * @property {string|null} [virtualWorldId] OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT virtualWorldId\n             */\n    \n            /**\n             * Constructs a new OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT.\n             * @memberof op_client\n             * @classdesc Represents a OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT.\n             * @implements IOP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT\n             * @constructor\n             * @param {op_client.IOP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT=} [properties] Properties to set\n             */\n            function OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT(properties) {\n                this.terrain_Types = [];\n                this.element_Types = [];\n                this.item_Types = [];\n                this.avatarBackbone = [];\n                this.resourceRoot = [];\n                this.shops = [];\n                this.configUrls = [];\n                this.keyEvents = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT terrain_Types.\n             * @member {Array.<op_gameconfig.ITerrainType>} terrain_Types\n             * @memberof op_client.OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT\n             * @instance\n             */\n            OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT.prototype.terrain_Types = $util.emptyArray;\n    \n            /**\n             * OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT element_Types.\n             * @member {Array.<op_gameconfig.IElement_type>} element_Types\n             * @memberof op_client.OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT\n             * @instance\n             */\n            OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT.prototype.element_Types = $util.emptyArray;\n    \n            /**\n             * OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT item_Types.\n             * @member {Array.<op_gameconfig.IItemType>} item_Types\n             * @memberof op_client.OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT\n             * @instance\n             */\n            OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT.prototype.item_Types = $util.emptyArray;\n    \n            /**\n             * OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT avatarBackbone.\n             * @member {Array.<op_gameconfig.IAvatarBackbone>} avatarBackbone\n             * @memberof op_client.OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT\n             * @instance\n             */\n            OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT.prototype.avatarBackbone = $util.emptyArray;\n    \n            /**\n             * OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT resourceRoot.\n             * @member {Array.<string>} resourceRoot\n             * @memberof op_client.OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT\n             * @instance\n             */\n            OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT.prototype.resourceRoot = $util.emptyArray;\n    \n            /**\n             * OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT shops.\n             * @member {Array.<op_gameconfig.IShop>} shops\n             * @memberof op_client.OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT\n             * @instance\n             */\n            OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT.prototype.shops = $util.emptyArray;\n    \n            /**\n             * OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT configUrls.\n             * @member {Array.<string>} configUrls\n             * @memberof op_client.OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT\n             * @instance\n             */\n            OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT.prototype.configUrls = $util.emptyArray;\n    \n            /**\n             * OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT keyEvents.\n             * @member {Array.<op_def.IKeyCodeEvent>} keyEvents\n             * @memberof op_client.OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT\n             * @instance\n             */\n            OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT.prototype.keyEvents = $util.emptyArray;\n    \n            /**\n             * OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT virtualWorldId.\n             * @member {string} virtualWorldId\n             * @memberof op_client.OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT\n             * @instance\n             */\n            OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT.prototype.virtualWorldId = "";\n    \n            /**\n             * Creates a new OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT\n             * @static\n             * @param {op_client.IOP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT=} [properties] Properties to set\n             * @returns {op_client.OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT} OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT instance\n             */\n            OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT.create = function create(properties) {\n                return new OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT message. Does not implicitly {@link op_client.OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT\n             * @static\n             * @param {op_client.IOP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT} message OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.terrain_Types != null && message.terrain_Types.length)\n                    for (var i = 0; i < message.terrain_Types.length; ++i)\n                        $root.op_gameconfig.TerrainType.encode(message.terrain_Types[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.element_Types != null && message.element_Types.length)\n                    for (var i = 0; i < message.element_Types.length; ++i)\n                        $root.op_gameconfig.Element_type.encode(message.element_Types[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                if (message.item_Types != null && message.item_Types.length)\n                    for (var i = 0; i < message.item_Types.length; ++i)\n                        $root.op_gameconfig.ItemType.encode(message.item_Types[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                if (message.avatarBackbone != null && message.avatarBackbone.length)\n                    for (var i = 0; i < message.avatarBackbone.length; ++i)\n                        $root.op_gameconfig.AvatarBackbone.encode(message.avatarBackbone[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n                if (message.resourceRoot != null && message.resourceRoot.length)\n                    for (var i = 0; i < message.resourceRoot.length; ++i)\n                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.resourceRoot[i]);\n                if (message.shops != null && message.shops.length)\n                    for (var i = 0; i < message.shops.length; ++i)\n                        $root.op_gameconfig.Shop.encode(message.shops[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n                if (message.configUrls != null && message.configUrls.length)\n                    for (var i = 0; i < message.configUrls.length; ++i)\n                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.configUrls[i]);\n                if (message.keyEvents != null && message.keyEvents.length)\n                    for (var i = 0; i < message.keyEvents.length; ++i)\n                        $root.op_def.KeyCodeEvent.encode(message.keyEvents[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n                if (message.virtualWorldId != null && message.hasOwnProperty("virtualWorldId"))\n                    writer.uint32(/* id 9, wireType 2 =*/74).string(message.virtualWorldId);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT message, length delimited. Does not implicitly {@link op_client.OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT\n             * @static\n             * @param {op_client.IOP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT} message OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT} OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.terrain_Types && message.terrain_Types.length))\n                            message.terrain_Types = [];\n                        message.terrain_Types.push($root.op_gameconfig.TerrainType.decode(reader, reader.uint32()));\n                        break;\n                    case 2:\n                        if (!(message.element_Types && message.element_Types.length))\n                            message.element_Types = [];\n                        message.element_Types.push($root.op_gameconfig.Element_type.decode(reader, reader.uint32()));\n                        break;\n                    case 3:\n                        if (!(message.item_Types && message.item_Types.length))\n                            message.item_Types = [];\n                        message.item_Types.push($root.op_gameconfig.ItemType.decode(reader, reader.uint32()));\n                        break;\n                    case 4:\n                        if (!(message.avatarBackbone && message.avatarBackbone.length))\n                            message.avatarBackbone = [];\n                        message.avatarBackbone.push($root.op_gameconfig.AvatarBackbone.decode(reader, reader.uint32()));\n                        break;\n                    case 5:\n                        if (!(message.resourceRoot && message.resourceRoot.length))\n                            message.resourceRoot = [];\n                        message.resourceRoot.push(reader.string());\n                        break;\n                    case 6:\n                        if (!(message.shops && message.shops.length))\n                            message.shops = [];\n                        message.shops.push($root.op_gameconfig.Shop.decode(reader, reader.uint32()));\n                        break;\n                    case 7:\n                        if (!(message.configUrls && message.configUrls.length))\n                            message.configUrls = [];\n                        message.configUrls.push(reader.string());\n                        break;\n                    case 8:\n                        if (!(message.keyEvents && message.keyEvents.length))\n                            message.keyEvents = [];\n                        message.keyEvents.push($root.op_def.KeyCodeEvent.decode(reader, reader.uint32()));\n                        break;\n                    case 9:\n                        message.virtualWorldId = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT} OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT message.\n             * @function verify\n             * @memberof op_client.OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.terrain_Types != null && message.hasOwnProperty("terrain_Types")) {\n                    if (!Array.isArray(message.terrain_Types))\n                        return "terrain_Types: array expected";\n                    for (var i = 0; i < message.terrain_Types.length; ++i) {\n                        var error = $root.op_gameconfig.TerrainType.verify(message.terrain_Types[i]);\n                        if (error)\n                            return "terrain_Types." + error;\n                    }\n                }\n                if (message.element_Types != null && message.hasOwnProperty("element_Types")) {\n                    if (!Array.isArray(message.element_Types))\n                        return "element_Types: array expected";\n                    for (var i = 0; i < message.element_Types.length; ++i) {\n                        var error = $root.op_gameconfig.Element_type.verify(message.element_Types[i]);\n                        if (error)\n                            return "element_Types." + error;\n                    }\n                }\n                if (message.item_Types != null && message.hasOwnProperty("item_Types")) {\n                    if (!Array.isArray(message.item_Types))\n                        return "item_Types: array expected";\n                    for (var i = 0; i < message.item_Types.length; ++i) {\n                        var error = $root.op_gameconfig.ItemType.verify(message.item_Types[i]);\n                        if (error)\n                            return "item_Types." + error;\n                    }\n                }\n                if (message.avatarBackbone != null && message.hasOwnProperty("avatarBackbone")) {\n                    if (!Array.isArray(message.avatarBackbone))\n                        return "avatarBackbone: array expected";\n                    for (var i = 0; i < message.avatarBackbone.length; ++i) {\n                        var error = $root.op_gameconfig.AvatarBackbone.verify(message.avatarBackbone[i]);\n                        if (error)\n                            return "avatarBackbone." + error;\n                    }\n                }\n                if (message.resourceRoot != null && message.hasOwnProperty("resourceRoot")) {\n                    if (!Array.isArray(message.resourceRoot))\n                        return "resourceRoot: array expected";\n                    for (var i = 0; i < message.resourceRoot.length; ++i)\n                        if (!$util.isString(message.resourceRoot[i]))\n                            return "resourceRoot: string[] expected";\n                }\n                if (message.shops != null && message.hasOwnProperty("shops")) {\n                    if (!Array.isArray(message.shops))\n                        return "shops: array expected";\n                    for (var i = 0; i < message.shops.length; ++i) {\n                        var error = $root.op_gameconfig.Shop.verify(message.shops[i]);\n                        if (error)\n                            return "shops." + error;\n                    }\n                }\n                if (message.configUrls != null && message.hasOwnProperty("configUrls")) {\n                    if (!Array.isArray(message.configUrls))\n                        return "configUrls: array expected";\n                    for (var i = 0; i < message.configUrls.length; ++i)\n                        if (!$util.isString(message.configUrls[i]))\n                            return "configUrls: string[] expected";\n                }\n                if (message.keyEvents != null && message.hasOwnProperty("keyEvents")) {\n                    if (!Array.isArray(message.keyEvents))\n                        return "keyEvents: array expected";\n                    for (var i = 0; i < message.keyEvents.length; ++i) {\n                        var error = $root.op_def.KeyCodeEvent.verify(message.keyEvents[i]);\n                        if (error)\n                            return "keyEvents." + error;\n                    }\n                }\n                if (message.virtualWorldId != null && message.hasOwnProperty("virtualWorldId"))\n                    if (!$util.isString(message.virtualWorldId))\n                        return "virtualWorldId: string expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT} OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT\n             */\n            OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT)\n                    return object;\n                var message = new $root.op_client.OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT();\n                if (object.terrain_Types) {\n                    if (!Array.isArray(object.terrain_Types))\n                        throw TypeError(".op_client.OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT.terrain_Types: array expected");\n                    message.terrain_Types = [];\n                    for (var i = 0; i < object.terrain_Types.length; ++i) {\n                        if (typeof object.terrain_Types[i] !== "object")\n                            throw TypeError(".op_client.OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT.terrain_Types: object expected");\n                        message.terrain_Types[i] = $root.op_gameconfig.TerrainType.fromObject(object.terrain_Types[i]);\n                    }\n                }\n                if (object.element_Types) {\n                    if (!Array.isArray(object.element_Types))\n                        throw TypeError(".op_client.OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT.element_Types: array expected");\n                    message.element_Types = [];\n                    for (var i = 0; i < object.element_Types.length; ++i) {\n                        if (typeof object.element_Types[i] !== "object")\n                            throw TypeError(".op_client.OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT.element_Types: object expected");\n                        message.element_Types[i] = $root.op_gameconfig.Element_type.fromObject(object.element_Types[i]);\n                    }\n                }\n                if (object.item_Types) {\n                    if (!Array.isArray(object.item_Types))\n                        throw TypeError(".op_client.OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT.item_Types: array expected");\n                    message.item_Types = [];\n                    for (var i = 0; i < object.item_Types.length; ++i) {\n                        if (typeof object.item_Types[i] !== "object")\n                            throw TypeError(".op_client.OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT.item_Types: object expected");\n                        message.item_Types[i] = $root.op_gameconfig.ItemType.fromObject(object.item_Types[i]);\n                    }\n                }\n                if (object.avatarBackbone) {\n                    if (!Array.isArray(object.avatarBackbone))\n                        throw TypeError(".op_client.OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT.avatarBackbone: array expected");\n                    message.avatarBackbone = [];\n                    for (var i = 0; i < object.avatarBackbone.length; ++i) {\n                        if (typeof object.avatarBackbone[i] !== "object")\n                            throw TypeError(".op_client.OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT.avatarBackbone: object expected");\n                        message.avatarBackbone[i] = $root.op_gameconfig.AvatarBackbone.fromObject(object.avatarBackbone[i]);\n                    }\n                }\n                if (object.resourceRoot) {\n                    if (!Array.isArray(object.resourceRoot))\n                        throw TypeError(".op_client.OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT.resourceRoot: array expected");\n                    message.resourceRoot = [];\n                    for (var i = 0; i < object.resourceRoot.length; ++i)\n                        message.resourceRoot[i] = String(object.resourceRoot[i]);\n                }\n                if (object.shops) {\n                    if (!Array.isArray(object.shops))\n                        throw TypeError(".op_client.OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT.shops: array expected");\n                    message.shops = [];\n                    for (var i = 0; i < object.shops.length; ++i) {\n                        if (typeof object.shops[i] !== "object")\n                            throw TypeError(".op_client.OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT.shops: object expected");\n                        message.shops[i] = $root.op_gameconfig.Shop.fromObject(object.shops[i]);\n                    }\n                }\n                if (object.configUrls) {\n                    if (!Array.isArray(object.configUrls))\n                        throw TypeError(".op_client.OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT.configUrls: array expected");\n                    message.configUrls = [];\n                    for (var i = 0; i < object.configUrls.length; ++i)\n                        message.configUrls[i] = String(object.configUrls[i]);\n                }\n                if (object.keyEvents) {\n                    if (!Array.isArray(object.keyEvents))\n                        throw TypeError(".op_client.OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT.keyEvents: array expected");\n                    message.keyEvents = [];\n                    for (var i = 0; i < object.keyEvents.length; ++i) {\n                        if (typeof object.keyEvents[i] !== "object")\n                            throw TypeError(".op_client.OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT.keyEvents: object expected");\n                        message.keyEvents[i] = $root.op_def.KeyCodeEvent.fromObject(object.keyEvents[i]);\n                    }\n                }\n                if (object.virtualWorldId != null)\n                    message.virtualWorldId = String(object.virtualWorldId);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT\n             * @static\n             * @param {op_client.OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT} message OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults) {\n                    object.terrain_Types = [];\n                    object.element_Types = [];\n                    object.item_Types = [];\n                    object.avatarBackbone = [];\n                    object.resourceRoot = [];\n                    object.shops = [];\n                    object.configUrls = [];\n                    object.keyEvents = [];\n                }\n                if (options.defaults)\n                    object.virtualWorldId = "";\n                if (message.terrain_Types && message.terrain_Types.length) {\n                    object.terrain_Types = [];\n                    for (var j = 0; j < message.terrain_Types.length; ++j)\n                        object.terrain_Types[j] = $root.op_gameconfig.TerrainType.toObject(message.terrain_Types[j], options);\n                }\n                if (message.element_Types && message.element_Types.length) {\n                    object.element_Types = [];\n                    for (var j = 0; j < message.element_Types.length; ++j)\n                        object.element_Types[j] = $root.op_gameconfig.Element_type.toObject(message.element_Types[j], options);\n                }\n                if (message.item_Types && message.item_Types.length) {\n                    object.item_Types = [];\n                    for (var j = 0; j < message.item_Types.length; ++j)\n                        object.item_Types[j] = $root.op_gameconfig.ItemType.toObject(message.item_Types[j], options);\n                }\n                if (message.avatarBackbone && message.avatarBackbone.length) {\n                    object.avatarBackbone = [];\n                    for (var j = 0; j < message.avatarBackbone.length; ++j)\n                        object.avatarBackbone[j] = $root.op_gameconfig.AvatarBackbone.toObject(message.avatarBackbone[j], options);\n                }\n                if (message.resourceRoot && message.resourceRoot.length) {\n                    object.resourceRoot = [];\n                    for (var j = 0; j < message.resourceRoot.length; ++j)\n                        object.resourceRoot[j] = message.resourceRoot[j];\n                }\n                if (message.shops && message.shops.length) {\n                    object.shops = [];\n                    for (var j = 0; j < message.shops.length; ++j)\n                        object.shops[j] = $root.op_gameconfig.Shop.toObject(message.shops[j], options);\n                }\n                if (message.configUrls && message.configUrls.length) {\n                    object.configUrls = [];\n                    for (var j = 0; j < message.configUrls.length; ++j)\n                        object.configUrls[j] = message.configUrls[j];\n                }\n                if (message.keyEvents && message.keyEvents.length) {\n                    object.keyEvents = [];\n                    for (var j = 0; j < message.keyEvents.length; ++j)\n                        object.keyEvents[j] = $root.op_def.KeyCodeEvent.toObject(message.keyEvents[j], options);\n                }\n                if (message.virtualWorldId != null && message.hasOwnProperty("virtualWorldId"))\n                    object.virtualWorldId = message.virtualWorldId;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_GATEWAY_RES_CLIENT_VIRTUAL_WORLD_INIT;\n        })();\n    \n        op_client.OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION = (function() {\n    \n            /**\n             * Properties of a OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION.\n             * @memberof op_client\n             * @interface IOP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION\n             * @property {Array.<op_client.IChangeAnimation>|null} [changeAnimation] OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION changeAnimation\n             */\n    \n            /**\n             * Constructs a new OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION.\n             * @memberof op_client\n             * @classdesc Represents a OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION.\n             * @implements IOP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION\n             * @constructor\n             * @param {op_client.IOP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION=} [properties] Properties to set\n             */\n            function OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION(properties) {\n                this.changeAnimation = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION changeAnimation.\n             * @member {Array.<op_client.IChangeAnimation>} changeAnimation\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION\n             * @instance\n             */\n            OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION.prototype.changeAnimation = $util.emptyArray;\n    \n            /**\n             * Creates a new OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION\n             * @static\n             * @param {op_client.IOP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION=} [properties] Properties to set\n             * @returns {op_client.OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION} OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION instance\n             */\n            OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION.create = function create(properties) {\n                return new OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION message. Does not implicitly {@link op_client.OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION\n             * @static\n             * @param {op_client.IOP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION} message OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.changeAnimation != null && message.changeAnimation.length)\n                    for (var i = 0; i < message.changeAnimation.length; ++i)\n                        $root.op_client.ChangeAnimation.encode(message.changeAnimation[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION message, length delimited. Does not implicitly {@link op_client.OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION\n             * @static\n             * @param {op_client.IOP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION} message OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION} OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.changeAnimation && message.changeAnimation.length))\n                            message.changeAnimation = [];\n                        message.changeAnimation.push($root.op_client.ChangeAnimation.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION} OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION message.\n             * @function verify\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.changeAnimation != null && message.hasOwnProperty("changeAnimation")) {\n                    if (!Array.isArray(message.changeAnimation))\n                        return "changeAnimation: array expected";\n                    for (var i = 0; i < message.changeAnimation.length; ++i) {\n                        var error = $root.op_client.ChangeAnimation.verify(message.changeAnimation[i]);\n                        if (error)\n                            return "changeAnimation." + error;\n                    }\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION} OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION\n             */\n            OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION)\n                    return object;\n                var message = new $root.op_client.OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION();\n                if (object.changeAnimation) {\n                    if (!Array.isArray(object.changeAnimation))\n                        throw TypeError(".op_client.OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION.changeAnimation: array expected");\n                    message.changeAnimation = [];\n                    for (var i = 0; i < object.changeAnimation.length; ++i) {\n                        if (typeof object.changeAnimation[i] !== "object")\n                            throw TypeError(".op_client.OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION.changeAnimation: object expected");\n                        message.changeAnimation[i] = $root.op_client.ChangeAnimation.fromObject(object.changeAnimation[i]);\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION\n             * @static\n             * @param {op_client.OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION} message OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.changeAnimation = [];\n                if (message.changeAnimation && message.changeAnimation.length) {\n                    object.changeAnimation = [];\n                    for (var j = 0; j < message.changeAnimation.length; ++j)\n                        object.changeAnimation[j] = $root.op_client.ChangeAnimation.toObject(message.changeAnimation[j], options);\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_GATEWAY_REQ_CLIENT_CHANGE_ELEMENT_ANIMATION;\n        })();\n    \n        op_client.ChangeTerrainAnimation = (function() {\n    \n            /**\n             * Properties of a ChangeTerrainAnimation.\n             * @memberof op_client\n             * @interface IChangeTerrainAnimation\n             * @property {string} animationName ChangeTerrainAnimation animationName\n             * @property {boolean} scale ChangeTerrainAnimation scale\n             * @property {boolean|null} [isQueue] ChangeTerrainAnimation isQueue\n             * @property {number} x ChangeTerrainAnimation x\n             * @property {number} y ChangeTerrainAnimation y\n             * @property {number|null} [z] ChangeTerrainAnimation z\n             */\n    \n            /**\n             * Constructs a new ChangeTerrainAnimation.\n             * @memberof op_client\n             * @classdesc Represents a ChangeTerrainAnimation.\n             * @implements IChangeTerrainAnimation\n             * @constructor\n             * @param {op_client.IChangeTerrainAnimation=} [properties] Properties to set\n             */\n            function ChangeTerrainAnimation(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * ChangeTerrainAnimation animationName.\n             * @member {string} animationName\n             * @memberof op_client.ChangeTerrainAnimation\n             * @instance\n             */\n            ChangeTerrainAnimation.prototype.animationName = "";\n    \n            /**\n             * ChangeTerrainAnimation scale.\n             * @member {boolean} scale\n             * @memberof op_client.ChangeTerrainAnimation\n             * @instance\n             */\n            ChangeTerrainAnimation.prototype.scale = false;\n    \n            /**\n             * ChangeTerrainAnimation isQueue.\n             * @member {boolean} isQueue\n             * @memberof op_client.ChangeTerrainAnimation\n             * @instance\n             */\n            ChangeTerrainAnimation.prototype.isQueue = false;\n    \n            /**\n             * ChangeTerrainAnimation x.\n             * @member {number} x\n             * @memberof op_client.ChangeTerrainAnimation\n             * @instance\n             */\n            ChangeTerrainAnimation.prototype.x = 0;\n    \n            /**\n             * ChangeTerrainAnimation y.\n             * @member {number} y\n             * @memberof op_client.ChangeTerrainAnimation\n             * @instance\n             */\n            ChangeTerrainAnimation.prototype.y = 0;\n    \n            /**\n             * ChangeTerrainAnimation z.\n             * @member {number} z\n             * @memberof op_client.ChangeTerrainAnimation\n             * @instance\n             */\n            ChangeTerrainAnimation.prototype.z = 0;\n    \n            /**\n             * Creates a new ChangeTerrainAnimation instance using the specified properties.\n             * @function create\n             * @memberof op_client.ChangeTerrainAnimation\n             * @static\n             * @param {op_client.IChangeTerrainAnimation=} [properties] Properties to set\n             * @returns {op_client.ChangeTerrainAnimation} ChangeTerrainAnimation instance\n             */\n            ChangeTerrainAnimation.create = function create(properties) {\n                return new ChangeTerrainAnimation(properties);\n            };\n    \n            /**\n             * Encodes the specified ChangeTerrainAnimation message. Does not implicitly {@link op_client.ChangeTerrainAnimation.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.ChangeTerrainAnimation\n             * @static\n             * @param {op_client.IChangeTerrainAnimation} message ChangeTerrainAnimation message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ChangeTerrainAnimation.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.animationName);\n                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.scale);\n                if (message.isQueue != null && message.hasOwnProperty("isQueue"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).bool(message.isQueue);\n                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.x);\n                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.y);\n                if (message.z != null && message.hasOwnProperty("z"))\n                    writer.uint32(/* id 7, wireType 0 =*/56).int32(message.z);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified ChangeTerrainAnimation message, length delimited. Does not implicitly {@link op_client.ChangeTerrainAnimation.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.ChangeTerrainAnimation\n             * @static\n             * @param {op_client.IChangeTerrainAnimation} message ChangeTerrainAnimation message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ChangeTerrainAnimation.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a ChangeTerrainAnimation message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.ChangeTerrainAnimation\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.ChangeTerrainAnimation} ChangeTerrainAnimation\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ChangeTerrainAnimation.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.ChangeTerrainAnimation();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 2:\n                        message.animationName = reader.string();\n                        break;\n                    case 3:\n                        message.scale = reader.bool();\n                        break;\n                    case 4:\n                        message.isQueue = reader.bool();\n                        break;\n                    case 5:\n                        message.x = reader.int32();\n                        break;\n                    case 6:\n                        message.y = reader.int32();\n                        break;\n                    case 7:\n                        message.z = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("animationName"))\n                    throw $util.ProtocolError("missing required \'animationName\'", { instance: message });\n                if (!message.hasOwnProperty("scale"))\n                    throw $util.ProtocolError("missing required \'scale\'", { instance: message });\n                if (!message.hasOwnProperty("x"))\n                    throw $util.ProtocolError("missing required \'x\'", { instance: message });\n                if (!message.hasOwnProperty("y"))\n                    throw $util.ProtocolError("missing required \'y\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a ChangeTerrainAnimation message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.ChangeTerrainAnimation\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.ChangeTerrainAnimation} ChangeTerrainAnimation\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ChangeTerrainAnimation.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a ChangeTerrainAnimation message.\n             * @function verify\n             * @memberof op_client.ChangeTerrainAnimation\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            ChangeTerrainAnimation.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.animationName))\n                    return "animationName: string expected";\n                if (typeof message.scale !== "boolean")\n                    return "scale: boolean expected";\n                if (message.isQueue != null && message.hasOwnProperty("isQueue"))\n                    if (typeof message.isQueue !== "boolean")\n                        return "isQueue: boolean expected";\n                if (!$util.isInteger(message.x))\n                    return "x: integer expected";\n                if (!$util.isInteger(message.y))\n                    return "y: integer expected";\n                if (message.z != null && message.hasOwnProperty("z"))\n                    if (!$util.isInteger(message.z))\n                        return "z: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a ChangeTerrainAnimation message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.ChangeTerrainAnimation\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.ChangeTerrainAnimation} ChangeTerrainAnimation\n             */\n            ChangeTerrainAnimation.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.ChangeTerrainAnimation)\n                    return object;\n                var message = new $root.op_client.ChangeTerrainAnimation();\n                if (object.animationName != null)\n                    message.animationName = String(object.animationName);\n                if (object.scale != null)\n                    message.scale = Boolean(object.scale);\n                if (object.isQueue != null)\n                    message.isQueue = Boolean(object.isQueue);\n                if (object.x != null)\n                    message.x = object.x | 0;\n                if (object.y != null)\n                    message.y = object.y | 0;\n                if (object.z != null)\n                    message.z = object.z | 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a ChangeTerrainAnimation message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.ChangeTerrainAnimation\n             * @static\n             * @param {op_client.ChangeTerrainAnimation} message ChangeTerrainAnimation\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            ChangeTerrainAnimation.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.animationName = "";\n                    object.scale = false;\n                    object.isQueue = false;\n                    object.x = 0;\n                    object.y = 0;\n                    object.z = 0;\n                }\n                if (message.animationName != null && message.hasOwnProperty("animationName"))\n                    object.animationName = message.animationName;\n                if (message.scale != null && message.hasOwnProperty("scale"))\n                    object.scale = message.scale;\n                if (message.isQueue != null && message.hasOwnProperty("isQueue"))\n                    object.isQueue = message.isQueue;\n                if (message.x != null && message.hasOwnProperty("x"))\n                    object.x = message.x;\n                if (message.y != null && message.hasOwnProperty("y"))\n                    object.y = message.y;\n                if (message.z != null && message.hasOwnProperty("z"))\n                    object.z = message.z;\n                return object;\n            };\n    \n            /**\n             * Converts this ChangeTerrainAnimation to JSON.\n             * @function toJSON\n             * @memberof op_client.ChangeTerrainAnimation\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            ChangeTerrainAnimation.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return ChangeTerrainAnimation;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING\n             * @property {number} id OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING id\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING.\n             * @implements IOP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING id.\n             * @member {number} id\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING.prototype.id = 0;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING} OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING instance\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING} message OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.id);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING} message OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING} OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.id = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("id"))\n                    throw $util.ProtocolError("missing required \'id\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING} OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.id))\n                    return "id: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING} OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING();\n                if (object.id != null)\n                    message.id = object.id | 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING} message OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.id = 0;\n                if (message.id != null && message.hasOwnProperty("id"))\n                    object.id = message.id;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_TALKING;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP\n             * @property {number} id OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP id\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP.\n             * @implements IOP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP id.\n             * @member {number} id\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP.prototype.id = 0;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP} OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP instance\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP} message OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.id);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP} message OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP} OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.id = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("id"))\n                    throw $util.ProtocolError("missing required \'id\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP} OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.id))\n                    return "id: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP} OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP();\n                if (object.id != null)\n                    message.id = object.id | 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP} message OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.id = 0;\n                if (message.id != null && message.hasOwnProperty("id"))\n                    object.id = message.id;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_REQ_CLIENT_CHARACTER_SHUT_UP;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION\n             * @property {Array.<op_client.IChangeTerrainAnimation>|null} [changeTerrainAnimation] OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION changeTerrainAnimation\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION.\n             * @implements IOP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION(properties) {\n                this.changeTerrainAnimation = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION changeTerrainAnimation.\n             * @member {Array.<op_client.IChangeTerrainAnimation>} changeTerrainAnimation\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION.prototype.changeTerrainAnimation = $util.emptyArray;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION} OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION instance\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION} message OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.changeTerrainAnimation != null && message.changeTerrainAnimation.length)\n                    for (var i = 0; i < message.changeTerrainAnimation.length; ++i)\n                        $root.op_client.ChangeTerrainAnimation.encode(message.changeTerrainAnimation[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION} message OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION} OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.changeTerrainAnimation && message.changeTerrainAnimation.length))\n                            message.changeTerrainAnimation = [];\n                        message.changeTerrainAnimation.push($root.op_client.ChangeTerrainAnimation.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION} OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.changeTerrainAnimation != null && message.hasOwnProperty("changeTerrainAnimation")) {\n                    if (!Array.isArray(message.changeTerrainAnimation))\n                        return "changeTerrainAnimation: array expected";\n                    for (var i = 0; i < message.changeTerrainAnimation.length; ++i) {\n                        var error = $root.op_client.ChangeTerrainAnimation.verify(message.changeTerrainAnimation[i]);\n                        if (error)\n                            return "changeTerrainAnimation." + error;\n                    }\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION} OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION();\n                if (object.changeTerrainAnimation) {\n                    if (!Array.isArray(object.changeTerrainAnimation))\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION.changeTerrainAnimation: array expected");\n                    message.changeTerrainAnimation = [];\n                    for (var i = 0; i < object.changeTerrainAnimation.length; ++i) {\n                        if (typeof object.changeTerrainAnimation[i] !== "object")\n                            throw TypeError(".op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION.changeTerrainAnimation: object expected");\n                        message.changeTerrainAnimation[i] = $root.op_client.ChangeTerrainAnimation.fromObject(object.changeTerrainAnimation[i]);\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION} message OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.changeTerrainAnimation = [];\n                if (message.changeTerrainAnimation && message.changeTerrainAnimation.length) {\n                    object.changeTerrainAnimation = [];\n                    for (var j = 0; j < message.changeTerrainAnimation.length; ++j)\n                        object.changeTerrainAnimation[j] = $root.op_client.ChangeTerrainAnimation.toObject(message.changeTerrainAnimation[j], options);\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TERRAIN_ANIMATION;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION\n             * @property {Array.<op_client.IChangeAnimation>|null} [changeCharacterAnimation] OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION changeCharacterAnimation\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION.\n             * @implements IOP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION(properties) {\n                this.changeCharacterAnimation = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION changeCharacterAnimation.\n             * @member {Array.<op_client.IChangeAnimation>} changeCharacterAnimation\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION.prototype.changeCharacterAnimation = $util.emptyArray;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION} OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION instance\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION} message OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.changeCharacterAnimation != null && message.changeCharacterAnimation.length)\n                    for (var i = 0; i < message.changeCharacterAnimation.length; ++i)\n                        $root.op_client.ChangeAnimation.encode(message.changeCharacterAnimation[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION} message OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION} OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.changeCharacterAnimation && message.changeCharacterAnimation.length))\n                            message.changeCharacterAnimation = [];\n                        message.changeCharacterAnimation.push($root.op_client.ChangeAnimation.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION} OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.changeCharacterAnimation != null && message.hasOwnProperty("changeCharacterAnimation")) {\n                    if (!Array.isArray(message.changeCharacterAnimation))\n                        return "changeCharacterAnimation: array expected";\n                    for (var i = 0; i < message.changeCharacterAnimation.length; ++i) {\n                        var error = $root.op_client.ChangeAnimation.verify(message.changeCharacterAnimation[i]);\n                        if (error)\n                            return "changeCharacterAnimation." + error;\n                    }\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION} OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION();\n                if (object.changeCharacterAnimation) {\n                    if (!Array.isArray(object.changeCharacterAnimation))\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION.changeCharacterAnimation: array expected");\n                    message.changeCharacterAnimation = [];\n                    for (var i = 0; i < object.changeCharacterAnimation.length; ++i) {\n                        if (typeof object.changeCharacterAnimation[i] !== "object")\n                            throw TypeError(".op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION.changeCharacterAnimation: object expected");\n                        message.changeCharacterAnimation[i] = $root.op_client.ChangeAnimation.fromObject(object.changeCharacterAnimation[i]);\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION} message OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.changeCharacterAnimation = [];\n                if (message.changeCharacterAnimation && message.changeCharacterAnimation.length) {\n                    object.changeCharacterAnimation = [];\n                    for (var j = 0; j < message.changeCharacterAnimation.length; ++j)\n                        object.changeCharacterAnimation[j] = $root.op_client.ChangeAnimation.toObject(message.changeCharacterAnimation[j], options);\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_CHARACTER_ANIMATION;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION\n             * @property {Array.<op_client.IChangeAnimation>|null} [changeItemAnimation] OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION changeItemAnimation\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION.\n             * @implements IOP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION(properties) {\n                this.changeItemAnimation = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION changeItemAnimation.\n             * @member {Array.<op_client.IChangeAnimation>} changeItemAnimation\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION.prototype.changeItemAnimation = $util.emptyArray;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION} OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION instance\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION} message OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.changeItemAnimation != null && message.changeItemAnimation.length)\n                    for (var i = 0; i < message.changeItemAnimation.length; ++i)\n                        $root.op_client.ChangeAnimation.encode(message.changeItemAnimation[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION} message OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION} OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.changeItemAnimation && message.changeItemAnimation.length))\n                            message.changeItemAnimation = [];\n                        message.changeItemAnimation.push($root.op_client.ChangeAnimation.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION} OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.changeItemAnimation != null && message.hasOwnProperty("changeItemAnimation")) {\n                    if (!Array.isArray(message.changeItemAnimation))\n                        return "changeItemAnimation: array expected";\n                    for (var i = 0; i < message.changeItemAnimation.length; ++i) {\n                        var error = $root.op_client.ChangeAnimation.verify(message.changeItemAnimation[i]);\n                        if (error)\n                            return "changeItemAnimation." + error;\n                    }\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION} OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION();\n                if (object.changeItemAnimation) {\n                    if (!Array.isArray(object.changeItemAnimation))\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION.changeItemAnimation: array expected");\n                    message.changeItemAnimation = [];\n                    for (var i = 0; i < object.changeItemAnimation.length; ++i) {\n                        if (typeof object.changeItemAnimation[i] !== "object")\n                            throw TypeError(".op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION.changeItemAnimation: object expected");\n                        message.changeItemAnimation[i] = $root.op_client.ChangeAnimation.fromObject(object.changeItemAnimation[i]);\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION} message OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.changeItemAnimation = [];\n                if (message.changeItemAnimation && message.changeItemAnimation.length) {\n                    object.changeItemAnimation = [];\n                    for (var j = 0; j < message.changeItemAnimation.length; ++j)\n                        object.changeItemAnimation[j] = $root.op_client.ChangeAnimation.toObject(message.changeItemAnimation[j], options);\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_ITEM_ANIMATION;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT\n             * @property {number} sceneid OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT sceneid\n             * @property {Array.<op_client.IElement>|null} [elements] OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT elements\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT.\n             * @implements IOP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT(properties) {\n                this.elements = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT sceneid.\n             * @member {number} sceneid\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT.prototype.sceneid = 0;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT elements.\n             * @member {Array.<op_client.IElement>} elements\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT.prototype.elements = $util.emptyArray;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT} OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT} message OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.sceneid);\n                if (message.elements != null && message.elements.length)\n                    for (var i = 0; i < message.elements.length; ++i)\n                        $root.op_client.Element.encode(message.elements[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT} message OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT} OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.sceneid = reader.int32();\n                        break;\n                    case 2:\n                        if (!(message.elements && message.elements.length))\n                            message.elements = [];\n                        message.elements.push($root.op_client.Element.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("sceneid"))\n                    throw $util.ProtocolError("missing required \'sceneid\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT} OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.sceneid))\n                    return "sceneid: integer expected";\n                if (message.elements != null && message.hasOwnProperty("elements")) {\n                    if (!Array.isArray(message.elements))\n                        return "elements: array expected";\n                    for (var i = 0; i < message.elements.length; ++i) {\n                        var error = $root.op_client.Element.verify(message.elements[i]);\n                        if (error)\n                            return "elements." + error;\n                    }\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT} OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT();\n                if (object.sceneid != null)\n                    message.sceneid = object.sceneid | 0;\n                if (object.elements) {\n                    if (!Array.isArray(object.elements))\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT.elements: array expected");\n                    message.elements = [];\n                    for (var i = 0; i < object.elements.length; ++i) {\n                        if (typeof object.elements[i] !== "object")\n                            throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT.elements: object expected");\n                        message.elements[i] = $root.op_client.Element.fromObject(object.elements[i]);\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT} message OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.elements = [];\n                if (options.defaults)\n                    object.sceneid = 0;\n                if (message.sceneid != null && message.hasOwnProperty("sceneid"))\n                    object.sceneid = message.sceneid;\n                if (message.elements && message.elements.length) {\n                    object.elements = [];\n                    for (var j = 0; j < message.elements.length; ++j)\n                        object.elements[j] = $root.op_client.Element.toObject(message.elements[j], options);\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_RES_CLIENT_ADD_ELEMENT;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT\n             * @property {number} sceneid OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT sceneid\n             * @property {number} elementid OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT elementid\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT.\n             * @implements IOP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT sceneid.\n             * @member {number} sceneid\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT.prototype.sceneid = 0;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT elementid.\n             * @member {number} elementid\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT.prototype.elementid = 0;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT} OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT} message OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.sceneid);\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.elementid);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT} message OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT} OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.sceneid = reader.int32();\n                        break;\n                    case 2:\n                        message.elementid = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("sceneid"))\n                    throw $util.ProtocolError("missing required \'sceneid\'", { instance: message });\n                if (!message.hasOwnProperty("elementid"))\n                    throw $util.ProtocolError("missing required \'elementid\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT} OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.sceneid))\n                    return "sceneid: integer expected";\n                if (!$util.isInteger(message.elementid))\n                    return "elementid: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT} OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT();\n                if (object.sceneid != null)\n                    message.sceneid = object.sceneid | 0;\n                if (object.elementid != null)\n                    message.elementid = object.elementid | 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT} message OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.sceneid = 0;\n                    object.elementid = 0;\n                }\n                if (message.sceneid != null && message.hasOwnProperty("sceneid"))\n                    object.sceneid = message.sceneid;\n                if (message.elementid != null && message.hasOwnProperty("elementid"))\n                    object.elementid = message.elementid;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_ELEMENT;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER\n             * @property {Array.<op_client.IActor>|null} [actors] OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER actors\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER.\n             * @implements IOP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER(properties) {\n                this.actors = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER actors.\n             * @member {Array.<op_client.IActor>} actors\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER.prototype.actors = $util.emptyArray;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER} OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER} message OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.actors != null && message.actors.length)\n                    for (var i = 0; i < message.actors.length; ++i)\n                        $root.op_client.Actor.encode(message.actors[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER} message OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER} OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.actors && message.actors.length))\n                            message.actors = [];\n                        message.actors.push($root.op_client.Actor.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER} OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.actors != null && message.hasOwnProperty("actors")) {\n                    if (!Array.isArray(message.actors))\n                        return "actors: array expected";\n                    for (var i = 0; i < message.actors.length; ++i) {\n                        var error = $root.op_client.Actor.verify(message.actors[i]);\n                        if (error)\n                            return "actors." + error;\n                    }\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER} OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER();\n                if (object.actors) {\n                    if (!Array.isArray(object.actors))\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER.actors: array expected");\n                    message.actors = [];\n                    for (var i = 0; i < object.actors.length; ++i) {\n                        if (typeof object.actors[i] !== "object")\n                            throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER.actors: object expected");\n                        message.actors[i] = $root.op_client.Actor.fromObject(object.actors[i]);\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER} message OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.actors = [];\n                if (message.actors && message.actors.length) {\n                    object.actors = [];\n                    for (var j = 0; j < message.actors.length; ++j)\n                        object.actors[j] = $root.op_client.Actor.toObject(message.actors[j], options);\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_RES_CLIENT_SYNCHRO_CHARACTER;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER\n             * @property {Array.<op_client.IActor>|null} [actors] OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER actors\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER.\n             * @implements IOP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER(properties) {\n                this.actors = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER actors.\n             * @member {Array.<op_client.IActor>} actors\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER.prototype.actors = $util.emptyArray;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER} OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER} message OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.actors != null && message.actors.length)\n                    for (var i = 0; i < message.actors.length; ++i)\n                        $root.op_client.Actor.encode(message.actors[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER} message OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER} OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.actors && message.actors.length))\n                            message.actors = [];\n                        message.actors.push($root.op_client.Actor.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER} OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.actors != null && message.hasOwnProperty("actors")) {\n                    if (!Array.isArray(message.actors))\n                        return "actors: array expected";\n                    for (var i = 0; i < message.actors.length; ++i) {\n                        var error = $root.op_client.Actor.verify(message.actors[i]);\n                        if (error)\n                            return "actors." + error;\n                    }\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER} OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER();\n                if (object.actors) {\n                    if (!Array.isArray(object.actors))\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER.actors: array expected");\n                    message.actors = [];\n                    for (var i = 0; i < object.actors.length; ++i) {\n                        if (typeof object.actors[i] !== "object")\n                            throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER.actors: object expected");\n                        message.actors[i] = $root.op_client.Actor.fromObject(object.actors[i]);\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER} message OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.actors = [];\n                if (message.actors && message.actors.length) {\n                    object.actors = [];\n                    for (var j = 0; j < message.actors.length; ++j)\n                        object.actors[j] = $root.op_client.Actor.toObject(message.actors[j], options);\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_RES_CLIENT_ADD_CHARACTER;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER\n             * @property {number} uuid OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER uuid\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER.\n             * @implements IOP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER uuid.\n             * @member {number} uuid\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER.prototype.uuid = 0;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER} OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER} message OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.uuid);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER} message OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER} OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.uuid = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("uuid"))\n                    throw $util.ProtocolError("missing required \'uuid\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER} OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.uuid))\n                    return "uuid: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER} OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER();\n                if (object.uuid != null)\n                    message.uuid = object.uuid | 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER} message OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.uuid = 0;\n                if (message.uuid != null && message.hasOwnProperty("uuid"))\n                    object.uuid = message.uuid;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_CHARACTER;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN\n             * @property {number} sceneid OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN sceneid\n             * @property {Array.<op_client.ITerrain>|null} [terrain] OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN terrain\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN.\n             * @implements IOP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN(properties) {\n                this.terrain = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN sceneid.\n             * @member {number} sceneid\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN.prototype.sceneid = 0;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN terrain.\n             * @member {Array.<op_client.ITerrain>} terrain\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN.prototype.terrain = $util.emptyArray;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN} OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN} message OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.sceneid);\n                if (message.terrain != null && message.terrain.length)\n                    for (var i = 0; i < message.terrain.length; ++i)\n                        $root.op_client.Terrain.encode(message.terrain[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN} message OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN} OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.sceneid = reader.int32();\n                        break;\n                    case 2:\n                        if (!(message.terrain && message.terrain.length))\n                            message.terrain = [];\n                        message.terrain.push($root.op_client.Terrain.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("sceneid"))\n                    throw $util.ProtocolError("missing required \'sceneid\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN} OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.sceneid))\n                    return "sceneid: integer expected";\n                if (message.terrain != null && message.hasOwnProperty("terrain")) {\n                    if (!Array.isArray(message.terrain))\n                        return "terrain: array expected";\n                    for (var i = 0; i < message.terrain.length; ++i) {\n                        var error = $root.op_client.Terrain.verify(message.terrain[i]);\n                        if (error)\n                            return "terrain." + error;\n                    }\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN} OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN();\n                if (object.sceneid != null)\n                    message.sceneid = object.sceneid | 0;\n                if (object.terrain) {\n                    if (!Array.isArray(object.terrain))\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN.terrain: array expected");\n                    message.terrain = [];\n                    for (var i = 0; i < object.terrain.length; ++i) {\n                        if (typeof object.terrain[i] !== "object")\n                            throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN.terrain: object expected");\n                        message.terrain[i] = $root.op_client.Terrain.fromObject(object.terrain[i]);\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN} message OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.terrain = [];\n                if (options.defaults)\n                    object.sceneid = 0;\n                if (message.sceneid != null && message.hasOwnProperty("sceneid"))\n                    object.sceneid = message.sceneid;\n                if (message.terrain && message.terrain.length) {\n                    object.terrain = [];\n                    for (var j = 0; j < message.terrain.length; ++j)\n                        object.terrain[j] = $root.op_client.Terrain.toObject(message.terrain[j], options);\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_RES_CLIENT_ADD_TERRAIN;\n        })();\n    \n        op_client.OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION = (function() {\n    \n            /**\n             * Properties of a OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION.\n             * @memberof op_client\n             * @interface IOP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION\n             * @property {number} collisionId OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION collisionId\n             */\n    \n            /**\n             * Constructs a new OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION.\n             * @memberof op_client\n             * @classdesc Represents a OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION.\n             * @implements IOP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION\n             * @constructor\n             * @param {op_client.IOP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION=} [properties] Properties to set\n             */\n            function OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION collisionId.\n             * @member {number} collisionId\n             * @memberof op_client.OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION\n             * @instance\n             */\n            OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION.prototype.collisionId = 0;\n    \n            /**\n             * Creates a new OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION\n             * @static\n             * @param {op_client.IOP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION=} [properties] Properties to set\n             * @returns {op_client.OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION} OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION instance\n             */\n            OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION.create = function create(properties) {\n                return new OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION message. Does not implicitly {@link op_client.OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION\n             * @static\n             * @param {op_client.IOP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION} message OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.collisionId);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION message, length delimited. Does not implicitly {@link op_client.OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION\n             * @static\n             * @param {op_client.IOP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION} message OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION} OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.collisionId = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("collisionId"))\n                    throw $util.ProtocolError("missing required \'collisionId\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION} OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION message.\n             * @function verify\n             * @memberof op_client.OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.collisionId))\n                    return "collisionId: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION} OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION\n             */\n            OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION)\n                    return object;\n                var message = new $root.op_client.OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION();\n                if (object.collisionId != null)\n                    message.collisionId = object.collisionId | 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION\n             * @static\n             * @param {op_client.OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION} message OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.collisionId = 0;\n                if (message.collisionId != null && message.hasOwnProperty("collisionId"))\n                    object.collisionId = message.collisionId;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VITUAL_WORLD_RES_CLIENT_AFTER_COLLISION;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER\n             * @property {string} signature OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER signature\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER.\n             * @implements IOP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER signature.\n             * @member {string} signature\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER.prototype.signature = "";\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER} OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER} message OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.signature);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER} message OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER} OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.signature = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("signature"))\n                    throw $util.ProtocolError("missing required \'signature\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER} OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.signature))\n                    return "signature: string expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER} OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER();\n                if (object.signature != null)\n                    message.signature = String(object.signature);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER} message OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.signature = "";\n                if (message.signature != null && message.hasOwnProperty("signature"))\n                    object.signature = message.signature;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_RES_CLIENT_QCLOUD_GME_AUTHBUFFER;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE\n             * @property {number} id OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE id\n             * @property {number|null} [page] OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE page\n             * @property {number|null} [perPage] OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE perPage\n             * @property {number|null} [maxPage] OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE maxPage\n             * @property {Array.<op_gameconfig.IItem>|null} [items] OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE items\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE.\n             * @implements IOP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE(properties) {\n                this.items = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE id.\n             * @member {number} id\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE.prototype.id = 0;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE page.\n             * @member {number} page\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE.prototype.page = 0;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE perPage.\n             * @member {number} perPage\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE.prototype.perPage = 10;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE maxPage.\n             * @member {number} maxPage\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE.prototype.maxPage = 0;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE items.\n             * @member {Array.<op_gameconfig.IItem>} items\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE.prototype.items = $util.emptyArray;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE} OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE} message OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.id);\n                if (message.page != null && message.hasOwnProperty("page"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.page);\n                if (message.perPage != null && message.hasOwnProperty("perPage"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.perPage);\n                if (message.maxPage != null && message.hasOwnProperty("maxPage"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.maxPage);\n                if (message.items != null && message.items.length)\n                    for (var i = 0; i < message.items.length; ++i)\n                        $root.op_gameconfig.Item.encode(message.items[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE} message OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE} OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.id = reader.int32();\n                        break;\n                    case 2:\n                        message.page = reader.int32();\n                        break;\n                    case 3:\n                        message.perPage = reader.int32();\n                        break;\n                    case 4:\n                        message.maxPage = reader.int32();\n                        break;\n                    case 5:\n                        if (!(message.items && message.items.length))\n                            message.items = [];\n                        message.items.push($root.op_gameconfig.Item.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("id"))\n                    throw $util.ProtocolError("missing required \'id\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE} OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.id))\n                    return "id: integer expected";\n                if (message.page != null && message.hasOwnProperty("page"))\n                    if (!$util.isInteger(message.page))\n                        return "page: integer expected";\n                if (message.perPage != null && message.hasOwnProperty("perPage"))\n                    if (!$util.isInteger(message.perPage))\n                        return "perPage: integer expected";\n                if (message.maxPage != null && message.hasOwnProperty("maxPage"))\n                    if (!$util.isInteger(message.maxPage))\n                        return "maxPage: integer expected";\n                if (message.items != null && message.hasOwnProperty("items")) {\n                    if (!Array.isArray(message.items))\n                        return "items: array expected";\n                    for (var i = 0; i < message.items.length; ++i) {\n                        var error = $root.op_gameconfig.Item.verify(message.items[i]);\n                        if (error)\n                            return "items." + error;\n                    }\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE} OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE();\n                if (object.id != null)\n                    message.id = object.id | 0;\n                if (object.page != null)\n                    message.page = object.page | 0;\n                if (object.perPage != null)\n                    message.perPage = object.perPage | 0;\n                if (object.maxPage != null)\n                    message.maxPage = object.maxPage | 0;\n                if (object.items) {\n                    if (!Array.isArray(object.items))\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE.items: array expected");\n                    message.items = [];\n                    for (var i = 0; i < object.items.length; ++i) {\n                        if (typeof object.items[i] !== "object")\n                            throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE.items: object expected");\n                        message.items[i] = $root.op_gameconfig.Item.fromObject(object.items[i]);\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE} message OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.items = [];\n                if (options.defaults) {\n                    object.id = 0;\n                    object.page = 0;\n                    object.perPage = 10;\n                    object.maxPage = 0;\n                }\n                if (message.id != null && message.hasOwnProperty("id"))\n                    object.id = message.id;\n                if (message.page != null && message.hasOwnProperty("page"))\n                    object.page = message.page;\n                if (message.perPage != null && message.hasOwnProperty("perPage"))\n                    object.perPage = message.perPage;\n                if (message.maxPage != null && message.hasOwnProperty("maxPage"))\n                    object.maxPage = message.maxPage;\n                if (message.items && message.items.length) {\n                    object.items = [];\n                    for (var j = 0; j < message.items.length; ++j)\n                        object.items[j] = $root.op_gameconfig.Item.toObject(message.items[j], options);\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_RES_CLIENT_QUERY_PACKAGE;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT\n             * @property {Array.<number>|null} [id] OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT id\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT.\n             * @implements IOP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT(properties) {\n                this.id = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT id.\n             * @member {Array.<number>} id\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT.prototype.id = $util.emptyArray;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT} OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT} message OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.id != null && message.id.length)\n                    for (var i = 0; i < message.id.length; ++i)\n                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.id[i]);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT} message OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT} OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.id && message.id.length))\n                            message.id = [];\n                        if ((tag & 7) === 2) {\n                            var end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2)\n                                message.id.push(reader.int32());\n                        } else\n                            message.id.push(reader.int32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT} OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.id != null && message.hasOwnProperty("id")) {\n                    if (!Array.isArray(message.id))\n                        return "id: array expected";\n                    for (var i = 0; i < message.id.length; ++i)\n                        if (!$util.isInteger(message.id[i]))\n                            return "id: integer[] expected";\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT} OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT();\n                if (object.id) {\n                    if (!Array.isArray(object.id))\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT.id: array expected");\n                    message.id = [];\n                    for (var i = 0; i < object.id.length; ++i)\n                        message.id[i] = object.id[i] | 0;\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT} message OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.id = [];\n                if (message.id && message.id.length) {\n                    object.id = [];\n                    for (var j = 0; j < message.id.length; ++j)\n                        object.id[j] = message.id[j];\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_RES_CLIENT_SHOW_EFFECT;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME\n             * @property {number} clientStartTs OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME clientStartTs\n             * @property {number} serverReceiveTs OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME serverReceiveTs\n             * @property {number} serverSendTs OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME serverSendTs\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME.\n             * @implements IOP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME clientStartTs.\n             * @member {number} clientStartTs\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME.prototype.clientStartTs = 0;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME serverReceiveTs.\n             * @member {number} serverReceiveTs\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME.prototype.serverReceiveTs = 0;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME serverSendTs.\n             * @member {number} serverSendTs\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME.prototype.serverSendTs = 0;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME} OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME} message OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 1 =*/9).double(message.clientStartTs);\n                writer.uint32(/* id 2, wireType 1 =*/17).double(message.serverReceiveTs);\n                writer.uint32(/* id 3, wireType 1 =*/25).double(message.serverSendTs);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME} message OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME} OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.clientStartTs = reader.double();\n                        break;\n                    case 2:\n                        message.serverReceiveTs = reader.double();\n                        break;\n                    case 3:\n                        message.serverSendTs = reader.double();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("clientStartTs"))\n                    throw $util.ProtocolError("missing required \'clientStartTs\'", { instance: message });\n                if (!message.hasOwnProperty("serverReceiveTs"))\n                    throw $util.ProtocolError("missing required \'serverReceiveTs\'", { instance: message });\n                if (!message.hasOwnProperty("serverSendTs"))\n                    throw $util.ProtocolError("missing required \'serverSendTs\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME} OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (typeof message.clientStartTs !== "number")\n                    return "clientStartTs: number expected";\n                if (typeof message.serverReceiveTs !== "number")\n                    return "serverReceiveTs: number expected";\n                if (typeof message.serverSendTs !== "number")\n                    return "serverSendTs: number expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME} OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME();\n                if (object.clientStartTs != null)\n                    message.clientStartTs = Number(object.clientStartTs);\n                if (object.serverReceiveTs != null)\n                    message.serverReceiveTs = Number(object.serverReceiveTs);\n                if (object.serverSendTs != null)\n                    message.serverSendTs = Number(object.serverSendTs);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME} message OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.clientStartTs = 0;\n                    object.serverReceiveTs = 0;\n                    object.serverSendTs = 0;\n                }\n                if (message.clientStartTs != null && message.hasOwnProperty("clientStartTs"))\n                    object.clientStartTs = options.json && !isFinite(message.clientStartTs) ? String(message.clientStartTs) : message.clientStartTs;\n                if (message.serverReceiveTs != null && message.hasOwnProperty("serverReceiveTs"))\n                    object.serverReceiveTs = options.json && !isFinite(message.serverReceiveTs) ? String(message.serverReceiveTs) : message.serverReceiveTs;\n                if (message.serverSendTs != null && message.hasOwnProperty("serverSendTs"))\n                    object.serverSendTs = options.json && !isFinite(message.serverSendTs) ? String(message.serverSendTs) : message.serverSendTs;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_TIME;\n        })();\n    \n        op_client.OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE = (function() {\n    \n            /**\n             * Properties of a OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE.\n             * @memberof op_client\n             * @interface IOP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE\n             * @property {string} mode OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE mode\n             * @property {string|null} [type] OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE type\n             */\n    \n            /**\n             * Constructs a new OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE.\n             * @memberof op_client\n             * @classdesc Represents a OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE.\n             * @implements IOP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE\n             * @constructor\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE=} [properties] Properties to set\n             */\n            function OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE mode.\n             * @member {string} mode\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE\n             * @instance\n             */\n            OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE.prototype.mode = "";\n    \n            /**\n             * OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE type.\n             * @member {string} type\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE\n             * @instance\n             */\n            OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE.prototype.type = "";\n    \n            /**\n             * Creates a new OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE=} [properties] Properties to set\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE} OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE instance\n             */\n            OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE.create = function create(properties) {\n                return new OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE message. Does not implicitly {@link op_client.OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE} message OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.mode);\n                if (message.type != null && message.hasOwnProperty("type"))\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.type);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE message, length delimited. Does not implicitly {@link op_client.OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE} message OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE} OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.mode = reader.string();\n                        break;\n                    case 2:\n                        message.type = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("mode"))\n                    throw $util.ProtocolError("missing required \'mode\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE} OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE message.\n             * @function verify\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.mode))\n                    return "mode: string expected";\n                if (message.type != null && message.hasOwnProperty("type"))\n                    if (!$util.isString(message.type))\n                        return "type: string expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE} OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE\n             */\n            OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE)\n                    return object;\n                var message = new $root.op_client.OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE();\n                if (object.mode != null)\n                    message.mode = String(object.mode);\n                if (object.type != null)\n                    message.type = String(object.type);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE\n             * @static\n             * @param {op_client.OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE} message OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.mode = "";\n                    object.type = "";\n                }\n                if (message.mode != null && message.hasOwnProperty("mode"))\n                    object.mode = message.mode;\n                if (message.type != null && message.hasOwnProperty("type"))\n                    object.type = message.type;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_EDITOR_REQ_CLIENT_SET_EDITOR_MODE;\n        })();\n    \n        op_client.OP_EDITOR_REQ_CLIENT_ADD_ELEMENT = (function() {\n    \n            /**\n             * Properties of a OP_EDITOR_REQ_CLIENT_ADD_ELEMENT.\n             * @memberof op_client\n             * @interface IOP_EDITOR_REQ_CLIENT_ADD_ELEMENT\n             * @property {op_client.IElement} element OP_EDITOR_REQ_CLIENT_ADD_ELEMENT element\n             */\n    \n            /**\n             * Constructs a new OP_EDITOR_REQ_CLIENT_ADD_ELEMENT.\n             * @memberof op_client\n             * @classdesc Represents a OP_EDITOR_REQ_CLIENT_ADD_ELEMENT.\n             * @implements IOP_EDITOR_REQ_CLIENT_ADD_ELEMENT\n             * @constructor\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_ADD_ELEMENT=} [properties] Properties to set\n             */\n            function OP_EDITOR_REQ_CLIENT_ADD_ELEMENT(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_EDITOR_REQ_CLIENT_ADD_ELEMENT element.\n             * @member {op_client.IElement} element\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_ADD_ELEMENT\n             * @instance\n             */\n            OP_EDITOR_REQ_CLIENT_ADD_ELEMENT.prototype.element = null;\n    \n            /**\n             * Creates a new OP_EDITOR_REQ_CLIENT_ADD_ELEMENT instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_ADD_ELEMENT\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_ADD_ELEMENT=} [properties] Properties to set\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_ADD_ELEMENT} OP_EDITOR_REQ_CLIENT_ADD_ELEMENT instance\n             */\n            OP_EDITOR_REQ_CLIENT_ADD_ELEMENT.create = function create(properties) {\n                return new OP_EDITOR_REQ_CLIENT_ADD_ELEMENT(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_EDITOR_REQ_CLIENT_ADD_ELEMENT message. Does not implicitly {@link op_client.OP_EDITOR_REQ_CLIENT_ADD_ELEMENT.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_ADD_ELEMENT\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_ADD_ELEMENT} message OP_EDITOR_REQ_CLIENT_ADD_ELEMENT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_EDITOR_REQ_CLIENT_ADD_ELEMENT.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                $root.op_client.Element.encode(message.element, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_EDITOR_REQ_CLIENT_ADD_ELEMENT message, length delimited. Does not implicitly {@link op_client.OP_EDITOR_REQ_CLIENT_ADD_ELEMENT.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_ADD_ELEMENT\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_ADD_ELEMENT} message OP_EDITOR_REQ_CLIENT_ADD_ELEMENT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_EDITOR_REQ_CLIENT_ADD_ELEMENT.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_EDITOR_REQ_CLIENT_ADD_ELEMENT message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_ADD_ELEMENT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_ADD_ELEMENT} OP_EDITOR_REQ_CLIENT_ADD_ELEMENT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_EDITOR_REQ_CLIENT_ADD_ELEMENT.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_EDITOR_REQ_CLIENT_ADD_ELEMENT();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.element = $root.op_client.Element.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("element"))\n                    throw $util.ProtocolError("missing required \'element\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_EDITOR_REQ_CLIENT_ADD_ELEMENT message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_ADD_ELEMENT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_ADD_ELEMENT} OP_EDITOR_REQ_CLIENT_ADD_ELEMENT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_EDITOR_REQ_CLIENT_ADD_ELEMENT.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_EDITOR_REQ_CLIENT_ADD_ELEMENT message.\n             * @function verify\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_ADD_ELEMENT\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_EDITOR_REQ_CLIENT_ADD_ELEMENT.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                {\n                    var error = $root.op_client.Element.verify(message.element);\n                    if (error)\n                        return "element." + error;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_EDITOR_REQ_CLIENT_ADD_ELEMENT message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_ADD_ELEMENT\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_ADD_ELEMENT} OP_EDITOR_REQ_CLIENT_ADD_ELEMENT\n             */\n            OP_EDITOR_REQ_CLIENT_ADD_ELEMENT.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_EDITOR_REQ_CLIENT_ADD_ELEMENT)\n                    return object;\n                var message = new $root.op_client.OP_EDITOR_REQ_CLIENT_ADD_ELEMENT();\n                if (object.element != null) {\n                    if (typeof object.element !== "object")\n                        throw TypeError(".op_client.OP_EDITOR_REQ_CLIENT_ADD_ELEMENT.element: object expected");\n                    message.element = $root.op_client.Element.fromObject(object.element);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_EDITOR_REQ_CLIENT_ADD_ELEMENT message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_ADD_ELEMENT\n             * @static\n             * @param {op_client.OP_EDITOR_REQ_CLIENT_ADD_ELEMENT} message OP_EDITOR_REQ_CLIENT_ADD_ELEMENT\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_EDITOR_REQ_CLIENT_ADD_ELEMENT.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.element = null;\n                if (message.element != null && message.hasOwnProperty("element"))\n                    object.element = $root.op_client.Element.toObject(message.element, options);\n                return object;\n            };\n    \n            /**\n             * Converts this OP_EDITOR_REQ_CLIENT_ADD_ELEMENT to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_ADD_ELEMENT\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_EDITOR_REQ_CLIENT_ADD_ELEMENT.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_EDITOR_REQ_CLIENT_ADD_ELEMENT;\n        })();\n    \n        op_client.Terrain = (function() {\n    \n            /**\n             * Properties of a Terrain.\n             * @memberof op_client\n             * @interface ITerrain\n             * @property {number|null} [id] Terrain id\n             * @property {string} type Terrain type\n             * @property {string|null} [name] Terrain name\n             * @property {string|null} [des] Terrain des\n             * @property {number|null} [z] Terrain z\n             * @property {Array.<op_gameconfig.IAnimation>|null} [animations] Terrain animations\n             * @property {string} animationName Terrain animationName\n             * @property {number|null} [x] Terrain x\n             * @property {number|null} [y] Terrain y\n             * @property {op_gameconfig.IDisplay|null} [display] Terrain display\n             */\n    \n            /**\n             * Constructs a new Terrain.\n             * @memberof op_client\n             * @classdesc Represents a Terrain.\n             * @implements ITerrain\n             * @constructor\n             * @param {op_client.ITerrain=} [properties] Properties to set\n             */\n            function Terrain(properties) {\n                this.animations = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Terrain id.\n             * @member {number} id\n             * @memberof op_client.Terrain\n             * @instance\n             */\n            Terrain.prototype.id = 0;\n    \n            /**\n             * Terrain type.\n             * @member {string} type\n             * @memberof op_client.Terrain\n             * @instance\n             */\n            Terrain.prototype.type = "";\n    \n            /**\n             * Terrain name.\n             * @member {string} name\n             * @memberof op_client.Terrain\n             * @instance\n             */\n            Terrain.prototype.name = "";\n    \n            /**\n             * Terrain des.\n             * @member {string} des\n             * @memberof op_client.Terrain\n             * @instance\n             */\n            Terrain.prototype.des = "";\n    \n            /**\n             * Terrain z.\n             * @member {number} z\n             * @memberof op_client.Terrain\n             * @instance\n             */\n            Terrain.prototype.z = 0;\n    \n            /**\n             * Terrain animations.\n             * @member {Array.<op_gameconfig.IAnimation>} animations\n             * @memberof op_client.Terrain\n             * @instance\n             */\n            Terrain.prototype.animations = $util.emptyArray;\n    \n            /**\n             * Terrain animationName.\n             * @member {string} animationName\n             * @memberof op_client.Terrain\n             * @instance\n             */\n            Terrain.prototype.animationName = "";\n    \n            /**\n             * Terrain x.\n             * @member {number} x\n             * @memberof op_client.Terrain\n             * @instance\n             */\n            Terrain.prototype.x = 0;\n    \n            /**\n             * Terrain y.\n             * @member {number} y\n             * @memberof op_client.Terrain\n             * @instance\n             */\n            Terrain.prototype.y = 0;\n    \n            /**\n             * Terrain display.\n             * @member {op_gameconfig.IDisplay|null|undefined} display\n             * @memberof op_client.Terrain\n             * @instance\n             */\n            Terrain.prototype.display = null;\n    \n            /**\n             * Creates a new Terrain instance using the specified properties.\n             * @function create\n             * @memberof op_client.Terrain\n             * @static\n             * @param {op_client.ITerrain=} [properties] Properties to set\n             * @returns {op_client.Terrain} Terrain instance\n             */\n            Terrain.create = function create(properties) {\n                return new Terrain(properties);\n            };\n    \n            /**\n             * Encodes the specified Terrain message. Does not implicitly {@link op_client.Terrain.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.Terrain\n             * @static\n             * @param {op_client.ITerrain} message Terrain message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Terrain.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.display != null && message.hasOwnProperty("display"))\n                    $root.op_gameconfig.Display.encode(message.display, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.type);\n                if (message.name != null && message.hasOwnProperty("name"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);\n                if (message.des != null && message.hasOwnProperty("des"))\n                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.des);\n                if (message.z != null && message.hasOwnProperty("z"))\n                    writer.uint32(/* id 5, wireType 0 =*/40).int32(message.z);\n                if (message.animations != null && message.animations.length)\n                    for (var i = 0; i < message.animations.length; ++i)\n                        $root.op_gameconfig.Animation.encode(message.animations[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n                writer.uint32(/* id 7, wireType 2 =*/58).string(message.animationName);\n                if (message.x != null && message.hasOwnProperty("x"))\n                    writer.uint32(/* id 9, wireType 0 =*/72).int32(message.x);\n                if (message.y != null && message.hasOwnProperty("y"))\n                    writer.uint32(/* id 10, wireType 0 =*/80).int32(message.y);\n                if (message.id != null && message.hasOwnProperty("id"))\n                    writer.uint32(/* id 11, wireType 0 =*/88).int32(message.id);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Terrain message, length delimited. Does not implicitly {@link op_client.Terrain.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.Terrain\n             * @static\n             * @param {op_client.ITerrain} message Terrain message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Terrain.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a Terrain message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.Terrain\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.Terrain} Terrain\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Terrain.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.Terrain();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 11:\n                        message.id = reader.int32();\n                        break;\n                    case 2:\n                        message.type = reader.string();\n                        break;\n                    case 3:\n                        message.name = reader.string();\n                        break;\n                    case 4:\n                        message.des = reader.string();\n                        break;\n                    case 5:\n                        message.z = reader.int32();\n                        break;\n                    case 6:\n                        if (!(message.animations && message.animations.length))\n                            message.animations = [];\n                        message.animations.push($root.op_gameconfig.Animation.decode(reader, reader.uint32()));\n                        break;\n                    case 7:\n                        message.animationName = reader.string();\n                        break;\n                    case 9:\n                        message.x = reader.int32();\n                        break;\n                    case 10:\n                        message.y = reader.int32();\n                        break;\n                    case 1:\n                        message.display = $root.op_gameconfig.Display.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("type"))\n                    throw $util.ProtocolError("missing required \'type\'", { instance: message });\n                if (!message.hasOwnProperty("animationName"))\n                    throw $util.ProtocolError("missing required \'animationName\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a Terrain message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.Terrain\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.Terrain} Terrain\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Terrain.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a Terrain message.\n             * @function verify\n             * @memberof op_client.Terrain\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Terrain.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.id != null && message.hasOwnProperty("id"))\n                    if (!$util.isInteger(message.id))\n                        return "id: integer expected";\n                if (!$util.isString(message.type))\n                    return "type: string expected";\n                if (message.name != null && message.hasOwnProperty("name"))\n                    if (!$util.isString(message.name))\n                        return "name: string expected";\n                if (message.des != null && message.hasOwnProperty("des"))\n                    if (!$util.isString(message.des))\n                        return "des: string expected";\n                if (message.z != null && message.hasOwnProperty("z"))\n                    if (!$util.isInteger(message.z))\n                        return "z: integer expected";\n                if (message.animations != null && message.hasOwnProperty("animations")) {\n                    if (!Array.isArray(message.animations))\n                        return "animations: array expected";\n                    for (var i = 0; i < message.animations.length; ++i) {\n                        var error = $root.op_gameconfig.Animation.verify(message.animations[i]);\n                        if (error)\n                            return "animations." + error;\n                    }\n                }\n                if (!$util.isString(message.animationName))\n                    return "animationName: string expected";\n                if (message.x != null && message.hasOwnProperty("x"))\n                    if (!$util.isInteger(message.x))\n                        return "x: integer expected";\n                if (message.y != null && message.hasOwnProperty("y"))\n                    if (!$util.isInteger(message.y))\n                        return "y: integer expected";\n                if (message.display != null && message.hasOwnProperty("display")) {\n                    var error = $root.op_gameconfig.Display.verify(message.display);\n                    if (error)\n                        return "display." + error;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a Terrain message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.Terrain\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.Terrain} Terrain\n             */\n            Terrain.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.Terrain)\n                    return object;\n                var message = new $root.op_client.Terrain();\n                if (object.id != null)\n                    message.id = object.id | 0;\n                if (object.type != null)\n                    message.type = String(object.type);\n                if (object.name != null)\n                    message.name = String(object.name);\n                if (object.des != null)\n                    message.des = String(object.des);\n                if (object.z != null)\n                    message.z = object.z | 0;\n                if (object.animations) {\n                    if (!Array.isArray(object.animations))\n                        throw TypeError(".op_client.Terrain.animations: array expected");\n                    message.animations = [];\n                    for (var i = 0; i < object.animations.length; ++i) {\n                        if (typeof object.animations[i] !== "object")\n                            throw TypeError(".op_client.Terrain.animations: object expected");\n                        message.animations[i] = $root.op_gameconfig.Animation.fromObject(object.animations[i]);\n                    }\n                }\n                if (object.animationName != null)\n                    message.animationName = String(object.animationName);\n                if (object.x != null)\n                    message.x = object.x | 0;\n                if (object.y != null)\n                    message.y = object.y | 0;\n                if (object.display != null) {\n                    if (typeof object.display !== "object")\n                        throw TypeError(".op_client.Terrain.display: object expected");\n                    message.display = $root.op_gameconfig.Display.fromObject(object.display);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a Terrain message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.Terrain\n             * @static\n             * @param {op_client.Terrain} message Terrain\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Terrain.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.animations = [];\n                if (options.defaults) {\n                    object.display = null;\n                    object.type = "";\n                    object.name = "";\n                    object.des = "";\n                    object.z = 0;\n                    object.animationName = "";\n                    object.x = 0;\n                    object.y = 0;\n                    object.id = 0;\n                }\n                if (message.display != null && message.hasOwnProperty("display"))\n                    object.display = $root.op_gameconfig.Display.toObject(message.display, options);\n                if (message.type != null && message.hasOwnProperty("type"))\n                    object.type = message.type;\n                if (message.name != null && message.hasOwnProperty("name"))\n                    object.name = message.name;\n                if (message.des != null && message.hasOwnProperty("des"))\n                    object.des = message.des;\n                if (message.z != null && message.hasOwnProperty("z"))\n                    object.z = message.z;\n                if (message.animations && message.animations.length) {\n                    object.animations = [];\n                    for (var j = 0; j < message.animations.length; ++j)\n                        object.animations[j] = $root.op_gameconfig.Animation.toObject(message.animations[j], options);\n                }\n                if (message.animationName != null && message.hasOwnProperty("animationName"))\n                    object.animationName = message.animationName;\n                if (message.x != null && message.hasOwnProperty("x"))\n                    object.x = message.x;\n                if (message.y != null && message.hasOwnProperty("y"))\n                    object.y = message.y;\n                if (message.id != null && message.hasOwnProperty("id"))\n                    object.id = message.id;\n                return object;\n            };\n    \n            /**\n             * Converts this Terrain to JSON.\n             * @function toJSON\n             * @memberof op_client.Terrain\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Terrain.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Terrain;\n        })();\n    \n        op_client.OP_EDITOR_REQ_CLIENT_ADD_TERRAIN = (function() {\n    \n            /**\n             * Properties of a OP_EDITOR_REQ_CLIENT_ADD_TERRAIN.\n             * @memberof op_client\n             * @interface IOP_EDITOR_REQ_CLIENT_ADD_TERRAIN\n             * @property {op_client.ITerrain} terrain OP_EDITOR_REQ_CLIENT_ADD_TERRAIN terrain\n             * @property {boolean|null} [all] OP_EDITOR_REQ_CLIENT_ADD_TERRAIN all\n             */\n    \n            /**\n             * Constructs a new OP_EDITOR_REQ_CLIENT_ADD_TERRAIN.\n             * @memberof op_client\n             * @classdesc Represents a OP_EDITOR_REQ_CLIENT_ADD_TERRAIN.\n             * @implements IOP_EDITOR_REQ_CLIENT_ADD_TERRAIN\n             * @constructor\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_ADD_TERRAIN=} [properties] Properties to set\n             */\n            function OP_EDITOR_REQ_CLIENT_ADD_TERRAIN(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_EDITOR_REQ_CLIENT_ADD_TERRAIN terrain.\n             * @member {op_client.ITerrain} terrain\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_ADD_TERRAIN\n             * @instance\n             */\n            OP_EDITOR_REQ_CLIENT_ADD_TERRAIN.prototype.terrain = null;\n    \n            /**\n             * OP_EDITOR_REQ_CLIENT_ADD_TERRAIN all.\n             * @member {boolean} all\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_ADD_TERRAIN\n             * @instance\n             */\n            OP_EDITOR_REQ_CLIENT_ADD_TERRAIN.prototype.all = false;\n    \n            /**\n             * Creates a new OP_EDITOR_REQ_CLIENT_ADD_TERRAIN instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_ADD_TERRAIN\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_ADD_TERRAIN=} [properties] Properties to set\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_ADD_TERRAIN} OP_EDITOR_REQ_CLIENT_ADD_TERRAIN instance\n             */\n            OP_EDITOR_REQ_CLIENT_ADD_TERRAIN.create = function create(properties) {\n                return new OP_EDITOR_REQ_CLIENT_ADD_TERRAIN(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_EDITOR_REQ_CLIENT_ADD_TERRAIN message. Does not implicitly {@link op_client.OP_EDITOR_REQ_CLIENT_ADD_TERRAIN.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_ADD_TERRAIN\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_ADD_TERRAIN} message OP_EDITOR_REQ_CLIENT_ADD_TERRAIN message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_EDITOR_REQ_CLIENT_ADD_TERRAIN.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                $root.op_client.Terrain.encode(message.terrain, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.all != null && message.hasOwnProperty("all"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.all);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_EDITOR_REQ_CLIENT_ADD_TERRAIN message, length delimited. Does not implicitly {@link op_client.OP_EDITOR_REQ_CLIENT_ADD_TERRAIN.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_ADD_TERRAIN\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_ADD_TERRAIN} message OP_EDITOR_REQ_CLIENT_ADD_TERRAIN message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_EDITOR_REQ_CLIENT_ADD_TERRAIN.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_EDITOR_REQ_CLIENT_ADD_TERRAIN message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_ADD_TERRAIN\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_ADD_TERRAIN} OP_EDITOR_REQ_CLIENT_ADD_TERRAIN\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_EDITOR_REQ_CLIENT_ADD_TERRAIN.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_EDITOR_REQ_CLIENT_ADD_TERRAIN();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.terrain = $root.op_client.Terrain.decode(reader, reader.uint32());\n                        break;\n                    case 3:\n                        message.all = reader.bool();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("terrain"))\n                    throw $util.ProtocolError("missing required \'terrain\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_EDITOR_REQ_CLIENT_ADD_TERRAIN message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_ADD_TERRAIN\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_ADD_TERRAIN} OP_EDITOR_REQ_CLIENT_ADD_TERRAIN\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_EDITOR_REQ_CLIENT_ADD_TERRAIN.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_EDITOR_REQ_CLIENT_ADD_TERRAIN message.\n             * @function verify\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_ADD_TERRAIN\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_EDITOR_REQ_CLIENT_ADD_TERRAIN.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                {\n                    var error = $root.op_client.Terrain.verify(message.terrain);\n                    if (error)\n                        return "terrain." + error;\n                }\n                if (message.all != null && message.hasOwnProperty("all"))\n                    if (typeof message.all !== "boolean")\n                        return "all: boolean expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_EDITOR_REQ_CLIENT_ADD_TERRAIN message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_ADD_TERRAIN\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_ADD_TERRAIN} OP_EDITOR_REQ_CLIENT_ADD_TERRAIN\n             */\n            OP_EDITOR_REQ_CLIENT_ADD_TERRAIN.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_EDITOR_REQ_CLIENT_ADD_TERRAIN)\n                    return object;\n                var message = new $root.op_client.OP_EDITOR_REQ_CLIENT_ADD_TERRAIN();\n                if (object.terrain != null) {\n                    if (typeof object.terrain !== "object")\n                        throw TypeError(".op_client.OP_EDITOR_REQ_CLIENT_ADD_TERRAIN.terrain: object expected");\n                    message.terrain = $root.op_client.Terrain.fromObject(object.terrain);\n                }\n                if (object.all != null)\n                    message.all = Boolean(object.all);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_EDITOR_REQ_CLIENT_ADD_TERRAIN message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_ADD_TERRAIN\n             * @static\n             * @param {op_client.OP_EDITOR_REQ_CLIENT_ADD_TERRAIN} message OP_EDITOR_REQ_CLIENT_ADD_TERRAIN\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_EDITOR_REQ_CLIENT_ADD_TERRAIN.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.terrain = null;\n                    object.all = false;\n                }\n                if (message.terrain != null && message.hasOwnProperty("terrain"))\n                    object.terrain = $root.op_client.Terrain.toObject(message.terrain, options);\n                if (message.all != null && message.hasOwnProperty("all"))\n                    object.all = message.all;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_EDITOR_REQ_CLIENT_ADD_TERRAIN to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_ADD_TERRAIN\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_EDITOR_REQ_CLIENT_ADD_TERRAIN.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_EDITOR_REQ_CLIENT_ADD_TERRAIN;\n        })();\n    \n        op_client.OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT = (function() {\n    \n            /**\n             * Properties of a OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT.\n             * @memberof op_client\n             * @interface IOP_EDITOR_REQ_CLIENT_DELETE_ELEMENT\n             * @property {number} id OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT id\n             */\n    \n            /**\n             * Constructs a new OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT.\n             * @memberof op_client\n             * @classdesc Represents a OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT.\n             * @implements IOP_EDITOR_REQ_CLIENT_DELETE_ELEMENT\n             * @constructor\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_DELETE_ELEMENT=} [properties] Properties to set\n             */\n            function OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT id.\n             * @member {number} id\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT\n             * @instance\n             */\n            OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT.prototype.id = 0;\n    \n            /**\n             * Creates a new OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_DELETE_ELEMENT=} [properties] Properties to set\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT} OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT instance\n             */\n            OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT.create = function create(properties) {\n                return new OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT message. Does not implicitly {@link op_client.OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_DELETE_ELEMENT} message OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.id);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT message, length delimited. Does not implicitly {@link op_client.OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_DELETE_ELEMENT} message OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT} OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.id = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("id"))\n                    throw $util.ProtocolError("missing required \'id\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT} OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT message.\n             * @function verify\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.id))\n                    return "id: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT} OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT\n             */\n            OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT)\n                    return object;\n                var message = new $root.op_client.OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT();\n                if (object.id != null)\n                    message.id = object.id | 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT\n             * @static\n             * @param {op_client.OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT} message OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.id = 0;\n                if (message.id != null && message.hasOwnProperty("id"))\n                    object.id = message.id;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_EDITOR_REQ_CLIENT_DELETE_ELEMENT;\n        })();\n    \n        op_client.OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN = (function() {\n    \n            /**\n             * Properties of a OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN.\n             * @memberof op_client\n             * @interface IOP_EDITOR_REQ_CLIENT_DELETE_TERRAIN\n             * @property {Array.<number>|null} [ids] OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN ids\n             * @property {number} x OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN x\n             * @property {number} y OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN y\n             * @property {boolean|null} [all] OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN all\n             */\n    \n            /**\n             * Constructs a new OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN.\n             * @memberof op_client\n             * @classdesc Represents a OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN.\n             * @implements IOP_EDITOR_REQ_CLIENT_DELETE_TERRAIN\n             * @constructor\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_DELETE_TERRAIN=} [properties] Properties to set\n             */\n            function OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN(properties) {\n                this.ids = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN ids.\n             * @member {Array.<number>} ids\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN\n             * @instance\n             */\n            OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN.prototype.ids = $util.emptyArray;\n    \n            /**\n             * OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN x.\n             * @member {number} x\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN\n             * @instance\n             */\n            OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN.prototype.x = 0;\n    \n            /**\n             * OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN y.\n             * @member {number} y\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN\n             * @instance\n             */\n            OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN.prototype.y = 0;\n    \n            /**\n             * OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN all.\n             * @member {boolean} all\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN\n             * @instance\n             */\n            OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN.prototype.all = false;\n    \n            /**\n             * Creates a new OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_DELETE_TERRAIN=} [properties] Properties to set\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN} OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN instance\n             */\n            OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN.create = function create(properties) {\n                return new OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN message. Does not implicitly {@link op_client.OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_DELETE_TERRAIN} message OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.x);\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.y);\n                if (message.all != null && message.hasOwnProperty("all"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.all);\n                if (message.ids != null && message.ids.length)\n                    for (var i = 0; i < message.ids.length; ++i)\n                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.ids[i]);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN message, length delimited. Does not implicitly {@link op_client.OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_DELETE_TERRAIN} message OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN} OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 4:\n                        if (!(message.ids && message.ids.length))\n                            message.ids = [];\n                        if ((tag & 7) === 2) {\n                            var end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2)\n                                message.ids.push(reader.int32());\n                        } else\n                            message.ids.push(reader.int32());\n                        break;\n                    case 1:\n                        message.x = reader.int32();\n                        break;\n                    case 2:\n                        message.y = reader.int32();\n                        break;\n                    case 3:\n                        message.all = reader.bool();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("x"))\n                    throw $util.ProtocolError("missing required \'x\'", { instance: message });\n                if (!message.hasOwnProperty("y"))\n                    throw $util.ProtocolError("missing required \'y\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN} OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN message.\n             * @function verify\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.ids != null && message.hasOwnProperty("ids")) {\n                    if (!Array.isArray(message.ids))\n                        return "ids: array expected";\n                    for (var i = 0; i < message.ids.length; ++i)\n                        if (!$util.isInteger(message.ids[i]))\n                            return "ids: integer[] expected";\n                }\n                if (!$util.isInteger(message.x))\n                    return "x: integer expected";\n                if (!$util.isInteger(message.y))\n                    return "y: integer expected";\n                if (message.all != null && message.hasOwnProperty("all"))\n                    if (typeof message.all !== "boolean")\n                        return "all: boolean expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN} OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN\n             */\n            OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN)\n                    return object;\n                var message = new $root.op_client.OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN();\n                if (object.ids) {\n                    if (!Array.isArray(object.ids))\n                        throw TypeError(".op_client.OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN.ids: array expected");\n                    message.ids = [];\n                    for (var i = 0; i < object.ids.length; ++i)\n                        message.ids[i] = object.ids[i] | 0;\n                }\n                if (object.x != null)\n                    message.x = object.x | 0;\n                if (object.y != null)\n                    message.y = object.y | 0;\n                if (object.all != null)\n                    message.all = Boolean(object.all);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN\n             * @static\n             * @param {op_client.OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN} message OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.ids = [];\n                if (options.defaults) {\n                    object.x = 0;\n                    object.y = 0;\n                    object.all = false;\n                }\n                if (message.x != null && message.hasOwnProperty("x"))\n                    object.x = message.x;\n                if (message.y != null && message.hasOwnProperty("y"))\n                    object.y = message.y;\n                if (message.all != null && message.hasOwnProperty("all"))\n                    object.all = message.all;\n                if (message.ids && message.ids.length) {\n                    object.ids = [];\n                    for (var j = 0; j < message.ids.length; ++j)\n                        object.ids[j] = message.ids[j];\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_EDITOR_REQ_CLIENT_DELETE_TERRAIN;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN\n             * @property {Array.<number>|null} [ids] OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN ids\n             * @property {Array.<op_def.IPBPoint3f>|null} [position] OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN position\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN.\n             * @implements IOP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN(properties) {\n                this.ids = [];\n                this.position = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN ids.\n             * @member {Array.<number>} ids\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN.prototype.ids = $util.emptyArray;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN position.\n             * @member {Array.<op_def.IPBPoint3f>} position\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN.prototype.position = $util.emptyArray;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN} OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN} message OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.ids != null && message.ids.length)\n                    for (var i = 0; i < message.ids.length; ++i)\n                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ids[i]);\n                if (message.position != null && message.position.length)\n                    for (var i = 0; i < message.position.length; ++i)\n                        $root.op_def.PBPoint3f.encode(message.position[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN} message OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN} OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.ids && message.ids.length))\n                            message.ids = [];\n                        if ((tag & 7) === 2) {\n                            var end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2)\n                                message.ids.push(reader.int32());\n                        } else\n                            message.ids.push(reader.int32());\n                        break;\n                    case 2:\n                        if (!(message.position && message.position.length))\n                            message.position = [];\n                        message.position.push($root.op_def.PBPoint3f.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN} OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.ids != null && message.hasOwnProperty("ids")) {\n                    if (!Array.isArray(message.ids))\n                        return "ids: array expected";\n                    for (var i = 0; i < message.ids.length; ++i)\n                        if (!$util.isInteger(message.ids[i]))\n                            return "ids: integer[] expected";\n                }\n                if (message.position != null && message.hasOwnProperty("position")) {\n                    if (!Array.isArray(message.position))\n                        return "position: array expected";\n                    for (var i = 0; i < message.position.length; ++i) {\n                        var error = $root.op_def.PBPoint3f.verify(message.position[i]);\n                        if (error)\n                            return "position." + error;\n                    }\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN} OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN();\n                if (object.ids) {\n                    if (!Array.isArray(object.ids))\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN.ids: array expected");\n                    message.ids = [];\n                    for (var i = 0; i < object.ids.length; ++i)\n                        message.ids[i] = object.ids[i] | 0;\n                }\n                if (object.position) {\n                    if (!Array.isArray(object.position))\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN.position: array expected");\n                    message.position = [];\n                    for (var i = 0; i < object.position.length; ++i) {\n                        if (typeof object.position[i] !== "object")\n                            throw TypeError(".op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN.position: object expected");\n                        message.position[i] = $root.op_def.PBPoint3f.fromObject(object.position[i]);\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN} message OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults) {\n                    object.ids = [];\n                    object.position = [];\n                }\n                if (message.ids && message.ids.length) {\n                    object.ids = [];\n                    for (var j = 0; j < message.ids.length; ++j)\n                        object.ids[j] = message.ids[j];\n                }\n                if (message.position && message.position.length) {\n                    object.position = [];\n                    for (var j = 0; j < message.position.length; ++j)\n                        object.position[j] = $root.op_def.PBPoint3f.toObject(message.position[j], options);\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_RES_CLIENT_REMOVE_TERRAIN;\n        })();\n    \n        op_client.OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW = (function() {\n    \n            /**\n             * Properties of a OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW.\n             * @memberof op_client\n             * @interface IOP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW\n             * @property {op_gameconfig.IDisplay|null} [display] OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW display\n             * @property {op_gameconfig.IAnimation|null} [animation] OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW animation\n             */\n    \n            /**\n             * Constructs a new OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW.\n             * @memberof op_client\n             * @classdesc Represents a OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW.\n             * @implements IOP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW\n             * @constructor\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW=} [properties] Properties to set\n             */\n            function OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW display.\n             * @member {op_gameconfig.IDisplay|null|undefined} display\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW\n             * @instance\n             */\n            OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW.prototype.display = null;\n    \n            /**\n             * OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW animation.\n             * @member {op_gameconfig.IAnimation|null|undefined} animation\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW\n             * @instance\n             */\n            OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW.prototype.animation = null;\n    \n            /**\n             * Creates a new OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW=} [properties] Properties to set\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW} OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW instance\n             */\n            OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW.create = function create(properties) {\n                return new OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW message. Does not implicitly {@link op_client.OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW} message OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.display != null && message.hasOwnProperty("display"))\n                    $root.op_gameconfig.Display.encode(message.display, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.animation != null && message.hasOwnProperty("animation"))\n                    $root.op_gameconfig.Animation.encode(message.animation, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW message, length delimited. Does not implicitly {@link op_client.OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW} message OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW} OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.display = $root.op_gameconfig.Display.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        message.animation = $root.op_gameconfig.Animation.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW} OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW message.\n             * @function verify\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.display != null && message.hasOwnProperty("display")) {\n                    var error = $root.op_gameconfig.Display.verify(message.display);\n                    if (error)\n                        return "display." + error;\n                }\n                if (message.animation != null && message.hasOwnProperty("animation")) {\n                    var error = $root.op_gameconfig.Animation.verify(message.animation);\n                    if (error)\n                        return "animation." + error;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW} OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW\n             */\n            OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW)\n                    return object;\n                var message = new $root.op_client.OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW();\n                if (object.display != null) {\n                    if (typeof object.display !== "object")\n                        throw TypeError(".op_client.OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW.display: object expected");\n                    message.display = $root.op_gameconfig.Display.fromObject(object.display);\n                }\n                if (object.animation != null) {\n                    if (typeof object.animation !== "object")\n                        throw TypeError(".op_client.OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW.animation: object expected");\n                    message.animation = $root.op_gameconfig.Animation.fromObject(object.animation);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW\n             * @static\n             * @param {op_client.OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW} message OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.display = null;\n                    object.animation = null;\n                }\n                if (message.display != null && message.hasOwnProperty("display"))\n                    object.display = $root.op_gameconfig.Display.toObject(message.display, options);\n                if (message.animation != null && message.hasOwnProperty("animation"))\n                    object.animation = $root.op_gameconfig.Animation.toObject(message.animation, options);\n                return object;\n            };\n    \n            /**\n             * Converts this OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_EDITOR_REQ_CLIENT_MOUSE_FOLLOW;\n        })();\n    \n        op_client.OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT = (function() {\n    \n            /**\n             * Properties of a OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT.\n             * @memberof op_client\n             * @interface IOP_EDITOR_REQ_CLIENT_SELECT_ELEMENT\n             * @property {number} id OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT id\n             */\n    \n            /**\n             * Constructs a new OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT.\n             * @memberof op_client\n             * @classdesc Represents a OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT.\n             * @implements IOP_EDITOR_REQ_CLIENT_SELECT_ELEMENT\n             * @constructor\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_SELECT_ELEMENT=} [properties] Properties to set\n             */\n            function OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT id.\n             * @member {number} id\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT\n             * @instance\n             */\n            OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT.prototype.id = 0;\n    \n            /**\n             * Creates a new OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_SELECT_ELEMENT=} [properties] Properties to set\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT} OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT instance\n             */\n            OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT.create = function create(properties) {\n                return new OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT message. Does not implicitly {@link op_client.OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_SELECT_ELEMENT} message OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.id);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT message, length delimited. Does not implicitly {@link op_client.OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_SELECT_ELEMENT} message OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT} OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.id = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("id"))\n                    throw $util.ProtocolError("missing required \'id\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT} OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT message.\n             * @function verify\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.id))\n                    return "id: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT} OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT\n             */\n            OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT)\n                    return object;\n                var message = new $root.op_client.OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT();\n                if (object.id != null)\n                    message.id = object.id | 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT\n             * @static\n             * @param {op_client.OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT} message OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.id = 0;\n                if (message.id != null && message.hasOwnProperty("id"))\n                    object.id = message.id;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_EDITOR_REQ_CLIENT_SELECT_ELEMENT;\n        })();\n    \n        op_client.OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT = (function() {\n    \n            /**\n             * Properties of a OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT.\n             * @memberof op_client\n             * @interface IOP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT\n             * @property {number} id OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT id\n             */\n    \n            /**\n             * Constructs a new OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT.\n             * @memberof op_client\n             * @classdesc Represents a OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT.\n             * @implements IOP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT\n             * @constructor\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT=} [properties] Properties to set\n             */\n            function OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT id.\n             * @member {number} id\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT\n             * @instance\n             */\n            OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT.prototype.id = 0;\n    \n            /**\n             * Creates a new OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT=} [properties] Properties to set\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT} OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT instance\n             */\n            OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT.create = function create(properties) {\n                return new OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT message. Does not implicitly {@link op_client.OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT} message OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.id);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT message, length delimited. Does not implicitly {@link op_client.OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT} message OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT} OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.id = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("id"))\n                    throw $util.ProtocolError("missing required \'id\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT} OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT message.\n             * @function verify\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.id))\n                    return "id: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT} OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT\n             */\n            OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT)\n                    return object;\n                var message = new $root.op_client.OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT();\n                if (object.id != null)\n                    message.id = object.id | 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT\n             * @static\n             * @param {op_client.OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT} message OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.id = 0;\n                if (message.id != null && message.hasOwnProperty("id"))\n                    object.id = message.id;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_EDITOR_REQ_CLIENT_FIXED_TO_ELEMENT;\n        })();\n    \n        op_client.OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT = (function() {\n    \n            /**\n             * Properties of a OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT.\n             * @memberof op_client\n             * @interface IOP_EDITOR_REQ_CLIENT_SYNC_ELEMENT\n             * @property {Array.<op_client.IElement>|null} [element] OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT element\n             */\n    \n            /**\n             * Constructs a new OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT.\n             * @memberof op_client\n             * @classdesc Represents a OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT.\n             * @implements IOP_EDITOR_REQ_CLIENT_SYNC_ELEMENT\n             * @constructor\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_SYNC_ELEMENT=} [properties] Properties to set\n             */\n            function OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT(properties) {\n                this.element = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT element.\n             * @member {Array.<op_client.IElement>} element\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT\n             * @instance\n             */\n            OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT.prototype.element = $util.emptyArray;\n    \n            /**\n             * Creates a new OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_SYNC_ELEMENT=} [properties] Properties to set\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT} OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT instance\n             */\n            OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT.create = function create(properties) {\n                return new OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT message. Does not implicitly {@link op_client.OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_SYNC_ELEMENT} message OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.element != null && message.element.length)\n                    for (var i = 0; i < message.element.length; ++i)\n                        $root.op_client.Element.encode(message.element[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT message, length delimited. Does not implicitly {@link op_client.OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_SYNC_ELEMENT} message OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT} OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.element && message.element.length))\n                            message.element = [];\n                        message.element.push($root.op_client.Element.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT} OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT message.\n             * @function verify\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.element != null && message.hasOwnProperty("element")) {\n                    if (!Array.isArray(message.element))\n                        return "element: array expected";\n                    for (var i = 0; i < message.element.length; ++i) {\n                        var error = $root.op_client.Element.verify(message.element[i]);\n                        if (error)\n                            return "element." + error;\n                    }\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT} OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT\n             */\n            OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT)\n                    return object;\n                var message = new $root.op_client.OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT();\n                if (object.element) {\n                    if (!Array.isArray(object.element))\n                        throw TypeError(".op_client.OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT.element: array expected");\n                    message.element = [];\n                    for (var i = 0; i < object.element.length; ++i) {\n                        if (typeof object.element[i] !== "object")\n                            throw TypeError(".op_client.OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT.element: object expected");\n                        message.element[i] = $root.op_client.Element.fromObject(object.element[i]);\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT\n             * @static\n             * @param {op_client.OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT} message OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.element = [];\n                if (message.element && message.element.length) {\n                    object.element = [];\n                    for (var j = 0; j < message.element.length; ++j)\n                        object.element[j] = $root.op_client.Element.toObject(message.element[j], options);\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_EDITOR_REQ_CLIENT_SYNC_ELEMENT;\n        })();\n    \n        op_client.OP_EDITOR_REQ_CLIENT_ALIGN_GRID = (function() {\n    \n            /**\n             * Properties of a OP_EDITOR_REQ_CLIENT_ALIGN_GRID.\n             * @memberof op_client\n             * @interface IOP_EDITOR_REQ_CLIENT_ALIGN_GRID\n             * @property {boolean} align OP_EDITOR_REQ_CLIENT_ALIGN_GRID align\n             */\n    \n            /**\n             * Constructs a new OP_EDITOR_REQ_CLIENT_ALIGN_GRID.\n             * @memberof op_client\n             * @classdesc Represents a OP_EDITOR_REQ_CLIENT_ALIGN_GRID.\n             * @implements IOP_EDITOR_REQ_CLIENT_ALIGN_GRID\n             * @constructor\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_ALIGN_GRID=} [properties] Properties to set\n             */\n            function OP_EDITOR_REQ_CLIENT_ALIGN_GRID(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_EDITOR_REQ_CLIENT_ALIGN_GRID align.\n             * @member {boolean} align\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_ALIGN_GRID\n             * @instance\n             */\n            OP_EDITOR_REQ_CLIENT_ALIGN_GRID.prototype.align = false;\n    \n            /**\n             * Creates a new OP_EDITOR_REQ_CLIENT_ALIGN_GRID instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_ALIGN_GRID\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_ALIGN_GRID=} [properties] Properties to set\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_ALIGN_GRID} OP_EDITOR_REQ_CLIENT_ALIGN_GRID instance\n             */\n            OP_EDITOR_REQ_CLIENT_ALIGN_GRID.create = function create(properties) {\n                return new OP_EDITOR_REQ_CLIENT_ALIGN_GRID(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_EDITOR_REQ_CLIENT_ALIGN_GRID message. Does not implicitly {@link op_client.OP_EDITOR_REQ_CLIENT_ALIGN_GRID.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_ALIGN_GRID\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_ALIGN_GRID} message OP_EDITOR_REQ_CLIENT_ALIGN_GRID message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_EDITOR_REQ_CLIENT_ALIGN_GRID.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.align);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_EDITOR_REQ_CLIENT_ALIGN_GRID message, length delimited. Does not implicitly {@link op_client.OP_EDITOR_REQ_CLIENT_ALIGN_GRID.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_ALIGN_GRID\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_ALIGN_GRID} message OP_EDITOR_REQ_CLIENT_ALIGN_GRID message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_EDITOR_REQ_CLIENT_ALIGN_GRID.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_EDITOR_REQ_CLIENT_ALIGN_GRID message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_ALIGN_GRID\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_ALIGN_GRID} OP_EDITOR_REQ_CLIENT_ALIGN_GRID\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_EDITOR_REQ_CLIENT_ALIGN_GRID.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_EDITOR_REQ_CLIENT_ALIGN_GRID();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.align = reader.bool();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("align"))\n                    throw $util.ProtocolError("missing required \'align\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_EDITOR_REQ_CLIENT_ALIGN_GRID message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_ALIGN_GRID\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_ALIGN_GRID} OP_EDITOR_REQ_CLIENT_ALIGN_GRID\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_EDITOR_REQ_CLIENT_ALIGN_GRID.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_EDITOR_REQ_CLIENT_ALIGN_GRID message.\n             * @function verify\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_ALIGN_GRID\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_EDITOR_REQ_CLIENT_ALIGN_GRID.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (typeof message.align !== "boolean")\n                    return "align: boolean expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_EDITOR_REQ_CLIENT_ALIGN_GRID message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_ALIGN_GRID\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_ALIGN_GRID} OP_EDITOR_REQ_CLIENT_ALIGN_GRID\n             */\n            OP_EDITOR_REQ_CLIENT_ALIGN_GRID.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_EDITOR_REQ_CLIENT_ALIGN_GRID)\n                    return object;\n                var message = new $root.op_client.OP_EDITOR_REQ_CLIENT_ALIGN_GRID();\n                if (object.align != null)\n                    message.align = Boolean(object.align);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_EDITOR_REQ_CLIENT_ALIGN_GRID message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_ALIGN_GRID\n             * @static\n             * @param {op_client.OP_EDITOR_REQ_CLIENT_ALIGN_GRID} message OP_EDITOR_REQ_CLIENT_ALIGN_GRID\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_EDITOR_REQ_CLIENT_ALIGN_GRID.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.align = false;\n                if (message.align != null && message.hasOwnProperty("align"))\n                    object.align = message.align;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_EDITOR_REQ_CLIENT_ALIGN_GRID to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_ALIGN_GRID\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_EDITOR_REQ_CLIENT_ALIGN_GRID.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_EDITOR_REQ_CLIENT_ALIGN_GRID;\n        })();\n    \n        op_client.OP_EDITOR_REQ_CLIENT_VISIBLE_GRID = (function() {\n    \n            /**\n             * Properties of a OP_EDITOR_REQ_CLIENT_VISIBLE_GRID.\n             * @memberof op_client\n             * @interface IOP_EDITOR_REQ_CLIENT_VISIBLE_GRID\n             * @property {boolean} visible OP_EDITOR_REQ_CLIENT_VISIBLE_GRID visible\n             */\n    \n            /**\n             * Constructs a new OP_EDITOR_REQ_CLIENT_VISIBLE_GRID.\n             * @memberof op_client\n             * @classdesc Represents a OP_EDITOR_REQ_CLIENT_VISIBLE_GRID.\n             * @implements IOP_EDITOR_REQ_CLIENT_VISIBLE_GRID\n             * @constructor\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_VISIBLE_GRID=} [properties] Properties to set\n             */\n            function OP_EDITOR_REQ_CLIENT_VISIBLE_GRID(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_EDITOR_REQ_CLIENT_VISIBLE_GRID visible.\n             * @member {boolean} visible\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_VISIBLE_GRID\n             * @instance\n             */\n            OP_EDITOR_REQ_CLIENT_VISIBLE_GRID.prototype.visible = false;\n    \n            /**\n             * Creates a new OP_EDITOR_REQ_CLIENT_VISIBLE_GRID instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_VISIBLE_GRID\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_VISIBLE_GRID=} [properties] Properties to set\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_VISIBLE_GRID} OP_EDITOR_REQ_CLIENT_VISIBLE_GRID instance\n             */\n            OP_EDITOR_REQ_CLIENT_VISIBLE_GRID.create = function create(properties) {\n                return new OP_EDITOR_REQ_CLIENT_VISIBLE_GRID(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_EDITOR_REQ_CLIENT_VISIBLE_GRID message. Does not implicitly {@link op_client.OP_EDITOR_REQ_CLIENT_VISIBLE_GRID.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_VISIBLE_GRID\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_VISIBLE_GRID} message OP_EDITOR_REQ_CLIENT_VISIBLE_GRID message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_EDITOR_REQ_CLIENT_VISIBLE_GRID.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.visible);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_EDITOR_REQ_CLIENT_VISIBLE_GRID message, length delimited. Does not implicitly {@link op_client.OP_EDITOR_REQ_CLIENT_VISIBLE_GRID.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_VISIBLE_GRID\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_VISIBLE_GRID} message OP_EDITOR_REQ_CLIENT_VISIBLE_GRID message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_EDITOR_REQ_CLIENT_VISIBLE_GRID.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_EDITOR_REQ_CLIENT_VISIBLE_GRID message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_VISIBLE_GRID\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_VISIBLE_GRID} OP_EDITOR_REQ_CLIENT_VISIBLE_GRID\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_EDITOR_REQ_CLIENT_VISIBLE_GRID.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_EDITOR_REQ_CLIENT_VISIBLE_GRID();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.visible = reader.bool();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("visible"))\n                    throw $util.ProtocolError("missing required \'visible\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_EDITOR_REQ_CLIENT_VISIBLE_GRID message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_VISIBLE_GRID\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_VISIBLE_GRID} OP_EDITOR_REQ_CLIENT_VISIBLE_GRID\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_EDITOR_REQ_CLIENT_VISIBLE_GRID.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_EDITOR_REQ_CLIENT_VISIBLE_GRID message.\n             * @function verify\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_VISIBLE_GRID\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_EDITOR_REQ_CLIENT_VISIBLE_GRID.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (typeof message.visible !== "boolean")\n                    return "visible: boolean expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_EDITOR_REQ_CLIENT_VISIBLE_GRID message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_VISIBLE_GRID\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_VISIBLE_GRID} OP_EDITOR_REQ_CLIENT_VISIBLE_GRID\n             */\n            OP_EDITOR_REQ_CLIENT_VISIBLE_GRID.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_EDITOR_REQ_CLIENT_VISIBLE_GRID)\n                    return object;\n                var message = new $root.op_client.OP_EDITOR_REQ_CLIENT_VISIBLE_GRID();\n                if (object.visible != null)\n                    message.visible = Boolean(object.visible);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_EDITOR_REQ_CLIENT_VISIBLE_GRID message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_VISIBLE_GRID\n             * @static\n             * @param {op_client.OP_EDITOR_REQ_CLIENT_VISIBLE_GRID} message OP_EDITOR_REQ_CLIENT_VISIBLE_GRID\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_EDITOR_REQ_CLIENT_VISIBLE_GRID.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.visible = false;\n                if (message.visible != null && message.hasOwnProperty("visible"))\n                    object.visible = message.visible;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_EDITOR_REQ_CLIENT_VISIBLE_GRID to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_VISIBLE_GRID\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_EDITOR_REQ_CLIENT_VISIBLE_GRID.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_EDITOR_REQ_CLIENT_VISIBLE_GRID;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE\n             * @property {number|null} [tuDing] OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE tuDing\n             * @property {number|null} [qingSongTang] OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE qingSongTang\n             * @property {number|null} [gold] OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE gold\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE.\n             * @implements IOP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE tuDing.\n             * @member {number} tuDing\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE.prototype.tuDing = 0;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE qingSongTang.\n             * @member {number} qingSongTang\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE.prototype.qingSongTang = 0;\n    \n            /**\n             * OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE gold.\n             * @member {number} gold\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE.prototype.gold = 0;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE} OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE instance\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE} message OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.tuDing != null && message.hasOwnProperty("tuDing"))\n                    writer.uint32(/* id 1, wireType 1 =*/9).double(message.tuDing);\n                if (message.qingSongTang != null && message.hasOwnProperty("qingSongTang"))\n                    writer.uint32(/* id 2, wireType 1 =*/17).double(message.qingSongTang);\n                if (message.gold != null && message.hasOwnProperty("gold"))\n                    writer.uint32(/* id 3, wireType 1 =*/25).double(message.gold);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE} message OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE} OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.tuDing = reader.double();\n                        break;\n                    case 2:\n                        message.qingSongTang = reader.double();\n                        break;\n                    case 3:\n                        message.gold = reader.double();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE} OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.tuDing != null && message.hasOwnProperty("tuDing"))\n                    if (typeof message.tuDing !== "number")\n                        return "tuDing: number expected";\n                if (message.qingSongTang != null && message.hasOwnProperty("qingSongTang"))\n                    if (typeof message.qingSongTang !== "number")\n                        return "qingSongTang: number expected";\n                if (message.gold != null && message.hasOwnProperty("gold"))\n                    if (typeof message.gold !== "number")\n                        return "gold: number expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE} OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE();\n                if (object.tuDing != null)\n                    message.tuDing = Number(object.tuDing);\n                if (object.qingSongTang != null)\n                    message.qingSongTang = Number(object.qingSongTang);\n                if (object.gold != null)\n                    message.gold = Number(object.gold);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE} message OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.tuDing = 0;\n                    object.qingSongTang = 0;\n                    object.gold = 0;\n                }\n                if (message.tuDing != null && message.hasOwnProperty("tuDing"))\n                    object.tuDing = options.json && !isFinite(message.tuDing) ? String(message.tuDing) : message.tuDing;\n                if (message.qingSongTang != null && message.hasOwnProperty("qingSongTang"))\n                    object.qingSongTang = options.json && !isFinite(message.qingSongTang) ? String(message.qingSongTang) : message.qingSongTang;\n                if (message.gold != null && message.hasOwnProperty("gold"))\n                    object.gold = options.json && !isFinite(message.gold) ? String(message.gold) : message.gold;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_RES_CLIENT_SYNC_USER_BALANCE;\n        })();\n    \n        op_client.BindID = (function() {\n    \n            /**\n             * Properties of a BindID.\n             * @memberof op_client\n             * @interface IBindID\n             * @property {number} id BindID id\n             * @property {number|null} [bindId] BindID bindId\n             */\n    \n            /**\n             * Constructs a new BindID.\n             * @memberof op_client\n             * @classdesc Represents a BindID.\n             * @implements IBindID\n             * @constructor\n             * @param {op_client.IBindID=} [properties] Properties to set\n             */\n            function BindID(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * BindID id.\n             * @member {number} id\n             * @memberof op_client.BindID\n             * @instance\n             */\n            BindID.prototype.id = 0;\n    \n            /**\n             * BindID bindId.\n             * @member {number} bindId\n             * @memberof op_client.BindID\n             * @instance\n             */\n            BindID.prototype.bindId = 0;\n    \n            /**\n             * Creates a new BindID instance using the specified properties.\n             * @function create\n             * @memberof op_client.BindID\n             * @static\n             * @param {op_client.IBindID=} [properties] Properties to set\n             * @returns {op_client.BindID} BindID instance\n             */\n            BindID.create = function create(properties) {\n                return new BindID(properties);\n            };\n    \n            /**\n             * Encodes the specified BindID message. Does not implicitly {@link op_client.BindID.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.BindID\n             * @static\n             * @param {op_client.IBindID} message BindID message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            BindID.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.id);\n                if (message.bindId != null && message.hasOwnProperty("bindId"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.bindId);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified BindID message, length delimited. Does not implicitly {@link op_client.BindID.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.BindID\n             * @static\n             * @param {op_client.IBindID} message BindID message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            BindID.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a BindID message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.BindID\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.BindID} BindID\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            BindID.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.BindID();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.id = reader.int32();\n                        break;\n                    case 2:\n                        message.bindId = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("id"))\n                    throw $util.ProtocolError("missing required \'id\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a BindID message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.BindID\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.BindID} BindID\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            BindID.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a BindID message.\n             * @function verify\n             * @memberof op_client.BindID\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            BindID.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.id))\n                    return "id: integer expected";\n                if (message.bindId != null && message.hasOwnProperty("bindId"))\n                    if (!$util.isInteger(message.bindId))\n                        return "bindId: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a BindID message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.BindID\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.BindID} BindID\n             */\n            BindID.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.BindID)\n                    return object;\n                var message = new $root.op_client.BindID();\n                if (object.id != null)\n                    message.id = object.id | 0;\n                if (object.bindId != null)\n                    message.bindId = object.bindId | 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a BindID message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.BindID\n             * @static\n             * @param {op_client.BindID} message BindID\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            BindID.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.id = 0;\n                    object.bindId = 0;\n                }\n                if (message.id != null && message.hasOwnProperty("id"))\n                    object.id = message.id;\n                if (message.bindId != null && message.hasOwnProperty("bindId"))\n                    object.bindId = message.bindId;\n                return object;\n            };\n    \n            /**\n             * Converts this BindID to JSON.\n             * @function toJSON\n             * @memberof op_client.BindID\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            BindID.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return BindID;\n        })();\n    \n        op_client.Sprite = (function() {\n    \n            /**\n             * Properties of a Sprite.\n             * @memberof op_client\n             * @interface ISprite\n             * @property {number} id Sprite id\n             * @property {op_def.IPBPoint3f|null} [point3f] Sprite point3f\n             * @property {op_gameconfig.IAvatar|null} [avatar] Sprite avatar\n             * @property {string|null} [currentAnimationName] Sprite currentAnimationName\n             * @property {op_def.Direction|null} [direction] Sprite direction\n             * @property {string|null} [nickname] Sprite nickname\n             * @property {Array.<op_def.IBadgeCard>|null} [displayBadgeCards] Sprite displayBadgeCards\n             * @property {number|null} [opacity] Sprite opacity\n             * @property {number|null} [bindId] Sprite bindId\n             * @property {Array.<op_gameconfig.IAnimation>|null} [animations] Sprite animations\n             * @property {op_gameconfig.IDisplay|null} [display] Sprite display\n             */\n    \n            /**\n             * Constructs a new Sprite.\n             * @memberof op_client\n             * @classdesc Represents a Sprite.\n             * @implements ISprite\n             * @constructor\n             * @param {op_client.ISprite=} [properties] Properties to set\n             */\n            function Sprite(properties) {\n                this.displayBadgeCards = [];\n                this.animations = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Sprite id.\n             * @member {number} id\n             * @memberof op_client.Sprite\n             * @instance\n             */\n            Sprite.prototype.id = 0;\n    \n            /**\n             * Sprite point3f.\n             * @member {op_def.IPBPoint3f|null|undefined} point3f\n             * @memberof op_client.Sprite\n             * @instance\n             */\n            Sprite.prototype.point3f = null;\n    \n            /**\n             * Sprite avatar.\n             * @member {op_gameconfig.IAvatar|null|undefined} avatar\n             * @memberof op_client.Sprite\n             * @instance\n             */\n            Sprite.prototype.avatar = null;\n    \n            /**\n             * Sprite currentAnimationName.\n             * @member {string} currentAnimationName\n             * @memberof op_client.Sprite\n             * @instance\n             */\n            Sprite.prototype.currentAnimationName = "";\n    \n            /**\n             * Sprite direction.\n             * @member {op_def.Direction} direction\n             * @memberof op_client.Sprite\n             * @instance\n             */\n            Sprite.prototype.direction = 0;\n    \n            /**\n             * Sprite nickname.\n             * @member {string} nickname\n             * @memberof op_client.Sprite\n             * @instance\n             */\n            Sprite.prototype.nickname = "";\n    \n            /**\n             * Sprite displayBadgeCards.\n             * @member {Array.<op_def.IBadgeCard>} displayBadgeCards\n             * @memberof op_client.Sprite\n             * @instance\n             */\n            Sprite.prototype.displayBadgeCards = $util.emptyArray;\n    \n            /**\n             * Sprite opacity.\n             * @member {number} opacity\n             * @memberof op_client.Sprite\n             * @instance\n             */\n            Sprite.prototype.opacity = 100;\n    \n            /**\n             * Sprite bindId.\n             * @member {number} bindId\n             * @memberof op_client.Sprite\n             * @instance\n             */\n            Sprite.prototype.bindId = 0;\n    \n            /**\n             * Sprite animations.\n             * @member {Array.<op_gameconfig.IAnimation>} animations\n             * @memberof op_client.Sprite\n             * @instance\n             */\n            Sprite.prototype.animations = $util.emptyArray;\n    \n            /**\n             * Sprite display.\n             * @member {op_gameconfig.IDisplay|null|undefined} display\n             * @memberof op_client.Sprite\n             * @instance\n             */\n            Sprite.prototype.display = null;\n    \n            /**\n             * Creates a new Sprite instance using the specified properties.\n             * @function create\n             * @memberof op_client.Sprite\n             * @static\n             * @param {op_client.ISprite=} [properties] Properties to set\n             * @returns {op_client.Sprite} Sprite instance\n             */\n            Sprite.create = function create(properties) {\n                return new Sprite(properties);\n            };\n    \n            /**\n             * Encodes the specified Sprite message. Does not implicitly {@link op_client.Sprite.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.Sprite\n             * @static\n             * @param {op_client.ISprite} message Sprite message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Sprite.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.id);\n                if (message.point3f != null && message.hasOwnProperty("point3f"))\n                    $root.op_def.PBPoint3f.encode(message.point3f, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                if (message.avatar != null && message.hasOwnProperty("avatar"))\n                    $root.op_gameconfig.Avatar.encode(message.avatar, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                if (message.currentAnimationName != null && message.hasOwnProperty("currentAnimationName"))\n                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.currentAnimationName);\n                if (message.direction != null && message.hasOwnProperty("direction"))\n                    writer.uint32(/* id 5, wireType 0 =*/40).int32(message.direction);\n                if (message.nickname != null && message.hasOwnProperty("nickname"))\n                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.nickname);\n                if (message.displayBadgeCards != null && message.displayBadgeCards.length)\n                    for (var i = 0; i < message.displayBadgeCards.length; ++i)\n                        $root.op_def.BadgeCard.encode(message.displayBadgeCards[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n                if (message.opacity != null && message.hasOwnProperty("opacity"))\n                    writer.uint32(/* id 8, wireType 0 =*/64).int32(message.opacity);\n                if (message.bindId != null && message.hasOwnProperty("bindId"))\n                    writer.uint32(/* id 9, wireType 0 =*/72).int32(message.bindId);\n                if (message.animations != null && message.animations.length)\n                    for (var i = 0; i < message.animations.length; ++i)\n                        $root.op_gameconfig.Animation.encode(message.animations[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n                if (message.display != null && message.hasOwnProperty("display"))\n                    $root.op_gameconfig.Display.encode(message.display, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Sprite message, length delimited. Does not implicitly {@link op_client.Sprite.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.Sprite\n             * @static\n             * @param {op_client.ISprite} message Sprite message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Sprite.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a Sprite message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.Sprite\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.Sprite} Sprite\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Sprite.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.Sprite();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.id = reader.int32();\n                        break;\n                    case 2:\n                        message.point3f = $root.op_def.PBPoint3f.decode(reader, reader.uint32());\n                        break;\n                    case 3:\n                        message.avatar = $root.op_gameconfig.Avatar.decode(reader, reader.uint32());\n                        break;\n                    case 4:\n                        message.currentAnimationName = reader.string();\n                        break;\n                    case 5:\n                        message.direction = reader.int32();\n                        break;\n                    case 6:\n                        message.nickname = reader.string();\n                        break;\n                    case 7:\n                        if (!(message.displayBadgeCards && message.displayBadgeCards.length))\n                            message.displayBadgeCards = [];\n                        message.displayBadgeCards.push($root.op_def.BadgeCard.decode(reader, reader.uint32()));\n                        break;\n                    case 8:\n                        message.opacity = reader.int32();\n                        break;\n                    case 9:\n                        message.bindId = reader.int32();\n                        break;\n                    case 10:\n                        if (!(message.animations && message.animations.length))\n                            message.animations = [];\n                        message.animations.push($root.op_gameconfig.Animation.decode(reader, reader.uint32()));\n                        break;\n                    case 11:\n                        message.display = $root.op_gameconfig.Display.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("id"))\n                    throw $util.ProtocolError("missing required \'id\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a Sprite message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.Sprite\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.Sprite} Sprite\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Sprite.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a Sprite message.\n             * @function verify\n             * @memberof op_client.Sprite\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Sprite.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.id))\n                    return "id: integer expected";\n                if (message.point3f != null && message.hasOwnProperty("point3f")) {\n                    var error = $root.op_def.PBPoint3f.verify(message.point3f);\n                    if (error)\n                        return "point3f." + error;\n                }\n                if (message.avatar != null && message.hasOwnProperty("avatar")) {\n                    var error = $root.op_gameconfig.Avatar.verify(message.avatar);\n                    if (error)\n                        return "avatar." + error;\n                }\n                if (message.currentAnimationName != null && message.hasOwnProperty("currentAnimationName"))\n                    if (!$util.isString(message.currentAnimationName))\n                        return "currentAnimationName: string expected";\n                if (message.direction != null && message.hasOwnProperty("direction"))\n                    switch (message.direction) {\n                    default:\n                        return "direction: enum value expected";\n                    case 0:\n                    case 1:\n                    case 2:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 6:\n                    case 7:\n                        break;\n                    }\n                if (message.nickname != null && message.hasOwnProperty("nickname"))\n                    if (!$util.isString(message.nickname))\n                        return "nickname: string expected";\n                if (message.displayBadgeCards != null && message.hasOwnProperty("displayBadgeCards")) {\n                    if (!Array.isArray(message.displayBadgeCards))\n                        return "displayBadgeCards: array expected";\n                    for (var i = 0; i < message.displayBadgeCards.length; ++i) {\n                        var error = $root.op_def.BadgeCard.verify(message.displayBadgeCards[i]);\n                        if (error)\n                            return "displayBadgeCards." + error;\n                    }\n                }\n                if (message.opacity != null && message.hasOwnProperty("opacity"))\n                    if (!$util.isInteger(message.opacity))\n                        return "opacity: integer expected";\n                if (message.bindId != null && message.hasOwnProperty("bindId"))\n                    if (!$util.isInteger(message.bindId))\n                        return "bindId: integer expected";\n                if (message.animations != null && message.hasOwnProperty("animations")) {\n                    if (!Array.isArray(message.animations))\n                        return "animations: array expected";\n                    for (var i = 0; i < message.animations.length; ++i) {\n                        var error = $root.op_gameconfig.Animation.verify(message.animations[i]);\n                        if (error)\n                            return "animations." + error;\n                    }\n                }\n                if (message.display != null && message.hasOwnProperty("display")) {\n                    var error = $root.op_gameconfig.Display.verify(message.display);\n                    if (error)\n                        return "display." + error;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a Sprite message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.Sprite\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.Sprite} Sprite\n             */\n            Sprite.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.Sprite)\n                    return object;\n                var message = new $root.op_client.Sprite();\n                if (object.id != null)\n                    message.id = object.id | 0;\n                if (object.point3f != null) {\n                    if (typeof object.point3f !== "object")\n                        throw TypeError(".op_client.Sprite.point3f: object expected");\n                    message.point3f = $root.op_def.PBPoint3f.fromObject(object.point3f);\n                }\n                if (object.avatar != null) {\n                    if (typeof object.avatar !== "object")\n                        throw TypeError(".op_client.Sprite.avatar: object expected");\n                    message.avatar = $root.op_gameconfig.Avatar.fromObject(object.avatar);\n                }\n                if (object.currentAnimationName != null)\n                    message.currentAnimationName = String(object.currentAnimationName);\n                switch (object.direction) {\n                case "UP":\n                case 0:\n                    message.direction = 0;\n                    break;\n                case "UPPER_LEFT":\n                case 1:\n                    message.direction = 1;\n                    break;\n                case "LEFT":\n                case 2:\n                    message.direction = 2;\n                    break;\n                case "LOWER_LEFT":\n                case 3:\n                    message.direction = 3;\n                    break;\n                case "DOWN":\n                case 4:\n                    message.direction = 4;\n                    break;\n                case "LOWER_RIGHT":\n                case 5:\n                    message.direction = 5;\n                    break;\n                case "RIGHT":\n                case 6:\n                    message.direction = 6;\n                    break;\n                case "UPPER_RIGHT":\n                case 7:\n                    message.direction = 7;\n                    break;\n                }\n                if (object.nickname != null)\n                    message.nickname = String(object.nickname);\n                if (object.displayBadgeCards) {\n                    if (!Array.isArray(object.displayBadgeCards))\n                        throw TypeError(".op_client.Sprite.displayBadgeCards: array expected");\n                    message.displayBadgeCards = [];\n                    for (var i = 0; i < object.displayBadgeCards.length; ++i) {\n                        if (typeof object.displayBadgeCards[i] !== "object")\n                            throw TypeError(".op_client.Sprite.displayBadgeCards: object expected");\n                        message.displayBadgeCards[i] = $root.op_def.BadgeCard.fromObject(object.displayBadgeCards[i]);\n                    }\n                }\n                if (object.opacity != null)\n                    message.opacity = object.opacity | 0;\n                if (object.bindId != null)\n                    message.bindId = object.bindId | 0;\n                if (object.animations) {\n                    if (!Array.isArray(object.animations))\n                        throw TypeError(".op_client.Sprite.animations: array expected");\n                    message.animations = [];\n                    for (var i = 0; i < object.animations.length; ++i) {\n                        if (typeof object.animations[i] !== "object")\n                            throw TypeError(".op_client.Sprite.animations: object expected");\n                        message.animations[i] = $root.op_gameconfig.Animation.fromObject(object.animations[i]);\n                    }\n                }\n                if (object.display != null) {\n                    if (typeof object.display !== "object")\n                        throw TypeError(".op_client.Sprite.display: object expected");\n                    message.display = $root.op_gameconfig.Display.fromObject(object.display);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a Sprite message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.Sprite\n             * @static\n             * @param {op_client.Sprite} message Sprite\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Sprite.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults) {\n                    object.displayBadgeCards = [];\n                    object.animations = [];\n                }\n                if (options.defaults) {\n                    object.id = 0;\n                    object.point3f = null;\n                    object.avatar = null;\n                    object.currentAnimationName = "";\n                    object.direction = options.enums === String ? "UP" : 0;\n                    object.nickname = "";\n                    object.opacity = 100;\n                    object.bindId = 0;\n                    object.display = null;\n                }\n                if (message.id != null && message.hasOwnProperty("id"))\n                    object.id = message.id;\n                if (message.point3f != null && message.hasOwnProperty("point3f"))\n                    object.point3f = $root.op_def.PBPoint3f.toObject(message.point3f, options);\n                if (message.avatar != null && message.hasOwnProperty("avatar"))\n                    object.avatar = $root.op_gameconfig.Avatar.toObject(message.avatar, options);\n                if (message.currentAnimationName != null && message.hasOwnProperty("currentAnimationName"))\n                    object.currentAnimationName = message.currentAnimationName;\n                if (message.direction != null && message.hasOwnProperty("direction"))\n                    object.direction = options.enums === String ? $root.op_def.Direction[message.direction] : message.direction;\n                if (message.nickname != null && message.hasOwnProperty("nickname"))\n                    object.nickname = message.nickname;\n                if (message.displayBadgeCards && message.displayBadgeCards.length) {\n                    object.displayBadgeCards = [];\n                    for (var j = 0; j < message.displayBadgeCards.length; ++j)\n                        object.displayBadgeCards[j] = $root.op_def.BadgeCard.toObject(message.displayBadgeCards[j], options);\n                }\n                if (message.opacity != null && message.hasOwnProperty("opacity"))\n                    object.opacity = message.opacity;\n                if (message.bindId != null && message.hasOwnProperty("bindId"))\n                    object.bindId = message.bindId;\n                if (message.animations && message.animations.length) {\n                    object.animations = [];\n                    for (var j = 0; j < message.animations.length; ++j)\n                        object.animations[j] = $root.op_gameconfig.Animation.toObject(message.animations[j], options);\n                }\n                if (message.display != null && message.hasOwnProperty("display"))\n                    object.display = $root.op_gameconfig.Display.toObject(message.display, options);\n                return object;\n            };\n    \n            /**\n             * Converts this Sprite to JSON.\n             * @function toJSON\n             * @memberof op_client.Sprite\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Sprite.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Sprite;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE\n             * @property {Array.<op_client.ISprite>|null} [sprites] OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE sprites\n             * @property {op_def.NodeType|null} [nodeType] OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE nodeType\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE.\n             * @implements IOP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE(properties) {\n                this.sprites = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE sprites.\n             * @member {Array.<op_client.ISprite>} sprites\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE.prototype.sprites = $util.emptyArray;\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE nodeType.\n             * @member {op_def.NodeType} nodeType\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE.prototype.nodeType = 0;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE} OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE instance\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE} message OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.sprites != null && message.sprites.length)\n                    for (var i = 0; i < message.sprites.length; ++i)\n                        $root.op_client.Sprite.encode(message.sprites[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nodeType);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE} message OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE} OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.sprites && message.sprites.length))\n                            message.sprites = [];\n                        message.sprites.push($root.op_client.Sprite.decode(reader, reader.uint32()));\n                        break;\n                    case 2:\n                        message.nodeType = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE} OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.sprites != null && message.hasOwnProperty("sprites")) {\n                    if (!Array.isArray(message.sprites))\n                        return "sprites: array expected";\n                    for (var i = 0; i < message.sprites.length; ++i) {\n                        var error = $root.op_client.Sprite.verify(message.sprites[i]);\n                        if (error)\n                            return "sprites." + error;\n                    }\n                }\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    switch (message.nodeType) {\n                    default:\n                        return "nodeType: enum value expected";\n                    case 0:\n                    case 1:\n                    case 2:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 9:\n                    case 10:\n                    case 11:\n                    case 12:\n                    case 13:\n                    case 14:\n                    case 15:\n                    case 16:\n                    case 17:\n                    case 18:\n                    case 19:\n                    case 20:\n                    case 21:\n                    case 22:\n                    case 23:\n                    case 24:\n                    case 25:\n                    case 26:\n                    case 27:\n                    case 28:\n                    case 29:\n                        break;\n                    }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE} OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE();\n                if (object.sprites) {\n                    if (!Array.isArray(object.sprites))\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE.sprites: array expected");\n                    message.sprites = [];\n                    for (var i = 0; i < object.sprites.length; ++i) {\n                        if (typeof object.sprites[i] !== "object")\n                            throw TypeError(".op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE.sprites: object expected");\n                        message.sprites[i] = $root.op_client.Sprite.fromObject(object.sprites[i]);\n                    }\n                }\n                switch (object.nodeType) {\n                case "UnknownNodeType":\n                case 0:\n                    message.nodeType = 0;\n                    break;\n                case "GameNodeType":\n                case 1:\n                    message.nodeType = 1;\n                    break;\n                case "SceneNodeType":\n                case 2:\n                    message.nodeType = 2;\n                    break;\n                case "ElementNodeType":\n                case 3:\n                    message.nodeType = 3;\n                    break;\n                case "TerrainNodeType":\n                case 4:\n                    message.nodeType = 4;\n                    break;\n                case "CharacterNodeType":\n                case 5:\n                    message.nodeType = 5;\n                    break;\n                case "LocationType":\n                case 6:\n                    message.nodeType = 6;\n                    break;\n                case "MovableType":\n                case 7:\n                    message.nodeType = 7;\n                    break;\n                case "DisplayType":\n                case 8:\n                    message.nodeType = 8;\n                    break;\n                case "AttributeType":\n                case 9:\n                    message.nodeType = 9;\n                    break;\n                case "FunctionType":\n                case 10:\n                    message.nodeType = 10;\n                    break;\n                case "AnimationsType":\n                case 11:\n                    message.nodeType = 11;\n                    break;\n                case "EventType":\n                case 12:\n                    message.nodeType = 12;\n                    break;\n                case "MapSizeType":\n                case 13:\n                    message.nodeType = 13;\n                    break;\n                case "UIType":\n                case 14:\n                    message.nodeType = 14;\n                    break;\n                case "TimerType":\n                case 15:\n                    message.nodeType = 15;\n                    break;\n                case "PackageType":\n                case 16:\n                    message.nodeType = 16;\n                    break;\n                case "PackageItemType":\n                case 17:\n                    message.nodeType = 17;\n                    break;\n                case "AvatarType":\n                case 18:\n                    message.nodeType = 18;\n                    break;\n                case "SettingsType":\n                case 19:\n                    message.nodeType = 19;\n                    break;\n                case "CampType":\n                case 20:\n                    message.nodeType = 20;\n                    break;\n                case "MutexType":\n                case 21:\n                    message.nodeType = 21;\n                    break;\n                case "AnimationDataType":\n                case 22:\n                    message.nodeType = 22;\n                    break;\n                case "ForkType":\n                case 23:\n                    message.nodeType = 23;\n                    break;\n                case "ButtonType":\n                case 24:\n                    message.nodeType = 24;\n                    break;\n                case "TextType":\n                case 25:\n                    message.nodeType = 25;\n                    break;\n                case "AccessType":\n                case 26:\n                    message.nodeType = 26;\n                    break;\n                case "SpawnPointType":\n                case 27:\n                    message.nodeType = 27;\n                    break;\n                case "CommodityType":\n                case 28:\n                    message.nodeType = 28;\n                    break;\n                case "ShopType":\n                case 29:\n                    message.nodeType = 29;\n                    break;\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE} message OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.sprites = [];\n                if (options.defaults)\n                    object.nodeType = options.enums === String ? "UnknownNodeType" : 0;\n                if (message.sprites && message.sprites.length) {\n                    object.sprites = [];\n                    for (var j = 0; j < message.sprites.length; ++j)\n                        object.sprites[j] = $root.op_client.Sprite.toObject(message.sprites[j], options);\n                }\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    object.nodeType = options.enums === String ? $root.op_def.NodeType[message.nodeType] : message.nodeType;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_REQ_CLIENT_SYNC_SPRITE;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE\n             * @property {Array.<op_client.ISprite>|null} [sprites] OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE sprites\n             * @property {op_def.NodeType|null} [nodeType] OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE nodeType\n             * @property {op_def.IPacket|null} [packet] OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE packet\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE.\n             * @implements IOP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE(properties) {\n                this.sprites = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE sprites.\n             * @member {Array.<op_client.ISprite>} sprites\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE.prototype.sprites = $util.emptyArray;\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE nodeType.\n             * @member {op_def.NodeType} nodeType\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE.prototype.nodeType = 0;\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE packet.\n             * @member {op_def.IPacket|null|undefined} packet\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE.prototype.packet = null;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE} OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE instance\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE} message OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.sprites != null && message.sprites.length)\n                    for (var i = 0; i < message.sprites.length; ++i)\n                        $root.op_client.Sprite.encode(message.sprites[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nodeType);\n                if (message.packet != null && message.hasOwnProperty("packet"))\n                    $root.op_def.Packet.encode(message.packet, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE} message OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE} OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.sprites && message.sprites.length))\n                            message.sprites = [];\n                        message.sprites.push($root.op_client.Sprite.decode(reader, reader.uint32()));\n                        break;\n                    case 2:\n                        message.nodeType = reader.int32();\n                        break;\n                    case 3:\n                        message.packet = $root.op_def.Packet.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE} OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.sprites != null && message.hasOwnProperty("sprites")) {\n                    if (!Array.isArray(message.sprites))\n                        return "sprites: array expected";\n                    for (var i = 0; i < message.sprites.length; ++i) {\n                        var error = $root.op_client.Sprite.verify(message.sprites[i]);\n                        if (error)\n                            return "sprites." + error;\n                    }\n                }\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    switch (message.nodeType) {\n                    default:\n                        return "nodeType: enum value expected";\n                    case 0:\n                    case 1:\n                    case 2:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 9:\n                    case 10:\n                    case 11:\n                    case 12:\n                    case 13:\n                    case 14:\n                    case 15:\n                    case 16:\n                    case 17:\n                    case 18:\n                    case 19:\n                    case 20:\n                    case 21:\n                    case 22:\n                    case 23:\n                    case 24:\n                    case 25:\n                    case 26:\n                    case 27:\n                    case 28:\n                    case 29:\n                        break;\n                    }\n                if (message.packet != null && message.hasOwnProperty("packet")) {\n                    var error = $root.op_def.Packet.verify(message.packet);\n                    if (error)\n                        return "packet." + error;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE} OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE();\n                if (object.sprites) {\n                    if (!Array.isArray(object.sprites))\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE.sprites: array expected");\n                    message.sprites = [];\n                    for (var i = 0; i < object.sprites.length; ++i) {\n                        if (typeof object.sprites[i] !== "object")\n                            throw TypeError(".op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE.sprites: object expected");\n                        message.sprites[i] = $root.op_client.Sprite.fromObject(object.sprites[i]);\n                    }\n                }\n                switch (object.nodeType) {\n                case "UnknownNodeType":\n                case 0:\n                    message.nodeType = 0;\n                    break;\n                case "GameNodeType":\n                case 1:\n                    message.nodeType = 1;\n                    break;\n                case "SceneNodeType":\n                case 2:\n                    message.nodeType = 2;\n                    break;\n                case "ElementNodeType":\n                case 3:\n                    message.nodeType = 3;\n                    break;\n                case "TerrainNodeType":\n                case 4:\n                    message.nodeType = 4;\n                    break;\n                case "CharacterNodeType":\n                case 5:\n                    message.nodeType = 5;\n                    break;\n                case "LocationType":\n                case 6:\n                    message.nodeType = 6;\n                    break;\n                case "MovableType":\n                case 7:\n                    message.nodeType = 7;\n                    break;\n                case "DisplayType":\n                case 8:\n                    message.nodeType = 8;\n                    break;\n                case "AttributeType":\n                case 9:\n                    message.nodeType = 9;\n                    break;\n                case "FunctionType":\n                case 10:\n                    message.nodeType = 10;\n                    break;\n                case "AnimationsType":\n                case 11:\n                    message.nodeType = 11;\n                    break;\n                case "EventType":\n                case 12:\n                    message.nodeType = 12;\n                    break;\n                case "MapSizeType":\n                case 13:\n                    message.nodeType = 13;\n                    break;\n                case "UIType":\n                case 14:\n                    message.nodeType = 14;\n                    break;\n                case "TimerType":\n                case 15:\n                    message.nodeType = 15;\n                    break;\n                case "PackageType":\n                case 16:\n                    message.nodeType = 16;\n                    break;\n                case "PackageItemType":\n                case 17:\n                    message.nodeType = 17;\n                    break;\n                case "AvatarType":\n                case 18:\n                    message.nodeType = 18;\n                    break;\n                case "SettingsType":\n                case 19:\n                    message.nodeType = 19;\n                    break;\n                case "CampType":\n                case 20:\n                    message.nodeType = 20;\n                    break;\n                case "MutexType":\n                case 21:\n                    message.nodeType = 21;\n                    break;\n                case "AnimationDataType":\n                case 22:\n                    message.nodeType = 22;\n                    break;\n                case "ForkType":\n                case 23:\n                    message.nodeType = 23;\n                    break;\n                case "ButtonType":\n                case 24:\n                    message.nodeType = 24;\n                    break;\n                case "TextType":\n                case 25:\n                    message.nodeType = 25;\n                    break;\n                case "AccessType":\n                case 26:\n                    message.nodeType = 26;\n                    break;\n                case "SpawnPointType":\n                case 27:\n                    message.nodeType = 27;\n                    break;\n                case "CommodityType":\n                case 28:\n                    message.nodeType = 28;\n                    break;\n                case "ShopType":\n                case 29:\n                    message.nodeType = 29;\n                    break;\n                }\n                if (object.packet != null) {\n                    if (typeof object.packet !== "object")\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE.packet: object expected");\n                    message.packet = $root.op_def.Packet.fromObject(object.packet);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE} message OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.sprites = [];\n                if (options.defaults) {\n                    object.nodeType = options.enums === String ? "UnknownNodeType" : 0;\n                    object.packet = null;\n                }\n                if (message.sprites && message.sprites.length) {\n                    object.sprites = [];\n                    for (var j = 0; j < message.sprites.length; ++j)\n                        object.sprites[j] = $root.op_client.Sprite.toObject(message.sprites[j], options);\n                }\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    object.nodeType = options.enums === String ? $root.op_def.NodeType[message.nodeType] : message.nodeType;\n                if (message.packet != null && message.hasOwnProperty("packet"))\n                    object.packet = $root.op_def.Packet.toObject(message.packet, options);\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_REQ_CLIENT_ADD_SPRITE;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE\n             * @property {Array.<number>|null} [ids] OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE ids\n             * @property {op_def.NodeType|null} [nodeType] OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE nodeType\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE.\n             * @implements IOP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE(properties) {\n                this.ids = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE ids.\n             * @member {Array.<number>} ids\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE.prototype.ids = $util.emptyArray;\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE nodeType.\n             * @member {op_def.NodeType} nodeType\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE.prototype.nodeType = 0;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE} OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE instance\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE} message OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.ids != null && message.ids.length)\n                    for (var i = 0; i < message.ids.length; ++i)\n                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ids[i]);\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nodeType);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE} message OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE} OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.ids && message.ids.length))\n                            message.ids = [];\n                        if ((tag & 7) === 2) {\n                            var end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2)\n                                message.ids.push(reader.int32());\n                        } else\n                            message.ids.push(reader.int32());\n                        break;\n                    case 2:\n                        message.nodeType = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE} OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.ids != null && message.hasOwnProperty("ids")) {\n                    if (!Array.isArray(message.ids))\n                        return "ids: array expected";\n                    for (var i = 0; i < message.ids.length; ++i)\n                        if (!$util.isInteger(message.ids[i]))\n                            return "ids: integer[] expected";\n                }\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    switch (message.nodeType) {\n                    default:\n                        return "nodeType: enum value expected";\n                    case 0:\n                    case 1:\n                    case 2:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 9:\n                    case 10:\n                    case 11:\n                    case 12:\n                    case 13:\n                    case 14:\n                    case 15:\n                    case 16:\n                    case 17:\n                    case 18:\n                    case 19:\n                    case 20:\n                    case 21:\n                    case 22:\n                    case 23:\n                    case 24:\n                    case 25:\n                    case 26:\n                    case 27:\n                    case 28:\n                    case 29:\n                        break;\n                    }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE} OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE();\n                if (object.ids) {\n                    if (!Array.isArray(object.ids))\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE.ids: array expected");\n                    message.ids = [];\n                    for (var i = 0; i < object.ids.length; ++i)\n                        message.ids[i] = object.ids[i] | 0;\n                }\n                switch (object.nodeType) {\n                case "UnknownNodeType":\n                case 0:\n                    message.nodeType = 0;\n                    break;\n                case "GameNodeType":\n                case 1:\n                    message.nodeType = 1;\n                    break;\n                case "SceneNodeType":\n                case 2:\n                    message.nodeType = 2;\n                    break;\n                case "ElementNodeType":\n                case 3:\n                    message.nodeType = 3;\n                    break;\n                case "TerrainNodeType":\n                case 4:\n                    message.nodeType = 4;\n                    break;\n                case "CharacterNodeType":\n                case 5:\n                    message.nodeType = 5;\n                    break;\n                case "LocationType":\n                case 6:\n                    message.nodeType = 6;\n                    break;\n                case "MovableType":\n                case 7:\n                    message.nodeType = 7;\n                    break;\n                case "DisplayType":\n                case 8:\n                    message.nodeType = 8;\n                    break;\n                case "AttributeType":\n                case 9:\n                    message.nodeType = 9;\n                    break;\n                case "FunctionType":\n                case 10:\n                    message.nodeType = 10;\n                    break;\n                case "AnimationsType":\n                case 11:\n                    message.nodeType = 11;\n                    break;\n                case "EventType":\n                case 12:\n                    message.nodeType = 12;\n                    break;\n                case "MapSizeType":\n                case 13:\n                    message.nodeType = 13;\n                    break;\n                case "UIType":\n                case 14:\n                    message.nodeType = 14;\n                    break;\n                case "TimerType":\n                case 15:\n                    message.nodeType = 15;\n                    break;\n                case "PackageType":\n                case 16:\n                    message.nodeType = 16;\n                    break;\n                case "PackageItemType":\n                case 17:\n                    message.nodeType = 17;\n                    break;\n                case "AvatarType":\n                case 18:\n                    message.nodeType = 18;\n                    break;\n                case "SettingsType":\n                case 19:\n                    message.nodeType = 19;\n                    break;\n                case "CampType":\n                case 20:\n                    message.nodeType = 20;\n                    break;\n                case "MutexType":\n                case 21:\n                    message.nodeType = 21;\n                    break;\n                case "AnimationDataType":\n                case 22:\n                    message.nodeType = 22;\n                    break;\n                case "ForkType":\n                case 23:\n                    message.nodeType = 23;\n                    break;\n                case "ButtonType":\n                case 24:\n                    message.nodeType = 24;\n                    break;\n                case "TextType":\n                case 25:\n                    message.nodeType = 25;\n                    break;\n                case "AccessType":\n                case 26:\n                    message.nodeType = 26;\n                    break;\n                case "SpawnPointType":\n                case 27:\n                    message.nodeType = 27;\n                    break;\n                case "CommodityType":\n                case 28:\n                    message.nodeType = 28;\n                    break;\n                case "ShopType":\n                case 29:\n                    message.nodeType = 29;\n                    break;\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE} message OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.ids = [];\n                if (options.defaults)\n                    object.nodeType = options.enums === String ? "UnknownNodeType" : 0;\n                if (message.ids && message.ids.length) {\n                    object.ids = [];\n                    for (var j = 0; j < message.ids.length; ++j)\n                        object.ids[j] = message.ids[j];\n                }\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    object.nodeType = options.enums === String ? $root.op_def.NodeType[message.nodeType] : message.nodeType;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_REQ_CLIENT_DELETE_SPRITE;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION\n             * @property {Array.<op_client.ISprite>|null} [spritePositions] OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION spritePositions\n             * @property {op_def.NodeType|null} [nodeType] OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION nodeType\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION.\n             * @implements IOP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION(properties) {\n                this.spritePositions = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION spritePositions.\n             * @member {Array.<op_client.ISprite>} spritePositions\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION.prototype.spritePositions = $util.emptyArray;\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION nodeType.\n             * @member {op_def.NodeType} nodeType\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION.prototype.nodeType = 0;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION} OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION instance\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION} message OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.spritePositions != null && message.spritePositions.length)\n                    for (var i = 0; i < message.spritePositions.length; ++i)\n                        $root.op_client.Sprite.encode(message.spritePositions[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nodeType);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION} message OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION} OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.spritePositions && message.spritePositions.length))\n                            message.spritePositions = [];\n                        message.spritePositions.push($root.op_client.Sprite.decode(reader, reader.uint32()));\n                        break;\n                    case 2:\n                        message.nodeType = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION} OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.spritePositions != null && message.hasOwnProperty("spritePositions")) {\n                    if (!Array.isArray(message.spritePositions))\n                        return "spritePositions: array expected";\n                    for (var i = 0; i < message.spritePositions.length; ++i) {\n                        var error = $root.op_client.Sprite.verify(message.spritePositions[i]);\n                        if (error)\n                            return "spritePositions." + error;\n                    }\n                }\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    switch (message.nodeType) {\n                    default:\n                        return "nodeType: enum value expected";\n                    case 0:\n                    case 1:\n                    case 2:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 9:\n                    case 10:\n                    case 11:\n                    case 12:\n                    case 13:\n                    case 14:\n                    case 15:\n                    case 16:\n                    case 17:\n                    case 18:\n                    case 19:\n                    case 20:\n                    case 21:\n                    case 22:\n                    case 23:\n                    case 24:\n                    case 25:\n                    case 26:\n                    case 27:\n                    case 28:\n                    case 29:\n                        break;\n                    }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION} OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION();\n                if (object.spritePositions) {\n                    if (!Array.isArray(object.spritePositions))\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION.spritePositions: array expected");\n                    message.spritePositions = [];\n                    for (var i = 0; i < object.spritePositions.length; ++i) {\n                        if (typeof object.spritePositions[i] !== "object")\n                            throw TypeError(".op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION.spritePositions: object expected");\n                        message.spritePositions[i] = $root.op_client.Sprite.fromObject(object.spritePositions[i]);\n                    }\n                }\n                switch (object.nodeType) {\n                case "UnknownNodeType":\n                case 0:\n                    message.nodeType = 0;\n                    break;\n                case "GameNodeType":\n                case 1:\n                    message.nodeType = 1;\n                    break;\n                case "SceneNodeType":\n                case 2:\n                    message.nodeType = 2;\n                    break;\n                case "ElementNodeType":\n                case 3:\n                    message.nodeType = 3;\n                    break;\n                case "TerrainNodeType":\n                case 4:\n                    message.nodeType = 4;\n                    break;\n                case "CharacterNodeType":\n                case 5:\n                    message.nodeType = 5;\n                    break;\n                case "LocationType":\n                case 6:\n                    message.nodeType = 6;\n                    break;\n                case "MovableType":\n                case 7:\n                    message.nodeType = 7;\n                    break;\n                case "DisplayType":\n                case 8:\n                    message.nodeType = 8;\n                    break;\n                case "AttributeType":\n                case 9:\n                    message.nodeType = 9;\n                    break;\n                case "FunctionType":\n                case 10:\n                    message.nodeType = 10;\n                    break;\n                case "AnimationsType":\n                case 11:\n                    message.nodeType = 11;\n                    break;\n                case "EventType":\n                case 12:\n                    message.nodeType = 12;\n                    break;\n                case "MapSizeType":\n                case 13:\n                    message.nodeType = 13;\n                    break;\n                case "UIType":\n                case 14:\n                    message.nodeType = 14;\n                    break;\n                case "TimerType":\n                case 15:\n                    message.nodeType = 15;\n                    break;\n                case "PackageType":\n                case 16:\n                    message.nodeType = 16;\n                    break;\n                case "PackageItemType":\n                case 17:\n                    message.nodeType = 17;\n                    break;\n                case "AvatarType":\n                case 18:\n                    message.nodeType = 18;\n                    break;\n                case "SettingsType":\n                case 19:\n                    message.nodeType = 19;\n                    break;\n                case "CampType":\n                case 20:\n                    message.nodeType = 20;\n                    break;\n                case "MutexType":\n                case 21:\n                    message.nodeType = 21;\n                    break;\n                case "AnimationDataType":\n                case 22:\n                    message.nodeType = 22;\n                    break;\n                case "ForkType":\n                case 23:\n                    message.nodeType = 23;\n                    break;\n                case "ButtonType":\n                case 24:\n                    message.nodeType = 24;\n                    break;\n                case "TextType":\n                case 25:\n                    message.nodeType = 25;\n                    break;\n                case "AccessType":\n                case 26:\n                    message.nodeType = 26;\n                    break;\n                case "SpawnPointType":\n                case 27:\n                    message.nodeType = 27;\n                    break;\n                case "CommodityType":\n                case 28:\n                    message.nodeType = 28;\n                    break;\n                case "ShopType":\n                case 29:\n                    message.nodeType = 29;\n                    break;\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION} message OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.spritePositions = [];\n                if (options.defaults)\n                    object.nodeType = options.enums === String ? "UnknownNodeType" : 0;\n                if (message.spritePositions && message.spritePositions.length) {\n                    object.spritePositions = [];\n                    for (var j = 0; j < message.spritePositions.length; ++j)\n                        object.spritePositions[j] = $root.op_client.Sprite.toObject(message.spritePositions[j], options);\n                }\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    object.nodeType = options.enums === String ? $root.op_def.NodeType[message.nodeType] : message.nodeType;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_REQ_CLIENT_ADJUST_POSITION;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME\n             * @property {string} gameId OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME gameId\n             * @property {string} virtualWorldId OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME virtualWorldId\n             * @property {number|null} [sceneId] OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME sceneId\n             * @property {op_def.IPBPoint3f|null} [loc] OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME loc\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME.\n             * @implements IOP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME gameId.\n             * @member {string} gameId\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME.prototype.gameId = "";\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME virtualWorldId.\n             * @member {string} virtualWorldId\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME.prototype.virtualWorldId = "";\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME sceneId.\n             * @member {number} sceneId\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME.prototype.sceneId = 0;\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME loc.\n             * @member {op_def.IPBPoint3f|null|undefined} loc\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME.prototype.loc = null;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME} OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME instance\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME} message OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.gameId);\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.virtualWorldId);\n                if (message.sceneId != null && message.hasOwnProperty("sceneId"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.sceneId);\n                if (message.loc != null && message.hasOwnProperty("loc"))\n                    $root.op_def.PBPoint3f.encode(message.loc, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME} message OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME} OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.gameId = reader.string();\n                        break;\n                    case 2:\n                        message.virtualWorldId = reader.string();\n                        break;\n                    case 3:\n                        message.sceneId = reader.int32();\n                        break;\n                    case 4:\n                        message.loc = $root.op_def.PBPoint3f.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("gameId"))\n                    throw $util.ProtocolError("missing required \'gameId\'", { instance: message });\n                if (!message.hasOwnProperty("virtualWorldId"))\n                    throw $util.ProtocolError("missing required \'virtualWorldId\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME} OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.gameId))\n                    return "gameId: string expected";\n                if (!$util.isString(message.virtualWorldId))\n                    return "virtualWorldId: string expected";\n                if (message.sceneId != null && message.hasOwnProperty("sceneId"))\n                    if (!$util.isInteger(message.sceneId))\n                        return "sceneId: integer expected";\n                if (message.loc != null && message.hasOwnProperty("loc")) {\n                    var error = $root.op_def.PBPoint3f.verify(message.loc);\n                    if (error)\n                        return "loc." + error;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME} OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME();\n                if (object.gameId != null)\n                    message.gameId = String(object.gameId);\n                if (object.virtualWorldId != null)\n                    message.virtualWorldId = String(object.virtualWorldId);\n                if (object.sceneId != null)\n                    message.sceneId = object.sceneId | 0;\n                if (object.loc != null) {\n                    if (typeof object.loc !== "object")\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME.loc: object expected");\n                    message.loc = $root.op_def.PBPoint3f.fromObject(object.loc);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME} message OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.gameId = "";\n                    object.virtualWorldId = "";\n                    object.sceneId = 0;\n                    object.loc = null;\n                }\n                if (message.gameId != null && message.hasOwnProperty("gameId"))\n                    object.gameId = message.gameId;\n                if (message.virtualWorldId != null && message.hasOwnProperty("virtualWorldId"))\n                    object.virtualWorldId = message.virtualWorldId;\n                if (message.sceneId != null && message.hasOwnProperty("sceneId"))\n                    object.sceneId = message.sceneId;\n                if (message.loc != null && message.hasOwnProperty("loc"))\n                    object.loc = $root.op_def.PBPoint3f.toObject(message.loc, options);\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_REQ_CLIENT_GOTO_ANOTHER_GAME;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE\n             * @property {op_client.IActor} actor OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE actor\n             * @property {op_client.IScene} scene OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE scene\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE.\n             * @implements IOP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE actor.\n             * @member {op_client.IActor} actor\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE.prototype.actor = null;\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE scene.\n             * @member {op_client.IScene} scene\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE.prototype.scene = null;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE} OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE instance\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE} message OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                $root.op_client.Actor.encode(message.actor, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                $root.op_client.Scene.encode(message.scene, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE} message OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE} OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.actor = $root.op_client.Actor.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        message.scene = $root.op_client.Scene.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("actor"))\n                    throw $util.ProtocolError("missing required \'actor\'", { instance: message });\n                if (!message.hasOwnProperty("scene"))\n                    throw $util.ProtocolError("missing required \'scene\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE} OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                {\n                    var error = $root.op_client.Actor.verify(message.actor);\n                    if (error)\n                        return "actor." + error;\n                }\n                {\n                    var error = $root.op_client.Scene.verify(message.scene);\n                    if (error)\n                        return "scene." + error;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE} OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE();\n                if (object.actor != null) {\n                    if (typeof object.actor !== "object")\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE.actor: object expected");\n                    message.actor = $root.op_client.Actor.fromObject(object.actor);\n                }\n                if (object.scene != null) {\n                    if (typeof object.scene !== "object")\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE.scene: object expected");\n                    message.scene = $root.op_client.Scene.fromObject(object.scene);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE} message OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.actor = null;\n                    object.scene = null;\n                }\n                if (message.actor != null && message.hasOwnProperty("actor"))\n                    object.actor = $root.op_client.Actor.toObject(message.actor, options);\n                if (message.scene != null && message.hasOwnProperty("scene"))\n                    object.scene = $root.op_client.Scene.toObject(message.scene, options);\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_TO_EDITOR_MODE;\n        })();\n    \n        op_client.OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE = (function() {\n    \n            /**\n             * Properties of a OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE.\n             * @memberof op_client\n             * @interface IOP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE\n             * @property {op_client.IActor} actor OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE actor\n             * @property {op_client.IScene} scene OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE scene\n             */\n    \n            /**\n             * Constructs a new OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE.\n             * @memberof op_client\n             * @classdesc Represents a OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE.\n             * @implements IOP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE\n             * @constructor\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE=} [properties] Properties to set\n             */\n            function OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE actor.\n             * @member {op_client.IActor} actor\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE\n             * @instance\n             */\n            OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE.prototype.actor = null;\n    \n            /**\n             * OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE scene.\n             * @member {op_client.IScene} scene\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE\n             * @instance\n             */\n            OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE.prototype.scene = null;\n    \n            /**\n             * Creates a new OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE=} [properties] Properties to set\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE} OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE instance\n             */\n            OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE.create = function create(properties) {\n                return new OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE message. Does not implicitly {@link op_client.OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE} message OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                $root.op_client.Actor.encode(message.actor, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                $root.op_client.Scene.encode(message.scene, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE message, length delimited. Does not implicitly {@link op_client.OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE} message OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE} OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.actor = $root.op_client.Actor.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        message.scene = $root.op_client.Scene.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("actor"))\n                    throw $util.ProtocolError("missing required \'actor\'", { instance: message });\n                if (!message.hasOwnProperty("scene"))\n                    throw $util.ProtocolError("missing required \'scene\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE} OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE message.\n             * @function verify\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                {\n                    var error = $root.op_client.Actor.verify(message.actor);\n                    if (error)\n                        return "actor." + error;\n                }\n                {\n                    var error = $root.op_client.Scene.verify(message.scene);\n                    if (error)\n                        return "scene." + error;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE} OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE\n             */\n            OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE)\n                    return object;\n                var message = new $root.op_client.OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE();\n                if (object.actor != null) {\n                    if (typeof object.actor !== "object")\n                        throw TypeError(".op_client.OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE.actor: object expected");\n                    message.actor = $root.op_client.Actor.fromObject(object.actor);\n                }\n                if (object.scene != null) {\n                    if (typeof object.scene !== "object")\n                        throw TypeError(".op_client.OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE.scene: object expected");\n                    message.scene = $root.op_client.Scene.fromObject(object.scene);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE\n             * @static\n             * @param {op_client.OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE} message OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.actor = null;\n                    object.scene = null;\n                }\n                if (message.actor != null && message.hasOwnProperty("actor"))\n                    object.actor = $root.op_client.Actor.toObject(message.actor, options);\n                if (message.scene != null && message.hasOwnProperty("scene"))\n                    object.scene = $root.op_client.Scene.toObject(message.scene, options);\n                return object;\n            };\n    \n            /**\n             * Converts this OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_EDITOR_REQ_CLIENT_CHANGE_TO_EDITOR_MODE;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE\n             * @property {op_client.ISprite} sprite OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE sprite\n             * @property {op_def.NodeType|null} [nodeType] OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE nodeType\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE.\n             * @implements IOP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE sprite.\n             * @member {op_client.ISprite} sprite\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE.prototype.sprite = null;\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE nodeType.\n             * @member {op_def.NodeType} nodeType\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE.prototype.nodeType = 0;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE} OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE instance\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE} message OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                $root.op_client.Sprite.encode(message.sprite, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nodeType);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE} message OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE} OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.sprite = $root.op_client.Sprite.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        message.nodeType = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("sprite"))\n                    throw $util.ProtocolError("missing required \'sprite\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE} OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                {\n                    var error = $root.op_client.Sprite.verify(message.sprite);\n                    if (error)\n                        return "sprite." + error;\n                }\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    switch (message.nodeType) {\n                    default:\n                        return "nodeType: enum value expected";\n                    case 0:\n                    case 1:\n                    case 2:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 9:\n                    case 10:\n                    case 11:\n                    case 12:\n                    case 13:\n                    case 14:\n                    case 15:\n                    case 16:\n                    case 17:\n                    case 18:\n                    case 19:\n                    case 20:\n                    case 21:\n                    case 22:\n                    case 23:\n                    case 24:\n                    case 25:\n                    case 26:\n                    case 27:\n                    case 28:\n                    case 29:\n                        break;\n                    }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE} OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE();\n                if (object.sprite != null) {\n                    if (typeof object.sprite !== "object")\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE.sprite: object expected");\n                    message.sprite = $root.op_client.Sprite.fromObject(object.sprite);\n                }\n                switch (object.nodeType) {\n                case "UnknownNodeType":\n                case 0:\n                    message.nodeType = 0;\n                    break;\n                case "GameNodeType":\n                case 1:\n                    message.nodeType = 1;\n                    break;\n                case "SceneNodeType":\n                case 2:\n                    message.nodeType = 2;\n                    break;\n                case "ElementNodeType":\n                case 3:\n                    message.nodeType = 3;\n                    break;\n                case "TerrainNodeType":\n                case 4:\n                    message.nodeType = 4;\n                    break;\n                case "CharacterNodeType":\n                case 5:\n                    message.nodeType = 5;\n                    break;\n                case "LocationType":\n                case 6:\n                    message.nodeType = 6;\n                    break;\n                case "MovableType":\n                case 7:\n                    message.nodeType = 7;\n                    break;\n                case "DisplayType":\n                case 8:\n                    message.nodeType = 8;\n                    break;\n                case "AttributeType":\n                case 9:\n                    message.nodeType = 9;\n                    break;\n                case "FunctionType":\n                case 10:\n                    message.nodeType = 10;\n                    break;\n                case "AnimationsType":\n                case 11:\n                    message.nodeType = 11;\n                    break;\n                case "EventType":\n                case 12:\n                    message.nodeType = 12;\n                    break;\n                case "MapSizeType":\n                case 13:\n                    message.nodeType = 13;\n                    break;\n                case "UIType":\n                case 14:\n                    message.nodeType = 14;\n                    break;\n                case "TimerType":\n                case 15:\n                    message.nodeType = 15;\n                    break;\n                case "PackageType":\n                case 16:\n                    message.nodeType = 16;\n                    break;\n                case "PackageItemType":\n                case 17:\n                    message.nodeType = 17;\n                    break;\n                case "AvatarType":\n                case 18:\n                    message.nodeType = 18;\n                    break;\n                case "SettingsType":\n                case 19:\n                    message.nodeType = 19;\n                    break;\n                case "CampType":\n                case 20:\n                    message.nodeType = 20;\n                    break;\n                case "MutexType":\n                case 21:\n                    message.nodeType = 21;\n                    break;\n                case "AnimationDataType":\n                case 22:\n                    message.nodeType = 22;\n                    break;\n                case "ForkType":\n                case 23:\n                    message.nodeType = 23;\n                    break;\n                case "ButtonType":\n                case 24:\n                    message.nodeType = 24;\n                    break;\n                case "TextType":\n                case 25:\n                    message.nodeType = 25;\n                    break;\n                case "AccessType":\n                case 26:\n                    message.nodeType = 26;\n                    break;\n                case "SpawnPointType":\n                case 27:\n                    message.nodeType = 27;\n                    break;\n                case "CommodityType":\n                case 28:\n                    message.nodeType = 28;\n                    break;\n                case "ShopType":\n                case 29:\n                    message.nodeType = 29;\n                    break;\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE} message OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.sprite = null;\n                    object.nodeType = options.enums === String ? "UnknownNodeType" : 0;\n                }\n                if (message.sprite != null && message.hasOwnProperty("sprite"))\n                    object.sprite = $root.op_client.Sprite.toObject(message.sprite, options);\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    object.nodeType = options.enums === String ? $root.op_def.NodeType[message.nodeType] : message.nodeType;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_REQ_CLIENT_MOUSE_SELECTED_SPRITE;\n        })();\n    \n        op_client.OP_EDITOR_REQ_CLIENT_FETCH_SPRITE = (function() {\n    \n            /**\n             * Properties of a OP_EDITOR_REQ_CLIENT_FETCH_SPRITE.\n             * @memberof op_client\n             * @interface IOP_EDITOR_REQ_CLIENT_FETCH_SPRITE\n             * @property {Array.<number>|null} [ids] OP_EDITOR_REQ_CLIENT_FETCH_SPRITE ids\n             * @property {op_def.NodeType|null} [nodeType] OP_EDITOR_REQ_CLIENT_FETCH_SPRITE nodeType\n             */\n    \n            /**\n             * Constructs a new OP_EDITOR_REQ_CLIENT_FETCH_SPRITE.\n             * @memberof op_client\n             * @classdesc Represents a OP_EDITOR_REQ_CLIENT_FETCH_SPRITE.\n             * @implements IOP_EDITOR_REQ_CLIENT_FETCH_SPRITE\n             * @constructor\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_FETCH_SPRITE=} [properties] Properties to set\n             */\n            function OP_EDITOR_REQ_CLIENT_FETCH_SPRITE(properties) {\n                this.ids = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_EDITOR_REQ_CLIENT_FETCH_SPRITE ids.\n             * @member {Array.<number>} ids\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_FETCH_SPRITE\n             * @instance\n             */\n            OP_EDITOR_REQ_CLIENT_FETCH_SPRITE.prototype.ids = $util.emptyArray;\n    \n            /**\n             * OP_EDITOR_REQ_CLIENT_FETCH_SPRITE nodeType.\n             * @member {op_def.NodeType} nodeType\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_FETCH_SPRITE\n             * @instance\n             */\n            OP_EDITOR_REQ_CLIENT_FETCH_SPRITE.prototype.nodeType = 0;\n    \n            /**\n             * Creates a new OP_EDITOR_REQ_CLIENT_FETCH_SPRITE instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_FETCH_SPRITE\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_FETCH_SPRITE=} [properties] Properties to set\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_FETCH_SPRITE} OP_EDITOR_REQ_CLIENT_FETCH_SPRITE instance\n             */\n            OP_EDITOR_REQ_CLIENT_FETCH_SPRITE.create = function create(properties) {\n                return new OP_EDITOR_REQ_CLIENT_FETCH_SPRITE(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_EDITOR_REQ_CLIENT_FETCH_SPRITE message. Does not implicitly {@link op_client.OP_EDITOR_REQ_CLIENT_FETCH_SPRITE.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_FETCH_SPRITE\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_FETCH_SPRITE} message OP_EDITOR_REQ_CLIENT_FETCH_SPRITE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_EDITOR_REQ_CLIENT_FETCH_SPRITE.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.ids != null && message.ids.length)\n                    for (var i = 0; i < message.ids.length; ++i)\n                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ids[i]);\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nodeType);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_EDITOR_REQ_CLIENT_FETCH_SPRITE message, length delimited. Does not implicitly {@link op_client.OP_EDITOR_REQ_CLIENT_FETCH_SPRITE.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_FETCH_SPRITE\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_FETCH_SPRITE} message OP_EDITOR_REQ_CLIENT_FETCH_SPRITE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_EDITOR_REQ_CLIENT_FETCH_SPRITE.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_EDITOR_REQ_CLIENT_FETCH_SPRITE message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_FETCH_SPRITE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_FETCH_SPRITE} OP_EDITOR_REQ_CLIENT_FETCH_SPRITE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_EDITOR_REQ_CLIENT_FETCH_SPRITE.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_EDITOR_REQ_CLIENT_FETCH_SPRITE();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.ids && message.ids.length))\n                            message.ids = [];\n                        if ((tag & 7) === 2) {\n                            var end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2)\n                                message.ids.push(reader.int32());\n                        } else\n                            message.ids.push(reader.int32());\n                        break;\n                    case 2:\n                        message.nodeType = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_EDITOR_REQ_CLIENT_FETCH_SPRITE message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_FETCH_SPRITE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_FETCH_SPRITE} OP_EDITOR_REQ_CLIENT_FETCH_SPRITE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_EDITOR_REQ_CLIENT_FETCH_SPRITE.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_EDITOR_REQ_CLIENT_FETCH_SPRITE message.\n             * @function verify\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_FETCH_SPRITE\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_EDITOR_REQ_CLIENT_FETCH_SPRITE.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.ids != null && message.hasOwnProperty("ids")) {\n                    if (!Array.isArray(message.ids))\n                        return "ids: array expected";\n                    for (var i = 0; i < message.ids.length; ++i)\n                        if (!$util.isInteger(message.ids[i]))\n                            return "ids: integer[] expected";\n                }\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    switch (message.nodeType) {\n                    default:\n                        return "nodeType: enum value expected";\n                    case 0:\n                    case 1:\n                    case 2:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 9:\n                    case 10:\n                    case 11:\n                    case 12:\n                    case 13:\n                    case 14:\n                    case 15:\n                    case 16:\n                    case 17:\n                    case 18:\n                    case 19:\n                    case 20:\n                    case 21:\n                    case 22:\n                    case 23:\n                    case 24:\n                    case 25:\n                    case 26:\n                    case 27:\n                    case 28:\n                    case 29:\n                        break;\n                    }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_EDITOR_REQ_CLIENT_FETCH_SPRITE message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_FETCH_SPRITE\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_FETCH_SPRITE} OP_EDITOR_REQ_CLIENT_FETCH_SPRITE\n             */\n            OP_EDITOR_REQ_CLIENT_FETCH_SPRITE.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_EDITOR_REQ_CLIENT_FETCH_SPRITE)\n                    return object;\n                var message = new $root.op_client.OP_EDITOR_REQ_CLIENT_FETCH_SPRITE();\n                if (object.ids) {\n                    if (!Array.isArray(object.ids))\n                        throw TypeError(".op_client.OP_EDITOR_REQ_CLIENT_FETCH_SPRITE.ids: array expected");\n                    message.ids = [];\n                    for (var i = 0; i < object.ids.length; ++i)\n                        message.ids[i] = object.ids[i] | 0;\n                }\n                switch (object.nodeType) {\n                case "UnknownNodeType":\n                case 0:\n                    message.nodeType = 0;\n                    break;\n                case "GameNodeType":\n                case 1:\n                    message.nodeType = 1;\n                    break;\n                case "SceneNodeType":\n                case 2:\n                    message.nodeType = 2;\n                    break;\n                case "ElementNodeType":\n                case 3:\n                    message.nodeType = 3;\n                    break;\n                case "TerrainNodeType":\n                case 4:\n                    message.nodeType = 4;\n                    break;\n                case "CharacterNodeType":\n                case 5:\n                    message.nodeType = 5;\n                    break;\n                case "LocationType":\n                case 6:\n                    message.nodeType = 6;\n                    break;\n                case "MovableType":\n                case 7:\n                    message.nodeType = 7;\n                    break;\n                case "DisplayType":\n                case 8:\n                    message.nodeType = 8;\n                    break;\n                case "AttributeType":\n                case 9:\n                    message.nodeType = 9;\n                    break;\n                case "FunctionType":\n                case 10:\n                    message.nodeType = 10;\n                    break;\n                case "AnimationsType":\n                case 11:\n                    message.nodeType = 11;\n                    break;\n                case "EventType":\n                case 12:\n                    message.nodeType = 12;\n                    break;\n                case "MapSizeType":\n                case 13:\n                    message.nodeType = 13;\n                    break;\n                case "UIType":\n                case 14:\n                    message.nodeType = 14;\n                    break;\n                case "TimerType":\n                case 15:\n                    message.nodeType = 15;\n                    break;\n                case "PackageType":\n                case 16:\n                    message.nodeType = 16;\n                    break;\n                case "PackageItemType":\n                case 17:\n                    message.nodeType = 17;\n                    break;\n                case "AvatarType":\n                case 18:\n                    message.nodeType = 18;\n                    break;\n                case "SettingsType":\n                case 19:\n                    message.nodeType = 19;\n                    break;\n                case "CampType":\n                case 20:\n                    message.nodeType = 20;\n                    break;\n                case "MutexType":\n                case 21:\n                    message.nodeType = 21;\n                    break;\n                case "AnimationDataType":\n                case 22:\n                    message.nodeType = 22;\n                    break;\n                case "ForkType":\n                case 23:\n                    message.nodeType = 23;\n                    break;\n                case "ButtonType":\n                case 24:\n                    message.nodeType = 24;\n                    break;\n                case "TextType":\n                case 25:\n                    message.nodeType = 25;\n                    break;\n                case "AccessType":\n                case 26:\n                    message.nodeType = 26;\n                    break;\n                case "SpawnPointType":\n                case 27:\n                    message.nodeType = 27;\n                    break;\n                case "CommodityType":\n                case 28:\n                    message.nodeType = 28;\n                    break;\n                case "ShopType":\n                case 29:\n                    message.nodeType = 29;\n                    break;\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_EDITOR_REQ_CLIENT_FETCH_SPRITE message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_FETCH_SPRITE\n             * @static\n             * @param {op_client.OP_EDITOR_REQ_CLIENT_FETCH_SPRITE} message OP_EDITOR_REQ_CLIENT_FETCH_SPRITE\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_EDITOR_REQ_CLIENT_FETCH_SPRITE.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.ids = [];\n                if (options.defaults)\n                    object.nodeType = options.enums === String ? "UnknownNodeType" : 0;\n                if (message.ids && message.ids.length) {\n                    object.ids = [];\n                    for (var j = 0; j < message.ids.length; ++j)\n                        object.ids[j] = message.ids[j];\n                }\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    object.nodeType = options.enums === String ? $root.op_def.NodeType[message.nodeType] : message.nodeType;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_EDITOR_REQ_CLIENT_FETCH_SPRITE to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_FETCH_SPRITE\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_EDITOR_REQ_CLIENT_FETCH_SPRITE.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_EDITOR_REQ_CLIENT_FETCH_SPRITE;\n        })();\n    \n        op_client.OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE = (function() {\n    \n            /**\n             * Properties of a OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE.\n             * @memberof op_client\n             * @interface IOP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE\n             * @property {op_client.ISprite} sprite OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE sprite\n             * @property {op_def.NodeType|null} [nodeType] OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE nodeType\n             */\n    \n            /**\n             * Constructs a new OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE.\n             * @memberof op_client\n             * @classdesc Represents a OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE.\n             * @implements IOP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE\n             * @constructor\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE=} [properties] Properties to set\n             */\n            function OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE sprite.\n             * @member {op_client.ISprite} sprite\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE\n             * @instance\n             */\n            OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE.prototype.sprite = null;\n    \n            /**\n             * OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE nodeType.\n             * @member {op_def.NodeType} nodeType\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE\n             * @instance\n             */\n            OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE.prototype.nodeType = 0;\n    \n            /**\n             * Creates a new OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE=} [properties] Properties to set\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE} OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE instance\n             */\n            OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE.create = function create(properties) {\n                return new OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE message. Does not implicitly {@link op_client.OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE} message OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                $root.op_client.Sprite.encode(message.sprite, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nodeType);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE message, length delimited. Does not implicitly {@link op_client.OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE} message OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE} OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.sprite = $root.op_client.Sprite.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        message.nodeType = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("sprite"))\n                    throw $util.ProtocolError("missing required \'sprite\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE} OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE message.\n             * @function verify\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                {\n                    var error = $root.op_client.Sprite.verify(message.sprite);\n                    if (error)\n                        return "sprite." + error;\n                }\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    switch (message.nodeType) {\n                    default:\n                        return "nodeType: enum value expected";\n                    case 0:\n                    case 1:\n                    case 2:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 9:\n                    case 10:\n                    case 11:\n                    case 12:\n                    case 13:\n                    case 14:\n                    case 15:\n                    case 16:\n                    case 17:\n                    case 18:\n                    case 19:\n                    case 20:\n                    case 21:\n                    case 22:\n                    case 23:\n                    case 24:\n                    case 25:\n                    case 26:\n                    case 27:\n                    case 28:\n                    case 29:\n                        break;\n                    }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE} OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE\n             */\n            OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE)\n                    return object;\n                var message = new $root.op_client.OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE();\n                if (object.sprite != null) {\n                    if (typeof object.sprite !== "object")\n                        throw TypeError(".op_client.OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE.sprite: object expected");\n                    message.sprite = $root.op_client.Sprite.fromObject(object.sprite);\n                }\n                switch (object.nodeType) {\n                case "UnknownNodeType":\n                case 0:\n                    message.nodeType = 0;\n                    break;\n                case "GameNodeType":\n                case 1:\n                    message.nodeType = 1;\n                    break;\n                case "SceneNodeType":\n                case 2:\n                    message.nodeType = 2;\n                    break;\n                case "ElementNodeType":\n                case 3:\n                    message.nodeType = 3;\n                    break;\n                case "TerrainNodeType":\n                case 4:\n                    message.nodeType = 4;\n                    break;\n                case "CharacterNodeType":\n                case 5:\n                    message.nodeType = 5;\n                    break;\n                case "LocationType":\n                case 6:\n                    message.nodeType = 6;\n                    break;\n                case "MovableType":\n                case 7:\n                    message.nodeType = 7;\n                    break;\n                case "DisplayType":\n                case 8:\n                    message.nodeType = 8;\n                    break;\n                case "AttributeType":\n                case 9:\n                    message.nodeType = 9;\n                    break;\n                case "FunctionType":\n                case 10:\n                    message.nodeType = 10;\n                    break;\n                case "AnimationsType":\n                case 11:\n                    message.nodeType = 11;\n                    break;\n                case "EventType":\n                case 12:\n                    message.nodeType = 12;\n                    break;\n                case "MapSizeType":\n                case 13:\n                    message.nodeType = 13;\n                    break;\n                case "UIType":\n                case 14:\n                    message.nodeType = 14;\n                    break;\n                case "TimerType":\n                case 15:\n                    message.nodeType = 15;\n                    break;\n                case "PackageType":\n                case 16:\n                    message.nodeType = 16;\n                    break;\n                case "PackageItemType":\n                case 17:\n                    message.nodeType = 17;\n                    break;\n                case "AvatarType":\n                case 18:\n                    message.nodeType = 18;\n                    break;\n                case "SettingsType":\n                case 19:\n                    message.nodeType = 19;\n                    break;\n                case "CampType":\n                case 20:\n                    message.nodeType = 20;\n                    break;\n                case "MutexType":\n                case 21:\n                    message.nodeType = 21;\n                    break;\n                case "AnimationDataType":\n                case 22:\n                    message.nodeType = 22;\n                    break;\n                case "ForkType":\n                case 23:\n                    message.nodeType = 23;\n                    break;\n                case "ButtonType":\n                case 24:\n                    message.nodeType = 24;\n                    break;\n                case "TextType":\n                case 25:\n                    message.nodeType = 25;\n                    break;\n                case "AccessType":\n                case 26:\n                    message.nodeType = 26;\n                    break;\n                case "SpawnPointType":\n                case 27:\n                    message.nodeType = 27;\n                    break;\n                case "CommodityType":\n                case 28:\n                    message.nodeType = 28;\n                    break;\n                case "ShopType":\n                case 29:\n                    message.nodeType = 29;\n                    break;\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE\n             * @static\n             * @param {op_client.OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE} message OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.sprite = null;\n                    object.nodeType = options.enums === String ? "UnknownNodeType" : 0;\n                }\n                if (message.sprite != null && message.hasOwnProperty("sprite"))\n                    object.sprite = $root.op_client.Sprite.toObject(message.sprite, options);\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    object.nodeType = options.enums === String ? $root.op_def.NodeType[message.nodeType] : message.nodeType;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_EDITOR_REQ_CLIENT_MOUSE_SELECTED_SPRITE;\n        })();\n    \n        op_client.OP_EDITOR_REQ_CLIENT_CREATE_SPRITE = (function() {\n    \n            /**\n             * Properties of a OP_EDITOR_REQ_CLIENT_CREATE_SPRITE.\n             * @memberof op_client\n             * @interface IOP_EDITOR_REQ_CLIENT_CREATE_SPRITE\n             * @property {Array.<op_client.ISprite>|null} [sprites] OP_EDITOR_REQ_CLIENT_CREATE_SPRITE sprites\n             * @property {op_def.NodeType|null} [nodeType] OP_EDITOR_REQ_CLIENT_CREATE_SPRITE nodeType\n             */\n    \n            /**\n             * Constructs a new OP_EDITOR_REQ_CLIENT_CREATE_SPRITE.\n             * @memberof op_client\n             * @classdesc Represents a OP_EDITOR_REQ_CLIENT_CREATE_SPRITE.\n             * @implements IOP_EDITOR_REQ_CLIENT_CREATE_SPRITE\n             * @constructor\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_CREATE_SPRITE=} [properties] Properties to set\n             */\n            function OP_EDITOR_REQ_CLIENT_CREATE_SPRITE(properties) {\n                this.sprites = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_EDITOR_REQ_CLIENT_CREATE_SPRITE sprites.\n             * @member {Array.<op_client.ISprite>} sprites\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_CREATE_SPRITE\n             * @instance\n             */\n            OP_EDITOR_REQ_CLIENT_CREATE_SPRITE.prototype.sprites = $util.emptyArray;\n    \n            /**\n             * OP_EDITOR_REQ_CLIENT_CREATE_SPRITE nodeType.\n             * @member {op_def.NodeType} nodeType\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_CREATE_SPRITE\n             * @instance\n             */\n            OP_EDITOR_REQ_CLIENT_CREATE_SPRITE.prototype.nodeType = 0;\n    \n            /**\n             * Creates a new OP_EDITOR_REQ_CLIENT_CREATE_SPRITE instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_CREATE_SPRITE\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_CREATE_SPRITE=} [properties] Properties to set\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_CREATE_SPRITE} OP_EDITOR_REQ_CLIENT_CREATE_SPRITE instance\n             */\n            OP_EDITOR_REQ_CLIENT_CREATE_SPRITE.create = function create(properties) {\n                return new OP_EDITOR_REQ_CLIENT_CREATE_SPRITE(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_EDITOR_REQ_CLIENT_CREATE_SPRITE message. Does not implicitly {@link op_client.OP_EDITOR_REQ_CLIENT_CREATE_SPRITE.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_CREATE_SPRITE\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_CREATE_SPRITE} message OP_EDITOR_REQ_CLIENT_CREATE_SPRITE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_EDITOR_REQ_CLIENT_CREATE_SPRITE.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.sprites != null && message.sprites.length)\n                    for (var i = 0; i < message.sprites.length; ++i)\n                        $root.op_client.Sprite.encode(message.sprites[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nodeType);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_EDITOR_REQ_CLIENT_CREATE_SPRITE message, length delimited. Does not implicitly {@link op_client.OP_EDITOR_REQ_CLIENT_CREATE_SPRITE.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_CREATE_SPRITE\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_CREATE_SPRITE} message OP_EDITOR_REQ_CLIENT_CREATE_SPRITE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_EDITOR_REQ_CLIENT_CREATE_SPRITE.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_EDITOR_REQ_CLIENT_CREATE_SPRITE message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_CREATE_SPRITE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_CREATE_SPRITE} OP_EDITOR_REQ_CLIENT_CREATE_SPRITE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_EDITOR_REQ_CLIENT_CREATE_SPRITE.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_EDITOR_REQ_CLIENT_CREATE_SPRITE();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.sprites && message.sprites.length))\n                            message.sprites = [];\n                        message.sprites.push($root.op_client.Sprite.decode(reader, reader.uint32()));\n                        break;\n                    case 2:\n                        message.nodeType = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_EDITOR_REQ_CLIENT_CREATE_SPRITE message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_CREATE_SPRITE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_CREATE_SPRITE} OP_EDITOR_REQ_CLIENT_CREATE_SPRITE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_EDITOR_REQ_CLIENT_CREATE_SPRITE.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_EDITOR_REQ_CLIENT_CREATE_SPRITE message.\n             * @function verify\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_CREATE_SPRITE\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_EDITOR_REQ_CLIENT_CREATE_SPRITE.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.sprites != null && message.hasOwnProperty("sprites")) {\n                    if (!Array.isArray(message.sprites))\n                        return "sprites: array expected";\n                    for (var i = 0; i < message.sprites.length; ++i) {\n                        var error = $root.op_client.Sprite.verify(message.sprites[i]);\n                        if (error)\n                            return "sprites." + error;\n                    }\n                }\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    switch (message.nodeType) {\n                    default:\n                        return "nodeType: enum value expected";\n                    case 0:\n                    case 1:\n                    case 2:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 9:\n                    case 10:\n                    case 11:\n                    case 12:\n                    case 13:\n                    case 14:\n                    case 15:\n                    case 16:\n                    case 17:\n                    case 18:\n                    case 19:\n                    case 20:\n                    case 21:\n                    case 22:\n                    case 23:\n                    case 24:\n                    case 25:\n                    case 26:\n                    case 27:\n                    case 28:\n                    case 29:\n                        break;\n                    }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_EDITOR_REQ_CLIENT_CREATE_SPRITE message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_CREATE_SPRITE\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_CREATE_SPRITE} OP_EDITOR_REQ_CLIENT_CREATE_SPRITE\n             */\n            OP_EDITOR_REQ_CLIENT_CREATE_SPRITE.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_EDITOR_REQ_CLIENT_CREATE_SPRITE)\n                    return object;\n                var message = new $root.op_client.OP_EDITOR_REQ_CLIENT_CREATE_SPRITE();\n                if (object.sprites) {\n                    if (!Array.isArray(object.sprites))\n                        throw TypeError(".op_client.OP_EDITOR_REQ_CLIENT_CREATE_SPRITE.sprites: array expected");\n                    message.sprites = [];\n                    for (var i = 0; i < object.sprites.length; ++i) {\n                        if (typeof object.sprites[i] !== "object")\n                            throw TypeError(".op_client.OP_EDITOR_REQ_CLIENT_CREATE_SPRITE.sprites: object expected");\n                        message.sprites[i] = $root.op_client.Sprite.fromObject(object.sprites[i]);\n                    }\n                }\n                switch (object.nodeType) {\n                case "UnknownNodeType":\n                case 0:\n                    message.nodeType = 0;\n                    break;\n                case "GameNodeType":\n                case 1:\n                    message.nodeType = 1;\n                    break;\n                case "SceneNodeType":\n                case 2:\n                    message.nodeType = 2;\n                    break;\n                case "ElementNodeType":\n                case 3:\n                    message.nodeType = 3;\n                    break;\n                case "TerrainNodeType":\n                case 4:\n                    message.nodeType = 4;\n                    break;\n                case "CharacterNodeType":\n                case 5:\n                    message.nodeType = 5;\n                    break;\n                case "LocationType":\n                case 6:\n                    message.nodeType = 6;\n                    break;\n                case "MovableType":\n                case 7:\n                    message.nodeType = 7;\n                    break;\n                case "DisplayType":\n                case 8:\n                    message.nodeType = 8;\n                    break;\n                case "AttributeType":\n                case 9:\n                    message.nodeType = 9;\n                    break;\n                case "FunctionType":\n                case 10:\n                    message.nodeType = 10;\n                    break;\n                case "AnimationsType":\n                case 11:\n                    message.nodeType = 11;\n                    break;\n                case "EventType":\n                case 12:\n                    message.nodeType = 12;\n                    break;\n                case "MapSizeType":\n                case 13:\n                    message.nodeType = 13;\n                    break;\n                case "UIType":\n                case 14:\n                    message.nodeType = 14;\n                    break;\n                case "TimerType":\n                case 15:\n                    message.nodeType = 15;\n                    break;\n                case "PackageType":\n                case 16:\n                    message.nodeType = 16;\n                    break;\n                case "PackageItemType":\n                case 17:\n                    message.nodeType = 17;\n                    break;\n                case "AvatarType":\n                case 18:\n                    message.nodeType = 18;\n                    break;\n                case "SettingsType":\n                case 19:\n                    message.nodeType = 19;\n                    break;\n                case "CampType":\n                case 20:\n                    message.nodeType = 20;\n                    break;\n                case "MutexType":\n                case 21:\n                    message.nodeType = 21;\n                    break;\n                case "AnimationDataType":\n                case 22:\n                    message.nodeType = 22;\n                    break;\n                case "ForkType":\n                case 23:\n                    message.nodeType = 23;\n                    break;\n                case "ButtonType":\n                case 24:\n                    message.nodeType = 24;\n                    break;\n                case "TextType":\n                case 25:\n                    message.nodeType = 25;\n                    break;\n                case "AccessType":\n                case 26:\n                    message.nodeType = 26;\n                    break;\n                case "SpawnPointType":\n                case 27:\n                    message.nodeType = 27;\n                    break;\n                case "CommodityType":\n                case 28:\n                    message.nodeType = 28;\n                    break;\n                case "ShopType":\n                case 29:\n                    message.nodeType = 29;\n                    break;\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_EDITOR_REQ_CLIENT_CREATE_SPRITE message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_CREATE_SPRITE\n             * @static\n             * @param {op_client.OP_EDITOR_REQ_CLIENT_CREATE_SPRITE} message OP_EDITOR_REQ_CLIENT_CREATE_SPRITE\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_EDITOR_REQ_CLIENT_CREATE_SPRITE.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.sprites = [];\n                if (options.defaults)\n                    object.nodeType = options.enums === String ? "UnknownNodeType" : 0;\n                if (message.sprites && message.sprites.length) {\n                    object.sprites = [];\n                    for (var j = 0; j < message.sprites.length; ++j)\n                        object.sprites[j] = $root.op_client.Sprite.toObject(message.sprites[j], options);\n                }\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    object.nodeType = options.enums === String ? $root.op_def.NodeType[message.nodeType] : message.nodeType;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_EDITOR_REQ_CLIENT_CREATE_SPRITE to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_CREATE_SPRITE\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_EDITOR_REQ_CLIENT_CREATE_SPRITE.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_EDITOR_REQ_CLIENT_CREATE_SPRITE;\n        })();\n    \n        op_client.OP_EDITOR_REQ_CLIENT_DELETE_SPRITE = (function() {\n    \n            /**\n             * Properties of a OP_EDITOR_REQ_CLIENT_DELETE_SPRITE.\n             * @memberof op_client\n             * @interface IOP_EDITOR_REQ_CLIENT_DELETE_SPRITE\n             * @property {Array.<number>|null} [ids] OP_EDITOR_REQ_CLIENT_DELETE_SPRITE ids\n             * @property {op_def.NodeType|null} [nodeType] OP_EDITOR_REQ_CLIENT_DELETE_SPRITE nodeType\n             */\n    \n            /**\n             * Constructs a new OP_EDITOR_REQ_CLIENT_DELETE_SPRITE.\n             * @memberof op_client\n             * @classdesc Represents a OP_EDITOR_REQ_CLIENT_DELETE_SPRITE.\n             * @implements IOP_EDITOR_REQ_CLIENT_DELETE_SPRITE\n             * @constructor\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_DELETE_SPRITE=} [properties] Properties to set\n             */\n            function OP_EDITOR_REQ_CLIENT_DELETE_SPRITE(properties) {\n                this.ids = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_EDITOR_REQ_CLIENT_DELETE_SPRITE ids.\n             * @member {Array.<number>} ids\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_DELETE_SPRITE\n             * @instance\n             */\n            OP_EDITOR_REQ_CLIENT_DELETE_SPRITE.prototype.ids = $util.emptyArray;\n    \n            /**\n             * OP_EDITOR_REQ_CLIENT_DELETE_SPRITE nodeType.\n             * @member {op_def.NodeType} nodeType\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_DELETE_SPRITE\n             * @instance\n             */\n            OP_EDITOR_REQ_CLIENT_DELETE_SPRITE.prototype.nodeType = 0;\n    \n            /**\n             * Creates a new OP_EDITOR_REQ_CLIENT_DELETE_SPRITE instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_DELETE_SPRITE\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_DELETE_SPRITE=} [properties] Properties to set\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_DELETE_SPRITE} OP_EDITOR_REQ_CLIENT_DELETE_SPRITE instance\n             */\n            OP_EDITOR_REQ_CLIENT_DELETE_SPRITE.create = function create(properties) {\n                return new OP_EDITOR_REQ_CLIENT_DELETE_SPRITE(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_EDITOR_REQ_CLIENT_DELETE_SPRITE message. Does not implicitly {@link op_client.OP_EDITOR_REQ_CLIENT_DELETE_SPRITE.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_DELETE_SPRITE\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_DELETE_SPRITE} message OP_EDITOR_REQ_CLIENT_DELETE_SPRITE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_EDITOR_REQ_CLIENT_DELETE_SPRITE.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.ids != null && message.ids.length)\n                    for (var i = 0; i < message.ids.length; ++i)\n                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ids[i]);\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nodeType);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_EDITOR_REQ_CLIENT_DELETE_SPRITE message, length delimited. Does not implicitly {@link op_client.OP_EDITOR_REQ_CLIENT_DELETE_SPRITE.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_DELETE_SPRITE\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_DELETE_SPRITE} message OP_EDITOR_REQ_CLIENT_DELETE_SPRITE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_EDITOR_REQ_CLIENT_DELETE_SPRITE.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_EDITOR_REQ_CLIENT_DELETE_SPRITE message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_DELETE_SPRITE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_DELETE_SPRITE} OP_EDITOR_REQ_CLIENT_DELETE_SPRITE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_EDITOR_REQ_CLIENT_DELETE_SPRITE.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_EDITOR_REQ_CLIENT_DELETE_SPRITE();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.ids && message.ids.length))\n                            message.ids = [];\n                        if ((tag & 7) === 2) {\n                            var end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2)\n                                message.ids.push(reader.int32());\n                        } else\n                            message.ids.push(reader.int32());\n                        break;\n                    case 2:\n                        message.nodeType = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_EDITOR_REQ_CLIENT_DELETE_SPRITE message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_DELETE_SPRITE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_DELETE_SPRITE} OP_EDITOR_REQ_CLIENT_DELETE_SPRITE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_EDITOR_REQ_CLIENT_DELETE_SPRITE.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_EDITOR_REQ_CLIENT_DELETE_SPRITE message.\n             * @function verify\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_DELETE_SPRITE\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_EDITOR_REQ_CLIENT_DELETE_SPRITE.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.ids != null && message.hasOwnProperty("ids")) {\n                    if (!Array.isArray(message.ids))\n                        return "ids: array expected";\n                    for (var i = 0; i < message.ids.length; ++i)\n                        if (!$util.isInteger(message.ids[i]))\n                            return "ids: integer[] expected";\n                }\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    switch (message.nodeType) {\n                    default:\n                        return "nodeType: enum value expected";\n                    case 0:\n                    case 1:\n                    case 2:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 9:\n                    case 10:\n                    case 11:\n                    case 12:\n                    case 13:\n                    case 14:\n                    case 15:\n                    case 16:\n                    case 17:\n                    case 18:\n                    case 19:\n                    case 20:\n                    case 21:\n                    case 22:\n                    case 23:\n                    case 24:\n                    case 25:\n                    case 26:\n                    case 27:\n                    case 28:\n                    case 29:\n                        break;\n                    }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_EDITOR_REQ_CLIENT_DELETE_SPRITE message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_DELETE_SPRITE\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_DELETE_SPRITE} OP_EDITOR_REQ_CLIENT_DELETE_SPRITE\n             */\n            OP_EDITOR_REQ_CLIENT_DELETE_SPRITE.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_EDITOR_REQ_CLIENT_DELETE_SPRITE)\n                    return object;\n                var message = new $root.op_client.OP_EDITOR_REQ_CLIENT_DELETE_SPRITE();\n                if (object.ids) {\n                    if (!Array.isArray(object.ids))\n                        throw TypeError(".op_client.OP_EDITOR_REQ_CLIENT_DELETE_SPRITE.ids: array expected");\n                    message.ids = [];\n                    for (var i = 0; i < object.ids.length; ++i)\n                        message.ids[i] = object.ids[i] | 0;\n                }\n                switch (object.nodeType) {\n                case "UnknownNodeType":\n                case 0:\n                    message.nodeType = 0;\n                    break;\n                case "GameNodeType":\n                case 1:\n                    message.nodeType = 1;\n                    break;\n                case "SceneNodeType":\n                case 2:\n                    message.nodeType = 2;\n                    break;\n                case "ElementNodeType":\n                case 3:\n                    message.nodeType = 3;\n                    break;\n                case "TerrainNodeType":\n                case 4:\n                    message.nodeType = 4;\n                    break;\n                case "CharacterNodeType":\n                case 5:\n                    message.nodeType = 5;\n                    break;\n                case "LocationType":\n                case 6:\n                    message.nodeType = 6;\n                    break;\n                case "MovableType":\n                case 7:\n                    message.nodeType = 7;\n                    break;\n                case "DisplayType":\n                case 8:\n                    message.nodeType = 8;\n                    break;\n                case "AttributeType":\n                case 9:\n                    message.nodeType = 9;\n                    break;\n                case "FunctionType":\n                case 10:\n                    message.nodeType = 10;\n                    break;\n                case "AnimationsType":\n                case 11:\n                    message.nodeType = 11;\n                    break;\n                case "EventType":\n                case 12:\n                    message.nodeType = 12;\n                    break;\n                case "MapSizeType":\n                case 13:\n                    message.nodeType = 13;\n                    break;\n                case "UIType":\n                case 14:\n                    message.nodeType = 14;\n                    break;\n                case "TimerType":\n                case 15:\n                    message.nodeType = 15;\n                    break;\n                case "PackageType":\n                case 16:\n                    message.nodeType = 16;\n                    break;\n                case "PackageItemType":\n                case 17:\n                    message.nodeType = 17;\n                    break;\n                case "AvatarType":\n                case 18:\n                    message.nodeType = 18;\n                    break;\n                case "SettingsType":\n                case 19:\n                    message.nodeType = 19;\n                    break;\n                case "CampType":\n                case 20:\n                    message.nodeType = 20;\n                    break;\n                case "MutexType":\n                case 21:\n                    message.nodeType = 21;\n                    break;\n                case "AnimationDataType":\n                case 22:\n                    message.nodeType = 22;\n                    break;\n                case "ForkType":\n                case 23:\n                    message.nodeType = 23;\n                    break;\n                case "ButtonType":\n                case 24:\n                    message.nodeType = 24;\n                    break;\n                case "TextType":\n                case 25:\n                    message.nodeType = 25;\n                    break;\n                case "AccessType":\n                case 26:\n                    message.nodeType = 26;\n                    break;\n                case "SpawnPointType":\n                case 27:\n                    message.nodeType = 27;\n                    break;\n                case "CommodityType":\n                case 28:\n                    message.nodeType = 28;\n                    break;\n                case "ShopType":\n                case 29:\n                    message.nodeType = 29;\n                    break;\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_EDITOR_REQ_CLIENT_DELETE_SPRITE message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_DELETE_SPRITE\n             * @static\n             * @param {op_client.OP_EDITOR_REQ_CLIENT_DELETE_SPRITE} message OP_EDITOR_REQ_CLIENT_DELETE_SPRITE\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_EDITOR_REQ_CLIENT_DELETE_SPRITE.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.ids = [];\n                if (options.defaults)\n                    object.nodeType = options.enums === String ? "UnknownNodeType" : 0;\n                if (message.ids && message.ids.length) {\n                    object.ids = [];\n                    for (var j = 0; j < message.ids.length; ++j)\n                        object.ids[j] = message.ids[j];\n                }\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    object.nodeType = options.enums === String ? $root.op_def.NodeType[message.nodeType] : message.nodeType;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_EDITOR_REQ_CLIENT_DELETE_SPRITE to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_DELETE_SPRITE\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_EDITOR_REQ_CLIENT_DELETE_SPRITE.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_EDITOR_REQ_CLIENT_DELETE_SPRITE;\n        })();\n    \n        op_client.OP_EDITOR_REQ_CLIENT_SYNC_SPRITE = (function() {\n    \n            /**\n             * Properties of a OP_EDITOR_REQ_CLIENT_SYNC_SPRITE.\n             * @memberof op_client\n             * @interface IOP_EDITOR_REQ_CLIENT_SYNC_SPRITE\n             * @property {Array.<op_client.ISprite>|null} [sprites] OP_EDITOR_REQ_CLIENT_SYNC_SPRITE sprites\n             * @property {op_def.NodeType|null} [nodeType] OP_EDITOR_REQ_CLIENT_SYNC_SPRITE nodeType\n             */\n    \n            /**\n             * Constructs a new OP_EDITOR_REQ_CLIENT_SYNC_SPRITE.\n             * @memberof op_client\n             * @classdesc Represents a OP_EDITOR_REQ_CLIENT_SYNC_SPRITE.\n             * @implements IOP_EDITOR_REQ_CLIENT_SYNC_SPRITE\n             * @constructor\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_SYNC_SPRITE=} [properties] Properties to set\n             */\n            function OP_EDITOR_REQ_CLIENT_SYNC_SPRITE(properties) {\n                this.sprites = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_EDITOR_REQ_CLIENT_SYNC_SPRITE sprites.\n             * @member {Array.<op_client.ISprite>} sprites\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_SYNC_SPRITE\n             * @instance\n             */\n            OP_EDITOR_REQ_CLIENT_SYNC_SPRITE.prototype.sprites = $util.emptyArray;\n    \n            /**\n             * OP_EDITOR_REQ_CLIENT_SYNC_SPRITE nodeType.\n             * @member {op_def.NodeType} nodeType\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_SYNC_SPRITE\n             * @instance\n             */\n            OP_EDITOR_REQ_CLIENT_SYNC_SPRITE.prototype.nodeType = 0;\n    \n            /**\n             * Creates a new OP_EDITOR_REQ_CLIENT_SYNC_SPRITE instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_SYNC_SPRITE\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_SYNC_SPRITE=} [properties] Properties to set\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_SYNC_SPRITE} OP_EDITOR_REQ_CLIENT_SYNC_SPRITE instance\n             */\n            OP_EDITOR_REQ_CLIENT_SYNC_SPRITE.create = function create(properties) {\n                return new OP_EDITOR_REQ_CLIENT_SYNC_SPRITE(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_EDITOR_REQ_CLIENT_SYNC_SPRITE message. Does not implicitly {@link op_client.OP_EDITOR_REQ_CLIENT_SYNC_SPRITE.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_SYNC_SPRITE\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_SYNC_SPRITE} message OP_EDITOR_REQ_CLIENT_SYNC_SPRITE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_EDITOR_REQ_CLIENT_SYNC_SPRITE.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.sprites != null && message.sprites.length)\n                    for (var i = 0; i < message.sprites.length; ++i)\n                        $root.op_client.Sprite.encode(message.sprites[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nodeType);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_EDITOR_REQ_CLIENT_SYNC_SPRITE message, length delimited. Does not implicitly {@link op_client.OP_EDITOR_REQ_CLIENT_SYNC_SPRITE.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_SYNC_SPRITE\n             * @static\n             * @param {op_client.IOP_EDITOR_REQ_CLIENT_SYNC_SPRITE} message OP_EDITOR_REQ_CLIENT_SYNC_SPRITE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_EDITOR_REQ_CLIENT_SYNC_SPRITE.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_EDITOR_REQ_CLIENT_SYNC_SPRITE message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_SYNC_SPRITE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_SYNC_SPRITE} OP_EDITOR_REQ_CLIENT_SYNC_SPRITE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_EDITOR_REQ_CLIENT_SYNC_SPRITE.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_EDITOR_REQ_CLIENT_SYNC_SPRITE();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.sprites && message.sprites.length))\n                            message.sprites = [];\n                        message.sprites.push($root.op_client.Sprite.decode(reader, reader.uint32()));\n                        break;\n                    case 2:\n                        message.nodeType = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_EDITOR_REQ_CLIENT_SYNC_SPRITE message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_SYNC_SPRITE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_SYNC_SPRITE} OP_EDITOR_REQ_CLIENT_SYNC_SPRITE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_EDITOR_REQ_CLIENT_SYNC_SPRITE.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_EDITOR_REQ_CLIENT_SYNC_SPRITE message.\n             * @function verify\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_SYNC_SPRITE\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_EDITOR_REQ_CLIENT_SYNC_SPRITE.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.sprites != null && message.hasOwnProperty("sprites")) {\n                    if (!Array.isArray(message.sprites))\n                        return "sprites: array expected";\n                    for (var i = 0; i < message.sprites.length; ++i) {\n                        var error = $root.op_client.Sprite.verify(message.sprites[i]);\n                        if (error)\n                            return "sprites." + error;\n                    }\n                }\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    switch (message.nodeType) {\n                    default:\n                        return "nodeType: enum value expected";\n                    case 0:\n                    case 1:\n                    case 2:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 9:\n                    case 10:\n                    case 11:\n                    case 12:\n                    case 13:\n                    case 14:\n                    case 15:\n                    case 16:\n                    case 17:\n                    case 18:\n                    case 19:\n                    case 20:\n                    case 21:\n                    case 22:\n                    case 23:\n                    case 24:\n                    case 25:\n                    case 26:\n                    case 27:\n                    case 28:\n                    case 29:\n                        break;\n                    }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_EDITOR_REQ_CLIENT_SYNC_SPRITE message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_SYNC_SPRITE\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_EDITOR_REQ_CLIENT_SYNC_SPRITE} OP_EDITOR_REQ_CLIENT_SYNC_SPRITE\n             */\n            OP_EDITOR_REQ_CLIENT_SYNC_SPRITE.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_EDITOR_REQ_CLIENT_SYNC_SPRITE)\n                    return object;\n                var message = new $root.op_client.OP_EDITOR_REQ_CLIENT_SYNC_SPRITE();\n                if (object.sprites) {\n                    if (!Array.isArray(object.sprites))\n                        throw TypeError(".op_client.OP_EDITOR_REQ_CLIENT_SYNC_SPRITE.sprites: array expected");\n                    message.sprites = [];\n                    for (var i = 0; i < object.sprites.length; ++i) {\n                        if (typeof object.sprites[i] !== "object")\n                            throw TypeError(".op_client.OP_EDITOR_REQ_CLIENT_SYNC_SPRITE.sprites: object expected");\n                        message.sprites[i] = $root.op_client.Sprite.fromObject(object.sprites[i]);\n                    }\n                }\n                switch (object.nodeType) {\n                case "UnknownNodeType":\n                case 0:\n                    message.nodeType = 0;\n                    break;\n                case "GameNodeType":\n                case 1:\n                    message.nodeType = 1;\n                    break;\n                case "SceneNodeType":\n                case 2:\n                    message.nodeType = 2;\n                    break;\n                case "ElementNodeType":\n                case 3:\n                    message.nodeType = 3;\n                    break;\n                case "TerrainNodeType":\n                case 4:\n                    message.nodeType = 4;\n                    break;\n                case "CharacterNodeType":\n                case 5:\n                    message.nodeType = 5;\n                    break;\n                case "LocationType":\n                case 6:\n                    message.nodeType = 6;\n                    break;\n                case "MovableType":\n                case 7:\n                    message.nodeType = 7;\n                    break;\n                case "DisplayType":\n                case 8:\n                    message.nodeType = 8;\n                    break;\n                case "AttributeType":\n                case 9:\n                    message.nodeType = 9;\n                    break;\n                case "FunctionType":\n                case 10:\n                    message.nodeType = 10;\n                    break;\n                case "AnimationsType":\n                case 11:\n                    message.nodeType = 11;\n                    break;\n                case "EventType":\n                case 12:\n                    message.nodeType = 12;\n                    break;\n                case "MapSizeType":\n                case 13:\n                    message.nodeType = 13;\n                    break;\n                case "UIType":\n                case 14:\n                    message.nodeType = 14;\n                    break;\n                case "TimerType":\n                case 15:\n                    message.nodeType = 15;\n                    break;\n                case "PackageType":\n                case 16:\n                    message.nodeType = 16;\n                    break;\n                case "PackageItemType":\n                case 17:\n                    message.nodeType = 17;\n                    break;\n                case "AvatarType":\n                case 18:\n                    message.nodeType = 18;\n                    break;\n                case "SettingsType":\n                case 19:\n                    message.nodeType = 19;\n                    break;\n                case "CampType":\n                case 20:\n                    message.nodeType = 20;\n                    break;\n                case "MutexType":\n                case 21:\n                    message.nodeType = 21;\n                    break;\n                case "AnimationDataType":\n                case 22:\n                    message.nodeType = 22;\n                    break;\n                case "ForkType":\n                case 23:\n                    message.nodeType = 23;\n                    break;\n                case "ButtonType":\n                case 24:\n                    message.nodeType = 24;\n                    break;\n                case "TextType":\n                case 25:\n                    message.nodeType = 25;\n                    break;\n                case "AccessType":\n                case 26:\n                    message.nodeType = 26;\n                    break;\n                case "SpawnPointType":\n                case 27:\n                    message.nodeType = 27;\n                    break;\n                case "CommodityType":\n                case 28:\n                    message.nodeType = 28;\n                    break;\n                case "ShopType":\n                case 29:\n                    message.nodeType = 29;\n                    break;\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_EDITOR_REQ_CLIENT_SYNC_SPRITE message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_SYNC_SPRITE\n             * @static\n             * @param {op_client.OP_EDITOR_REQ_CLIENT_SYNC_SPRITE} message OP_EDITOR_REQ_CLIENT_SYNC_SPRITE\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_EDITOR_REQ_CLIENT_SYNC_SPRITE.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.sprites = [];\n                if (options.defaults)\n                    object.nodeType = options.enums === String ? "UnknownNodeType" : 0;\n                if (message.sprites && message.sprites.length) {\n                    object.sprites = [];\n                    for (var j = 0; j < message.sprites.length; ++j)\n                        object.sprites[j] = $root.op_client.Sprite.toObject(message.sprites[j], options);\n                }\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    object.nodeType = options.enums === String ? $root.op_def.NodeType[message.nodeType] : message.nodeType;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_EDITOR_REQ_CLIENT_SYNC_SPRITE to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_EDITOR_REQ_CLIENT_SYNC_SPRITE\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_EDITOR_REQ_CLIENT_SYNC_SPRITE.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_EDITOR_REQ_CLIENT_SYNC_SPRITE;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW\n             * @property {number|null} [id] OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW id\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW.\n             * @implements IOP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW id.\n             * @member {number} id\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW.prototype.id = 0;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW} OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW instance\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW} message OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.id != null && message.hasOwnProperty("id"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.id);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW} message OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW} OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.id = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW} OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.id != null && message.hasOwnProperty("id"))\n                    if (!$util.isInteger(message.id))\n                        return "id: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW} OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW();\n                if (object.id != null)\n                    message.id = object.id | 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW} message OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.id = 0;\n                if (message.id != null && message.hasOwnProperty("id"))\n                    object.id = message.id;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_REQ_CLIENT_SET_CAMERA_FOLLOW;\n        })();\n    \n        op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION.\n             * @memberof op_client\n             * @interface IOP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION\n             * @property {Array.<op_client.IChangeAnimation>|null} [changeAnimation] OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION changeAnimation\n             * @property {op_def.NodeType|null} [nodeType] OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION nodeType\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION.\n             * @memberof op_client\n             * @classdesc Represents a OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION.\n             * @implements IOP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION\n             * @constructor\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION(properties) {\n                this.changeAnimation = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION changeAnimation.\n             * @member {Array.<op_client.IChangeAnimation>} changeAnimation\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION.prototype.changeAnimation = $util.emptyArray;\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION nodeType.\n             * @member {op_def.NodeType} nodeType\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION.prototype.nodeType = 0;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION instance using the specified properties.\n             * @function create\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION=} [properties] Properties to set\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION} OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION instance\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION message. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION.verify|verify} messages.\n             * @function encode\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION} message OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.changeAnimation != null && message.changeAnimation.length)\n                    for (var i = 0; i < message.changeAnimation.length; ++i)\n                        $root.op_client.ChangeAnimation.encode(message.changeAnimation[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nodeType);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION message, length delimited. Does not implicitly {@link op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION\n             * @static\n             * @param {op_client.IOP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION} message OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION} OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.changeAnimation && message.changeAnimation.length))\n                            message.changeAnimation = [];\n                        message.changeAnimation.push($root.op_client.ChangeAnimation.decode(reader, reader.uint32()));\n                        break;\n                    case 2:\n                        message.nodeType = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION} OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION message.\n             * @function verify\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.changeAnimation != null && message.hasOwnProperty("changeAnimation")) {\n                    if (!Array.isArray(message.changeAnimation))\n                        return "changeAnimation: array expected";\n                    for (var i = 0; i < message.changeAnimation.length; ++i) {\n                        var error = $root.op_client.ChangeAnimation.verify(message.changeAnimation[i]);\n                        if (error)\n                            return "changeAnimation." + error;\n                    }\n                }\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    switch (message.nodeType) {\n                    default:\n                        return "nodeType: enum value expected";\n                    case 0:\n                    case 1:\n                    case 2:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 9:\n                    case 10:\n                    case 11:\n                    case 12:\n                    case 13:\n                    case 14:\n                    case 15:\n                    case 16:\n                    case 17:\n                    case 18:\n                    case 19:\n                    case 20:\n                    case 21:\n                    case 22:\n                    case 23:\n                    case 24:\n                    case 25:\n                    case 26:\n                    case 27:\n                    case 28:\n                    case 29:\n                        break;\n                    }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION} OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION)\n                    return object;\n                var message = new $root.op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION();\n                if (object.changeAnimation) {\n                    if (!Array.isArray(object.changeAnimation))\n                        throw TypeError(".op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION.changeAnimation: array expected");\n                    message.changeAnimation = [];\n                    for (var i = 0; i < object.changeAnimation.length; ++i) {\n                        if (typeof object.changeAnimation[i] !== "object")\n                            throw TypeError(".op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION.changeAnimation: object expected");\n                        message.changeAnimation[i] = $root.op_client.ChangeAnimation.fromObject(object.changeAnimation[i]);\n                    }\n                }\n                switch (object.nodeType) {\n                case "UnknownNodeType":\n                case 0:\n                    message.nodeType = 0;\n                    break;\n                case "GameNodeType":\n                case 1:\n                    message.nodeType = 1;\n                    break;\n                case "SceneNodeType":\n                case 2:\n                    message.nodeType = 2;\n                    break;\n                case "ElementNodeType":\n                case 3:\n                    message.nodeType = 3;\n                    break;\n                case "TerrainNodeType":\n                case 4:\n                    message.nodeType = 4;\n                    break;\n                case "CharacterNodeType":\n                case 5:\n                    message.nodeType = 5;\n                    break;\n                case "LocationType":\n                case 6:\n                    message.nodeType = 6;\n                    break;\n                case "MovableType":\n                case 7:\n                    message.nodeType = 7;\n                    break;\n                case "DisplayType":\n                case 8:\n                    message.nodeType = 8;\n                    break;\n                case "AttributeType":\n                case 9:\n                    message.nodeType = 9;\n                    break;\n                case "FunctionType":\n                case 10:\n                    message.nodeType = 10;\n                    break;\n                case "AnimationsType":\n                case 11:\n                    message.nodeType = 11;\n                    break;\n                case "EventType":\n                case 12:\n                    message.nodeType = 12;\n                    break;\n                case "MapSizeType":\n                case 13:\n                    message.nodeType = 13;\n                    break;\n                case "UIType":\n                case 14:\n                    message.nodeType = 14;\n                    break;\n                case "TimerType":\n                case 15:\n                    message.nodeType = 15;\n                    break;\n                case "PackageType":\n                case 16:\n                    message.nodeType = 16;\n                    break;\n                case "PackageItemType":\n                case 17:\n                    message.nodeType = 17;\n                    break;\n                case "AvatarType":\n                case 18:\n                    message.nodeType = 18;\n                    break;\n                case "SettingsType":\n                case 19:\n                    message.nodeType = 19;\n                    break;\n                case "CampType":\n                case 20:\n                    message.nodeType = 20;\n                    break;\n                case "MutexType":\n                case 21:\n                    message.nodeType = 21;\n                    break;\n                case "AnimationDataType":\n                case 22:\n                    message.nodeType = 22;\n                    break;\n                case "ForkType":\n                case 23:\n                    message.nodeType = 23;\n                    break;\n                case "ButtonType":\n                case 24:\n                    message.nodeType = 24;\n                    break;\n                case "TextType":\n                case 25:\n                    message.nodeType = 25;\n                    break;\n                case "AccessType":\n                case 26:\n                    message.nodeType = 26;\n                    break;\n                case "SpawnPointType":\n                case 27:\n                    message.nodeType = 27;\n                    break;\n                case "CommodityType":\n                case 28:\n                    message.nodeType = 28;\n                    break;\n                case "ShopType":\n                case 29:\n                    message.nodeType = 29;\n                    break;\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION\n             * @static\n             * @param {op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION} message OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.changeAnimation = [];\n                if (options.defaults)\n                    object.nodeType = options.enums === String ? "UnknownNodeType" : 0;\n                if (message.changeAnimation && message.changeAnimation.length) {\n                    object.changeAnimation = [];\n                    for (var j = 0; j < message.changeAnimation.length; ++j)\n                        object.changeAnimation[j] = $root.op_client.ChangeAnimation.toObject(message.changeAnimation[j], options);\n                }\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    object.nodeType = options.enums === String ? $root.op_def.NodeType[message.nodeType] : message.nodeType;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION to JSON.\n             * @function toJSON\n             * @memberof op_client.OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_REQ_CLIENT_CHANGE_SPRITE_ANIMATION;\n        })();\n    \n        return op_client;\n    })();\n    \n    $root.op_def = (function() {\n    \n        /**\n         * Namespace op_def.\n         * @exports op_def\n         * @namespace\n         */\n        var op_def = {};\n    \n        /**\n         * OPCODE enum.\n         * @name op_def.OPCODE\n         * @enum {string}\n         * @property {number} _OP_UNKNOWN=0 _OP_UNKNOWN value\n         */\n        op_def.OPCODE = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = "_OP_UNKNOWN"] = 0;\n            return values;\n        })();\n    \n        /**\n         * CoinType enum.\n         * @name op_def.CoinType\n         * @enum {string}\n         * @property {number} TU_DING_COIN=0 TU_DING_COIN value\n         * @property {number} QING_SONG_TANG=1 QING_SONG_TANG value\n         * @property {number} GOLD_COIN=2 GOLD_COIN value\n         */\n        op_def.CoinType = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = "TU_DING_COIN"] = 0;\n            values[valuesById[1] = "QING_SONG_TANG"] = 1;\n            values[valuesById[2] = "GOLD_COIN"] = 2;\n            return values;\n        })();\n    \n        /**\n         * ResponseStatus enum.\n         * @name op_def.ResponseStatus\n         * @enum {string}\n         * @property {number} SUCCESS=0 SUCCESS value\n         * @property {number} SERVER_ERROR_UNKNOWN=4096 SERVER_ERROR_UNKNOWN value\n         * @property {number} SERVER_ERROR_BUSY=4098 SERVER_ERROR_BUSY value\n         * @property {number} SERVER_ERROR_TIMEOUT=4099 SERVER_ERROR_TIMEOUT value\n         * @property {number} SERVER_ERROR_SERVICE_NOT_FOUND=4100 SERVER_ERROR_SERVICE_NOT_FOUND value\n         * @property {number} SERVER_ERROR_BAD_GATEWAY=8193 SERVER_ERROR_BAD_GATEWAY value\n         * @property {number} SERVER_ERROR_GALAXY_SERVICE_NOT_FOUND=12289 SERVER_ERROR_GALAXY_SERVICE_NOT_FOUND value\n         * @property {number} SERVER_ERROR_WORLD_SERVICE_NOT_FOUND=16385 SERVER_ERROR_WORLD_SERVICE_NOT_FOUND value\n         * @property {number} SERVER_ERROR_VIRTUAL_WORLD_SERVICE_NOT_FOUND=20481 SERVER_ERROR_VIRTUAL_WORLD_SERVICE_NOT_FOUND value\n         * @property {number} REQUEST_ERROR_WRONG_PARAM=37888 REQUEST_ERROR_WRONG_PARAM value\n         * @property {number} REQUEST_UNAUTHORIZED=37889 REQUEST_UNAUTHORIZED value\n         * @property {number} RANSFER_TO_GAME_BILLER_ERROR=45056 RANSFER_TO_GAME_BILLER_ERROR value\n         */\n        op_def.ResponseStatus = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = "SUCCESS"] = 0;\n            values[valuesById[4096] = "SERVER_ERROR_UNKNOWN"] = 4096;\n            values[valuesById[4098] = "SERVER_ERROR_BUSY"] = 4098;\n            values[valuesById[4099] = "SERVER_ERROR_TIMEOUT"] = 4099;\n            values[valuesById[4100] = "SERVER_ERROR_SERVICE_NOT_FOUND"] = 4100;\n            values[valuesById[8193] = "SERVER_ERROR_BAD_GATEWAY"] = 8193;\n            values[valuesById[12289] = "SERVER_ERROR_GALAXY_SERVICE_NOT_FOUND"] = 12289;\n            values[valuesById[16385] = "SERVER_ERROR_WORLD_SERVICE_NOT_FOUND"] = 16385;\n            values[valuesById[20481] = "SERVER_ERROR_VIRTUAL_WORLD_SERVICE_NOT_FOUND"] = 20481;\n            values[valuesById[37888] = "REQUEST_ERROR_WRONG_PARAM"] = 37888;\n            values[valuesById[37889] = "REQUEST_UNAUTHORIZED"] = 37889;\n            values[valuesById[45056] = "RANSFER_TO_GAME_BILLER_ERROR"] = 45056;\n            return values;\n        })();\n    \n        /**\n         * ServerType enum.\n         * @name op_def.ServerType\n         * @enum {string}\n         * @property {number} UNKNOWN=0 UNKNOWN value\n         * @property {number} WORLD=1 WORLD value\n         * @property {number} GALAXY=2 GALAXY value\n         * @property {number} PROPERTY=3 PROPERTY value\n         * @property {number} LOGIN=4 LOGIN value\n         */\n        op_def.ServerType = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = "UNKNOWN"] = 0;\n            values[valuesById[1] = "WORLD"] = 1;\n            values[valuesById[2] = "GALAXY"] = 2;\n            values[valuesById[3] = "PROPERTY"] = 3;\n            values[valuesById[4] = "LOGIN"] = 4;\n            return values;\n        })();\n    \n        /**\n         * ChatChannel enum.\n         * @name op_def.ChatChannel\n         * @enum {string}\n         * @property {number} CurrentScene=0 CurrentScene value\n         * @property {number} World=1 World value\n         * @property {number} Team=2 Team value\n         * @property {number} Private=3 Private value\n         * @property {number} System=4 System value\n         */\n        op_def.ChatChannel = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = "CurrentScene"] = 0;\n            values[valuesById[1] = "World"] = 1;\n            values[valuesById[2] = "Team"] = 2;\n            values[valuesById[3] = "Private"] = 3;\n            values[valuesById[4] = "System"] = 4;\n            return values;\n        })();\n    \n        /**\n         * Direction enum.\n         * @name op_def.Direction\n         * @enum {string}\n         * @property {number} UP=0 UP value\n         * @property {number} UPPER_LEFT=1 UPPER_LEFT value\n         * @property {number} LEFT=2 LEFT value\n         * @property {number} LOWER_LEFT=3 LOWER_LEFT value\n         * @property {number} DOWN=4 DOWN value\n         * @property {number} LOWER_RIGHT=5 LOWER_RIGHT value\n         * @property {number} RIGHT=6 RIGHT value\n         * @property {number} UPPER_RIGHT=7 UPPER_RIGHT value\n         */\n        op_def.Direction = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = "UP"] = 0;\n            values[valuesById[1] = "UPPER_LEFT"] = 1;\n            values[valuesById[2] = "LEFT"] = 2;\n            values[valuesById[3] = "LOWER_LEFT"] = 3;\n            values[valuesById[4] = "DOWN"] = 4;\n            values[valuesById[5] = "LOWER_RIGHT"] = 5;\n            values[valuesById[6] = "RIGHT"] = 6;\n            values[valuesById[7] = "UPPER_RIGHT"] = 7;\n            return values;\n        })();\n    \n        /**\n         * MoveType enum.\n         * @name op_def.MoveType\n         * @enum {string}\n         * @property {number} CHARACTER=0 CHARACTER value\n         * @property {number} ELEMENT=1 ELEMENT value\n         */\n        op_def.MoveType = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = "CHARACTER"] = 0;\n            values[valuesById[1] = "ELEMENT"] = 1;\n            return values;\n        })();\n    \n        op_def.PBPoint3f = (function() {\n    \n            /**\n             * Properties of a PBPoint3f.\n             * @memberof op_def\n             * @interface IPBPoint3f\n             * @property {number} x PBPoint3f x\n             * @property {number} y PBPoint3f y\n             * @property {number|null} [z] PBPoint3f z\n             */\n    \n            /**\n             * Constructs a new PBPoint3f.\n             * @memberof op_def\n             * @classdesc Represents a PBPoint3f.\n             * @implements IPBPoint3f\n             * @constructor\n             * @param {op_def.IPBPoint3f=} [properties] Properties to set\n             */\n            function PBPoint3f(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * PBPoint3f x.\n             * @member {number} x\n             * @memberof op_def.PBPoint3f\n             * @instance\n             */\n            PBPoint3f.prototype.x = 0;\n    \n            /**\n             * PBPoint3f y.\n             * @member {number} y\n             * @memberof op_def.PBPoint3f\n             * @instance\n             */\n            PBPoint3f.prototype.y = 0;\n    \n            /**\n             * PBPoint3f z.\n             * @member {number} z\n             * @memberof op_def.PBPoint3f\n             * @instance\n             */\n            PBPoint3f.prototype.z = 0;\n    \n            /**\n             * Creates a new PBPoint3f instance using the specified properties.\n             * @function create\n             * @memberof op_def.PBPoint3f\n             * @static\n             * @param {op_def.IPBPoint3f=} [properties] Properties to set\n             * @returns {op_def.PBPoint3f} PBPoint3f instance\n             */\n            PBPoint3f.create = function create(properties) {\n                return new PBPoint3f(properties);\n            };\n    \n            /**\n             * Encodes the specified PBPoint3f message. Does not implicitly {@link op_def.PBPoint3f.verify|verify} messages.\n             * @function encode\n             * @memberof op_def.PBPoint3f\n             * @static\n             * @param {op_def.IPBPoint3f} message PBPoint3f message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            PBPoint3f.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 5 =*/13).float(message.x);\n                writer.uint32(/* id 2, wireType 5 =*/21).float(message.y);\n                if (message.z != null && message.hasOwnProperty("z"))\n                    writer.uint32(/* id 3, wireType 5 =*/29).float(message.z);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified PBPoint3f message, length delimited. Does not implicitly {@link op_def.PBPoint3f.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_def.PBPoint3f\n             * @static\n             * @param {op_def.IPBPoint3f} message PBPoint3f message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            PBPoint3f.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a PBPoint3f message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_def.PBPoint3f\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_def.PBPoint3f} PBPoint3f\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            PBPoint3f.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_def.PBPoint3f();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.x = reader.float();\n                        break;\n                    case 2:\n                        message.y = reader.float();\n                        break;\n                    case 3:\n                        message.z = reader.float();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("x"))\n                    throw $util.ProtocolError("missing required \'x\'", { instance: message });\n                if (!message.hasOwnProperty("y"))\n                    throw $util.ProtocolError("missing required \'y\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a PBPoint3f message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_def.PBPoint3f\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_def.PBPoint3f} PBPoint3f\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            PBPoint3f.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a PBPoint3f message.\n             * @function verify\n             * @memberof op_def.PBPoint3f\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            PBPoint3f.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (typeof message.x !== "number")\n                    return "x: number expected";\n                if (typeof message.y !== "number")\n                    return "y: number expected";\n                if (message.z != null && message.hasOwnProperty("z"))\n                    if (typeof message.z !== "number")\n                        return "z: number expected";\n                return null;\n            };\n    \n            /**\n             * Creates a PBPoint3f message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_def.PBPoint3f\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_def.PBPoint3f} PBPoint3f\n             */\n            PBPoint3f.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_def.PBPoint3f)\n                    return object;\n                var message = new $root.op_def.PBPoint3f();\n                if (object.x != null)\n                    message.x = Number(object.x);\n                if (object.y != null)\n                    message.y = Number(object.y);\n                if (object.z != null)\n                    message.z = Number(object.z);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a PBPoint3f message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_def.PBPoint3f\n             * @static\n             * @param {op_def.PBPoint3f} message PBPoint3f\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            PBPoint3f.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.x = 0;\n                    object.y = 0;\n                    object.z = 0;\n                }\n                if (message.x != null && message.hasOwnProperty("x"))\n                    object.x = options.json && !isFinite(message.x) ? String(message.x) : message.x;\n                if (message.y != null && message.hasOwnProperty("y"))\n                    object.y = options.json && !isFinite(message.y) ? String(message.y) : message.y;\n                if (message.z != null && message.hasOwnProperty("z"))\n                    object.z = options.json && !isFinite(message.z) ? String(message.z) : message.z;\n                return object;\n            };\n    \n            /**\n             * Converts this PBPoint3f to JSON.\n             * @function toJSON\n             * @memberof op_def.PBPoint3f\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            PBPoint3f.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return PBPoint3f;\n        })();\n    \n        /**\n         * VoiceRoomStatus enum.\n         * @name op_def.VoiceRoomStatus\n         * @enum {string}\n         * @property {number} InVoiceRoom=1 InVoiceRoom value\n         * @property {number} OutsideVoiceRoom=2 OutsideVoiceRoom value\n         */\n        op_def.VoiceRoomStatus = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[1] = "InVoiceRoom"] = 1;\n            values[valuesById[2] = "OutsideVoiceRoom"] = 2;\n            return values;\n        })();\n    \n        /**\n         * GameStatus enum.\n         * @name op_def.GameStatus\n         * @enum {string}\n         * @property {number} Blur=1 Blur value\n         * @property {number} Focus=2 Focus value\n         */\n        op_def.GameStatus = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[1] = "Blur"] = 1;\n            values[valuesById[2] = "Focus"] = 2;\n            return values;\n        })();\n    \n        /**\n         * MouseEvent enum.\n         * @name op_def.MouseEvent\n         * @enum {string}\n         * @property {number} RightMouseDown=1 RightMouseDown value\n         * @property {number} RightMouseUp=2 RightMouseUp value\n         * @property {number} LeftMouseDown=3 LeftMouseDown value\n         * @property {number} LeftMouseUp=4 LeftMouseUp value\n         * @property {number} WheelDown=5 WheelDown value\n         * @property {number} WheelUp=6 WheelUp value\n         * @property {number} RightMouseHolding=7 RightMouseHolding value\n         * @property {number} LeftMouseHolding=8 LeftMouseHolding value\n         */\n        op_def.MouseEvent = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[1] = "RightMouseDown"] = 1;\n            values[valuesById[2] = "RightMouseUp"] = 2;\n            values[valuesById[3] = "LeftMouseDown"] = 3;\n            values[valuesById[4] = "LeftMouseUp"] = 4;\n            values[valuesById[5] = "WheelDown"] = 5;\n            values[valuesById[6] = "WheelUp"] = 6;\n            values[valuesById[7] = "RightMouseHolding"] = 7;\n            values[valuesById[8] = "LeftMouseHolding"] = 8;\n            return values;\n        })();\n    \n        /**\n         * KeyCode enum.\n         * @name op_def.KeyCode\n         * @enum {string}\n         * @property {number} Unknown=-1 Unknown value\n         * @property {number} A=65 A value\n         * @property {number} B=66 B value\n         * @property {number} C=67 C value\n         * @property {number} D=68 D value\n         * @property {number} E=69 E value\n         * @property {number} F=70 F value\n         * @property {number} G=71 G value\n         * @property {number} H=72 H value\n         * @property {number} I=73 I value\n         * @property {number} J=74 J value\n         * @property {number} K=75 K value\n         * @property {number} L=76 L value\n         * @property {number} M=77 M value\n         * @property {number} N=78 N value\n         * @property {number} O=79 O value\n         * @property {number} P=80 P value\n         * @property {number} Q=81 Q value\n         * @property {number} R=82 R value\n         * @property {number} S=83 S value\n         * @property {number} T=84 T value\n         * @property {number} U=85 U value\n         * @property {number} V=86 V value\n         * @property {number} W=87 W value\n         * @property {number} X=88 X value\n         * @property {number} Y=89 Y value\n         * @property {number} Z=90 Z value\n         * @property {number} ZERO=48 ZERO value\n         * @property {number} ONE=49 ONE value\n         * @property {number} TWO=50 TWO value\n         * @property {number} THREE=51 THREE value\n         * @property {number} FOUR=52 FOUR value\n         * @property {number} FIVE=53 FIVE value\n         * @property {number} SIX=54 SIX value\n         * @property {number} SEVEN=55 SEVEN value\n         * @property {number} EIGHT=56 EIGHT value\n         * @property {number} NINE=57 NINE value\n         * @property {number} NUMPAD_0=96 NUMPAD_0 value\n         * @property {number} NUMPAD_1=97 NUMPAD_1 value\n         * @property {number} NUMPAD_2=98 NUMPAD_2 value\n         * @property {number} NUMPAD_3=99 NUMPAD_3 value\n         * @property {number} NUMPAD_4=100 NUMPAD_4 value\n         * @property {number} NUMPAD_5=101 NUMPAD_5 value\n         * @property {number} NUMPAD_6=102 NUMPAD_6 value\n         * @property {number} NUMPAD_7=103 NUMPAD_7 value\n         * @property {number} NUMPAD_8=104 NUMPAD_8 value\n         * @property {number} NUMPAD_9=105 NUMPAD_9 value\n         * @property {number} NUMPAD_MULTIPLY=106 NUMPAD_MULTIPLY value\n         * @property {number} NUMPAD_ADD=107 NUMPAD_ADD value\n         * @property {number} NUMPAD_ENTER=108 NUMPAD_ENTER value\n         * @property {number} NUMPAD_SUBTRACT=109 NUMPAD_SUBTRACT value\n         * @property {number} NUMPAD_DECIMAL=110 NUMPAD_DECIMAL value\n         * @property {number} NUMPAD_DIVIDE=111 NUMPAD_DIVIDE value\n         * @property {number} F1=112 F1 value\n         * @property {number} F2=113 F2 value\n         * @property {number} F3=114 F3 value\n         * @property {number} F4=115 F4 value\n         * @property {number} F5=116 F5 value\n         * @property {number} F6=117 F6 value\n         * @property {number} F7=118 F7 value\n         * @property {number} F8=119 F8 value\n         * @property {number} F9=120 F9 value\n         * @property {number} F10=121 F10 value\n         * @property {number} F11=122 F11 value\n         * @property {number} F12=123 F12 value\n         * @property {number} F13=124 F13 value\n         * @property {number} F14=125 F14 value\n         * @property {number} F15=126 F15 value\n         * @property {number} COLON=186 COLON value\n         * @property {number} EQUALS=187 EQUALS value\n         * @property {number} COMMA=188 COMMA value\n         * @property {number} UNDERSCORE=189 UNDERSCORE value\n         * @property {number} PERIOD=190 PERIOD value\n         * @property {number} QUESTION_MARK=191 QUESTION_MARK value\n         * @property {number} TILDE=192 TILDE value\n         * @property {number} OPEN_BRACKET=219 OPEN_BRACKET value\n         * @property {number} BACKWARD_SLASH=220 BACKWARD_SLASH value\n         * @property {number} CLOSED_BRACKET=221 CLOSED_BRACKET value\n         * @property {number} QUOTES=222 QUOTES value\n         * @property {number} BACKSPACE=8 BACKSPACE value\n         * @property {number} TAB=9 TAB value\n         * @property {number} CLEAR=12 CLEAR value\n         * @property {number} ENTER=13 ENTER value\n         * @property {number} SHIFT=16 SHIFT value\n         * @property {number} CONTROL=17 CONTROL value\n         * @property {number} ALT=18 ALT value\n         * @property {number} CAPS_LOCK=20 CAPS_LOCK value\n         * @property {number} ESC=27 ESC value\n         * @property {number} SPACEBAR=32 SPACEBAR value\n         * @property {number} PAGE_UP=33 PAGE_UP value\n         * @property {number} PAGE_DOWN=34 PAGE_DOWN value\n         * @property {number} END=35 END value\n         * @property {number} HOME=36 HOME value\n         * @property {number} KB_LEFT=37 KB_LEFT value\n         * @property {number} KB_UP=38 KB_UP value\n         * @property {number} KB_RIGHT=39 KB_RIGHT value\n         * @property {number} KB_DOWN=40 KB_DOWN value\n         * @property {number} PLUS=43 PLUS value\n         * @property {number} MINUS=44 MINUS value\n         * @property {number} INSERT=45 INSERT value\n         * @property {number} DELETE=46 DELETE value\n         * @property {number} HELP=47 HELP value\n         * @property {number} NUM_LOCK=144 NUM_LOCK value\n         */\n        op_def.KeyCode = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[-1] = "Unknown"] = -1;\n            values[valuesById[65] = "A"] = 65;\n            values[valuesById[66] = "B"] = 66;\n            values[valuesById[67] = "C"] = 67;\n            values[valuesById[68] = "D"] = 68;\n            values[valuesById[69] = "E"] = 69;\n            values[valuesById[70] = "F"] = 70;\n            values[valuesById[71] = "G"] = 71;\n            values[valuesById[72] = "H"] = 72;\n            values[valuesById[73] = "I"] = 73;\n            values[valuesById[74] = "J"] = 74;\n            values[valuesById[75] = "K"] = 75;\n            values[valuesById[76] = "L"] = 76;\n            values[valuesById[77] = "M"] = 77;\n            values[valuesById[78] = "N"] = 78;\n            values[valuesById[79] = "O"] = 79;\n            values[valuesById[80] = "P"] = 80;\n            values[valuesById[81] = "Q"] = 81;\n            values[valuesById[82] = "R"] = 82;\n            values[valuesById[83] = "S"] = 83;\n            values[valuesById[84] = "T"] = 84;\n            values[valuesById[85] = "U"] = 85;\n            values[valuesById[86] = "V"] = 86;\n            values[valuesById[87] = "W"] = 87;\n            values[valuesById[88] = "X"] = 88;\n            values[valuesById[89] = "Y"] = 89;\n            values[valuesById[90] = "Z"] = 90;\n            values[valuesById[48] = "ZERO"] = 48;\n            values[valuesById[49] = "ONE"] = 49;\n            values[valuesById[50] = "TWO"] = 50;\n            values[valuesById[51] = "THREE"] = 51;\n            values[valuesById[52] = "FOUR"] = 52;\n            values[valuesById[53] = "FIVE"] = 53;\n            values[valuesById[54] = "SIX"] = 54;\n            values[valuesById[55] = "SEVEN"] = 55;\n            values[valuesById[56] = "EIGHT"] = 56;\n            values[valuesById[57] = "NINE"] = 57;\n            values[valuesById[96] = "NUMPAD_0"] = 96;\n            values[valuesById[97] = "NUMPAD_1"] = 97;\n            values[valuesById[98] = "NUMPAD_2"] = 98;\n            values[valuesById[99] = "NUMPAD_3"] = 99;\n            values[valuesById[100] = "NUMPAD_4"] = 100;\n            values[valuesById[101] = "NUMPAD_5"] = 101;\n            values[valuesById[102] = "NUMPAD_6"] = 102;\n            values[valuesById[103] = "NUMPAD_7"] = 103;\n            values[valuesById[104] = "NUMPAD_8"] = 104;\n            values[valuesById[105] = "NUMPAD_9"] = 105;\n            values[valuesById[106] = "NUMPAD_MULTIPLY"] = 106;\n            values[valuesById[107] = "NUMPAD_ADD"] = 107;\n            values[valuesById[108] = "NUMPAD_ENTER"] = 108;\n            values[valuesById[109] = "NUMPAD_SUBTRACT"] = 109;\n            values[valuesById[110] = "NUMPAD_DECIMAL"] = 110;\n            values[valuesById[111] = "NUMPAD_DIVIDE"] = 111;\n            values[valuesById[112] = "F1"] = 112;\n            values[valuesById[113] = "F2"] = 113;\n            values[valuesById[114] = "F3"] = 114;\n            values[valuesById[115] = "F4"] = 115;\n            values[valuesById[116] = "F5"] = 116;\n            values[valuesById[117] = "F6"] = 117;\n            values[valuesById[118] = "F7"] = 118;\n            values[valuesById[119] = "F8"] = 119;\n            values[valuesById[120] = "F9"] = 120;\n            values[valuesById[121] = "F10"] = 121;\n            values[valuesById[122] = "F11"] = 122;\n            values[valuesById[123] = "F12"] = 123;\n            values[valuesById[124] = "F13"] = 124;\n            values[valuesById[125] = "F14"] = 125;\n            values[valuesById[126] = "F15"] = 126;\n            values[valuesById[186] = "COLON"] = 186;\n            values[valuesById[187] = "EQUALS"] = 187;\n            values[valuesById[188] = "COMMA"] = 188;\n            values[valuesById[189] = "UNDERSCORE"] = 189;\n            values[valuesById[190] = "PERIOD"] = 190;\n            values[valuesById[191] = "QUESTION_MARK"] = 191;\n            values[valuesById[192] = "TILDE"] = 192;\n            values[valuesById[219] = "OPEN_BRACKET"] = 219;\n            values[valuesById[220] = "BACKWARD_SLASH"] = 220;\n            values[valuesById[221] = "CLOSED_BRACKET"] = 221;\n            values[valuesById[222] = "QUOTES"] = 222;\n            values[valuesById[8] = "BACKSPACE"] = 8;\n            values[valuesById[9] = "TAB"] = 9;\n            values[valuesById[12] = "CLEAR"] = 12;\n            values[valuesById[13] = "ENTER"] = 13;\n            values[valuesById[16] = "SHIFT"] = 16;\n            values[valuesById[17] = "CONTROL"] = 17;\n            values[valuesById[18] = "ALT"] = 18;\n            values[valuesById[20] = "CAPS_LOCK"] = 20;\n            values[valuesById[27] = "ESC"] = 27;\n            values[valuesById[32] = "SPACEBAR"] = 32;\n            values[valuesById[33] = "PAGE_UP"] = 33;\n            values[valuesById[34] = "PAGE_DOWN"] = 34;\n            values[valuesById[35] = "END"] = 35;\n            values[valuesById[36] = "HOME"] = 36;\n            values[valuesById[37] = "KB_LEFT"] = 37;\n            values[valuesById[38] = "KB_UP"] = 38;\n            values[valuesById[39] = "KB_RIGHT"] = 39;\n            values[valuesById[40] = "KB_DOWN"] = 40;\n            values[valuesById[43] = "PLUS"] = 43;\n            values[valuesById[44] = "MINUS"] = 44;\n            values[valuesById[45] = "INSERT"] = 45;\n            values[valuesById[46] = "DELETE"] = 46;\n            values[valuesById[47] = "HELP"] = 47;\n            values[valuesById[144] = "NUM_LOCK"] = 144;\n            return values;\n        })();\n    \n        /**\n         * TerrainAnimationType enum.\n         * @name op_def.TerrainAnimationType\n         * @enum {string}\n         * @property {number} DYNAMIC_TYPE=16 DYNAMIC_TYPE value\n         * @property {number} STATIC_TYPE=1 STATIC_TYPE value\n         */\n        op_def.TerrainAnimationType = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[16] = "DYNAMIC_TYPE"] = 16;\n            values[valuesById[1] = "STATIC_TYPE"] = 1;\n            return values;\n        })();\n    \n        /**\n         * NodeType enum.\n         * @name op_def.NodeType\n         * @enum {string}\n         * @property {number} UnknownNodeType=0 UnknownNodeType value\n         * @property {number} GameNodeType=1 GameNodeType value\n         * @property {number} SceneNodeType=2 SceneNodeType value\n         * @property {number} ElementNodeType=3 ElementNodeType value\n         * @property {number} TerrainNodeType=4 TerrainNodeType value\n         * @property {number} CharacterNodeType=5 CharacterNodeType value\n         * @property {number} LocationType=6 LocationType value\n         * @property {number} MovableType=7 MovableType value\n         * @property {number} DisplayType=8 DisplayType value\n         * @property {number} AttributeType=9 AttributeType value\n         * @property {number} FunctionType=10 FunctionType value\n         * @property {number} AnimationsType=11 AnimationsType value\n         * @property {number} EventType=12 EventType value\n         * @property {number} MapSizeType=13 MapSizeType value\n         * @property {number} UIType=14 UIType value\n         * @property {number} TimerType=15 TimerType value\n         * @property {number} PackageType=16 PackageType value\n         * @property {number} PackageItemType=17 PackageItemType value\n         * @property {number} AvatarType=18 AvatarType value\n         * @property {number} SettingsType=19 SettingsType value\n         * @property {number} CampType=20 CampType value\n         * @property {number} MutexType=21 MutexType value\n         * @property {number} AnimationDataType=22 AnimationDataType value\n         * @property {number} ForkType=23 ForkType value\n         * @property {number} ButtonType=24 ButtonType value\n         * @property {number} TextType=25 TextType value\n         * @property {number} AccessType=26 AccessType value\n         * @property {number} SpawnPointType=27 SpawnPointType value\n         * @property {number} CommodityType=28 CommodityType value\n         * @property {number} ShopType=29 ShopType value\n         */\n        op_def.NodeType = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = "UnknownNodeType"] = 0;\n            values[valuesById[1] = "GameNodeType"] = 1;\n            values[valuesById[2] = "SceneNodeType"] = 2;\n            values[valuesById[3] = "ElementNodeType"] = 3;\n            values[valuesById[4] = "TerrainNodeType"] = 4;\n            values[valuesById[5] = "CharacterNodeType"] = 5;\n            values[valuesById[6] = "LocationType"] = 6;\n            values[valuesById[7] = "MovableType"] = 7;\n            values[valuesById[8] = "DisplayType"] = 8;\n            values[valuesById[9] = "AttributeType"] = 9;\n            values[valuesById[10] = "FunctionType"] = 10;\n            values[valuesById[11] = "AnimationsType"] = 11;\n            values[valuesById[12] = "EventType"] = 12;\n            values[valuesById[13] = "MapSizeType"] = 13;\n            values[valuesById[14] = "UIType"] = 14;\n            values[valuesById[15] = "TimerType"] = 15;\n            values[valuesById[16] = "PackageType"] = 16;\n            values[valuesById[17] = "PackageItemType"] = 17;\n            values[valuesById[18] = "AvatarType"] = 18;\n            values[valuesById[19] = "SettingsType"] = 19;\n            values[valuesById[20] = "CampType"] = 20;\n            values[valuesById[21] = "MutexType"] = 21;\n            values[valuesById[22] = "AnimationDataType"] = 22;\n            values[valuesById[23] = "ForkType"] = 23;\n            values[valuesById[24] = "ButtonType"] = 24;\n            values[valuesById[25] = "TextType"] = 25;\n            values[valuesById[26] = "AccessType"] = 26;\n            values[valuesById[27] = "SpawnPointType"] = 27;\n            values[valuesById[28] = "CommodityType"] = 28;\n            values[valuesById[29] = "ShopType"] = 29;\n            return values;\n        })();\n    \n        /**\n         * GameEventDetailStatus enum.\n         * @name op_def.GameEventDetailStatus\n         * @enum {string}\n         * @property {number} onTouching=1 onTouching value\n         * @property {number} onKeyboardPress=2 onKeyboardPress value\n         */\n        op_def.GameEventDetailStatus = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[1] = "onTouching"] = 1;\n            values[valuesById[2] = "onKeyboardPress"] = 2;\n            return values;\n        })();\n    \n        /**\n         * AccessEnum enum.\n         * @name op_def.AccessEnum\n         * @enum {string}\n         * @property {number} Accessible=1 Accessible value\n         * @property {number} TakeOut=2 TakeOut value\n         * @property {number} Unlimited=65535 Unlimited value\n         */\n        op_def.AccessEnum = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[1] = "Accessible"] = 1;\n            values[valuesById[2] = "TakeOut"] = 2;\n            values[valuesById[65535] = "Unlimited"] = 65535;\n            return values;\n        })();\n    \n        /**\n         * GameEvent enum.\n         * @name op_def.GameEvent\n         * @enum {string}\n         * @property {number} UnknownEvent=0 UnknownEvent value\n         * @property {number} onGameCreateBefore=1 onGameCreateBefore value\n         * @property {number} onGameRun=2 onGameRun value\n         * @property {number} onGameDestroy=3 onGameDestroy value\n         * @property {number} onGameSelectCharacter=4 onGameSelectCharacter value\n         * @property {number} onGameEnter=5 onGameEnter value\n         * @property {number} onGameLeave=6 onGameLeave value\n         * @property {number} onGameRightMouseDown=7 onGameRightMouseDown value\n         * @property {number} onGameRightMouseUp=8 onGameRightMouseUp value\n         * @property {number} onGameLeftMouseDown=9 onGameLeftMouseDown value\n         * @property {number} onGameLeftMouseUp=10 onGameLeftMouseUp value\n         * @property {number} onGameMouseOut=11 onGameMouseOut value\n         * @property {number} onGameMouseOver=12 onGameMouseOver value\n         * @property {number} onSceneCreate=13 onSceneCreate value\n         * @property {number} onSceneRun=14 onSceneRun value\n         * @property {number} onSceneDestroy=15 onSceneDestroy value\n         * @property {number} onSceneEnter=16 onSceneEnter value\n         * @property {number} onSceneLeave=17 onSceneLeave value\n         * @property {number} onElementCreate=18 onElementCreate value\n         * @property {number} onElementDestroy=19 onElementDestroy value\n         * @property {number} onElementHit=20 onElementHit value\n         * @property {number} onElementMove=21 onElementMove value\n         * @property {number} onElementAttributeChange=22 onElementAttributeChange value\n         * @property {number} onElementLeave=23 onElementLeave value\n         * @property {number} onElementStop=24 onElementStop value\n         * @property {number} onElementActive=38 onElementActive value\n         * @property {number} onCharacterHit=25 onCharacterHit value\n         * @property {number} onCharacterAttributeChange=26 onCharacterAttributeChange value\n         * @property {number} onCharacterMove=27 onCharacterMove value\n         * @property {number} onCharacterStop=28 onCharacterStop value\n         * @property {number} onTerrainDestroy=29 onTerrainDestroy value\n         * @property {number} onTerrainOverFunc=30 onTerrainOverFunc value\n         * @property {number} onTerrainLeaveFunc=31 onTerrainLeaveFunc value\n         * @property {number} onTerrainSchedule=32 onTerrainSchedule value\n         * @property {number} onTerrainCreate=33 onTerrainCreate value\n         * @property {number} onUiClick=34 onUiClick value\n         * @property {number} onItemUse=35 onItemUse value\n         * @property {number} onPackageItemMove=36 onPackageItemMove value\n         * @property {number} onTimerUpdate=37 onTimerUpdate value\n         * @property {number} onGameKeyboardDown=39 onGameKeyboardDown value\n         * @property {number} onGameKeyboardUp=40 onGameKeyboardUp value\n         * @property {number} onCharacterLeave=41 onCharacterLeave value\n         * @property {number} onChat=42 onChat value\n         * @property {number} onGameCreateAfter=43 onGameCreateAfter value\n         * @property {number} onItemAdd=44 onItemAdd value\n         * @property {number} onItemRemove=45 onItemRemove value\n         * @property {number} onItemAttributeChange=46 onItemAttributeChange value\n         */\n        op_def.GameEvent = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = "UnknownEvent"] = 0;\n            values[valuesById[1] = "onGameCreateBefore"] = 1;\n            values[valuesById[2] = "onGameRun"] = 2;\n            values[valuesById[3] = "onGameDestroy"] = 3;\n            values[valuesById[4] = "onGameSelectCharacter"] = 4;\n            values[valuesById[5] = "onGameEnter"] = 5;\n            values[valuesById[6] = "onGameLeave"] = 6;\n            values[valuesById[7] = "onGameRightMouseDown"] = 7;\n            values[valuesById[8] = "onGameRightMouseUp"] = 8;\n            values[valuesById[9] = "onGameLeftMouseDown"] = 9;\n            values[valuesById[10] = "onGameLeftMouseUp"] = 10;\n            values[valuesById[11] = "onGameMouseOut"] = 11;\n            values[valuesById[12] = "onGameMouseOver"] = 12;\n            values[valuesById[13] = "onSceneCreate"] = 13;\n            values[valuesById[14] = "onSceneRun"] = 14;\n            values[valuesById[15] = "onSceneDestroy"] = 15;\n            values[valuesById[16] = "onSceneEnter"] = 16;\n            values[valuesById[17] = "onSceneLeave"] = 17;\n            values[valuesById[18] = "onElementCreate"] = 18;\n            values[valuesById[19] = "onElementDestroy"] = 19;\n            values[valuesById[20] = "onElementHit"] = 20;\n            values[valuesById[21] = "onElementMove"] = 21;\n            values[valuesById[22] = "onElementAttributeChange"] = 22;\n            values[valuesById[23] = "onElementLeave"] = 23;\n            values[valuesById[24] = "onElementStop"] = 24;\n            values[valuesById[38] = "onElementActive"] = 38;\n            values[valuesById[25] = "onCharacterHit"] = 25;\n            values[valuesById[26] = "onCharacterAttributeChange"] = 26;\n            values[valuesById[27] = "onCharacterMove"] = 27;\n            values[valuesById[28] = "onCharacterStop"] = 28;\n            values[valuesById[29] = "onTerrainDestroy"] = 29;\n            values[valuesById[30] = "onTerrainOverFunc"] = 30;\n            values[valuesById[31] = "onTerrainLeaveFunc"] = 31;\n            values[valuesById[32] = "onTerrainSchedule"] = 32;\n            values[valuesById[33] = "onTerrainCreate"] = 33;\n            values[valuesById[34] = "onUiClick"] = 34;\n            values[valuesById[35] = "onItemUse"] = 35;\n            values[valuesById[36] = "onPackageItemMove"] = 36;\n            values[valuesById[37] = "onTimerUpdate"] = 37;\n            values[valuesById[39] = "onGameKeyboardDown"] = 39;\n            values[valuesById[40] = "onGameKeyboardUp"] = 40;\n            values[valuesById[41] = "onCharacterLeave"] = 41;\n            values[valuesById[42] = "onChat"] = 42;\n            values[valuesById[43] = "onGameCreateAfter"] = 43;\n            values[valuesById[44] = "onItemAdd"] = 44;\n            values[valuesById[45] = "onItemRemove"] = 45;\n            values[valuesById[46] = "onItemAttributeChange"] = 46;\n            return values;\n        })();\n    \n        /**\n         * ServerStatus enum.\n         * @name op_def.ServerStatus\n         * @enum {string}\n         * @property {number} SERVER_STARTING=0 SERVER_STARTING value\n         * @property {number} SERVER_ALIVE=1 SERVER_ALIVE value\n         * @property {number} SERVER_OFFLINE=2 SERVER_OFFLINE value\n         * @property {number} SERVER_WAITFORSHUTDOWN=3 SERVER_WAITFORSHUTDOWN value\n         * @property {number} SERVER_REJECT_INIT=4 SERVER_REJECT_INIT value\n         * @property {number} SERVER_FORCE_SHUTDOWN=5 SERVER_FORCE_SHUTDOWN value\n         */\n        op_def.ServerStatus = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = "SERVER_STARTING"] = 0;\n            values[valuesById[1] = "SERVER_ALIVE"] = 1;\n            values[valuesById[2] = "SERVER_OFFLINE"] = 2;\n            values[valuesById[3] = "SERVER_WAITFORSHUTDOWN"] = 3;\n            values[valuesById[4] = "SERVER_REJECT_INIT"] = 4;\n            values[valuesById[5] = "SERVER_FORCE_SHUTDOWN"] = 5;\n            return values;\n        })();\n    \n        op_def.ConnectionCount = (function() {\n    \n            /**\n             * Properties of a ConnectionCount.\n             * @memberof op_def\n             * @interface IConnectionCount\n             * @property {number} id ConnectionCount id\n             * @property {number} connectionCount ConnectionCount connectionCount\n             */\n    \n            /**\n             * Constructs a new ConnectionCount.\n             * @memberof op_def\n             * @classdesc Represents a ConnectionCount.\n             * @implements IConnectionCount\n             * @constructor\n             * @param {op_def.IConnectionCount=} [properties] Properties to set\n             */\n            function ConnectionCount(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * ConnectionCount id.\n             * @member {number} id\n             * @memberof op_def.ConnectionCount\n             * @instance\n             */\n            ConnectionCount.prototype.id = 0;\n    \n            /**\n             * ConnectionCount connectionCount.\n             * @member {number} connectionCount\n             * @memberof op_def.ConnectionCount\n             * @instance\n             */\n            ConnectionCount.prototype.connectionCount = 0;\n    \n            /**\n             * Creates a new ConnectionCount instance using the specified properties.\n             * @function create\n             * @memberof op_def.ConnectionCount\n             * @static\n             * @param {op_def.IConnectionCount=} [properties] Properties to set\n             * @returns {op_def.ConnectionCount} ConnectionCount instance\n             */\n            ConnectionCount.create = function create(properties) {\n                return new ConnectionCount(properties);\n            };\n    \n            /**\n             * Encodes the specified ConnectionCount message. Does not implicitly {@link op_def.ConnectionCount.verify|verify} messages.\n             * @function encode\n             * @memberof op_def.ConnectionCount\n             * @static\n             * @param {op_def.IConnectionCount} message ConnectionCount message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ConnectionCount.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.id);\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.connectionCount);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified ConnectionCount message, length delimited. Does not implicitly {@link op_def.ConnectionCount.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_def.ConnectionCount\n             * @static\n             * @param {op_def.IConnectionCount} message ConnectionCount message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ConnectionCount.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a ConnectionCount message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_def.ConnectionCount\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_def.ConnectionCount} ConnectionCount\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ConnectionCount.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_def.ConnectionCount();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.id = reader.int32();\n                        break;\n                    case 2:\n                        message.connectionCount = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("id"))\n                    throw $util.ProtocolError("missing required \'id\'", { instance: message });\n                if (!message.hasOwnProperty("connectionCount"))\n                    throw $util.ProtocolError("missing required \'connectionCount\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a ConnectionCount message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_def.ConnectionCount\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_def.ConnectionCount} ConnectionCount\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ConnectionCount.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a ConnectionCount message.\n             * @function verify\n             * @memberof op_def.ConnectionCount\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            ConnectionCount.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.id))\n                    return "id: integer expected";\n                if (!$util.isInteger(message.connectionCount))\n                    return "connectionCount: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a ConnectionCount message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_def.ConnectionCount\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_def.ConnectionCount} ConnectionCount\n             */\n            ConnectionCount.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_def.ConnectionCount)\n                    return object;\n                var message = new $root.op_def.ConnectionCount();\n                if (object.id != null)\n                    message.id = object.id | 0;\n                if (object.connectionCount != null)\n                    message.connectionCount = object.connectionCount | 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a ConnectionCount message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_def.ConnectionCount\n             * @static\n             * @param {op_def.ConnectionCount} message ConnectionCount\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            ConnectionCount.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.id = 0;\n                    object.connectionCount = 0;\n                }\n                if (message.id != null && message.hasOwnProperty("id"))\n                    object.id = message.id;\n                if (message.connectionCount != null && message.hasOwnProperty("connectionCount"))\n                    object.connectionCount = message.connectionCount;\n                return object;\n            };\n    \n            /**\n             * Converts this ConnectionCount to JSON.\n             * @function toJSON\n             * @memberof op_def.ConnectionCount\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            ConnectionCount.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return ConnectionCount;\n        })();\n    \n        op_def.BadgeCard = (function() {\n    \n            /**\n             * Properties of a BadgeCard.\n             * @memberof op_def\n             * @interface IBadgeCard\n             * @property {string} name BadgeCard name\n             * @property {string} thumbnail BadgeCard thumbnail\n             * @property {number|null} [validDate] BadgeCard validDate\n             */\n    \n            /**\n             * Constructs a new BadgeCard.\n             * @memberof op_def\n             * @classdesc Represents a BadgeCard.\n             * @implements IBadgeCard\n             * @constructor\n             * @param {op_def.IBadgeCard=} [properties] Properties to set\n             */\n            function BadgeCard(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * BadgeCard name.\n             * @member {string} name\n             * @memberof op_def.BadgeCard\n             * @instance\n             */\n            BadgeCard.prototype.name = "";\n    \n            /**\n             * BadgeCard thumbnail.\n             * @member {string} thumbnail\n             * @memberof op_def.BadgeCard\n             * @instance\n             */\n            BadgeCard.prototype.thumbnail = "";\n    \n            /**\n             * BadgeCard validDate.\n             * @member {number} validDate\n             * @memberof op_def.BadgeCard\n             * @instance\n             */\n            BadgeCard.prototype.validDate = 0;\n    \n            /**\n             * Creates a new BadgeCard instance using the specified properties.\n             * @function create\n             * @memberof op_def.BadgeCard\n             * @static\n             * @param {op_def.IBadgeCard=} [properties] Properties to set\n             * @returns {op_def.BadgeCard} BadgeCard instance\n             */\n            BadgeCard.create = function create(properties) {\n                return new BadgeCard(properties);\n            };\n    \n            /**\n             * Encodes the specified BadgeCard message. Does not implicitly {@link op_def.BadgeCard.verify|verify} messages.\n             * @function encode\n             * @memberof op_def.BadgeCard\n             * @static\n             * @param {op_def.IBadgeCard} message BadgeCard message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            BadgeCard.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.thumbnail);\n                if (message.validDate != null && message.hasOwnProperty("validDate"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.validDate);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified BadgeCard message, length delimited. Does not implicitly {@link op_def.BadgeCard.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_def.BadgeCard\n             * @static\n             * @param {op_def.IBadgeCard} message BadgeCard message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            BadgeCard.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a BadgeCard message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_def.BadgeCard\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_def.BadgeCard} BadgeCard\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            BadgeCard.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_def.BadgeCard();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.name = reader.string();\n                        break;\n                    case 2:\n                        message.thumbnail = reader.string();\n                        break;\n                    case 3:\n                        message.validDate = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("name"))\n                    throw $util.ProtocolError("missing required \'name\'", { instance: message });\n                if (!message.hasOwnProperty("thumbnail"))\n                    throw $util.ProtocolError("missing required \'thumbnail\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a BadgeCard message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_def.BadgeCard\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_def.BadgeCard} BadgeCard\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            BadgeCard.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a BadgeCard message.\n             * @function verify\n             * @memberof op_def.BadgeCard\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            BadgeCard.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.name))\n                    return "name: string expected";\n                if (!$util.isString(message.thumbnail))\n                    return "thumbnail: string expected";\n                if (message.validDate != null && message.hasOwnProperty("validDate"))\n                    if (!$util.isInteger(message.validDate))\n                        return "validDate: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a BadgeCard message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_def.BadgeCard\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_def.BadgeCard} BadgeCard\n             */\n            BadgeCard.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_def.BadgeCard)\n                    return object;\n                var message = new $root.op_def.BadgeCard();\n                if (object.name != null)\n                    message.name = String(object.name);\n                if (object.thumbnail != null)\n                    message.thumbnail = String(object.thumbnail);\n                if (object.validDate != null)\n                    message.validDate = object.validDate | 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a BadgeCard message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_def.BadgeCard\n             * @static\n             * @param {op_def.BadgeCard} message BadgeCard\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            BadgeCard.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.name = "";\n                    object.thumbnail = "";\n                    object.validDate = 0;\n                }\n                if (message.name != null && message.hasOwnProperty("name"))\n                    object.name = message.name;\n                if (message.thumbnail != null && message.hasOwnProperty("thumbnail"))\n                    object.thumbnail = message.thumbnail;\n                if (message.validDate != null && message.hasOwnProperty("validDate"))\n                    object.validDate = message.validDate;\n                return object;\n            };\n    \n            /**\n             * Converts this BadgeCard to JSON.\n             * @function toJSON\n             * @memberof op_def.BadgeCard\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            BadgeCard.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return BadgeCard;\n        })();\n    \n        op_def.MovingKeys = (function() {\n    \n            /**\n             * Properties of a MovingKeys.\n             * @memberof op_def\n             * @interface IMovingKeys\n             * @property {Array.<op_def.KeyCode>|null} [upKeys] MovingKeys upKeys\n             * @property {Array.<op_def.KeyCode>|null} [downKeys] MovingKeys downKeys\n             * @property {Array.<op_def.KeyCode>|null} [rightKeys] MovingKeys rightKeys\n             * @property {Array.<op_def.KeyCode>|null} [leftKeys] MovingKeys leftKeys\n             */\n    \n            /**\n             * Constructs a new MovingKeys.\n             * @memberof op_def\n             * @classdesc Represents a MovingKeys.\n             * @implements IMovingKeys\n             * @constructor\n             * @param {op_def.IMovingKeys=} [properties] Properties to set\n             */\n            function MovingKeys(properties) {\n                this.upKeys = [];\n                this.downKeys = [];\n                this.rightKeys = [];\n                this.leftKeys = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * MovingKeys upKeys.\n             * @member {Array.<op_def.KeyCode>} upKeys\n             * @memberof op_def.MovingKeys\n             * @instance\n             */\n            MovingKeys.prototype.upKeys = $util.emptyArray;\n    \n            /**\n             * MovingKeys downKeys.\n             * @member {Array.<op_def.KeyCode>} downKeys\n             * @memberof op_def.MovingKeys\n             * @instance\n             */\n            MovingKeys.prototype.downKeys = $util.emptyArray;\n    \n            /**\n             * MovingKeys rightKeys.\n             * @member {Array.<op_def.KeyCode>} rightKeys\n             * @memberof op_def.MovingKeys\n             * @instance\n             */\n            MovingKeys.prototype.rightKeys = $util.emptyArray;\n    \n            /**\n             * MovingKeys leftKeys.\n             * @member {Array.<op_def.KeyCode>} leftKeys\n             * @memberof op_def.MovingKeys\n             * @instance\n             */\n            MovingKeys.prototype.leftKeys = $util.emptyArray;\n    \n            /**\n             * Creates a new MovingKeys instance using the specified properties.\n             * @function create\n             * @memberof op_def.MovingKeys\n             * @static\n             * @param {op_def.IMovingKeys=} [properties] Properties to set\n             * @returns {op_def.MovingKeys} MovingKeys instance\n             */\n            MovingKeys.create = function create(properties) {\n                return new MovingKeys(properties);\n            };\n    \n            /**\n             * Encodes the specified MovingKeys message. Does not implicitly {@link op_def.MovingKeys.verify|verify} messages.\n             * @function encode\n             * @memberof op_def.MovingKeys\n             * @static\n             * @param {op_def.IMovingKeys} message MovingKeys message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            MovingKeys.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.upKeys != null && message.upKeys.length)\n                    for (var i = 0; i < message.upKeys.length; ++i)\n                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.upKeys[i]);\n                if (message.downKeys != null && message.downKeys.length)\n                    for (var i = 0; i < message.downKeys.length; ++i)\n                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.downKeys[i]);\n                if (message.rightKeys != null && message.rightKeys.length)\n                    for (var i = 0; i < message.rightKeys.length; ++i)\n                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.rightKeys[i]);\n                if (message.leftKeys != null && message.leftKeys.length)\n                    for (var i = 0; i < message.leftKeys.length; ++i)\n                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.leftKeys[i]);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified MovingKeys message, length delimited. Does not implicitly {@link op_def.MovingKeys.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_def.MovingKeys\n             * @static\n             * @param {op_def.IMovingKeys} message MovingKeys message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            MovingKeys.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a MovingKeys message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_def.MovingKeys\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_def.MovingKeys} MovingKeys\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            MovingKeys.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_def.MovingKeys();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.upKeys && message.upKeys.length))\n                            message.upKeys = [];\n                        if ((tag & 7) === 2) {\n                            var end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2)\n                                message.upKeys.push(reader.int32());\n                        } else\n                            message.upKeys.push(reader.int32());\n                        break;\n                    case 2:\n                        if (!(message.downKeys && message.downKeys.length))\n                            message.downKeys = [];\n                        if ((tag & 7) === 2) {\n                            var end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2)\n                                message.downKeys.push(reader.int32());\n                        } else\n                            message.downKeys.push(reader.int32());\n                        break;\n                    case 3:\n                        if (!(message.rightKeys && message.rightKeys.length))\n                            message.rightKeys = [];\n                        if ((tag & 7) === 2) {\n                            var end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2)\n                                message.rightKeys.push(reader.int32());\n                        } else\n                            message.rightKeys.push(reader.int32());\n                        break;\n                    case 4:\n                        if (!(message.leftKeys && message.leftKeys.length))\n                            message.leftKeys = [];\n                        if ((tag & 7) === 2) {\n                            var end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2)\n                                message.leftKeys.push(reader.int32());\n                        } else\n                            message.leftKeys.push(reader.int32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a MovingKeys message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_def.MovingKeys\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_def.MovingKeys} MovingKeys\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            MovingKeys.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a MovingKeys message.\n             * @function verify\n             * @memberof op_def.MovingKeys\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            MovingKeys.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.upKeys != null && message.hasOwnProperty("upKeys")) {\n                    if (!Array.isArray(message.upKeys))\n                        return "upKeys: array expected";\n                    for (var i = 0; i < message.upKeys.length; ++i)\n                        switch (message.upKeys[i]) {\n                        default:\n                            return "upKeys: enum value[] expected";\n                        case -1:\n                        case 65:\n                        case 66:\n                        case 67:\n                        case 68:\n                        case 69:\n                        case 70:\n                        case 71:\n                        case 72:\n                        case 73:\n                        case 74:\n                        case 75:\n                        case 76:\n                        case 77:\n                        case 78:\n                        case 79:\n                        case 80:\n                        case 81:\n                        case 82:\n                        case 83:\n                        case 84:\n                        case 85:\n                        case 86:\n                        case 87:\n                        case 88:\n                        case 89:\n                        case 90:\n                        case 48:\n                        case 49:\n                        case 50:\n                        case 51:\n                        case 52:\n                        case 53:\n                        case 54:\n                        case 55:\n                        case 56:\n                        case 57:\n                        case 96:\n                        case 97:\n                        case 98:\n                        case 99:\n                        case 100:\n                        case 101:\n                        case 102:\n                        case 103:\n                        case 104:\n                        case 105:\n                        case 106:\n                        case 107:\n                        case 108:\n                        case 109:\n                        case 110:\n                        case 111:\n                        case 112:\n                        case 113:\n                        case 114:\n                        case 115:\n                        case 116:\n                        case 117:\n                        case 118:\n                        case 119:\n                        case 120:\n                        case 121:\n                        case 122:\n                        case 123:\n                        case 124:\n                        case 125:\n                        case 126:\n                        case 186:\n                        case 187:\n                        case 188:\n                        case 189:\n                        case 190:\n                        case 191:\n                        case 192:\n                        case 219:\n                        case 220:\n                        case 221:\n                        case 222:\n                        case 8:\n                        case 9:\n                        case 12:\n                        case 13:\n                        case 16:\n                        case 17:\n                        case 18:\n                        case 20:\n                        case 27:\n                        case 32:\n                        case 33:\n                        case 34:\n                        case 35:\n                        case 36:\n                        case 37:\n                        case 38:\n                        case 39:\n                        case 40:\n                        case 43:\n                        case 44:\n                        case 45:\n                        case 46:\n                        case 47:\n                        case 144:\n                            break;\n                        }\n                }\n                if (message.downKeys != null && message.hasOwnProperty("downKeys")) {\n                    if (!Array.isArray(message.downKeys))\n                        return "downKeys: array expected";\n                    for (var i = 0; i < message.downKeys.length; ++i)\n                        switch (message.downKeys[i]) {\n                        default:\n                            return "downKeys: enum value[] expected";\n                        case -1:\n                        case 65:\n                        case 66:\n                        case 67:\n                        case 68:\n                        case 69:\n                        case 70:\n                        case 71:\n                        case 72:\n                        case 73:\n                        case 74:\n                        case 75:\n                        case 76:\n                        case 77:\n                        case 78:\n                        case 79:\n                        case 80:\n                        case 81:\n                        case 82:\n                        case 83:\n                        case 84:\n                        case 85:\n                        case 86:\n                        case 87:\n                        case 88:\n                        case 89:\n                        case 90:\n                        case 48:\n                        case 49:\n                        case 50:\n                        case 51:\n                        case 52:\n                        case 53:\n                        case 54:\n                        case 55:\n                        case 56:\n                        case 57:\n                        case 96:\n                        case 97:\n                        case 98:\n                        case 99:\n                        case 100:\n                        case 101:\n                        case 102:\n                        case 103:\n                        case 104:\n                        case 105:\n                        case 106:\n                        case 107:\n                        case 108:\n                        case 109:\n                        case 110:\n                        case 111:\n                        case 112:\n                        case 113:\n                        case 114:\n                        case 115:\n                        case 116:\n                        case 117:\n                        case 118:\n                        case 119:\n                        case 120:\n                        case 121:\n                        case 122:\n                        case 123:\n                        case 124:\n                        case 125:\n                        case 126:\n                        case 186:\n                        case 187:\n                        case 188:\n                        case 189:\n                        case 190:\n                        case 191:\n                        case 192:\n                        case 219:\n                        case 220:\n                        case 221:\n                        case 222:\n                        case 8:\n                        case 9:\n                        case 12:\n                        case 13:\n                        case 16:\n                        case 17:\n                        case 18:\n                        case 20:\n                        case 27:\n                        case 32:\n                        case 33:\n                        case 34:\n                        case 35:\n                        case 36:\n                        case 37:\n                        case 38:\n                        case 39:\n                        case 40:\n                        case 43:\n                        case 44:\n                        case 45:\n                        case 46:\n                        case 47:\n                        case 144:\n                            break;\n                        }\n                }\n                if (message.rightKeys != null && message.hasOwnProperty("rightKeys")) {\n                    if (!Array.isArray(message.rightKeys))\n                        return "rightKeys: array expected";\n                    for (var i = 0; i < message.rightKeys.length; ++i)\n                        switch (message.rightKeys[i]) {\n                        default:\n                            return "rightKeys: enum value[] expected";\n                        case -1:\n                        case 65:\n                        case 66:\n                        case 67:\n                        case 68:\n                        case 69:\n                        case 70:\n                        case 71:\n                        case 72:\n                        case 73:\n                        case 74:\n                        case 75:\n                        case 76:\n                        case 77:\n                        case 78:\n                        case 79:\n                        case 80:\n                        case 81:\n                        case 82:\n                        case 83:\n                        case 84:\n                        case 85:\n                        case 86:\n                        case 87:\n                        case 88:\n                        case 89:\n                        case 90:\n                        case 48:\n                        case 49:\n                        case 50:\n                        case 51:\n                        case 52:\n                        case 53:\n                        case 54:\n                        case 55:\n                        case 56:\n                        case 57:\n                        case 96:\n                        case 97:\n                        case 98:\n                        case 99:\n                        case 100:\n                        case 101:\n                        case 102:\n                        case 103:\n                        case 104:\n                        case 105:\n                        case 106:\n                        case 107:\n                        case 108:\n                        case 109:\n                        case 110:\n                        case 111:\n                        case 112:\n                        case 113:\n                        case 114:\n                        case 115:\n                        case 116:\n                        case 117:\n                        case 118:\n                        case 119:\n                        case 120:\n                        case 121:\n                        case 122:\n                        case 123:\n                        case 124:\n                        case 125:\n                        case 126:\n                        case 186:\n                        case 187:\n                        case 188:\n                        case 189:\n                        case 190:\n                        case 191:\n                        case 192:\n                        case 219:\n                        case 220:\n                        case 221:\n                        case 222:\n                        case 8:\n                        case 9:\n                        case 12:\n                        case 13:\n                        case 16:\n                        case 17:\n                        case 18:\n                        case 20:\n                        case 27:\n                        case 32:\n                        case 33:\n                        case 34:\n                        case 35:\n                        case 36:\n                        case 37:\n                        case 38:\n                        case 39:\n                        case 40:\n                        case 43:\n                        case 44:\n                        case 45:\n                        case 46:\n                        case 47:\n                        case 144:\n                            break;\n                        }\n                }\n                if (message.leftKeys != null && message.hasOwnProperty("leftKeys")) {\n                    if (!Array.isArray(message.leftKeys))\n                        return "leftKeys: array expected";\n                    for (var i = 0; i < message.leftKeys.length; ++i)\n                        switch (message.leftKeys[i]) {\n                        default:\n                            return "leftKeys: enum value[] expected";\n                        case -1:\n                        case 65:\n                        case 66:\n                        case 67:\n                        case 68:\n                        case 69:\n                        case 70:\n                        case 71:\n                        case 72:\n                        case 73:\n                        case 74:\n                        case 75:\n                        case 76:\n                        case 77:\n                        case 78:\n                        case 79:\n                        case 80:\n                        case 81:\n                        case 82:\n                        case 83:\n                        case 84:\n                        case 85:\n                        case 86:\n                        case 87:\n                        case 88:\n                        case 89:\n                        case 90:\n                        case 48:\n                        case 49:\n                        case 50:\n                        case 51:\n                        case 52:\n                        case 53:\n                        case 54:\n                        case 55:\n                        case 56:\n                        case 57:\n                        case 96:\n                        case 97:\n                        case 98:\n                        case 99:\n                        case 100:\n                        case 101:\n                        case 102:\n                        case 103:\n                        case 104:\n                        case 105:\n                        case 106:\n                        case 107:\n                        case 108:\n                        case 109:\n                        case 110:\n                        case 111:\n                        case 112:\n                        case 113:\n                        case 114:\n                        case 115:\n                        case 116:\n                        case 117:\n                        case 118:\n                        case 119:\n                        case 120:\n                        case 121:\n                        case 122:\n                        case 123:\n                        case 124:\n                        case 125:\n                        case 126:\n                        case 186:\n                        case 187:\n                        case 188:\n                        case 189:\n                        case 190:\n                        case 191:\n                        case 192:\n                        case 219:\n                        case 220:\n                        case 221:\n                        case 222:\n                        case 8:\n                        case 9:\n                        case 12:\n                        case 13:\n                        case 16:\n                        case 17:\n                        case 18:\n                        case 20:\n                        case 27:\n                        case 32:\n                        case 33:\n                        case 34:\n                        case 35:\n                        case 36:\n                        case 37:\n                        case 38:\n                        case 39:\n                        case 40:\n                        case 43:\n                        case 44:\n                        case 45:\n                        case 46:\n                        case 47:\n                        case 144:\n                            break;\n                        }\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a MovingKeys message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_def.MovingKeys\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_def.MovingKeys} MovingKeys\n             */\n            MovingKeys.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_def.MovingKeys)\n                    return object;\n                var message = new $root.op_def.MovingKeys();\n                if (object.upKeys) {\n                    if (!Array.isArray(object.upKeys))\n                        throw TypeError(".op_def.MovingKeys.upKeys: array expected");\n                    message.upKeys = [];\n                    for (var i = 0; i < object.upKeys.length; ++i)\n                        switch (object.upKeys[i]) {\n                        default:\n                        case "Unknown":\n                        case -1:\n                            message.upKeys[i] = -1;\n                            break;\n                        case "A":\n                        case 65:\n                            message.upKeys[i] = 65;\n                            break;\n                        case "B":\n                        case 66:\n                            message.upKeys[i] = 66;\n                            break;\n                        case "C":\n                        case 67:\n                            message.upKeys[i] = 67;\n                            break;\n                        case "D":\n                        case 68:\n                            message.upKeys[i] = 68;\n                            break;\n                        case "E":\n                        case 69:\n                            message.upKeys[i] = 69;\n                            break;\n                        case "F":\n                        case 70:\n                            message.upKeys[i] = 70;\n                            break;\n                        case "G":\n                        case 71:\n                            message.upKeys[i] = 71;\n                            break;\n                        case "H":\n                        case 72:\n                            message.upKeys[i] = 72;\n                            break;\n                        case "I":\n                        case 73:\n                            message.upKeys[i] = 73;\n                            break;\n                        case "J":\n                        case 74:\n                            message.upKeys[i] = 74;\n                            break;\n                        case "K":\n                        case 75:\n                            message.upKeys[i] = 75;\n                            break;\n                        case "L":\n                        case 76:\n                            message.upKeys[i] = 76;\n                            break;\n                        case "M":\n                        case 77:\n                            message.upKeys[i] = 77;\n                            break;\n                        case "N":\n                        case 78:\n                            message.upKeys[i] = 78;\n                            break;\n                        case "O":\n                        case 79:\n                            message.upKeys[i] = 79;\n                            break;\n                        case "P":\n                        case 80:\n                            message.upKeys[i] = 80;\n                            break;\n                        case "Q":\n                        case 81:\n                            message.upKeys[i] = 81;\n                            break;\n                        case "R":\n                        case 82:\n                            message.upKeys[i] = 82;\n                            break;\n                        case "S":\n                        case 83:\n                            message.upKeys[i] = 83;\n                            break;\n                        case "T":\n                        case 84:\n                            message.upKeys[i] = 84;\n                            break;\n                        case "U":\n                        case 85:\n                            message.upKeys[i] = 85;\n                            break;\n                        case "V":\n                        case 86:\n                            message.upKeys[i] = 86;\n                            break;\n                        case "W":\n                        case 87:\n                            message.upKeys[i] = 87;\n                            break;\n                        case "X":\n                        case 88:\n                            message.upKeys[i] = 88;\n                            break;\n                        case "Y":\n                        case 89:\n                            message.upKeys[i] = 89;\n                            break;\n                        case "Z":\n                        case 90:\n                            message.upKeys[i] = 90;\n                            break;\n                        case "ZERO":\n                        case 48:\n                            message.upKeys[i] = 48;\n                            break;\n                        case "ONE":\n                        case 49:\n                            message.upKeys[i] = 49;\n                            break;\n                        case "TWO":\n                        case 50:\n                            message.upKeys[i] = 50;\n                            break;\n                        case "THREE":\n                        case 51:\n                            message.upKeys[i] = 51;\n                            break;\n                        case "FOUR":\n                        case 52:\n                            message.upKeys[i] = 52;\n                            break;\n                        case "FIVE":\n                        case 53:\n                            message.upKeys[i] = 53;\n                            break;\n                        case "SIX":\n                        case 54:\n                            message.upKeys[i] = 54;\n                            break;\n                        case "SEVEN":\n                        case 55:\n                            message.upKeys[i] = 55;\n                            break;\n                        case "EIGHT":\n                        case 56:\n                            message.upKeys[i] = 56;\n                            break;\n                        case "NINE":\n                        case 57:\n                            message.upKeys[i] = 57;\n                            break;\n                        case "NUMPAD_0":\n                        case 96:\n                            message.upKeys[i] = 96;\n                            break;\n                        case "NUMPAD_1":\n                        case 97:\n                            message.upKeys[i] = 97;\n                            break;\n                        case "NUMPAD_2":\n                        case 98:\n                            message.upKeys[i] = 98;\n                            break;\n                        case "NUMPAD_3":\n                        case 99:\n                            message.upKeys[i] = 99;\n                            break;\n                        case "NUMPAD_4":\n                        case 100:\n                            message.upKeys[i] = 100;\n                            break;\n                        case "NUMPAD_5":\n                        case 101:\n                            message.upKeys[i] = 101;\n                            break;\n                        case "NUMPAD_6":\n                        case 102:\n                            message.upKeys[i] = 102;\n                            break;\n                        case "NUMPAD_7":\n                        case 103:\n                            message.upKeys[i] = 103;\n                            break;\n                        case "NUMPAD_8":\n                        case 104:\n                            message.upKeys[i] = 104;\n                            break;\n                        case "NUMPAD_9":\n                        case 105:\n                            message.upKeys[i] = 105;\n                            break;\n                        case "NUMPAD_MULTIPLY":\n                        case 106:\n                            message.upKeys[i] = 106;\n                            break;\n                        case "NUMPAD_ADD":\n                        case 107:\n                            message.upKeys[i] = 107;\n                            break;\n                        case "NUMPAD_ENTER":\n                        case 108:\n                            message.upKeys[i] = 108;\n                            break;\n                        case "NUMPAD_SUBTRACT":\n                        case 109:\n                            message.upKeys[i] = 109;\n                            break;\n                        case "NUMPAD_DECIMAL":\n                        case 110:\n                            message.upKeys[i] = 110;\n                            break;\n                        case "NUMPAD_DIVIDE":\n                        case 111:\n                            message.upKeys[i] = 111;\n                            break;\n                        case "F1":\n                        case 112:\n                            message.upKeys[i] = 112;\n                            break;\n                        case "F2":\n                        case 113:\n                            message.upKeys[i] = 113;\n                            break;\n                        case "F3":\n                        case 114:\n                            message.upKeys[i] = 114;\n                            break;\n                        case "F4":\n                        case 115:\n                            message.upKeys[i] = 115;\n                            break;\n                        case "F5":\n                        case 116:\n                            message.upKeys[i] = 116;\n                            break;\n                        case "F6":\n                        case 117:\n                            message.upKeys[i] = 117;\n                            break;\n                        case "F7":\n                        case 118:\n                            message.upKeys[i] = 118;\n                            break;\n                        case "F8":\n                        case 119:\n                            message.upKeys[i] = 119;\n                            break;\n                        case "F9":\n                        case 120:\n                            message.upKeys[i] = 120;\n                            break;\n                        case "F10":\n                        case 121:\n                            message.upKeys[i] = 121;\n                            break;\n                        case "F11":\n                        case 122:\n                            message.upKeys[i] = 122;\n                            break;\n                        case "F12":\n                        case 123:\n                            message.upKeys[i] = 123;\n                            break;\n                        case "F13":\n                        case 124:\n                            message.upKeys[i] = 124;\n                            break;\n                        case "F14":\n                        case 125:\n                            message.upKeys[i] = 125;\n                            break;\n                        case "F15":\n                        case 126:\n                            message.upKeys[i] = 126;\n                            break;\n                        case "COLON":\n                        case 186:\n                            message.upKeys[i] = 186;\n                            break;\n                        case "EQUALS":\n                        case 187:\n                            message.upKeys[i] = 187;\n                            break;\n                        case "COMMA":\n                        case 188:\n                            message.upKeys[i] = 188;\n                            break;\n                        case "UNDERSCORE":\n                        case 189:\n                            message.upKeys[i] = 189;\n                            break;\n                        case "PERIOD":\n                        case 190:\n                            message.upKeys[i] = 190;\n                            break;\n                        case "QUESTION_MARK":\n                        case 191:\n                            message.upKeys[i] = 191;\n                            break;\n                        case "TILDE":\n                        case 192:\n                            message.upKeys[i] = 192;\n                            break;\n                        case "OPEN_BRACKET":\n                        case 219:\n                            message.upKeys[i] = 219;\n                            break;\n                        case "BACKWARD_SLASH":\n                        case 220:\n                            message.upKeys[i] = 220;\n                            break;\n                        case "CLOSED_BRACKET":\n                        case 221:\n                            message.upKeys[i] = 221;\n                            break;\n                        case "QUOTES":\n                        case 222:\n                            message.upKeys[i] = 222;\n                            break;\n                        case "BACKSPACE":\n                        case 8:\n                            message.upKeys[i] = 8;\n                            break;\n                        case "TAB":\n                        case 9:\n                            message.upKeys[i] = 9;\n                            break;\n                        case "CLEAR":\n                        case 12:\n                            message.upKeys[i] = 12;\n                            break;\n                        case "ENTER":\n                        case 13:\n                            message.upKeys[i] = 13;\n                            break;\n                        case "SHIFT":\n                        case 16:\n                            message.upKeys[i] = 16;\n                            break;\n                        case "CONTROL":\n                        case 17:\n                            message.upKeys[i] = 17;\n                            break;\n                        case "ALT":\n                        case 18:\n                            message.upKeys[i] = 18;\n                            break;\n                        case "CAPS_LOCK":\n                        case 20:\n                            message.upKeys[i] = 20;\n                            break;\n                        case "ESC":\n                        case 27:\n                            message.upKeys[i] = 27;\n                            break;\n                        case "SPACEBAR":\n                        case 32:\n                            message.upKeys[i] = 32;\n                            break;\n                        case "PAGE_UP":\n                        case 33:\n                            message.upKeys[i] = 33;\n                            break;\n                        case "PAGE_DOWN":\n                        case 34:\n                            message.upKeys[i] = 34;\n                            break;\n                        case "END":\n                        case 35:\n                            message.upKeys[i] = 35;\n                            break;\n                        case "HOME":\n                        case 36:\n                            message.upKeys[i] = 36;\n                            break;\n                        case "KB_LEFT":\n                        case 37:\n                            message.upKeys[i] = 37;\n                            break;\n                        case "KB_UP":\n                        case 38:\n                            message.upKeys[i] = 38;\n                            break;\n                        case "KB_RIGHT":\n                        case 39:\n                            message.upKeys[i] = 39;\n                            break;\n                        case "KB_DOWN":\n                        case 40:\n                            message.upKeys[i] = 40;\n                            break;\n                        case "PLUS":\n                        case 43:\n                            message.upKeys[i] = 43;\n                            break;\n                        case "MINUS":\n                        case 44:\n                            message.upKeys[i] = 44;\n                            break;\n                        case "INSERT":\n                        case 45:\n                            message.upKeys[i] = 45;\n                            break;\n                        case "DELETE":\n                        case 46:\n                            message.upKeys[i] = 46;\n                            break;\n                        case "HELP":\n                        case 47:\n                            message.upKeys[i] = 47;\n                            break;\n                        case "NUM_LOCK":\n                        case 144:\n                            message.upKeys[i] = 144;\n                            break;\n                        }\n                }\n                if (object.downKeys) {\n                    if (!Array.isArray(object.downKeys))\n                        throw TypeError(".op_def.MovingKeys.downKeys: array expected");\n                    message.downKeys = [];\n                    for (var i = 0; i < object.downKeys.length; ++i)\n                        switch (object.downKeys[i]) {\n                        default:\n                        case "Unknown":\n                        case -1:\n                            message.downKeys[i] = -1;\n                            break;\n                        case "A":\n                        case 65:\n                            message.downKeys[i] = 65;\n                            break;\n                        case "B":\n                        case 66:\n                            message.downKeys[i] = 66;\n                            break;\n                        case "C":\n                        case 67:\n                            message.downKeys[i] = 67;\n                            break;\n                        case "D":\n                        case 68:\n                            message.downKeys[i] = 68;\n                            break;\n                        case "E":\n                        case 69:\n                            message.downKeys[i] = 69;\n                            break;\n                        case "F":\n                        case 70:\n                            message.downKeys[i] = 70;\n                            break;\n                        case "G":\n                        case 71:\n                            message.downKeys[i] = 71;\n                            break;\n                        case "H":\n                        case 72:\n                            message.downKeys[i] = 72;\n                            break;\n                        case "I":\n                        case 73:\n                            message.downKeys[i] = 73;\n                            break;\n                        case "J":\n                        case 74:\n                            message.downKeys[i] = 74;\n                            break;\n                        case "K":\n                        case 75:\n                            message.downKeys[i] = 75;\n                            break;\n                        case "L":\n                        case 76:\n                            message.downKeys[i] = 76;\n                            break;\n                        case "M":\n                        case 77:\n                            message.downKeys[i] = 77;\n                            break;\n                        case "N":\n                        case 78:\n                            message.downKeys[i] = 78;\n                            break;\n                        case "O":\n                        case 79:\n                            message.downKeys[i] = 79;\n                            break;\n                        case "P":\n                        case 80:\n                            message.downKeys[i] = 80;\n                            break;\n                        case "Q":\n                        case 81:\n                            message.downKeys[i] = 81;\n                            break;\n                        case "R":\n                        case 82:\n                            message.downKeys[i] = 82;\n                            break;\n                        case "S":\n                        case 83:\n                            message.downKeys[i] = 83;\n                            break;\n                        case "T":\n                        case 84:\n                            message.downKeys[i] = 84;\n                            break;\n                        case "U":\n                        case 85:\n                            message.downKeys[i] = 85;\n                            break;\n                        case "V":\n                        case 86:\n                            message.downKeys[i] = 86;\n                            break;\n                        case "W":\n                        case 87:\n                            message.downKeys[i] = 87;\n                            break;\n                        case "X":\n                        case 88:\n                            message.downKeys[i] = 88;\n                            break;\n                        case "Y":\n                        case 89:\n                            message.downKeys[i] = 89;\n                            break;\n                        case "Z":\n                        case 90:\n                            message.downKeys[i] = 90;\n                            break;\n                        case "ZERO":\n                        case 48:\n                            message.downKeys[i] = 48;\n                            break;\n                        case "ONE":\n                        case 49:\n                            message.downKeys[i] = 49;\n                            break;\n                        case "TWO":\n                        case 50:\n                            message.downKeys[i] = 50;\n                            break;\n                        case "THREE":\n                        case 51:\n                            message.downKeys[i] = 51;\n                            break;\n                        case "FOUR":\n                        case 52:\n                            message.downKeys[i] = 52;\n                            break;\n                        case "FIVE":\n                        case 53:\n                            message.downKeys[i] = 53;\n                            break;\n                        case "SIX":\n                        case 54:\n                            message.downKeys[i] = 54;\n                            break;\n                        case "SEVEN":\n                        case 55:\n                            message.downKeys[i] = 55;\n                            break;\n                        case "EIGHT":\n                        case 56:\n                            message.downKeys[i] = 56;\n                            break;\n                        case "NINE":\n                        case 57:\n                            message.downKeys[i] = 57;\n                            break;\n                        case "NUMPAD_0":\n                        case 96:\n                            message.downKeys[i] = 96;\n                            break;\n                        case "NUMPAD_1":\n                        case 97:\n                            message.downKeys[i] = 97;\n                            break;\n                        case "NUMPAD_2":\n                        case 98:\n                            message.downKeys[i] = 98;\n                            break;\n                        case "NUMPAD_3":\n                        case 99:\n                            message.downKeys[i] = 99;\n                            break;\n                        case "NUMPAD_4":\n                        case 100:\n                            message.downKeys[i] = 100;\n                            break;\n                        case "NUMPAD_5":\n                        case 101:\n                            message.downKeys[i] = 101;\n                            break;\n                        case "NUMPAD_6":\n                        case 102:\n                            message.downKeys[i] = 102;\n                            break;\n                        case "NUMPAD_7":\n                        case 103:\n                            message.downKeys[i] = 103;\n                            break;\n                        case "NUMPAD_8":\n                        case 104:\n                            message.downKeys[i] = 104;\n                            break;\n                        case "NUMPAD_9":\n                        case 105:\n                            message.downKeys[i] = 105;\n                            break;\n                        case "NUMPAD_MULTIPLY":\n                        case 106:\n                            message.downKeys[i] = 106;\n                            break;\n                        case "NUMPAD_ADD":\n                        case 107:\n                            message.downKeys[i] = 107;\n                            break;\n                        case "NUMPAD_ENTER":\n                        case 108:\n                            message.downKeys[i] = 108;\n                            break;\n                        case "NUMPAD_SUBTRACT":\n                        case 109:\n                            message.downKeys[i] = 109;\n                            break;\n                        case "NUMPAD_DECIMAL":\n                        case 110:\n                            message.downKeys[i] = 110;\n                            break;\n                        case "NUMPAD_DIVIDE":\n                        case 111:\n                            message.downKeys[i] = 111;\n                            break;\n                        case "F1":\n                        case 112:\n                            message.downKeys[i] = 112;\n                            break;\n                        case "F2":\n                        case 113:\n                            message.downKeys[i] = 113;\n                            break;\n                        case "F3":\n                        case 114:\n                            message.downKeys[i] = 114;\n                            break;\n                        case "F4":\n                        case 115:\n                            message.downKeys[i] = 115;\n                            break;\n                        case "F5":\n                        case 116:\n                            message.downKeys[i] = 116;\n                            break;\n                        case "F6":\n                        case 117:\n                            message.downKeys[i] = 117;\n                            break;\n                        case "F7":\n                        case 118:\n                            message.downKeys[i] = 118;\n                            break;\n                        case "F8":\n                        case 119:\n                            message.downKeys[i] = 119;\n                            break;\n                        case "F9":\n                        case 120:\n                            message.downKeys[i] = 120;\n                            break;\n                        case "F10":\n                        case 121:\n                            message.downKeys[i] = 121;\n                            break;\n                        case "F11":\n                        case 122:\n                            message.downKeys[i] = 122;\n                            break;\n                        case "F12":\n                        case 123:\n                            message.downKeys[i] = 123;\n                            break;\n                        case "F13":\n                        case 124:\n                            message.downKeys[i] = 124;\n                            break;\n                        case "F14":\n                        case 125:\n                            message.downKeys[i] = 125;\n                            break;\n                        case "F15":\n                        case 126:\n                            message.downKeys[i] = 126;\n                            break;\n                        case "COLON":\n                        case 186:\n                            message.downKeys[i] = 186;\n                            break;\n                        case "EQUALS":\n                        case 187:\n                            message.downKeys[i] = 187;\n                            break;\n                        case "COMMA":\n                        case 188:\n                            message.downKeys[i] = 188;\n                            break;\n                        case "UNDERSCORE":\n                        case 189:\n                            message.downKeys[i] = 189;\n                            break;\n                        case "PERIOD":\n                        case 190:\n                            message.downKeys[i] = 190;\n                            break;\n                        case "QUESTION_MARK":\n                        case 191:\n                            message.downKeys[i] = 191;\n                            break;\n                        case "TILDE":\n                        case 192:\n                            message.downKeys[i] = 192;\n                            break;\n                        case "OPEN_BRACKET":\n                        case 219:\n                            message.downKeys[i] = 219;\n                            break;\n                        case "BACKWARD_SLASH":\n                        case 220:\n                            message.downKeys[i] = 220;\n                            break;\n                        case "CLOSED_BRACKET":\n                        case 221:\n                            message.downKeys[i] = 221;\n                            break;\n                        case "QUOTES":\n                        case 222:\n                            message.downKeys[i] = 222;\n                            break;\n                        case "BACKSPACE":\n                        case 8:\n                            message.downKeys[i] = 8;\n                            break;\n                        case "TAB":\n                        case 9:\n                            message.downKeys[i] = 9;\n                            break;\n                        case "CLEAR":\n                        case 12:\n                            message.downKeys[i] = 12;\n                            break;\n                        case "ENTER":\n                        case 13:\n                            message.downKeys[i] = 13;\n                            break;\n                        case "SHIFT":\n                        case 16:\n                            message.downKeys[i] = 16;\n                            break;\n                        case "CONTROL":\n                        case 17:\n                            message.downKeys[i] = 17;\n                            break;\n                        case "ALT":\n                        case 18:\n                            message.downKeys[i] = 18;\n                            break;\n                        case "CAPS_LOCK":\n                        case 20:\n                            message.downKeys[i] = 20;\n                            break;\n                        case "ESC":\n                        case 27:\n                            message.downKeys[i] = 27;\n                            break;\n                        case "SPACEBAR":\n                        case 32:\n                            message.downKeys[i] = 32;\n                            break;\n                        case "PAGE_UP":\n                        case 33:\n                            message.downKeys[i] = 33;\n                            break;\n                        case "PAGE_DOWN":\n                        case 34:\n                            message.downKeys[i] = 34;\n                            break;\n                        case "END":\n                        case 35:\n                            message.downKeys[i] = 35;\n                            break;\n                        case "HOME":\n                        case 36:\n                            message.downKeys[i] = 36;\n                            break;\n                        case "KB_LEFT":\n                        case 37:\n                            message.downKeys[i] = 37;\n                            break;\n                        case "KB_UP":\n                        case 38:\n                            message.downKeys[i] = 38;\n                            break;\n                        case "KB_RIGHT":\n                        case 39:\n                            message.downKeys[i] = 39;\n                            break;\n                        case "KB_DOWN":\n                        case 40:\n                            message.downKeys[i] = 40;\n                            break;\n                        case "PLUS":\n                        case 43:\n                            message.downKeys[i] = 43;\n                            break;\n                        case "MINUS":\n                        case 44:\n                            message.downKeys[i] = 44;\n                            break;\n                        case "INSERT":\n                        case 45:\n                            message.downKeys[i] = 45;\n                            break;\n                        case "DELETE":\n                        case 46:\n                            message.downKeys[i] = 46;\n                            break;\n                        case "HELP":\n                        case 47:\n                            message.downKeys[i] = 47;\n                            break;\n                        case "NUM_LOCK":\n                        case 144:\n                            message.downKeys[i] = 144;\n                            break;\n                        }\n                }\n                if (object.rightKeys) {\n                    if (!Array.isArray(object.rightKeys))\n                        throw TypeError(".op_def.MovingKeys.rightKeys: array expected");\n                    message.rightKeys = [];\n                    for (var i = 0; i < object.rightKeys.length; ++i)\n                        switch (object.rightKeys[i]) {\n                        default:\n                        case "Unknown":\n                        case -1:\n                            message.rightKeys[i] = -1;\n                            break;\n                        case "A":\n                        case 65:\n                            message.rightKeys[i] = 65;\n                            break;\n                        case "B":\n                        case 66:\n                            message.rightKeys[i] = 66;\n                            break;\n                        case "C":\n                        case 67:\n                            message.rightKeys[i] = 67;\n                            break;\n                        case "D":\n                        case 68:\n                            message.rightKeys[i] = 68;\n                            break;\n                        case "E":\n                        case 69:\n                            message.rightKeys[i] = 69;\n                            break;\n                        case "F":\n                        case 70:\n                            message.rightKeys[i] = 70;\n                            break;\n                        case "G":\n                        case 71:\n                            message.rightKeys[i] = 71;\n                            break;\n                        case "H":\n                        case 72:\n                            message.rightKeys[i] = 72;\n                            break;\n                        case "I":\n                        case 73:\n                            message.rightKeys[i] = 73;\n                            break;\n                        case "J":\n                        case 74:\n                            message.rightKeys[i] = 74;\n                            break;\n                        case "K":\n                        case 75:\n                            message.rightKeys[i] = 75;\n                            break;\n                        case "L":\n                        case 76:\n                            message.rightKeys[i] = 76;\n                            break;\n                        case "M":\n                        case 77:\n                            message.rightKeys[i] = 77;\n                            break;\n                        case "N":\n                        case 78:\n                            message.rightKeys[i] = 78;\n                            break;\n                        case "O":\n                        case 79:\n                            message.rightKeys[i] = 79;\n                            break;\n                        case "P":\n                        case 80:\n                            message.rightKeys[i] = 80;\n                            break;\n                        case "Q":\n                        case 81:\n                            message.rightKeys[i] = 81;\n                            break;\n                        case "R":\n                        case 82:\n                            message.rightKeys[i] = 82;\n                            break;\n                        case "S":\n                        case 83:\n                            message.rightKeys[i] = 83;\n                            break;\n                        case "T":\n                        case 84:\n                            message.rightKeys[i] = 84;\n                            break;\n                        case "U":\n                        case 85:\n                            message.rightKeys[i] = 85;\n                            break;\n                        case "V":\n                        case 86:\n                            message.rightKeys[i] = 86;\n                            break;\n                        case "W":\n                        case 87:\n                            message.rightKeys[i] = 87;\n                            break;\n                        case "X":\n                        case 88:\n                            message.rightKeys[i] = 88;\n                            break;\n                        case "Y":\n                        case 89:\n                            message.rightKeys[i] = 89;\n                            break;\n                        case "Z":\n                        case 90:\n                            message.rightKeys[i] = 90;\n                            break;\n                        case "ZERO":\n                        case 48:\n                            message.rightKeys[i] = 48;\n                            break;\n                        case "ONE":\n                        case 49:\n                            message.rightKeys[i] = 49;\n                            break;\n                        case "TWO":\n                        case 50:\n                            message.rightKeys[i] = 50;\n                            break;\n                        case "THREE":\n                        case 51:\n                            message.rightKeys[i] = 51;\n                            break;\n                        case "FOUR":\n                        case 52:\n                            message.rightKeys[i] = 52;\n                            break;\n                        case "FIVE":\n                        case 53:\n                            message.rightKeys[i] = 53;\n                            break;\n                        case "SIX":\n                        case 54:\n                            message.rightKeys[i] = 54;\n                            break;\n                        case "SEVEN":\n                        case 55:\n                            message.rightKeys[i] = 55;\n                            break;\n                        case "EIGHT":\n                        case 56:\n                            message.rightKeys[i] = 56;\n                            break;\n                        case "NINE":\n                        case 57:\n                            message.rightKeys[i] = 57;\n                            break;\n                        case "NUMPAD_0":\n                        case 96:\n                            message.rightKeys[i] = 96;\n                            break;\n                        case "NUMPAD_1":\n                        case 97:\n                            message.rightKeys[i] = 97;\n                            break;\n                        case "NUMPAD_2":\n                        case 98:\n                            message.rightKeys[i] = 98;\n                            break;\n                        case "NUMPAD_3":\n                        case 99:\n                            message.rightKeys[i] = 99;\n                            break;\n                        case "NUMPAD_4":\n                        case 100:\n                            message.rightKeys[i] = 100;\n                            break;\n                        case "NUMPAD_5":\n                        case 101:\n                            message.rightKeys[i] = 101;\n                            break;\n                        case "NUMPAD_6":\n                        case 102:\n                            message.rightKeys[i] = 102;\n                            break;\n                        case "NUMPAD_7":\n                        case 103:\n                            message.rightKeys[i] = 103;\n                            break;\n                        case "NUMPAD_8":\n                        case 104:\n                            message.rightKeys[i] = 104;\n                            break;\n                        case "NUMPAD_9":\n                        case 105:\n                            message.rightKeys[i] = 105;\n                            break;\n                        case "NUMPAD_MULTIPLY":\n                        case 106:\n                            message.rightKeys[i] = 106;\n                            break;\n                        case "NUMPAD_ADD":\n                        case 107:\n                            message.rightKeys[i] = 107;\n                            break;\n                        case "NUMPAD_ENTER":\n                        case 108:\n                            message.rightKeys[i] = 108;\n                            break;\n                        case "NUMPAD_SUBTRACT":\n                        case 109:\n                            message.rightKeys[i] = 109;\n                            break;\n                        case "NUMPAD_DECIMAL":\n                        case 110:\n                            message.rightKeys[i] = 110;\n                            break;\n                        case "NUMPAD_DIVIDE":\n                        case 111:\n                            message.rightKeys[i] = 111;\n                            break;\n                        case "F1":\n                        case 112:\n                            message.rightKeys[i] = 112;\n                            break;\n                        case "F2":\n                        case 113:\n                            message.rightKeys[i] = 113;\n                            break;\n                        case "F3":\n                        case 114:\n                            message.rightKeys[i] = 114;\n                            break;\n                        case "F4":\n                        case 115:\n                            message.rightKeys[i] = 115;\n                            break;\n                        case "F5":\n                        case 116:\n                            message.rightKeys[i] = 116;\n                            break;\n                        case "F6":\n                        case 117:\n                            message.rightKeys[i] = 117;\n                            break;\n                        case "F7":\n                        case 118:\n                            message.rightKeys[i] = 118;\n                            break;\n                        case "F8":\n                        case 119:\n                            message.rightKeys[i] = 119;\n                            break;\n                        case "F9":\n                        case 120:\n                            message.rightKeys[i] = 120;\n                            break;\n                        case "F10":\n                        case 121:\n                            message.rightKeys[i] = 121;\n                            break;\n                        case "F11":\n                        case 122:\n                            message.rightKeys[i] = 122;\n                            break;\n                        case "F12":\n                        case 123:\n                            message.rightKeys[i] = 123;\n                            break;\n                        case "F13":\n                        case 124:\n                            message.rightKeys[i] = 124;\n                            break;\n                        case "F14":\n                        case 125:\n                            message.rightKeys[i] = 125;\n                            break;\n                        case "F15":\n                        case 126:\n                            message.rightKeys[i] = 126;\n                            break;\n                        case "COLON":\n                        case 186:\n                            message.rightKeys[i] = 186;\n                            break;\n                        case "EQUALS":\n                        case 187:\n                            message.rightKeys[i] = 187;\n                            break;\n                        case "COMMA":\n                        case 188:\n                            message.rightKeys[i] = 188;\n                            break;\n                        case "UNDERSCORE":\n                        case 189:\n                            message.rightKeys[i] = 189;\n                            break;\n                        case "PERIOD":\n                        case 190:\n                            message.rightKeys[i] = 190;\n                            break;\n                        case "QUESTION_MARK":\n                        case 191:\n                            message.rightKeys[i] = 191;\n                            break;\n                        case "TILDE":\n                        case 192:\n                            message.rightKeys[i] = 192;\n                            break;\n                        case "OPEN_BRACKET":\n                        case 219:\n                            message.rightKeys[i] = 219;\n                            break;\n                        case "BACKWARD_SLASH":\n                        case 220:\n                            message.rightKeys[i] = 220;\n                            break;\n                        case "CLOSED_BRACKET":\n                        case 221:\n                            message.rightKeys[i] = 221;\n                            break;\n                        case "QUOTES":\n                        case 222:\n                            message.rightKeys[i] = 222;\n                            break;\n                        case "BACKSPACE":\n                        case 8:\n                            message.rightKeys[i] = 8;\n                            break;\n                        case "TAB":\n                        case 9:\n                            message.rightKeys[i] = 9;\n                            break;\n                        case "CLEAR":\n                        case 12:\n                            message.rightKeys[i] = 12;\n                            break;\n                        case "ENTER":\n                        case 13:\n                            message.rightKeys[i] = 13;\n                            break;\n                        case "SHIFT":\n                        case 16:\n                            message.rightKeys[i] = 16;\n                            break;\n                        case "CONTROL":\n                        case 17:\n                            message.rightKeys[i] = 17;\n                            break;\n                        case "ALT":\n                        case 18:\n                            message.rightKeys[i] = 18;\n                            break;\n                        case "CAPS_LOCK":\n                        case 20:\n                            message.rightKeys[i] = 20;\n                            break;\n                        case "ESC":\n                        case 27:\n                            message.rightKeys[i] = 27;\n                            break;\n                        case "SPACEBAR":\n                        case 32:\n                            message.rightKeys[i] = 32;\n                            break;\n                        case "PAGE_UP":\n                        case 33:\n                            message.rightKeys[i] = 33;\n                            break;\n                        case "PAGE_DOWN":\n                        case 34:\n                            message.rightKeys[i] = 34;\n                            break;\n                        case "END":\n                        case 35:\n                            message.rightKeys[i] = 35;\n                            break;\n                        case "HOME":\n                        case 36:\n                            message.rightKeys[i] = 36;\n                            break;\n                        case "KB_LEFT":\n                        case 37:\n                            message.rightKeys[i] = 37;\n                            break;\n                        case "KB_UP":\n                        case 38:\n                            message.rightKeys[i] = 38;\n                            break;\n                        case "KB_RIGHT":\n                        case 39:\n                            message.rightKeys[i] = 39;\n                            break;\n                        case "KB_DOWN":\n                        case 40:\n                            message.rightKeys[i] = 40;\n                            break;\n                        case "PLUS":\n                        case 43:\n                            message.rightKeys[i] = 43;\n                            break;\n                        case "MINUS":\n                        case 44:\n                            message.rightKeys[i] = 44;\n                            break;\n                        case "INSERT":\n                        case 45:\n                            message.rightKeys[i] = 45;\n                            break;\n                        case "DELETE":\n                        case 46:\n                            message.rightKeys[i] = 46;\n                            break;\n                        case "HELP":\n                        case 47:\n                            message.rightKeys[i] = 47;\n                            break;\n                        case "NUM_LOCK":\n                        case 144:\n                            message.rightKeys[i] = 144;\n                            break;\n                        }\n                }\n                if (object.leftKeys) {\n                    if (!Array.isArray(object.leftKeys))\n                        throw TypeError(".op_def.MovingKeys.leftKeys: array expected");\n                    message.leftKeys = [];\n                    for (var i = 0; i < object.leftKeys.length; ++i)\n                        switch (object.leftKeys[i]) {\n                        default:\n                        case "Unknown":\n                        case -1:\n                            message.leftKeys[i] = -1;\n                            break;\n                        case "A":\n                        case 65:\n                            message.leftKeys[i] = 65;\n                            break;\n                        case "B":\n                        case 66:\n                            message.leftKeys[i] = 66;\n                            break;\n                        case "C":\n                        case 67:\n                            message.leftKeys[i] = 67;\n                            break;\n                        case "D":\n                        case 68:\n                            message.leftKeys[i] = 68;\n                            break;\n                        case "E":\n                        case 69:\n                            message.leftKeys[i] = 69;\n                            break;\n                        case "F":\n                        case 70:\n                            message.leftKeys[i] = 70;\n                            break;\n                        case "G":\n                        case 71:\n                            message.leftKeys[i] = 71;\n                            break;\n                        case "H":\n                        case 72:\n                            message.leftKeys[i] = 72;\n                            break;\n                        case "I":\n                        case 73:\n                            message.leftKeys[i] = 73;\n                            break;\n                        case "J":\n                        case 74:\n                            message.leftKeys[i] = 74;\n                            break;\n                        case "K":\n                        case 75:\n                            message.leftKeys[i] = 75;\n                            break;\n                        case "L":\n                        case 76:\n                            message.leftKeys[i] = 76;\n                            break;\n                        case "M":\n                        case 77:\n                            message.leftKeys[i] = 77;\n                            break;\n                        case "N":\n                        case 78:\n                            message.leftKeys[i] = 78;\n                            break;\n                        case "O":\n                        case 79:\n                            message.leftKeys[i] = 79;\n                            break;\n                        case "P":\n                        case 80:\n                            message.leftKeys[i] = 80;\n                            break;\n                        case "Q":\n                        case 81:\n                            message.leftKeys[i] = 81;\n                            break;\n                        case "R":\n                        case 82:\n                            message.leftKeys[i] = 82;\n                            break;\n                        case "S":\n                        case 83:\n                            message.leftKeys[i] = 83;\n                            break;\n                        case "T":\n                        case 84:\n                            message.leftKeys[i] = 84;\n                            break;\n                        case "U":\n                        case 85:\n                            message.leftKeys[i] = 85;\n                            break;\n                        case "V":\n                        case 86:\n                            message.leftKeys[i] = 86;\n                            break;\n                        case "W":\n                        case 87:\n                            message.leftKeys[i] = 87;\n                            break;\n                        case "X":\n                        case 88:\n                            message.leftKeys[i] = 88;\n                            break;\n                        case "Y":\n                        case 89:\n                            message.leftKeys[i] = 89;\n                            break;\n                        case "Z":\n                        case 90:\n                            message.leftKeys[i] = 90;\n                            break;\n                        case "ZERO":\n                        case 48:\n                            message.leftKeys[i] = 48;\n                            break;\n                        case "ONE":\n                        case 49:\n                            message.leftKeys[i] = 49;\n                            break;\n                        case "TWO":\n                        case 50:\n                            message.leftKeys[i] = 50;\n                            break;\n                        case "THREE":\n                        case 51:\n                            message.leftKeys[i] = 51;\n                            break;\n                        case "FOUR":\n                        case 52:\n                            message.leftKeys[i] = 52;\n                            break;\n                        case "FIVE":\n                        case 53:\n                            message.leftKeys[i] = 53;\n                            break;\n                        case "SIX":\n                        case 54:\n                            message.leftKeys[i] = 54;\n                            break;\n                        case "SEVEN":\n                        case 55:\n                            message.leftKeys[i] = 55;\n                            break;\n                        case "EIGHT":\n                        case 56:\n                            message.leftKeys[i] = 56;\n                            break;\n                        case "NINE":\n                        case 57:\n                            message.leftKeys[i] = 57;\n                            break;\n                        case "NUMPAD_0":\n                        case 96:\n                            message.leftKeys[i] = 96;\n                            break;\n                        case "NUMPAD_1":\n                        case 97:\n                            message.leftKeys[i] = 97;\n                            break;\n                        case "NUMPAD_2":\n                        case 98:\n                            message.leftKeys[i] = 98;\n                            break;\n                        case "NUMPAD_3":\n                        case 99:\n                            message.leftKeys[i] = 99;\n                            break;\n                        case "NUMPAD_4":\n                        case 100:\n                            message.leftKeys[i] = 100;\n                            break;\n                        case "NUMPAD_5":\n                        case 101:\n                            message.leftKeys[i] = 101;\n                            break;\n                        case "NUMPAD_6":\n                        case 102:\n                            message.leftKeys[i] = 102;\n                            break;\n                        case "NUMPAD_7":\n                        case 103:\n                            message.leftKeys[i] = 103;\n                            break;\n                        case "NUMPAD_8":\n                        case 104:\n                            message.leftKeys[i] = 104;\n                            break;\n                        case "NUMPAD_9":\n                        case 105:\n                            message.leftKeys[i] = 105;\n                            break;\n                        case "NUMPAD_MULTIPLY":\n                        case 106:\n                            message.leftKeys[i] = 106;\n                            break;\n                        case "NUMPAD_ADD":\n                        case 107:\n                            message.leftKeys[i] = 107;\n                            break;\n                        case "NUMPAD_ENTER":\n                        case 108:\n                            message.leftKeys[i] = 108;\n                            break;\n                        case "NUMPAD_SUBTRACT":\n                        case 109:\n                            message.leftKeys[i] = 109;\n                            break;\n                        case "NUMPAD_DECIMAL":\n                        case 110:\n                            message.leftKeys[i] = 110;\n                            break;\n                        case "NUMPAD_DIVIDE":\n                        case 111:\n                            message.leftKeys[i] = 111;\n                            break;\n                        case "F1":\n                        case 112:\n                            message.leftKeys[i] = 112;\n                            break;\n                        case "F2":\n                        case 113:\n                            message.leftKeys[i] = 113;\n                            break;\n                        case "F3":\n                        case 114:\n                            message.leftKeys[i] = 114;\n                            break;\n                        case "F4":\n                        case 115:\n                            message.leftKeys[i] = 115;\n                            break;\n                        case "F5":\n                        case 116:\n                            message.leftKeys[i] = 116;\n                            break;\n                        case "F6":\n                        case 117:\n                            message.leftKeys[i] = 117;\n                            break;\n                        case "F7":\n                        case 118:\n                            message.leftKeys[i] = 118;\n                            break;\n                        case "F8":\n                        case 119:\n                            message.leftKeys[i] = 119;\n                            break;\n                        case "F9":\n                        case 120:\n                            message.leftKeys[i] = 120;\n                            break;\n                        case "F10":\n                        case 121:\n                            message.leftKeys[i] = 121;\n                            break;\n                        case "F11":\n                        case 122:\n                            message.leftKeys[i] = 122;\n                            break;\n                        case "F12":\n                        case 123:\n                            message.leftKeys[i] = 123;\n                            break;\n                        case "F13":\n                        case 124:\n                            message.leftKeys[i] = 124;\n                            break;\n                        case "F14":\n                        case 125:\n                            message.leftKeys[i] = 125;\n                            break;\n                        case "F15":\n                        case 126:\n                            message.leftKeys[i] = 126;\n                            break;\n                        case "COLON":\n                        case 186:\n                            message.leftKeys[i] = 186;\n                            break;\n                        case "EQUALS":\n                        case 187:\n                            message.leftKeys[i] = 187;\n                            break;\n                        case "COMMA":\n                        case 188:\n                            message.leftKeys[i] = 188;\n                            break;\n                        case "UNDERSCORE":\n                        case 189:\n                            message.leftKeys[i] = 189;\n                            break;\n                        case "PERIOD":\n                        case 190:\n                            message.leftKeys[i] = 190;\n                            break;\n                        case "QUESTION_MARK":\n                        case 191:\n                            message.leftKeys[i] = 191;\n                            break;\n                        case "TILDE":\n                        case 192:\n                            message.leftKeys[i] = 192;\n                            break;\n                        case "OPEN_BRACKET":\n                        case 219:\n                            message.leftKeys[i] = 219;\n                            break;\n                        case "BACKWARD_SLASH":\n                        case 220:\n                            message.leftKeys[i] = 220;\n                            break;\n                        case "CLOSED_BRACKET":\n                        case 221:\n                            message.leftKeys[i] = 221;\n                            break;\n                        case "QUOTES":\n                        case 222:\n                            message.leftKeys[i] = 222;\n                            break;\n                        case "BACKSPACE":\n                        case 8:\n                            message.leftKeys[i] = 8;\n                            break;\n                        case "TAB":\n                        case 9:\n                            message.leftKeys[i] = 9;\n                            break;\n                        case "CLEAR":\n                        case 12:\n                            message.leftKeys[i] = 12;\n                            break;\n                        case "ENTER":\n                        case 13:\n                            message.leftKeys[i] = 13;\n                            break;\n                        case "SHIFT":\n                        case 16:\n                            message.leftKeys[i] = 16;\n                            break;\n                        case "CONTROL":\n                        case 17:\n                            message.leftKeys[i] = 17;\n                            break;\n                        case "ALT":\n                        case 18:\n                            message.leftKeys[i] = 18;\n                            break;\n                        case "CAPS_LOCK":\n                        case 20:\n                            message.leftKeys[i] = 20;\n                            break;\n                        case "ESC":\n                        case 27:\n                            message.leftKeys[i] = 27;\n                            break;\n                        case "SPACEBAR":\n                        case 32:\n                            message.leftKeys[i] = 32;\n                            break;\n                        case "PAGE_UP":\n                        case 33:\n                            message.leftKeys[i] = 33;\n                            break;\n                        case "PAGE_DOWN":\n                        case 34:\n                            message.leftKeys[i] = 34;\n                            break;\n                        case "END":\n                        case 35:\n                            message.leftKeys[i] = 35;\n                            break;\n                        case "HOME":\n                        case 36:\n                            message.leftKeys[i] = 36;\n                            break;\n                        case "KB_LEFT":\n                        case 37:\n                            message.leftKeys[i] = 37;\n                            break;\n                        case "KB_UP":\n                        case 38:\n                            message.leftKeys[i] = 38;\n                            break;\n                        case "KB_RIGHT":\n                        case 39:\n                            message.leftKeys[i] = 39;\n                            break;\n                        case "KB_DOWN":\n                        case 40:\n                            message.leftKeys[i] = 40;\n                            break;\n                        case "PLUS":\n                        case 43:\n                            message.leftKeys[i] = 43;\n                            break;\n                        case "MINUS":\n                        case 44:\n                            message.leftKeys[i] = 44;\n                            break;\n                        case "INSERT":\n                        case 45:\n                            message.leftKeys[i] = 45;\n                            break;\n                        case "DELETE":\n                        case 46:\n                            message.leftKeys[i] = 46;\n                            break;\n                        case "HELP":\n                        case 47:\n                            message.leftKeys[i] = 47;\n                            break;\n                        case "NUM_LOCK":\n                        case 144:\n                            message.leftKeys[i] = 144;\n                            break;\n                        }\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a MovingKeys message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_def.MovingKeys\n             * @static\n             * @param {op_def.MovingKeys} message MovingKeys\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            MovingKeys.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults) {\n                    object.upKeys = [];\n                    object.downKeys = [];\n                    object.rightKeys = [];\n                    object.leftKeys = [];\n                }\n                if (message.upKeys && message.upKeys.length) {\n                    object.upKeys = [];\n                    for (var j = 0; j < message.upKeys.length; ++j)\n                        object.upKeys[j] = options.enums === String ? $root.op_def.KeyCode[message.upKeys[j]] : message.upKeys[j];\n                }\n                if (message.downKeys && message.downKeys.length) {\n                    object.downKeys = [];\n                    for (var j = 0; j < message.downKeys.length; ++j)\n                        object.downKeys[j] = options.enums === String ? $root.op_def.KeyCode[message.downKeys[j]] : message.downKeys[j];\n                }\n                if (message.rightKeys && message.rightKeys.length) {\n                    object.rightKeys = [];\n                    for (var j = 0; j < message.rightKeys.length; ++j)\n                        object.rightKeys[j] = options.enums === String ? $root.op_def.KeyCode[message.rightKeys[j]] : message.rightKeys[j];\n                }\n                if (message.leftKeys && message.leftKeys.length) {\n                    object.leftKeys = [];\n                    for (var j = 0; j < message.leftKeys.length; ++j)\n                        object.leftKeys[j] = options.enums === String ? $root.op_def.KeyCode[message.leftKeys[j]] : message.leftKeys[j];\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this MovingKeys to JSON.\n             * @function toJSON\n             * @memberof op_def.MovingKeys\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            MovingKeys.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return MovingKeys;\n        })();\n    \n        /**\n         * TQ_EVENT enum.\n         * @name op_def.TQ_EVENT\n         * @enum {string}\n         * @property {number} TQ_ACTIVE=1 TQ_ACTIVE value\n         * @property {number} TQ_CONFIRM=2 TQ_CONFIRM value\n         * @property {number} TQ_CANCEL=3 TQ_CANCEL value\n         * @property {number} TQ_JUMP=4 TQ_JUMP value\n         * @property {number} TQ_MOVE_RIGHT=5 TQ_MOVE_RIGHT value\n         * @property {number} TQ_MOVE_LEFT=6 TQ_MOVE_LEFT value\n         * @property {number} TQ_MOVE_UP=7 TQ_MOVE_UP value\n         * @property {number} TQ_MOVE_DOWN=8 TQ_MOVE_DOWN value\n         * @property {number} TQ_RUN_RIGHT=9 TQ_RUN_RIGHT value\n         * @property {number} TQ_RUN_LEFT=10 TQ_RUN_LEFT value\n         * @property {number} TQ_RUN_UP=11 TQ_RUN_UP value\n         * @property {number} TQ_RUN_DOWN=12 TQ_RUN_DOWN value\n         * @property {number} TQ_SHORTCUT=13 TQ_SHORTCUT value\n         * @property {number} TQ_KEYBOARD=14 TQ_KEYBOARD value\n         */\n        op_def.TQ_EVENT = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[1] = "TQ_ACTIVE"] = 1;\n            values[valuesById[2] = "TQ_CONFIRM"] = 2;\n            values[valuesById[3] = "TQ_CANCEL"] = 3;\n            values[valuesById[4] = "TQ_JUMP"] = 4;\n            values[valuesById[5] = "TQ_MOVE_RIGHT"] = 5;\n            values[valuesById[6] = "TQ_MOVE_LEFT"] = 6;\n            values[valuesById[7] = "TQ_MOVE_UP"] = 7;\n            values[valuesById[8] = "TQ_MOVE_DOWN"] = 8;\n            values[valuesById[9] = "TQ_RUN_RIGHT"] = 9;\n            values[valuesById[10] = "TQ_RUN_LEFT"] = 10;\n            values[valuesById[11] = "TQ_RUN_UP"] = 11;\n            values[valuesById[12] = "TQ_RUN_DOWN"] = 12;\n            values[valuesById[13] = "TQ_SHORTCUT"] = 13;\n            values[valuesById[14] = "TQ_KEYBOARD"] = 14;\n            return values;\n        })();\n    \n        /**\n         * HorizontalAlignment enum.\n         * @name op_def.HorizontalAlignment\n         * @enum {string}\n         * @property {number} HORIZONTAL_LEFT=0 HORIZONTAL_LEFT value\n         * @property {number} HORIZONTAL_CENTER=1 HORIZONTAL_CENTER value\n         * @property {number} HORIZONTAL_RIGHT=2 HORIZONTAL_RIGHT value\n         */\n        op_def.HorizontalAlignment = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = "HORIZONTAL_LEFT"] = 0;\n            values[valuesById[1] = "HORIZONTAL_CENTER"] = 1;\n            values[valuesById[2] = "HORIZONTAL_RIGHT"] = 2;\n            return values;\n        })();\n    \n        /**\n         * VerticalAlignment enum.\n         * @name op_def.VerticalAlignment\n         * @enum {string}\n         * @property {number} VERTICAL_TOP=0 VERTICAL_TOP value\n         * @property {number} VERTICAL_CENTER=1 VERTICAL_CENTER value\n         * @property {number} VERTICAL_BOTTOM=2 VERTICAL_BOTTOM value\n         */\n        op_def.VerticalAlignment = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = "VERTICAL_TOP"] = 0;\n            values[valuesById[1] = "VERTICAL_CENTER"] = 1;\n            values[valuesById[2] = "VERTICAL_BOTTOM"] = 2;\n            return values;\n        })();\n    \n        op_def.KeyCodeEvent = (function() {\n    \n            /**\n             * Properties of a KeyCodeEvent.\n             * @memberof op_def\n             * @interface IKeyCodeEvent\n             * @property {op_def.TQ_EVENT} tqEvent KeyCodeEvent tqEvent\n             * @property {Array.<op_def.KeyCode>|null} [keyCodes] KeyCodeEvent keyCodes\n             */\n    \n            /**\n             * Constructs a new KeyCodeEvent.\n             * @memberof op_def\n             * @classdesc Represents a KeyCodeEvent.\n             * @implements IKeyCodeEvent\n             * @constructor\n             * @param {op_def.IKeyCodeEvent=} [properties] Properties to set\n             */\n            function KeyCodeEvent(properties) {\n                this.keyCodes = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * KeyCodeEvent tqEvent.\n             * @member {op_def.TQ_EVENT} tqEvent\n             * @memberof op_def.KeyCodeEvent\n             * @instance\n             */\n            KeyCodeEvent.prototype.tqEvent = 1;\n    \n            /**\n             * KeyCodeEvent keyCodes.\n             * @member {Array.<op_def.KeyCode>} keyCodes\n             * @memberof op_def.KeyCodeEvent\n             * @instance\n             */\n            KeyCodeEvent.prototype.keyCodes = $util.emptyArray;\n    \n            /**\n             * Creates a new KeyCodeEvent instance using the specified properties.\n             * @function create\n             * @memberof op_def.KeyCodeEvent\n             * @static\n             * @param {op_def.IKeyCodeEvent=} [properties] Properties to set\n             * @returns {op_def.KeyCodeEvent} KeyCodeEvent instance\n             */\n            KeyCodeEvent.create = function create(properties) {\n                return new KeyCodeEvent(properties);\n            };\n    \n            /**\n             * Encodes the specified KeyCodeEvent message. Does not implicitly {@link op_def.KeyCodeEvent.verify|verify} messages.\n             * @function encode\n             * @memberof op_def.KeyCodeEvent\n             * @static\n             * @param {op_def.IKeyCodeEvent} message KeyCodeEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            KeyCodeEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.tqEvent);\n                if (message.keyCodes != null && message.keyCodes.length)\n                    for (var i = 0; i < message.keyCodes.length; ++i)\n                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.keyCodes[i]);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified KeyCodeEvent message, length delimited. Does not implicitly {@link op_def.KeyCodeEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_def.KeyCodeEvent\n             * @static\n             * @param {op_def.IKeyCodeEvent} message KeyCodeEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            KeyCodeEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a KeyCodeEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_def.KeyCodeEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_def.KeyCodeEvent} KeyCodeEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            KeyCodeEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_def.KeyCodeEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.tqEvent = reader.int32();\n                        break;\n                    case 2:\n                        if (!(message.keyCodes && message.keyCodes.length))\n                            message.keyCodes = [];\n                        if ((tag & 7) === 2) {\n                            var end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2)\n                                message.keyCodes.push(reader.int32());\n                        } else\n                            message.keyCodes.push(reader.int32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("tqEvent"))\n                    throw $util.ProtocolError("missing required \'tqEvent\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a KeyCodeEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_def.KeyCodeEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_def.KeyCodeEvent} KeyCodeEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            KeyCodeEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a KeyCodeEvent message.\n             * @function verify\n             * @memberof op_def.KeyCodeEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            KeyCodeEvent.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                switch (message.tqEvent) {\n                default:\n                    return "tqEvent: enum value expected";\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                case 9:\n                case 10:\n                case 11:\n                case 12:\n                case 13:\n                case 14:\n                    break;\n                }\n                if (message.keyCodes != null && message.hasOwnProperty("keyCodes")) {\n                    if (!Array.isArray(message.keyCodes))\n                        return "keyCodes: array expected";\n                    for (var i = 0; i < message.keyCodes.length; ++i)\n                        switch (message.keyCodes[i]) {\n                        default:\n                            return "keyCodes: enum value[] expected";\n                        case -1:\n                        case 65:\n                        case 66:\n                        case 67:\n                        case 68:\n                        case 69:\n                        case 70:\n                        case 71:\n                        case 72:\n                        case 73:\n                        case 74:\n                        case 75:\n                        case 76:\n                        case 77:\n                        case 78:\n                        case 79:\n                        case 80:\n                        case 81:\n                        case 82:\n                        case 83:\n                        case 84:\n                        case 85:\n                        case 86:\n                        case 87:\n                        case 88:\n                        case 89:\n                        case 90:\n                        case 48:\n                        case 49:\n                        case 50:\n                        case 51:\n                        case 52:\n                        case 53:\n                        case 54:\n                        case 55:\n                        case 56:\n                        case 57:\n                        case 96:\n                        case 97:\n                        case 98:\n                        case 99:\n                        case 100:\n                        case 101:\n                        case 102:\n                        case 103:\n                        case 104:\n                        case 105:\n                        case 106:\n                        case 107:\n                        case 108:\n                        case 109:\n                        case 110:\n                        case 111:\n                        case 112:\n                        case 113:\n                        case 114:\n                        case 115:\n                        case 116:\n                        case 117:\n                        case 118:\n                        case 119:\n                        case 120:\n                        case 121:\n                        case 122:\n                        case 123:\n                        case 124:\n                        case 125:\n                        case 126:\n                        case 186:\n                        case 187:\n                        case 188:\n                        case 189:\n                        case 190:\n                        case 191:\n                        case 192:\n                        case 219:\n                        case 220:\n                        case 221:\n                        case 222:\n                        case 8:\n                        case 9:\n                        case 12:\n                        case 13:\n                        case 16:\n                        case 17:\n                        case 18:\n                        case 20:\n                        case 27:\n                        case 32:\n                        case 33:\n                        case 34:\n                        case 35:\n                        case 36:\n                        case 37:\n                        case 38:\n                        case 39:\n                        case 40:\n                        case 43:\n                        case 44:\n                        case 45:\n                        case 46:\n                        case 47:\n                        case 144:\n                            break;\n                        }\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a KeyCodeEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_def.KeyCodeEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_def.KeyCodeEvent} KeyCodeEvent\n             */\n            KeyCodeEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_def.KeyCodeEvent)\n                    return object;\n                var message = new $root.op_def.KeyCodeEvent();\n                switch (object.tqEvent) {\n                case "TQ_ACTIVE":\n                case 1:\n                    message.tqEvent = 1;\n                    break;\n                case "TQ_CONFIRM":\n                case 2:\n                    message.tqEvent = 2;\n                    break;\n                case "TQ_CANCEL":\n                case 3:\n                    message.tqEvent = 3;\n                    break;\n                case "TQ_JUMP":\n                case 4:\n                    message.tqEvent = 4;\n                    break;\n                case "TQ_MOVE_RIGHT":\n                case 5:\n                    message.tqEvent = 5;\n                    break;\n                case "TQ_MOVE_LEFT":\n                case 6:\n                    message.tqEvent = 6;\n                    break;\n                case "TQ_MOVE_UP":\n                case 7:\n                    message.tqEvent = 7;\n                    break;\n                case "TQ_MOVE_DOWN":\n                case 8:\n                    message.tqEvent = 8;\n                    break;\n                case "TQ_RUN_RIGHT":\n                case 9:\n                    message.tqEvent = 9;\n                    break;\n                case "TQ_RUN_LEFT":\n                case 10:\n                    message.tqEvent = 10;\n                    break;\n                case "TQ_RUN_UP":\n                case 11:\n                    message.tqEvent = 11;\n                    break;\n                case "TQ_RUN_DOWN":\n                case 12:\n                    message.tqEvent = 12;\n                    break;\n                case "TQ_SHORTCUT":\n                case 13:\n                    message.tqEvent = 13;\n                    break;\n                case "TQ_KEYBOARD":\n                case 14:\n                    message.tqEvent = 14;\n                    break;\n                }\n                if (object.keyCodes) {\n                    if (!Array.isArray(object.keyCodes))\n                        throw TypeError(".op_def.KeyCodeEvent.keyCodes: array expected");\n                    message.keyCodes = [];\n                    for (var i = 0; i < object.keyCodes.length; ++i)\n                        switch (object.keyCodes[i]) {\n                        default:\n                        case "Unknown":\n                        case -1:\n                            message.keyCodes[i] = -1;\n                            break;\n                        case "A":\n                        case 65:\n                            message.keyCodes[i] = 65;\n                            break;\n                        case "B":\n                        case 66:\n                            message.keyCodes[i] = 66;\n                            break;\n                        case "C":\n                        case 67:\n                            message.keyCodes[i] = 67;\n                            break;\n                        case "D":\n                        case 68:\n                            message.keyCodes[i] = 68;\n                            break;\n                        case "E":\n                        case 69:\n                            message.keyCodes[i] = 69;\n                            break;\n                        case "F":\n                        case 70:\n                            message.keyCodes[i] = 70;\n                            break;\n                        case "G":\n                        case 71:\n                            message.keyCodes[i] = 71;\n                            break;\n                        case "H":\n                        case 72:\n                            message.keyCodes[i] = 72;\n                            break;\n                        case "I":\n                        case 73:\n                            message.keyCodes[i] = 73;\n                            break;\n                        case "J":\n                        case 74:\n                            message.keyCodes[i] = 74;\n                            break;\n                        case "K":\n                        case 75:\n                            message.keyCodes[i] = 75;\n                            break;\n                        case "L":\n                        case 76:\n                            message.keyCodes[i] = 76;\n                            break;\n                        case "M":\n                        case 77:\n                            message.keyCodes[i] = 77;\n                            break;\n                        case "N":\n                        case 78:\n                            message.keyCodes[i] = 78;\n                            break;\n                        case "O":\n                        case 79:\n                            message.keyCodes[i] = 79;\n                            break;\n                        case "P":\n                        case 80:\n                            message.keyCodes[i] = 80;\n                            break;\n                        case "Q":\n                        case 81:\n                            message.keyCodes[i] = 81;\n                            break;\n                        case "R":\n                        case 82:\n                            message.keyCodes[i] = 82;\n                            break;\n                        case "S":\n                        case 83:\n                            message.keyCodes[i] = 83;\n                            break;\n                        case "T":\n                        case 84:\n                            message.keyCodes[i] = 84;\n                            break;\n                        case "U":\n                        case 85:\n                            message.keyCodes[i] = 85;\n                            break;\n                        case "V":\n                        case 86:\n                            message.keyCodes[i] = 86;\n                            break;\n                        case "W":\n                        case 87:\n                            message.keyCodes[i] = 87;\n                            break;\n                        case "X":\n                        case 88:\n                            message.keyCodes[i] = 88;\n                            break;\n                        case "Y":\n                        case 89:\n                            message.keyCodes[i] = 89;\n                            break;\n                        case "Z":\n                        case 90:\n                            message.keyCodes[i] = 90;\n                            break;\n                        case "ZERO":\n                        case 48:\n                            message.keyCodes[i] = 48;\n                            break;\n                        case "ONE":\n                        case 49:\n                            message.keyCodes[i] = 49;\n                            break;\n                        case "TWO":\n                        case 50:\n                            message.keyCodes[i] = 50;\n                            break;\n                        case "THREE":\n                        case 51:\n                            message.keyCodes[i] = 51;\n                            break;\n                        case "FOUR":\n                        case 52:\n                            message.keyCodes[i] = 52;\n                            break;\n                        case "FIVE":\n                        case 53:\n                            message.keyCodes[i] = 53;\n                            break;\n                        case "SIX":\n                        case 54:\n                            message.keyCodes[i] = 54;\n                            break;\n                        case "SEVEN":\n                        case 55:\n                            message.keyCodes[i] = 55;\n                            break;\n                        case "EIGHT":\n                        case 56:\n                            message.keyCodes[i] = 56;\n                            break;\n                        case "NINE":\n                        case 57:\n                            message.keyCodes[i] = 57;\n                            break;\n                        case "NUMPAD_0":\n                        case 96:\n                            message.keyCodes[i] = 96;\n                            break;\n                        case "NUMPAD_1":\n                        case 97:\n                            message.keyCodes[i] = 97;\n                            break;\n                        case "NUMPAD_2":\n                        case 98:\n                            message.keyCodes[i] = 98;\n                            break;\n                        case "NUMPAD_3":\n                        case 99:\n                            message.keyCodes[i] = 99;\n                            break;\n                        case "NUMPAD_4":\n                        case 100:\n                            message.keyCodes[i] = 100;\n                            break;\n                        case "NUMPAD_5":\n                        case 101:\n                            message.keyCodes[i] = 101;\n                            break;\n                        case "NUMPAD_6":\n                        case 102:\n                            message.keyCodes[i] = 102;\n                            break;\n                        case "NUMPAD_7":\n                        case 103:\n                            message.keyCodes[i] = 103;\n                            break;\n                        case "NUMPAD_8":\n                        case 104:\n                            message.keyCodes[i] = 104;\n                            break;\n                        case "NUMPAD_9":\n                        case 105:\n                            message.keyCodes[i] = 105;\n                            break;\n                        case "NUMPAD_MULTIPLY":\n                        case 106:\n                            message.keyCodes[i] = 106;\n                            break;\n                        case "NUMPAD_ADD":\n                        case 107:\n                            message.keyCodes[i] = 107;\n                            break;\n                        case "NUMPAD_ENTER":\n                        case 108:\n                            message.keyCodes[i] = 108;\n                            break;\n                        case "NUMPAD_SUBTRACT":\n                        case 109:\n                            message.keyCodes[i] = 109;\n                            break;\n                        case "NUMPAD_DECIMAL":\n                        case 110:\n                            message.keyCodes[i] = 110;\n                            break;\n                        case "NUMPAD_DIVIDE":\n                        case 111:\n                            message.keyCodes[i] = 111;\n                            break;\n                        case "F1":\n                        case 112:\n                            message.keyCodes[i] = 112;\n                            break;\n                        case "F2":\n                        case 113:\n                            message.keyCodes[i] = 113;\n                            break;\n                        case "F3":\n                        case 114:\n                            message.keyCodes[i] = 114;\n                            break;\n                        case "F4":\n                        case 115:\n                            message.keyCodes[i] = 115;\n                            break;\n                        case "F5":\n                        case 116:\n                            message.keyCodes[i] = 116;\n                            break;\n                        case "F6":\n                        case 117:\n                            message.keyCodes[i] = 117;\n                            break;\n                        case "F7":\n                        case 118:\n                            message.keyCodes[i] = 118;\n                            break;\n                        case "F8":\n                        case 119:\n                            message.keyCodes[i] = 119;\n                            break;\n                        case "F9":\n                        case 120:\n                            message.keyCodes[i] = 120;\n                            break;\n                        case "F10":\n                        case 121:\n                            message.keyCodes[i] = 121;\n                            break;\n                        case "F11":\n                        case 122:\n                            message.keyCodes[i] = 122;\n                            break;\n                        case "F12":\n                        case 123:\n                            message.keyCodes[i] = 123;\n                            break;\n                        case "F13":\n                        case 124:\n                            message.keyCodes[i] = 124;\n                            break;\n                        case "F14":\n                        case 125:\n                            message.keyCodes[i] = 125;\n                            break;\n                        case "F15":\n                        case 126:\n                            message.keyCodes[i] = 126;\n                            break;\n                        case "COLON":\n                        case 186:\n                            message.keyCodes[i] = 186;\n                            break;\n                        case "EQUALS":\n                        case 187:\n                            message.keyCodes[i] = 187;\n                            break;\n                        case "COMMA":\n                        case 188:\n                            message.keyCodes[i] = 188;\n                            break;\n                        case "UNDERSCORE":\n                        case 189:\n                            message.keyCodes[i] = 189;\n                            break;\n                        case "PERIOD":\n                        case 190:\n                            message.keyCodes[i] = 190;\n                            break;\n                        case "QUESTION_MARK":\n                        case 191:\n                            message.keyCodes[i] = 191;\n                            break;\n                        case "TILDE":\n                        case 192:\n                            message.keyCodes[i] = 192;\n                            break;\n                        case "OPEN_BRACKET":\n                        case 219:\n                            message.keyCodes[i] = 219;\n                            break;\n                        case "BACKWARD_SLASH":\n                        case 220:\n                            message.keyCodes[i] = 220;\n                            break;\n                        case "CLOSED_BRACKET":\n                        case 221:\n                            message.keyCodes[i] = 221;\n                            break;\n                        case "QUOTES":\n                        case 222:\n                            message.keyCodes[i] = 222;\n                            break;\n                        case "BACKSPACE":\n                        case 8:\n                            message.keyCodes[i] = 8;\n                            break;\n                        case "TAB":\n                        case 9:\n                            message.keyCodes[i] = 9;\n                            break;\n                        case "CLEAR":\n                        case 12:\n                            message.keyCodes[i] = 12;\n                            break;\n                        case "ENTER":\n                        case 13:\n                            message.keyCodes[i] = 13;\n                            break;\n                        case "SHIFT":\n                        case 16:\n                            message.keyCodes[i] = 16;\n                            break;\n                        case "CONTROL":\n                        case 17:\n                            message.keyCodes[i] = 17;\n                            break;\n                        case "ALT":\n                        case 18:\n                            message.keyCodes[i] = 18;\n                            break;\n                        case "CAPS_LOCK":\n                        case 20:\n                            message.keyCodes[i] = 20;\n                            break;\n                        case "ESC":\n                        case 27:\n                            message.keyCodes[i] = 27;\n                            break;\n                        case "SPACEBAR":\n                        case 32:\n                            message.keyCodes[i] = 32;\n                            break;\n                        case "PAGE_UP":\n                        case 33:\n                            message.keyCodes[i] = 33;\n                            break;\n                        case "PAGE_DOWN":\n                        case 34:\n                            message.keyCodes[i] = 34;\n                            break;\n                        case "END":\n                        case 35:\n                            message.keyCodes[i] = 35;\n                            break;\n                        case "HOME":\n                        case 36:\n                            message.keyCodes[i] = 36;\n                            break;\n                        case "KB_LEFT":\n                        case 37:\n                            message.keyCodes[i] = 37;\n                            break;\n                        case "KB_UP":\n                        case 38:\n                            message.keyCodes[i] = 38;\n                            break;\n                        case "KB_RIGHT":\n                        case 39:\n                            message.keyCodes[i] = 39;\n                            break;\n                        case "KB_DOWN":\n                        case 40:\n                            message.keyCodes[i] = 40;\n                            break;\n                        case "PLUS":\n                        case 43:\n                            message.keyCodes[i] = 43;\n                            break;\n                        case "MINUS":\n                        case 44:\n                            message.keyCodes[i] = 44;\n                            break;\n                        case "INSERT":\n                        case 45:\n                            message.keyCodes[i] = 45;\n                            break;\n                        case "DELETE":\n                        case 46:\n                            message.keyCodes[i] = 46;\n                            break;\n                        case "HELP":\n                        case 47:\n                            message.keyCodes[i] = 47;\n                            break;\n                        case "NUM_LOCK":\n                        case 144:\n                            message.keyCodes[i] = 144;\n                            break;\n                        }\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a KeyCodeEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_def.KeyCodeEvent\n             * @static\n             * @param {op_def.KeyCodeEvent} message KeyCodeEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            KeyCodeEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.keyCodes = [];\n                if (options.defaults)\n                    object.tqEvent = options.enums === String ? "TQ_ACTIVE" : 1;\n                if (message.tqEvent != null && message.hasOwnProperty("tqEvent"))\n                    object.tqEvent = options.enums === String ? $root.op_def.TQ_EVENT[message.tqEvent] : message.tqEvent;\n                if (message.keyCodes && message.keyCodes.length) {\n                    object.keyCodes = [];\n                    for (var j = 0; j < message.keyCodes.length; ++j)\n                        object.keyCodes[j] = options.enums === String ? $root.op_def.KeyCode[message.keyCodes[j]] : message.keyCodes[j];\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this KeyCodeEvent to JSON.\n             * @function toJSON\n             * @memberof op_def.KeyCodeEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            KeyCodeEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return KeyCodeEvent;\n        })();\n    \n        op_def.Packet = (function() {\n    \n            /**\n             * Properties of a Packet.\n             * @memberof op_def\n             * @interface IPacket\n             * @property {number|null} [currentFrame] Packet currentFrame\n             * @property {number|null} [totalFrame] Packet totalFrame\n             */\n    \n            /**\n             * Constructs a new Packet.\n             * @memberof op_def\n             * @classdesc Represents a Packet.\n             * @implements IPacket\n             * @constructor\n             * @param {op_def.IPacket=} [properties] Properties to set\n             */\n            function Packet(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Packet currentFrame.\n             * @member {number} currentFrame\n             * @memberof op_def.Packet\n             * @instance\n             */\n            Packet.prototype.currentFrame = 0;\n    \n            /**\n             * Packet totalFrame.\n             * @member {number} totalFrame\n             * @memberof op_def.Packet\n             * @instance\n             */\n            Packet.prototype.totalFrame = 0;\n    \n            /**\n             * Creates a new Packet instance using the specified properties.\n             * @function create\n             * @memberof op_def.Packet\n             * @static\n             * @param {op_def.IPacket=} [properties] Properties to set\n             * @returns {op_def.Packet} Packet instance\n             */\n            Packet.create = function create(properties) {\n                return new Packet(properties);\n            };\n    \n            /**\n             * Encodes the specified Packet message. Does not implicitly {@link op_def.Packet.verify|verify} messages.\n             * @function encode\n             * @memberof op_def.Packet\n             * @static\n             * @param {op_def.IPacket} message Packet message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Packet.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.currentFrame != null && message.hasOwnProperty("currentFrame"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.currentFrame);\n                if (message.totalFrame != null && message.hasOwnProperty("totalFrame"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.totalFrame);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Packet message, length delimited. Does not implicitly {@link op_def.Packet.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_def.Packet\n             * @static\n             * @param {op_def.IPacket} message Packet message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Packet.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a Packet message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_def.Packet\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_def.Packet} Packet\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Packet.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_def.Packet();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.currentFrame = reader.int32();\n                        break;\n                    case 2:\n                        message.totalFrame = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a Packet message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_def.Packet\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_def.Packet} Packet\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Packet.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a Packet message.\n             * @function verify\n             * @memberof op_def.Packet\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Packet.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.currentFrame != null && message.hasOwnProperty("currentFrame"))\n                    if (!$util.isInteger(message.currentFrame))\n                        return "currentFrame: integer expected";\n                if (message.totalFrame != null && message.hasOwnProperty("totalFrame"))\n                    if (!$util.isInteger(message.totalFrame))\n                        return "totalFrame: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a Packet message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_def.Packet\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_def.Packet} Packet\n             */\n            Packet.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_def.Packet)\n                    return object;\n                var message = new $root.op_def.Packet();\n                if (object.currentFrame != null)\n                    message.currentFrame = object.currentFrame | 0;\n                if (object.totalFrame != null)\n                    message.totalFrame = object.totalFrame | 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a Packet message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_def.Packet\n             * @static\n             * @param {op_def.Packet} message Packet\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Packet.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.currentFrame = 0;\n                    object.totalFrame = 0;\n                }\n                if (message.currentFrame != null && message.hasOwnProperty("currentFrame"))\n                    object.currentFrame = message.currentFrame;\n                if (message.totalFrame != null && message.hasOwnProperty("totalFrame"))\n                    object.totalFrame = message.totalFrame;\n                return object;\n            };\n    \n            /**\n             * Converts this Packet to JSON.\n             * @function toJSON\n             * @memberof op_def.Packet\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Packet.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Packet;\n        })();\n    \n        op_def.UIDisplay = (function() {\n    \n            /**\n             * Properties of a UIDisplay.\n             * @memberof op_def\n             * @interface IUIDisplay\n             * @property {op_def.VerticalAlignment} vertical UIDisplay vertical\n             * @property {op_def.HorizontalAlignment} horizontal UIDisplay horizontal\n             * @property {string|null} [dataPath] UIDisplay dataPath\n             * @property {string|null} [texturePath] UIDisplay texturePath\n             * @property {string|null} [tips] UIDisplay tips\n             */\n    \n            /**\n             * Constructs a new UIDisplay.\n             * @memberof op_def\n             * @classdesc Represents a UIDisplay.\n             * @implements IUIDisplay\n             * @constructor\n             * @param {op_def.IUIDisplay=} [properties] Properties to set\n             */\n            function UIDisplay(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * UIDisplay vertical.\n             * @member {op_def.VerticalAlignment} vertical\n             * @memberof op_def.UIDisplay\n             * @instance\n             */\n            UIDisplay.prototype.vertical = 0;\n    \n            /**\n             * UIDisplay horizontal.\n             * @member {op_def.HorizontalAlignment} horizontal\n             * @memberof op_def.UIDisplay\n             * @instance\n             */\n            UIDisplay.prototype.horizontal = 0;\n    \n            /**\n             * UIDisplay dataPath.\n             * @member {string} dataPath\n             * @memberof op_def.UIDisplay\n             * @instance\n             */\n            UIDisplay.prototype.dataPath = "";\n    \n            /**\n             * UIDisplay texturePath.\n             * @member {string} texturePath\n             * @memberof op_def.UIDisplay\n             * @instance\n             */\n            UIDisplay.prototype.texturePath = "";\n    \n            /**\n             * UIDisplay tips.\n             * @member {string} tips\n             * @memberof op_def.UIDisplay\n             * @instance\n             */\n            UIDisplay.prototype.tips = "";\n    \n            /**\n             * Creates a new UIDisplay instance using the specified properties.\n             * @function create\n             * @memberof op_def.UIDisplay\n             * @static\n             * @param {op_def.IUIDisplay=} [properties] Properties to set\n             * @returns {op_def.UIDisplay} UIDisplay instance\n             */\n            UIDisplay.create = function create(properties) {\n                return new UIDisplay(properties);\n            };\n    \n            /**\n             * Encodes the specified UIDisplay message. Does not implicitly {@link op_def.UIDisplay.verify|verify} messages.\n             * @function encode\n             * @memberof op_def.UIDisplay\n             * @static\n             * @param {op_def.IUIDisplay} message UIDisplay message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            UIDisplay.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.vertical);\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.horizontal);\n                if (message.dataPath != null && message.hasOwnProperty("dataPath"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.dataPath);\n                if (message.texturePath != null && message.hasOwnProperty("texturePath"))\n                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.texturePath);\n                if (message.tips != null && message.hasOwnProperty("tips"))\n                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.tips);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified UIDisplay message, length delimited. Does not implicitly {@link op_def.UIDisplay.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_def.UIDisplay\n             * @static\n             * @param {op_def.IUIDisplay} message UIDisplay message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            UIDisplay.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a UIDisplay message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_def.UIDisplay\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_def.UIDisplay} UIDisplay\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            UIDisplay.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_def.UIDisplay();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.vertical = reader.int32();\n                        break;\n                    case 2:\n                        message.horizontal = reader.int32();\n                        break;\n                    case 3:\n                        message.dataPath = reader.string();\n                        break;\n                    case 4:\n                        message.texturePath = reader.string();\n                        break;\n                    case 5:\n                        message.tips = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("vertical"))\n                    throw $util.ProtocolError("missing required \'vertical\'", { instance: message });\n                if (!message.hasOwnProperty("horizontal"))\n                    throw $util.ProtocolError("missing required \'horizontal\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a UIDisplay message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_def.UIDisplay\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_def.UIDisplay} UIDisplay\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            UIDisplay.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a UIDisplay message.\n             * @function verify\n             * @memberof op_def.UIDisplay\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            UIDisplay.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                switch (message.vertical) {\n                default:\n                    return "vertical: enum value expected";\n                case 0:\n                case 1:\n                case 2:\n                    break;\n                }\n                switch (message.horizontal) {\n                default:\n                    return "horizontal: enum value expected";\n                case 0:\n                case 1:\n                case 2:\n                    break;\n                }\n                if (message.dataPath != null && message.hasOwnProperty("dataPath"))\n                    if (!$util.isString(message.dataPath))\n                        return "dataPath: string expected";\n                if (message.texturePath != null && message.hasOwnProperty("texturePath"))\n                    if (!$util.isString(message.texturePath))\n                        return "texturePath: string expected";\n                if (message.tips != null && message.hasOwnProperty("tips"))\n                    if (!$util.isString(message.tips))\n                        return "tips: string expected";\n                return null;\n            };\n    \n            /**\n             * Creates a UIDisplay message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_def.UIDisplay\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_def.UIDisplay} UIDisplay\n             */\n            UIDisplay.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_def.UIDisplay)\n                    return object;\n                var message = new $root.op_def.UIDisplay();\n                switch (object.vertical) {\n                case "VERTICAL_TOP":\n                case 0:\n                    message.vertical = 0;\n                    break;\n                case "VERTICAL_CENTER":\n                case 1:\n                    message.vertical = 1;\n                    break;\n                case "VERTICAL_BOTTOM":\n                case 2:\n                    message.vertical = 2;\n                    break;\n                }\n                switch (object.horizontal) {\n                case "HORIZONTAL_LEFT":\n                case 0:\n                    message.horizontal = 0;\n                    break;\n                case "HORIZONTAL_CENTER":\n                case 1:\n                    message.horizontal = 1;\n                    break;\n                case "HORIZONTAL_RIGHT":\n                case 2:\n                    message.horizontal = 2;\n                    break;\n                }\n                if (object.dataPath != null)\n                    message.dataPath = String(object.dataPath);\n                if (object.texturePath != null)\n                    message.texturePath = String(object.texturePath);\n                if (object.tips != null)\n                    message.tips = String(object.tips);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a UIDisplay message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_def.UIDisplay\n             * @static\n             * @param {op_def.UIDisplay} message UIDisplay\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            UIDisplay.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.vertical = options.enums === String ? "VERTICAL_TOP" : 0;\n                    object.horizontal = options.enums === String ? "HORIZONTAL_LEFT" : 0;\n                    object.dataPath = "";\n                    object.texturePath = "";\n                    object.tips = "";\n                }\n                if (message.vertical != null && message.hasOwnProperty("vertical"))\n                    object.vertical = options.enums === String ? $root.op_def.VerticalAlignment[message.vertical] : message.vertical;\n                if (message.horizontal != null && message.hasOwnProperty("horizontal"))\n                    object.horizontal = options.enums === String ? $root.op_def.HorizontalAlignment[message.horizontal] : message.horizontal;\n                if (message.dataPath != null && message.hasOwnProperty("dataPath"))\n                    object.dataPath = message.dataPath;\n                if (message.texturePath != null && message.hasOwnProperty("texturePath"))\n                    object.texturePath = message.texturePath;\n                if (message.tips != null && message.hasOwnProperty("tips"))\n                    object.tips = message.tips;\n                return object;\n            };\n    \n            /**\n             * Converts this UIDisplay to JSON.\n             * @function toJSON\n             * @memberof op_def.UIDisplay\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            UIDisplay.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return UIDisplay;\n        })();\n    \n        op_def.Table = (function() {\n    \n            /**\n             * Properties of a Table.\n             * @memberof op_def\n             * @interface ITable\n             * @property {Array.<op_def.ITablePair>|null} [tablePair] Table tablePair\n             */\n    \n            /**\n             * Constructs a new Table.\n             * @memberof op_def\n             * @classdesc Represents a Table.\n             * @implements ITable\n             * @constructor\n             * @param {op_def.ITable=} [properties] Properties to set\n             */\n            function Table(properties) {\n                this.tablePair = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Table tablePair.\n             * @member {Array.<op_def.ITablePair>} tablePair\n             * @memberof op_def.Table\n             * @instance\n             */\n            Table.prototype.tablePair = $util.emptyArray;\n    \n            /**\n             * Creates a new Table instance using the specified properties.\n             * @function create\n             * @memberof op_def.Table\n             * @static\n             * @param {op_def.ITable=} [properties] Properties to set\n             * @returns {op_def.Table} Table instance\n             */\n            Table.create = function create(properties) {\n                return new Table(properties);\n            };\n    \n            /**\n             * Encodes the specified Table message. Does not implicitly {@link op_def.Table.verify|verify} messages.\n             * @function encode\n             * @memberof op_def.Table\n             * @static\n             * @param {op_def.ITable} message Table message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Table.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.tablePair != null && message.tablePair.length)\n                    for (var i = 0; i < message.tablePair.length; ++i)\n                        $root.op_def.TablePair.encode(message.tablePair[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Table message, length delimited. Does not implicitly {@link op_def.Table.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_def.Table\n             * @static\n             * @param {op_def.ITable} message Table message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Table.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a Table message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_def.Table\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_def.Table} Table\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Table.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_def.Table();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.tablePair && message.tablePair.length))\n                            message.tablePair = [];\n                        message.tablePair.push($root.op_def.TablePair.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a Table message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_def.Table\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_def.Table} Table\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Table.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a Table message.\n             * @function verify\n             * @memberof op_def.Table\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Table.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.tablePair != null && message.hasOwnProperty("tablePair")) {\n                    if (!Array.isArray(message.tablePair))\n                        return "tablePair: array expected";\n                    for (var i = 0; i < message.tablePair.length; ++i) {\n                        var error = $root.op_def.TablePair.verify(message.tablePair[i]);\n                        if (error)\n                            return "tablePair." + error;\n                    }\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a Table message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_def.Table\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_def.Table} Table\n             */\n            Table.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_def.Table)\n                    return object;\n                var message = new $root.op_def.Table();\n                if (object.tablePair) {\n                    if (!Array.isArray(object.tablePair))\n                        throw TypeError(".op_def.Table.tablePair: array expected");\n                    message.tablePair = [];\n                    for (var i = 0; i < object.tablePair.length; ++i) {\n                        if (typeof object.tablePair[i] !== "object")\n                            throw TypeError(".op_def.Table.tablePair: object expected");\n                        message.tablePair[i] = $root.op_def.TablePair.fromObject(object.tablePair[i]);\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a Table message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_def.Table\n             * @static\n             * @param {op_def.Table} message Table\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Table.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.tablePair = [];\n                if (message.tablePair && message.tablePair.length) {\n                    object.tablePair = [];\n                    for (var j = 0; j < message.tablePair.length; ++j)\n                        object.tablePair[j] = $root.op_def.TablePair.toObject(message.tablePair[j], options);\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this Table to JSON.\n             * @function toJSON\n             * @memberof op_def.Table\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Table.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Table;\n        })();\n    \n        op_def.TablePair = (function() {\n    \n            /**\n             * Properties of a TablePair.\n             * @memberof op_def\n             * @interface ITablePair\n             * @property {string|null} [key] TablePair key\n             * @property {number|null} [index] TablePair index\n             * @property {number|null} [numberVal] TablePair numberVal\n             * @property {string|null} [strVal] TablePair strVal\n             * @property {boolean|null} [boolVal] TablePair boolVal\n             * @property {op_def.ITable|null} [subTable] TablePair subTable\n             */\n    \n            /**\n             * Constructs a new TablePair.\n             * @memberof op_def\n             * @classdesc Represents a TablePair.\n             * @implements ITablePair\n             * @constructor\n             * @param {op_def.ITablePair=} [properties] Properties to set\n             */\n            function TablePair(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * TablePair key.\n             * @member {string} key\n             * @memberof op_def.TablePair\n             * @instance\n             */\n            TablePair.prototype.key = "";\n    \n            /**\n             * TablePair index.\n             * @member {number} index\n             * @memberof op_def.TablePair\n             * @instance\n             */\n            TablePair.prototype.index = 0;\n    \n            /**\n             * TablePair numberVal.\n             * @member {number} numberVal\n             * @memberof op_def.TablePair\n             * @instance\n             */\n            TablePair.prototype.numberVal = 0;\n    \n            /**\n             * TablePair strVal.\n             * @member {string} strVal\n             * @memberof op_def.TablePair\n             * @instance\n             */\n            TablePair.prototype.strVal = "";\n    \n            /**\n             * TablePair boolVal.\n             * @member {boolean} boolVal\n             * @memberof op_def.TablePair\n             * @instance\n             */\n            TablePair.prototype.boolVal = false;\n    \n            /**\n             * TablePair subTable.\n             * @member {op_def.ITable|null|undefined} subTable\n             * @memberof op_def.TablePair\n             * @instance\n             */\n            TablePair.prototype.subTable = null;\n    \n            // OneOf field names bound to virtual getters and setters\n            var $oneOfFields;\n    \n            /**\n             * TablePair keyOneof.\n             * @member {"key"|"index"|undefined} keyOneof\n             * @memberof op_def.TablePair\n             * @instance\n             */\n            Object.defineProperty(TablePair.prototype, "keyOneof", {\n                get: $util.oneOfGetter($oneOfFields = ["key", "index"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n    \n            /**\n             * TablePair valueOneof.\n             * @member {"numberVal"|"strVal"|"boolVal"|"subTable"|undefined} valueOneof\n             * @memberof op_def.TablePair\n             * @instance\n             */\n            Object.defineProperty(TablePair.prototype, "valueOneof", {\n                get: $util.oneOfGetter($oneOfFields = ["numberVal", "strVal", "boolVal", "subTable"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n    \n            /**\n             * Creates a new TablePair instance using the specified properties.\n             * @function create\n             * @memberof op_def.TablePair\n             * @static\n             * @param {op_def.ITablePair=} [properties] Properties to set\n             * @returns {op_def.TablePair} TablePair instance\n             */\n            TablePair.create = function create(properties) {\n                return new TablePair(properties);\n            };\n    \n            /**\n             * Encodes the specified TablePair message. Does not implicitly {@link op_def.TablePair.verify|verify} messages.\n             * @function encode\n             * @memberof op_def.TablePair\n             * @static\n             * @param {op_def.ITablePair} message TablePair message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            TablePair.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.key != null && message.hasOwnProperty("key"))\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);\n                if (message.index != null && message.hasOwnProperty("index"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.index);\n                if (message.numberVal != null && message.hasOwnProperty("numberVal"))\n                    writer.uint32(/* id 3, wireType 1 =*/25).double(message.numberVal);\n                if (message.strVal != null && message.hasOwnProperty("strVal"))\n                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.strVal);\n                if (message.boolVal != null && message.hasOwnProperty("boolVal"))\n                    writer.uint32(/* id 5, wireType 0 =*/40).bool(message.boolVal);\n                if (message.subTable != null && message.hasOwnProperty("subTable"))\n                    $root.op_def.Table.encode(message.subTable, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified TablePair message, length delimited. Does not implicitly {@link op_def.TablePair.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_def.TablePair\n             * @static\n             * @param {op_def.ITablePair} message TablePair message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            TablePair.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a TablePair message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_def.TablePair\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_def.TablePair} TablePair\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            TablePair.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_def.TablePair();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.key = reader.string();\n                        break;\n                    case 2:\n                        message.index = reader.int32();\n                        break;\n                    case 3:\n                        message.numberVal = reader.double();\n                        break;\n                    case 4:\n                        message.strVal = reader.string();\n                        break;\n                    case 5:\n                        message.boolVal = reader.bool();\n                        break;\n                    case 6:\n                        message.subTable = $root.op_def.Table.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a TablePair message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_def.TablePair\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_def.TablePair} TablePair\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            TablePair.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a TablePair message.\n             * @function verify\n             * @memberof op_def.TablePair\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            TablePair.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                var properties = {};\n                if (message.key != null && message.hasOwnProperty("key")) {\n                    properties.keyOneof = 1;\n                    if (!$util.isString(message.key))\n                        return "key: string expected";\n                }\n                if (message.index != null && message.hasOwnProperty("index")) {\n                    if (properties.keyOneof === 1)\n                        return "keyOneof: multiple values";\n                    properties.keyOneof = 1;\n                    if (!$util.isInteger(message.index))\n                        return "index: integer expected";\n                }\n                if (message.numberVal != null && message.hasOwnProperty("numberVal")) {\n                    properties.valueOneof = 1;\n                    if (typeof message.numberVal !== "number")\n                        return "numberVal: number expected";\n                }\n                if (message.strVal != null && message.hasOwnProperty("strVal")) {\n                    if (properties.valueOneof === 1)\n                        return "valueOneof: multiple values";\n                    properties.valueOneof = 1;\n                    if (!$util.isString(message.strVal))\n                        return "strVal: string expected";\n                }\n                if (message.boolVal != null && message.hasOwnProperty("boolVal")) {\n                    if (properties.valueOneof === 1)\n                        return "valueOneof: multiple values";\n                    properties.valueOneof = 1;\n                    if (typeof message.boolVal !== "boolean")\n                        return "boolVal: boolean expected";\n                }\n                if (message.subTable != null && message.hasOwnProperty("subTable")) {\n                    if (properties.valueOneof === 1)\n                        return "valueOneof: multiple values";\n                    properties.valueOneof = 1;\n                    {\n                        var error = $root.op_def.Table.verify(message.subTable);\n                        if (error)\n                            return "subTable." + error;\n                    }\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a TablePair message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_def.TablePair\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_def.TablePair} TablePair\n             */\n            TablePair.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_def.TablePair)\n                    return object;\n                var message = new $root.op_def.TablePair();\n                if (object.key != null)\n                    message.key = String(object.key);\n                if (object.index != null)\n                    message.index = object.index | 0;\n                if (object.numberVal != null)\n                    message.numberVal = Number(object.numberVal);\n                if (object.strVal != null)\n                    message.strVal = String(object.strVal);\n                if (object.boolVal != null)\n                    message.boolVal = Boolean(object.boolVal);\n                if (object.subTable != null) {\n                    if (typeof object.subTable !== "object")\n                        throw TypeError(".op_def.TablePair.subTable: object expected");\n                    message.subTable = $root.op_def.Table.fromObject(object.subTable);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a TablePair message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_def.TablePair\n             * @static\n             * @param {op_def.TablePair} message TablePair\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            TablePair.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (message.key != null && message.hasOwnProperty("key")) {\n                    object.key = message.key;\n                    if (options.oneofs)\n                        object.keyOneof = "key";\n                }\n                if (message.index != null && message.hasOwnProperty("index")) {\n                    object.index = message.index;\n                    if (options.oneofs)\n                        object.keyOneof = "index";\n                }\n                if (message.numberVal != null && message.hasOwnProperty("numberVal")) {\n                    object.numberVal = options.json && !isFinite(message.numberVal) ? String(message.numberVal) : message.numberVal;\n                    if (options.oneofs)\n                        object.valueOneof = "numberVal";\n                }\n                if (message.strVal != null && message.hasOwnProperty("strVal")) {\n                    object.strVal = message.strVal;\n                    if (options.oneofs)\n                        object.valueOneof = "strVal";\n                }\n                if (message.boolVal != null && message.hasOwnProperty("boolVal")) {\n                    object.boolVal = message.boolVal;\n                    if (options.oneofs)\n                        object.valueOneof = "boolVal";\n                }\n                if (message.subTable != null && message.hasOwnProperty("subTable")) {\n                    object.subTable = $root.op_def.Table.toObject(message.subTable, options);\n                    if (options.oneofs)\n                        object.valueOneof = "subTable";\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this TablePair to JSON.\n             * @function toJSON\n             * @memberof op_def.TablePair\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            TablePair.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return TablePair;\n        })();\n    \n        return op_def;\n    })();\n    \n    $root.op_gameconfig = (function() {\n    \n        /**\n         * Namespace op_gameconfig.\n         * @exports op_gameconfig\n         * @namespace\n         */\n        var op_gameconfig = {};\n    \n        /**\n         * OPCODE enum.\n         * @name op_gameconfig.OPCODE\n         * @enum {string}\n         * @property {number} _OP_UNKNOWN=0 _OP_UNKNOWN value\n         */\n        op_gameconfig.OPCODE = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = "_OP_UNKNOWN"] = 0;\n            return values;\n        })();\n    \n        op_gameconfig.Display = (function() {\n    \n            /**\n             * Properties of a Display.\n             * @memberof op_gameconfig\n             * @interface IDisplay\n             * @property {string|null} [dataPath] Display dataPath\n             * @property {string|null} [texturePath] Display texturePath\n             */\n    \n            /**\n             * Constructs a new Display.\n             * @memberof op_gameconfig\n             * @classdesc Represents a Display.\n             * @implements IDisplay\n             * @constructor\n             * @param {op_gameconfig.IDisplay=} [properties] Properties to set\n             */\n            function Display(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Display dataPath.\n             * @member {string} dataPath\n             * @memberof op_gameconfig.Display\n             * @instance\n             */\n            Display.prototype.dataPath = "";\n    \n            /**\n             * Display texturePath.\n             * @member {string} texturePath\n             * @memberof op_gameconfig.Display\n             * @instance\n             */\n            Display.prototype.texturePath = "";\n    \n            /**\n             * Creates a new Display instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig.Display\n             * @static\n             * @param {op_gameconfig.IDisplay=} [properties] Properties to set\n             * @returns {op_gameconfig.Display} Display instance\n             */\n            Display.create = function create(properties) {\n                return new Display(properties);\n            };\n    \n            /**\n             * Encodes the specified Display message. Does not implicitly {@link op_gameconfig.Display.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig.Display\n             * @static\n             * @param {op_gameconfig.IDisplay} message Display message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Display.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.dataPath != null && message.hasOwnProperty("dataPath"))\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.dataPath);\n                if (message.texturePath != null && message.hasOwnProperty("texturePath"))\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.texturePath);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Display message, length delimited. Does not implicitly {@link op_gameconfig.Display.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig.Display\n             * @static\n             * @param {op_gameconfig.IDisplay} message Display message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Display.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a Display message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig.Display\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig.Display} Display\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Display.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig.Display();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.dataPath = reader.string();\n                        break;\n                    case 2:\n                        message.texturePath = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a Display message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig.Display\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig.Display} Display\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Display.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a Display message.\n             * @function verify\n             * @memberof op_gameconfig.Display\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Display.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.dataPath != null && message.hasOwnProperty("dataPath"))\n                    if (!$util.isString(message.dataPath))\n                        return "dataPath: string expected";\n                if (message.texturePath != null && message.hasOwnProperty("texturePath"))\n                    if (!$util.isString(message.texturePath))\n                        return "texturePath: string expected";\n                return null;\n            };\n    \n            /**\n             * Creates a Display message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig.Display\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig.Display} Display\n             */\n            Display.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig.Display)\n                    return object;\n                var message = new $root.op_gameconfig.Display();\n                if (object.dataPath != null)\n                    message.dataPath = String(object.dataPath);\n                if (object.texturePath != null)\n                    message.texturePath = String(object.texturePath);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a Display message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig.Display\n             * @static\n             * @param {op_gameconfig.Display} message Display\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Display.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.dataPath = "";\n                    object.texturePath = "";\n                }\n                if (message.dataPath != null && message.hasOwnProperty("dataPath"))\n                    object.dataPath = message.dataPath;\n                if (message.texturePath != null && message.hasOwnProperty("texturePath"))\n                    object.texturePath = message.texturePath;\n                return object;\n            };\n    \n            /**\n             * Converts this Display to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig.Display\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Display.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Display;\n        })();\n    \n        op_gameconfig.Attribute = (function() {\n    \n            /**\n             * Properties of an Attribute.\n             * @memberof op_gameconfig\n             * @interface IAttribute\n             * @property {string} name Attribute name\n             * @property {number|null} [intVal] Attribute intVal\n             * @property {string|null} [strVal] Attribute strVal\n             * @property {boolean|null} [boolVal] Attribute boolVal\n             */\n    \n            /**\n             * Constructs a new Attribute.\n             * @memberof op_gameconfig\n             * @classdesc Represents an Attribute.\n             * @implements IAttribute\n             * @constructor\n             * @param {op_gameconfig.IAttribute=} [properties] Properties to set\n             */\n            function Attribute(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Attribute name.\n             * @member {string} name\n             * @memberof op_gameconfig.Attribute\n             * @instance\n             */\n            Attribute.prototype.name = "";\n    \n            /**\n             * Attribute intVal.\n             * @member {number} intVal\n             * @memberof op_gameconfig.Attribute\n             * @instance\n             */\n            Attribute.prototype.intVal = 0;\n    \n            /**\n             * Attribute strVal.\n             * @member {string} strVal\n             * @memberof op_gameconfig.Attribute\n             * @instance\n             */\n            Attribute.prototype.strVal = "";\n    \n            /**\n             * Attribute boolVal.\n             * @member {boolean} boolVal\n             * @memberof op_gameconfig.Attribute\n             * @instance\n             */\n            Attribute.prototype.boolVal = false;\n    \n            /**\n             * Creates a new Attribute instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig.Attribute\n             * @static\n             * @param {op_gameconfig.IAttribute=} [properties] Properties to set\n             * @returns {op_gameconfig.Attribute} Attribute instance\n             */\n            Attribute.create = function create(properties) {\n                return new Attribute(properties);\n            };\n    \n            /**\n             * Encodes the specified Attribute message. Does not implicitly {@link op_gameconfig.Attribute.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig.Attribute\n             * @static\n             * @param {op_gameconfig.IAttribute} message Attribute message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Attribute.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n                if (message.intVal != null && message.hasOwnProperty("intVal"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.intVal);\n                if (message.strVal != null && message.hasOwnProperty("strVal"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.strVal);\n                if (message.boolVal != null && message.hasOwnProperty("boolVal"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).bool(message.boolVal);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Attribute message, length delimited. Does not implicitly {@link op_gameconfig.Attribute.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig.Attribute\n             * @static\n             * @param {op_gameconfig.IAttribute} message Attribute message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Attribute.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes an Attribute message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig.Attribute\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig.Attribute} Attribute\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Attribute.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig.Attribute();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.name = reader.string();\n                        break;\n                    case 2:\n                        message.intVal = reader.int32();\n                        break;\n                    case 3:\n                        message.strVal = reader.string();\n                        break;\n                    case 4:\n                        message.boolVal = reader.bool();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("name"))\n                    throw $util.ProtocolError("missing required \'name\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes an Attribute message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig.Attribute\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig.Attribute} Attribute\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Attribute.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies an Attribute message.\n             * @function verify\n             * @memberof op_gameconfig.Attribute\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Attribute.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.name))\n                    return "name: string expected";\n                if (message.intVal != null && message.hasOwnProperty("intVal"))\n                    if (!$util.isInteger(message.intVal))\n                        return "intVal: integer expected";\n                if (message.strVal != null && message.hasOwnProperty("strVal"))\n                    if (!$util.isString(message.strVal))\n                        return "strVal: string expected";\n                if (message.boolVal != null && message.hasOwnProperty("boolVal"))\n                    if (typeof message.boolVal !== "boolean")\n                        return "boolVal: boolean expected";\n                return null;\n            };\n    \n            /**\n             * Creates an Attribute message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig.Attribute\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig.Attribute} Attribute\n             */\n            Attribute.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig.Attribute)\n                    return object;\n                var message = new $root.op_gameconfig.Attribute();\n                if (object.name != null)\n                    message.name = String(object.name);\n                if (object.intVal != null)\n                    message.intVal = object.intVal | 0;\n                if (object.strVal != null)\n                    message.strVal = String(object.strVal);\n                if (object.boolVal != null)\n                    message.boolVal = Boolean(object.boolVal);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from an Attribute message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig.Attribute\n             * @static\n             * @param {op_gameconfig.Attribute} message Attribute\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Attribute.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.name = "";\n                    object.intVal = 0;\n                    object.strVal = "";\n                    object.boolVal = false;\n                }\n                if (message.name != null && message.hasOwnProperty("name"))\n                    object.name = message.name;\n                if (message.intVal != null && message.hasOwnProperty("intVal"))\n                    object.intVal = message.intVal;\n                if (message.strVal != null && message.hasOwnProperty("strVal"))\n                    object.strVal = message.strVal;\n                if (message.boolVal != null && message.hasOwnProperty("boolVal"))\n                    object.boolVal = message.boolVal;\n                return object;\n            };\n    \n            /**\n             * Converts this Attribute to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig.Attribute\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Attribute.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Attribute;\n        })();\n    \n        op_gameconfig.FuncArg = (function() {\n    \n            /**\n             * Properties of a FuncArg.\n             * @memberof op_gameconfig\n             * @interface IFuncArg\n             * @property {string} argName FuncArg argName\n             * @property {boolean|null} [boolValue] FuncArg boolValue\n             * @property {number|null} [numberValue] FuncArg numberValue\n             * @property {string|null} [strValue] FuncArg strValue\n             */\n    \n            /**\n             * Constructs a new FuncArg.\n             * @memberof op_gameconfig\n             * @classdesc Represents a FuncArg.\n             * @implements IFuncArg\n             * @constructor\n             * @param {op_gameconfig.IFuncArg=} [properties] Properties to set\n             */\n            function FuncArg(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * FuncArg argName.\n             * @member {string} argName\n             * @memberof op_gameconfig.FuncArg\n             * @instance\n             */\n            FuncArg.prototype.argName = "";\n    \n            /**\n             * FuncArg boolValue.\n             * @member {boolean} boolValue\n             * @memberof op_gameconfig.FuncArg\n             * @instance\n             */\n            FuncArg.prototype.boolValue = false;\n    \n            /**\n             * FuncArg numberValue.\n             * @member {number} numberValue\n             * @memberof op_gameconfig.FuncArg\n             * @instance\n             */\n            FuncArg.prototype.numberValue = 0;\n    \n            /**\n             * FuncArg strValue.\n             * @member {string} strValue\n             * @memberof op_gameconfig.FuncArg\n             * @instance\n             */\n            FuncArg.prototype.strValue = "";\n    \n            // OneOf field names bound to virtual getters and setters\n            var $oneOfFields;\n    \n            /**\n             * FuncArg argValueOneOf.\n             * @member {"boolValue"|"numberValue"|"strValue"|undefined} argValueOneOf\n             * @memberof op_gameconfig.FuncArg\n             * @instance\n             */\n            Object.defineProperty(FuncArg.prototype, "argValueOneOf", {\n                get: $util.oneOfGetter($oneOfFields = ["boolValue", "numberValue", "strValue"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n    \n            /**\n             * Creates a new FuncArg instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig.FuncArg\n             * @static\n             * @param {op_gameconfig.IFuncArg=} [properties] Properties to set\n             * @returns {op_gameconfig.FuncArg} FuncArg instance\n             */\n            FuncArg.create = function create(properties) {\n                return new FuncArg(properties);\n            };\n    \n            /**\n             * Encodes the specified FuncArg message. Does not implicitly {@link op_gameconfig.FuncArg.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig.FuncArg\n             * @static\n             * @param {op_gameconfig.IFuncArg} message FuncArg message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            FuncArg.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.argName);\n                if (message.boolValue != null && message.hasOwnProperty("boolValue"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).bool(message.boolValue);\n                if (message.numberValue != null && message.hasOwnProperty("numberValue"))\n                    writer.uint32(/* id 3, wireType 1 =*/25).double(message.numberValue);\n                if (message.strValue != null && message.hasOwnProperty("strValue"))\n                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.strValue);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified FuncArg message, length delimited. Does not implicitly {@link op_gameconfig.FuncArg.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig.FuncArg\n             * @static\n             * @param {op_gameconfig.IFuncArg} message FuncArg message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            FuncArg.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a FuncArg message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig.FuncArg\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig.FuncArg} FuncArg\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            FuncArg.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig.FuncArg();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.argName = reader.string();\n                        break;\n                    case 2:\n                        message.boolValue = reader.bool();\n                        break;\n                    case 3:\n                        message.numberValue = reader.double();\n                        break;\n                    case 4:\n                        message.strValue = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("argName"))\n                    throw $util.ProtocolError("missing required \'argName\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a FuncArg message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig.FuncArg\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig.FuncArg} FuncArg\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            FuncArg.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a FuncArg message.\n             * @function verify\n             * @memberof op_gameconfig.FuncArg\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            FuncArg.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                var properties = {};\n                if (!$util.isString(message.argName))\n                    return "argName: string expected";\n                if (message.boolValue != null && message.hasOwnProperty("boolValue")) {\n                    properties.argValueOneOf = 1;\n                    if (typeof message.boolValue !== "boolean")\n                        return "boolValue: boolean expected";\n                }\n                if (message.numberValue != null && message.hasOwnProperty("numberValue")) {\n                    if (properties.argValueOneOf === 1)\n                        return "argValueOneOf: multiple values";\n                    properties.argValueOneOf = 1;\n                    if (typeof message.numberValue !== "number")\n                        return "numberValue: number expected";\n                }\n                if (message.strValue != null && message.hasOwnProperty("strValue")) {\n                    if (properties.argValueOneOf === 1)\n                        return "argValueOneOf: multiple values";\n                    properties.argValueOneOf = 1;\n                    if (!$util.isString(message.strValue))\n                        return "strValue: string expected";\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a FuncArg message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig.FuncArg\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig.FuncArg} FuncArg\n             */\n            FuncArg.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig.FuncArg)\n                    return object;\n                var message = new $root.op_gameconfig.FuncArg();\n                if (object.argName != null)\n                    message.argName = String(object.argName);\n                if (object.boolValue != null)\n                    message.boolValue = Boolean(object.boolValue);\n                if (object.numberValue != null)\n                    message.numberValue = Number(object.numberValue);\n                if (object.strValue != null)\n                    message.strValue = String(object.strValue);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a FuncArg message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig.FuncArg\n             * @static\n             * @param {op_gameconfig.FuncArg} message FuncArg\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            FuncArg.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.argName = "";\n                if (message.argName != null && message.hasOwnProperty("argName"))\n                    object.argName = message.argName;\n                if (message.boolValue != null && message.hasOwnProperty("boolValue")) {\n                    object.boolValue = message.boolValue;\n                    if (options.oneofs)\n                        object.argValueOneOf = "boolValue";\n                }\n                if (message.numberValue != null && message.hasOwnProperty("numberValue")) {\n                    object.numberValue = options.json && !isFinite(message.numberValue) ? String(message.numberValue) : message.numberValue;\n                    if (options.oneofs)\n                        object.argValueOneOf = "numberValue";\n                }\n                if (message.strValue != null && message.hasOwnProperty("strValue")) {\n                    object.strValue = message.strValue;\n                    if (options.oneofs)\n                        object.argValueOneOf = "strValue";\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this FuncArg to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig.FuncArg\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            FuncArg.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return FuncArg;\n        })();\n    \n        op_gameconfig.Func = (function() {\n    \n            /**\n             * Properties of a Func.\n             * @memberof op_gameconfig\n             * @interface IFunc\n             * @property {string} fileName Func fileName\n             * @property {string} funcName Func funcName\n             * @property {string|null} [version] Func version\n             * @property {Array.<op_gameconfig.IFuncArg>|null} [funcArgs] Func funcArgs\n             */\n    \n            /**\n             * Constructs a new Func.\n             * @memberof op_gameconfig\n             * @classdesc Represents a Func.\n             * @implements IFunc\n             * @constructor\n             * @param {op_gameconfig.IFunc=} [properties] Properties to set\n             */\n            function Func(properties) {\n                this.funcArgs = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Func fileName.\n             * @member {string} fileName\n             * @memberof op_gameconfig.Func\n             * @instance\n             */\n            Func.prototype.fileName = "";\n    \n            /**\n             * Func funcName.\n             * @member {string} funcName\n             * @memberof op_gameconfig.Func\n             * @instance\n             */\n            Func.prototype.funcName = "";\n    \n            /**\n             * Func version.\n             * @member {string} version\n             * @memberof op_gameconfig.Func\n             * @instance\n             */\n            Func.prototype.version = "";\n    \n            /**\n             * Func funcArgs.\n             * @member {Array.<op_gameconfig.IFuncArg>} funcArgs\n             * @memberof op_gameconfig.Func\n             * @instance\n             */\n            Func.prototype.funcArgs = $util.emptyArray;\n    \n            /**\n             * Creates a new Func instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig.Func\n             * @static\n             * @param {op_gameconfig.IFunc=} [properties] Properties to set\n             * @returns {op_gameconfig.Func} Func instance\n             */\n            Func.create = function create(properties) {\n                return new Func(properties);\n            };\n    \n            /**\n             * Encodes the specified Func message. Does not implicitly {@link op_gameconfig.Func.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig.Func\n             * @static\n             * @param {op_gameconfig.IFunc} message Func message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Func.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.fileName);\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.funcName);\n                if (message.version != null && message.hasOwnProperty("version"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.version);\n                if (message.funcArgs != null && message.funcArgs.length)\n                    for (var i = 0; i < message.funcArgs.length; ++i)\n                        $root.op_gameconfig.FuncArg.encode(message.funcArgs[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Func message, length delimited. Does not implicitly {@link op_gameconfig.Func.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig.Func\n             * @static\n             * @param {op_gameconfig.IFunc} message Func message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Func.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a Func message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig.Func\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig.Func} Func\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Func.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig.Func();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.fileName = reader.string();\n                        break;\n                    case 2:\n                        message.funcName = reader.string();\n                        break;\n                    case 3:\n                        message.version = reader.string();\n                        break;\n                    case 4:\n                        if (!(message.funcArgs && message.funcArgs.length))\n                            message.funcArgs = [];\n                        message.funcArgs.push($root.op_gameconfig.FuncArg.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("fileName"))\n                    throw $util.ProtocolError("missing required \'fileName\'", { instance: message });\n                if (!message.hasOwnProperty("funcName"))\n                    throw $util.ProtocolError("missing required \'funcName\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a Func message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig.Func\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig.Func} Func\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Func.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a Func message.\n             * @function verify\n             * @memberof op_gameconfig.Func\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Func.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.fileName))\n                    return "fileName: string expected";\n                if (!$util.isString(message.funcName))\n                    return "funcName: string expected";\n                if (message.version != null && message.hasOwnProperty("version"))\n                    if (!$util.isString(message.version))\n                        return "version: string expected";\n                if (message.funcArgs != null && message.hasOwnProperty("funcArgs")) {\n                    if (!Array.isArray(message.funcArgs))\n                        return "funcArgs: array expected";\n                    for (var i = 0; i < message.funcArgs.length; ++i) {\n                        var error = $root.op_gameconfig.FuncArg.verify(message.funcArgs[i]);\n                        if (error)\n                            return "funcArgs." + error;\n                    }\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a Func message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig.Func\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig.Func} Func\n             */\n            Func.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig.Func)\n                    return object;\n                var message = new $root.op_gameconfig.Func();\n                if (object.fileName != null)\n                    message.fileName = String(object.fileName);\n                if (object.funcName != null)\n                    message.funcName = String(object.funcName);\n                if (object.version != null)\n                    message.version = String(object.version);\n                if (object.funcArgs) {\n                    if (!Array.isArray(object.funcArgs))\n                        throw TypeError(".op_gameconfig.Func.funcArgs: array expected");\n                    message.funcArgs = [];\n                    for (var i = 0; i < object.funcArgs.length; ++i) {\n                        if (typeof object.funcArgs[i] !== "object")\n                            throw TypeError(".op_gameconfig.Func.funcArgs: object expected");\n                        message.funcArgs[i] = $root.op_gameconfig.FuncArg.fromObject(object.funcArgs[i]);\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a Func message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig.Func\n             * @static\n             * @param {op_gameconfig.Func} message Func\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Func.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.funcArgs = [];\n                if (options.defaults) {\n                    object.fileName = "";\n                    object.funcName = "";\n                    object.version = "";\n                }\n                if (message.fileName != null && message.hasOwnProperty("fileName"))\n                    object.fileName = message.fileName;\n                if (message.funcName != null && message.hasOwnProperty("funcName"))\n                    object.funcName = message.funcName;\n                if (message.version != null && message.hasOwnProperty("version"))\n                    object.version = message.version;\n                if (message.funcArgs && message.funcArgs.length) {\n                    object.funcArgs = [];\n                    for (var j = 0; j < message.funcArgs.length; ++j)\n                        object.funcArgs[j] = $root.op_gameconfig.FuncArg.toObject(message.funcArgs[j], options);\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this Func to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig.Func\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Func.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Func;\n        })();\n    \n        op_gameconfig.ItemEvent = (function() {\n    \n            /**\n             * Properties of an ItemEvent.\n             * @memberof op_gameconfig\n             * @interface IItemEvent\n             * @property {op_gameconfig.IFunc|null} [onItemCreate] ItemEvent onItemCreate\n             * @property {op_gameconfig.IFunc|null} [onItemDestroy] ItemEvent onItemDestroy\n             * @property {op_gameconfig.IFunc|null} [onItemAttributeChange] ItemEvent onItemAttributeChange\n             */\n    \n            /**\n             * Constructs a new ItemEvent.\n             * @memberof op_gameconfig\n             * @classdesc Represents an ItemEvent.\n             * @implements IItemEvent\n             * @constructor\n             * @param {op_gameconfig.IItemEvent=} [properties] Properties to set\n             */\n            function ItemEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * ItemEvent onItemCreate.\n             * @member {op_gameconfig.IFunc|null|undefined} onItemCreate\n             * @memberof op_gameconfig.ItemEvent\n             * @instance\n             */\n            ItemEvent.prototype.onItemCreate = null;\n    \n            /**\n             * ItemEvent onItemDestroy.\n             * @member {op_gameconfig.IFunc|null|undefined} onItemDestroy\n             * @memberof op_gameconfig.ItemEvent\n             * @instance\n             */\n            ItemEvent.prototype.onItemDestroy = null;\n    \n            /**\n             * ItemEvent onItemAttributeChange.\n             * @member {op_gameconfig.IFunc|null|undefined} onItemAttributeChange\n             * @memberof op_gameconfig.ItemEvent\n             * @instance\n             */\n            ItemEvent.prototype.onItemAttributeChange = null;\n    \n            /**\n             * Creates a new ItemEvent instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig.ItemEvent\n             * @static\n             * @param {op_gameconfig.IItemEvent=} [properties] Properties to set\n             * @returns {op_gameconfig.ItemEvent} ItemEvent instance\n             */\n            ItemEvent.create = function create(properties) {\n                return new ItemEvent(properties);\n            };\n    \n            /**\n             * Encodes the specified ItemEvent message. Does not implicitly {@link op_gameconfig.ItemEvent.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig.ItemEvent\n             * @static\n             * @param {op_gameconfig.IItemEvent} message ItemEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ItemEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.onItemCreate != null && message.hasOwnProperty("onItemCreate"))\n                    $root.op_gameconfig.Func.encode(message.onItemCreate, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.onItemDestroy != null && message.hasOwnProperty("onItemDestroy"))\n                    $root.op_gameconfig.Func.encode(message.onItemDestroy, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                if (message.onItemAttributeChange != null && message.hasOwnProperty("onItemAttributeChange"))\n                    $root.op_gameconfig.Func.encode(message.onItemAttributeChange, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified ItemEvent message, length delimited. Does not implicitly {@link op_gameconfig.ItemEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig.ItemEvent\n             * @static\n             * @param {op_gameconfig.IItemEvent} message ItemEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ItemEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes an ItemEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig.ItemEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig.ItemEvent} ItemEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ItemEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig.ItemEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.onItemCreate = $root.op_gameconfig.Func.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        message.onItemDestroy = $root.op_gameconfig.Func.decode(reader, reader.uint32());\n                        break;\n                    case 3:\n                        message.onItemAttributeChange = $root.op_gameconfig.Func.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes an ItemEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig.ItemEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig.ItemEvent} ItemEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ItemEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies an ItemEvent message.\n             * @function verify\n             * @memberof op_gameconfig.ItemEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            ItemEvent.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.onItemCreate != null && message.hasOwnProperty("onItemCreate")) {\n                    var error = $root.op_gameconfig.Func.verify(message.onItemCreate);\n                    if (error)\n                        return "onItemCreate." + error;\n                }\n                if (message.onItemDestroy != null && message.hasOwnProperty("onItemDestroy")) {\n                    var error = $root.op_gameconfig.Func.verify(message.onItemDestroy);\n                    if (error)\n                        return "onItemDestroy." + error;\n                }\n                if (message.onItemAttributeChange != null && message.hasOwnProperty("onItemAttributeChange")) {\n                    var error = $root.op_gameconfig.Func.verify(message.onItemAttributeChange);\n                    if (error)\n                        return "onItemAttributeChange." + error;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates an ItemEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig.ItemEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig.ItemEvent} ItemEvent\n             */\n            ItemEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig.ItemEvent)\n                    return object;\n                var message = new $root.op_gameconfig.ItemEvent();\n                if (object.onItemCreate != null) {\n                    if (typeof object.onItemCreate !== "object")\n                        throw TypeError(".op_gameconfig.ItemEvent.onItemCreate: object expected");\n                    message.onItemCreate = $root.op_gameconfig.Func.fromObject(object.onItemCreate);\n                }\n                if (object.onItemDestroy != null) {\n                    if (typeof object.onItemDestroy !== "object")\n                        throw TypeError(".op_gameconfig.ItemEvent.onItemDestroy: object expected");\n                    message.onItemDestroy = $root.op_gameconfig.Func.fromObject(object.onItemDestroy);\n                }\n                if (object.onItemAttributeChange != null) {\n                    if (typeof object.onItemAttributeChange !== "object")\n                        throw TypeError(".op_gameconfig.ItemEvent.onItemAttributeChange: object expected");\n                    message.onItemAttributeChange = $root.op_gameconfig.Func.fromObject(object.onItemAttributeChange);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from an ItemEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig.ItemEvent\n             * @static\n             * @param {op_gameconfig.ItemEvent} message ItemEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            ItemEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.onItemCreate = null;\n                    object.onItemDestroy = null;\n                    object.onItemAttributeChange = null;\n                }\n                if (message.onItemCreate != null && message.hasOwnProperty("onItemCreate"))\n                    object.onItemCreate = $root.op_gameconfig.Func.toObject(message.onItemCreate, options);\n                if (message.onItemDestroy != null && message.hasOwnProperty("onItemDestroy"))\n                    object.onItemDestroy = $root.op_gameconfig.Func.toObject(message.onItemDestroy, options);\n                if (message.onItemAttributeChange != null && message.hasOwnProperty("onItemAttributeChange"))\n                    object.onItemAttributeChange = $root.op_gameconfig.Func.toObject(message.onItemAttributeChange, options);\n                return object;\n            };\n    \n            /**\n             * Converts this ItemEvent to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig.ItemEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            ItemEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return ItemEvent;\n        })();\n    \n        op_gameconfig.ElementEvent = (function() {\n    \n            /**\n             * Properties of an ElementEvent.\n             * @memberof op_gameconfig\n             * @interface IElementEvent\n             * @property {op_gameconfig.IFunc|null} [onElementCreate] ElementEvent onElementCreate\n             * @property {op_gameconfig.IFunc|null} [onElementDestroy] ElementEvent onElementDestroy\n             * @property {op_gameconfig.IFunc|null} [onElementHit] ElementEvent onElementHit\n             * @property {op_gameconfig.IFunc|null} [onElementMove] ElementEvent onElementMove\n             * @property {op_gameconfig.IFunc|null} [onElementAttributeChange] ElementEvent onElementAttributeChange\n             * @property {op_gameconfig.IFunc|null} [onElementLeave] ElementEvent onElementLeave\n             * @property {op_gameconfig.IFunc|null} [onElementStop] ElementEvent onElementStop\n             */\n    \n            /**\n             * Constructs a new ElementEvent.\n             * @memberof op_gameconfig\n             * @classdesc Represents an ElementEvent.\n             * @implements IElementEvent\n             * @constructor\n             * @param {op_gameconfig.IElementEvent=} [properties] Properties to set\n             */\n            function ElementEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * ElementEvent onElementCreate.\n             * @member {op_gameconfig.IFunc|null|undefined} onElementCreate\n             * @memberof op_gameconfig.ElementEvent\n             * @instance\n             */\n            ElementEvent.prototype.onElementCreate = null;\n    \n            /**\n             * ElementEvent onElementDestroy.\n             * @member {op_gameconfig.IFunc|null|undefined} onElementDestroy\n             * @memberof op_gameconfig.ElementEvent\n             * @instance\n             */\n            ElementEvent.prototype.onElementDestroy = null;\n    \n            /**\n             * ElementEvent onElementHit.\n             * @member {op_gameconfig.IFunc|null|undefined} onElementHit\n             * @memberof op_gameconfig.ElementEvent\n             * @instance\n             */\n            ElementEvent.prototype.onElementHit = null;\n    \n            /**\n             * ElementEvent onElementMove.\n             * @member {op_gameconfig.IFunc|null|undefined} onElementMove\n             * @memberof op_gameconfig.ElementEvent\n             * @instance\n             */\n            ElementEvent.prototype.onElementMove = null;\n    \n            /**\n             * ElementEvent onElementAttributeChange.\n             * @member {op_gameconfig.IFunc|null|undefined} onElementAttributeChange\n             * @memberof op_gameconfig.ElementEvent\n             * @instance\n             */\n            ElementEvent.prototype.onElementAttributeChange = null;\n    \n            /**\n             * ElementEvent onElementLeave.\n             * @member {op_gameconfig.IFunc|null|undefined} onElementLeave\n             * @memberof op_gameconfig.ElementEvent\n             * @instance\n             */\n            ElementEvent.prototype.onElementLeave = null;\n    \n            /**\n             * ElementEvent onElementStop.\n             * @member {op_gameconfig.IFunc|null|undefined} onElementStop\n             * @memberof op_gameconfig.ElementEvent\n             * @instance\n             */\n            ElementEvent.prototype.onElementStop = null;\n    \n            /**\n             * Creates a new ElementEvent instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig.ElementEvent\n             * @static\n             * @param {op_gameconfig.IElementEvent=} [properties] Properties to set\n             * @returns {op_gameconfig.ElementEvent} ElementEvent instance\n             */\n            ElementEvent.create = function create(properties) {\n                return new ElementEvent(properties);\n            };\n    \n            /**\n             * Encodes the specified ElementEvent message. Does not implicitly {@link op_gameconfig.ElementEvent.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig.ElementEvent\n             * @static\n             * @param {op_gameconfig.IElementEvent} message ElementEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ElementEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.onElementCreate != null && message.hasOwnProperty("onElementCreate"))\n                    $root.op_gameconfig.Func.encode(message.onElementCreate, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.onElementDestroy != null && message.hasOwnProperty("onElementDestroy"))\n                    $root.op_gameconfig.Func.encode(message.onElementDestroy, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                if (message.onElementHit != null && message.hasOwnProperty("onElementHit"))\n                    $root.op_gameconfig.Func.encode(message.onElementHit, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                if (message.onElementMove != null && message.hasOwnProperty("onElementMove"))\n                    $root.op_gameconfig.Func.encode(message.onElementMove, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n                if (message.onElementAttributeChange != null && message.hasOwnProperty("onElementAttributeChange"))\n                    $root.op_gameconfig.Func.encode(message.onElementAttributeChange, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n                if (message.onElementLeave != null && message.hasOwnProperty("onElementLeave"))\n                    $root.op_gameconfig.Func.encode(message.onElementLeave, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n                if (message.onElementStop != null && message.hasOwnProperty("onElementStop"))\n                    $root.op_gameconfig.Func.encode(message.onElementStop, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified ElementEvent message, length delimited. Does not implicitly {@link op_gameconfig.ElementEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig.ElementEvent\n             * @static\n             * @param {op_gameconfig.IElementEvent} message ElementEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ElementEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes an ElementEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig.ElementEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig.ElementEvent} ElementEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ElementEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig.ElementEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.onElementCreate = $root.op_gameconfig.Func.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        message.onElementDestroy = $root.op_gameconfig.Func.decode(reader, reader.uint32());\n                        break;\n                    case 3:\n                        message.onElementHit = $root.op_gameconfig.Func.decode(reader, reader.uint32());\n                        break;\n                    case 4:\n                        message.onElementMove = $root.op_gameconfig.Func.decode(reader, reader.uint32());\n                        break;\n                    case 5:\n                        message.onElementAttributeChange = $root.op_gameconfig.Func.decode(reader, reader.uint32());\n                        break;\n                    case 6:\n                        message.onElementLeave = $root.op_gameconfig.Func.decode(reader, reader.uint32());\n                        break;\n                    case 7:\n                        message.onElementStop = $root.op_gameconfig.Func.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes an ElementEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig.ElementEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig.ElementEvent} ElementEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ElementEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies an ElementEvent message.\n             * @function verify\n             * @memberof op_gameconfig.ElementEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            ElementEvent.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.onElementCreate != null && message.hasOwnProperty("onElementCreate")) {\n                    var error = $root.op_gameconfig.Func.verify(message.onElementCreate);\n                    if (error)\n                        return "onElementCreate." + error;\n                }\n                if (message.onElementDestroy != null && message.hasOwnProperty("onElementDestroy")) {\n                    var error = $root.op_gameconfig.Func.verify(message.onElementDestroy);\n                    if (error)\n                        return "onElementDestroy." + error;\n                }\n                if (message.onElementHit != null && message.hasOwnProperty("onElementHit")) {\n                    var error = $root.op_gameconfig.Func.verify(message.onElementHit);\n                    if (error)\n                        return "onElementHit." + error;\n                }\n                if (message.onElementMove != null && message.hasOwnProperty("onElementMove")) {\n                    var error = $root.op_gameconfig.Func.verify(message.onElementMove);\n                    if (error)\n                        return "onElementMove." + error;\n                }\n                if (message.onElementAttributeChange != null && message.hasOwnProperty("onElementAttributeChange")) {\n                    var error = $root.op_gameconfig.Func.verify(message.onElementAttributeChange);\n                    if (error)\n                        return "onElementAttributeChange." + error;\n                }\n                if (message.onElementLeave != null && message.hasOwnProperty("onElementLeave")) {\n                    var error = $root.op_gameconfig.Func.verify(message.onElementLeave);\n                    if (error)\n                        return "onElementLeave." + error;\n                }\n                if (message.onElementStop != null && message.hasOwnProperty("onElementStop")) {\n                    var error = $root.op_gameconfig.Func.verify(message.onElementStop);\n                    if (error)\n                        return "onElementStop." + error;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates an ElementEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig.ElementEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig.ElementEvent} ElementEvent\n             */\n            ElementEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig.ElementEvent)\n                    return object;\n                var message = new $root.op_gameconfig.ElementEvent();\n                if (object.onElementCreate != null) {\n                    if (typeof object.onElementCreate !== "object")\n                        throw TypeError(".op_gameconfig.ElementEvent.onElementCreate: object expected");\n                    message.onElementCreate = $root.op_gameconfig.Func.fromObject(object.onElementCreate);\n                }\n                if (object.onElementDestroy != null) {\n                    if (typeof object.onElementDestroy !== "object")\n                        throw TypeError(".op_gameconfig.ElementEvent.onElementDestroy: object expected");\n                    message.onElementDestroy = $root.op_gameconfig.Func.fromObject(object.onElementDestroy);\n                }\n                if (object.onElementHit != null) {\n                    if (typeof object.onElementHit !== "object")\n                        throw TypeError(".op_gameconfig.ElementEvent.onElementHit: object expected");\n                    message.onElementHit = $root.op_gameconfig.Func.fromObject(object.onElementHit);\n                }\n                if (object.onElementMove != null) {\n                    if (typeof object.onElementMove !== "object")\n                        throw TypeError(".op_gameconfig.ElementEvent.onElementMove: object expected");\n                    message.onElementMove = $root.op_gameconfig.Func.fromObject(object.onElementMove);\n                }\n                if (object.onElementAttributeChange != null) {\n                    if (typeof object.onElementAttributeChange !== "object")\n                        throw TypeError(".op_gameconfig.ElementEvent.onElementAttributeChange: object expected");\n                    message.onElementAttributeChange = $root.op_gameconfig.Func.fromObject(object.onElementAttributeChange);\n                }\n                if (object.onElementLeave != null) {\n                    if (typeof object.onElementLeave !== "object")\n                        throw TypeError(".op_gameconfig.ElementEvent.onElementLeave: object expected");\n                    message.onElementLeave = $root.op_gameconfig.Func.fromObject(object.onElementLeave);\n                }\n                if (object.onElementStop != null) {\n                    if (typeof object.onElementStop !== "object")\n                        throw TypeError(".op_gameconfig.ElementEvent.onElementStop: object expected");\n                    message.onElementStop = $root.op_gameconfig.Func.fromObject(object.onElementStop);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from an ElementEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig.ElementEvent\n             * @static\n             * @param {op_gameconfig.ElementEvent} message ElementEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            ElementEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.onElementCreate = null;\n                    object.onElementDestroy = null;\n                    object.onElementHit = null;\n                    object.onElementMove = null;\n                    object.onElementAttributeChange = null;\n                    object.onElementLeave = null;\n                    object.onElementStop = null;\n                }\n                if (message.onElementCreate != null && message.hasOwnProperty("onElementCreate"))\n                    object.onElementCreate = $root.op_gameconfig.Func.toObject(message.onElementCreate, options);\n                if (message.onElementDestroy != null && message.hasOwnProperty("onElementDestroy"))\n                    object.onElementDestroy = $root.op_gameconfig.Func.toObject(message.onElementDestroy, options);\n                if (message.onElementHit != null && message.hasOwnProperty("onElementHit"))\n                    object.onElementHit = $root.op_gameconfig.Func.toObject(message.onElementHit, options);\n                if (message.onElementMove != null && message.hasOwnProperty("onElementMove"))\n                    object.onElementMove = $root.op_gameconfig.Func.toObject(message.onElementMove, options);\n                if (message.onElementAttributeChange != null && message.hasOwnProperty("onElementAttributeChange"))\n                    object.onElementAttributeChange = $root.op_gameconfig.Func.toObject(message.onElementAttributeChange, options);\n                if (message.onElementLeave != null && message.hasOwnProperty("onElementLeave"))\n                    object.onElementLeave = $root.op_gameconfig.Func.toObject(message.onElementLeave, options);\n                if (message.onElementStop != null && message.hasOwnProperty("onElementStop"))\n                    object.onElementStop = $root.op_gameconfig.Func.toObject(message.onElementStop, options);\n                return object;\n            };\n    \n            /**\n             * Converts this ElementEvent to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig.ElementEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            ElementEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return ElementEvent;\n        })();\n    \n        op_gameconfig.CharacterEvent = (function() {\n    \n            /**\n             * Properties of a CharacterEvent.\n             * @memberof op_gameconfig\n             * @interface ICharacterEvent\n             * @property {op_gameconfig.IFunc|null} [onCharacterHit] CharacterEvent onCharacterHit\n             * @property {op_gameconfig.IFunc|null} [onCharacterAttributeChange] CharacterEvent onCharacterAttributeChange\n             * @property {op_gameconfig.IFunc|null} [onCharacterMove] CharacterEvent onCharacterMove\n             * @property {op_gameconfig.IFunc|null} [onCharacterStop] CharacterEvent onCharacterStop\n             */\n    \n            /**\n             * Constructs a new CharacterEvent.\n             * @memberof op_gameconfig\n             * @classdesc Represents a CharacterEvent.\n             * @implements ICharacterEvent\n             * @constructor\n             * @param {op_gameconfig.ICharacterEvent=} [properties] Properties to set\n             */\n            function CharacterEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * CharacterEvent onCharacterHit.\n             * @member {op_gameconfig.IFunc|null|undefined} onCharacterHit\n             * @memberof op_gameconfig.CharacterEvent\n             * @instance\n             */\n            CharacterEvent.prototype.onCharacterHit = null;\n    \n            /**\n             * CharacterEvent onCharacterAttributeChange.\n             * @member {op_gameconfig.IFunc|null|undefined} onCharacterAttributeChange\n             * @memberof op_gameconfig.CharacterEvent\n             * @instance\n             */\n            CharacterEvent.prototype.onCharacterAttributeChange = null;\n    \n            /**\n             * CharacterEvent onCharacterMove.\n             * @member {op_gameconfig.IFunc|null|undefined} onCharacterMove\n             * @memberof op_gameconfig.CharacterEvent\n             * @instance\n             */\n            CharacterEvent.prototype.onCharacterMove = null;\n    \n            /**\n             * CharacterEvent onCharacterStop.\n             * @member {op_gameconfig.IFunc|null|undefined} onCharacterStop\n             * @memberof op_gameconfig.CharacterEvent\n             * @instance\n             */\n            CharacterEvent.prototype.onCharacterStop = null;\n    \n            /**\n             * Creates a new CharacterEvent instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig.CharacterEvent\n             * @static\n             * @param {op_gameconfig.ICharacterEvent=} [properties] Properties to set\n             * @returns {op_gameconfig.CharacterEvent} CharacterEvent instance\n             */\n            CharacterEvent.create = function create(properties) {\n                return new CharacterEvent(properties);\n            };\n    \n            /**\n             * Encodes the specified CharacterEvent message. Does not implicitly {@link op_gameconfig.CharacterEvent.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig.CharacterEvent\n             * @static\n             * @param {op_gameconfig.ICharacterEvent} message CharacterEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            CharacterEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.onCharacterHit != null && message.hasOwnProperty("onCharacterHit"))\n                    $root.op_gameconfig.Func.encode(message.onCharacterHit, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.onCharacterAttributeChange != null && message.hasOwnProperty("onCharacterAttributeChange"))\n                    $root.op_gameconfig.Func.encode(message.onCharacterAttributeChange, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                if (message.onCharacterMove != null && message.hasOwnProperty("onCharacterMove"))\n                    $root.op_gameconfig.Func.encode(message.onCharacterMove, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                if (message.onCharacterStop != null && message.hasOwnProperty("onCharacterStop"))\n                    $root.op_gameconfig.Func.encode(message.onCharacterStop, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified CharacterEvent message, length delimited. Does not implicitly {@link op_gameconfig.CharacterEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig.CharacterEvent\n             * @static\n             * @param {op_gameconfig.ICharacterEvent} message CharacterEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            CharacterEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a CharacterEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig.CharacterEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig.CharacterEvent} CharacterEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            CharacterEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig.CharacterEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.onCharacterHit = $root.op_gameconfig.Func.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        message.onCharacterAttributeChange = $root.op_gameconfig.Func.decode(reader, reader.uint32());\n                        break;\n                    case 3:\n                        message.onCharacterMove = $root.op_gameconfig.Func.decode(reader, reader.uint32());\n                        break;\n                    case 4:\n                        message.onCharacterStop = $root.op_gameconfig.Func.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a CharacterEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig.CharacterEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig.CharacterEvent} CharacterEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            CharacterEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a CharacterEvent message.\n             * @function verify\n             * @memberof op_gameconfig.CharacterEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            CharacterEvent.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.onCharacterHit != null && message.hasOwnProperty("onCharacterHit")) {\n                    var error = $root.op_gameconfig.Func.verify(message.onCharacterHit);\n                    if (error)\n                        return "onCharacterHit." + error;\n                }\n                if (message.onCharacterAttributeChange != null && message.hasOwnProperty("onCharacterAttributeChange")) {\n                    var error = $root.op_gameconfig.Func.verify(message.onCharacterAttributeChange);\n                    if (error)\n                        return "onCharacterAttributeChange." + error;\n                }\n                if (message.onCharacterMove != null && message.hasOwnProperty("onCharacterMove")) {\n                    var error = $root.op_gameconfig.Func.verify(message.onCharacterMove);\n                    if (error)\n                        return "onCharacterMove." + error;\n                }\n                if (message.onCharacterStop != null && message.hasOwnProperty("onCharacterStop")) {\n                    var error = $root.op_gameconfig.Func.verify(message.onCharacterStop);\n                    if (error)\n                        return "onCharacterStop." + error;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a CharacterEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig.CharacterEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig.CharacterEvent} CharacterEvent\n             */\n            CharacterEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig.CharacterEvent)\n                    return object;\n                var message = new $root.op_gameconfig.CharacterEvent();\n                if (object.onCharacterHit != null) {\n                    if (typeof object.onCharacterHit !== "object")\n                        throw TypeError(".op_gameconfig.CharacterEvent.onCharacterHit: object expected");\n                    message.onCharacterHit = $root.op_gameconfig.Func.fromObject(object.onCharacterHit);\n                }\n                if (object.onCharacterAttributeChange != null) {\n                    if (typeof object.onCharacterAttributeChange !== "object")\n                        throw TypeError(".op_gameconfig.CharacterEvent.onCharacterAttributeChange: object expected");\n                    message.onCharacterAttributeChange = $root.op_gameconfig.Func.fromObject(object.onCharacterAttributeChange);\n                }\n                if (object.onCharacterMove != null) {\n                    if (typeof object.onCharacterMove !== "object")\n                        throw TypeError(".op_gameconfig.CharacterEvent.onCharacterMove: object expected");\n                    message.onCharacterMove = $root.op_gameconfig.Func.fromObject(object.onCharacterMove);\n                }\n                if (object.onCharacterStop != null) {\n                    if (typeof object.onCharacterStop !== "object")\n                        throw TypeError(".op_gameconfig.CharacterEvent.onCharacterStop: object expected");\n                    message.onCharacterStop = $root.op_gameconfig.Func.fromObject(object.onCharacterStop);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a CharacterEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig.CharacterEvent\n             * @static\n             * @param {op_gameconfig.CharacterEvent} message CharacterEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            CharacterEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.onCharacterHit = null;\n                    object.onCharacterAttributeChange = null;\n                    object.onCharacterMove = null;\n                    object.onCharacterStop = null;\n                }\n                if (message.onCharacterHit != null && message.hasOwnProperty("onCharacterHit"))\n                    object.onCharacterHit = $root.op_gameconfig.Func.toObject(message.onCharacterHit, options);\n                if (message.onCharacterAttributeChange != null && message.hasOwnProperty("onCharacterAttributeChange"))\n                    object.onCharacterAttributeChange = $root.op_gameconfig.Func.toObject(message.onCharacterAttributeChange, options);\n                if (message.onCharacterMove != null && message.hasOwnProperty("onCharacterMove"))\n                    object.onCharacterMove = $root.op_gameconfig.Func.toObject(message.onCharacterMove, options);\n                if (message.onCharacterStop != null && message.hasOwnProperty("onCharacterStop"))\n                    object.onCharacterStop = $root.op_gameconfig.Func.toObject(message.onCharacterStop, options);\n                return object;\n            };\n    \n            /**\n             * Converts this CharacterEvent to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig.CharacterEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            CharacterEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return CharacterEvent;\n        })();\n    \n        op_gameconfig.TerrainEvent = (function() {\n    \n            /**\n             * Properties of a TerrainEvent.\n             * @memberof op_gameconfig\n             * @interface ITerrainEvent\n             * @property {op_gameconfig.IFunc|null} [onTerrainDestroy] TerrainEvent onTerrainDestroy\n             * @property {op_gameconfig.IFunc|null} [onTerrainOverFunc] TerrainEvent onTerrainOverFunc\n             * @property {op_gameconfig.IFunc|null} [onTerrainLeaveFunc] TerrainEvent onTerrainLeaveFunc\n             * @property {op_gameconfig.IFunc|null} [onTerrainSchedule] TerrainEvent onTerrainSchedule\n             * @property {op_gameconfig.IFunc|null} [onTerrainCreate] TerrainEvent onTerrainCreate\n             */\n    \n            /**\n             * Constructs a new TerrainEvent.\n             * @memberof op_gameconfig\n             * @classdesc Represents a TerrainEvent.\n             * @implements ITerrainEvent\n             * @constructor\n             * @param {op_gameconfig.ITerrainEvent=} [properties] Properties to set\n             */\n            function TerrainEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * TerrainEvent onTerrainDestroy.\n             * @member {op_gameconfig.IFunc|null|undefined} onTerrainDestroy\n             * @memberof op_gameconfig.TerrainEvent\n             * @instance\n             */\n            TerrainEvent.prototype.onTerrainDestroy = null;\n    \n            /**\n             * TerrainEvent onTerrainOverFunc.\n             * @member {op_gameconfig.IFunc|null|undefined} onTerrainOverFunc\n             * @memberof op_gameconfig.TerrainEvent\n             * @instance\n             */\n            TerrainEvent.prototype.onTerrainOverFunc = null;\n    \n            /**\n             * TerrainEvent onTerrainLeaveFunc.\n             * @member {op_gameconfig.IFunc|null|undefined} onTerrainLeaveFunc\n             * @memberof op_gameconfig.TerrainEvent\n             * @instance\n             */\n            TerrainEvent.prototype.onTerrainLeaveFunc = null;\n    \n            /**\n             * TerrainEvent onTerrainSchedule.\n             * @member {op_gameconfig.IFunc|null|undefined} onTerrainSchedule\n             * @memberof op_gameconfig.TerrainEvent\n             * @instance\n             */\n            TerrainEvent.prototype.onTerrainSchedule = null;\n    \n            /**\n             * TerrainEvent onTerrainCreate.\n             * @member {op_gameconfig.IFunc|null|undefined} onTerrainCreate\n             * @memberof op_gameconfig.TerrainEvent\n             * @instance\n             */\n            TerrainEvent.prototype.onTerrainCreate = null;\n    \n            /**\n             * Creates a new TerrainEvent instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig.TerrainEvent\n             * @static\n             * @param {op_gameconfig.ITerrainEvent=} [properties] Properties to set\n             * @returns {op_gameconfig.TerrainEvent} TerrainEvent instance\n             */\n            TerrainEvent.create = function create(properties) {\n                return new TerrainEvent(properties);\n            };\n    \n            /**\n             * Encodes the specified TerrainEvent message. Does not implicitly {@link op_gameconfig.TerrainEvent.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig.TerrainEvent\n             * @static\n             * @param {op_gameconfig.ITerrainEvent} message TerrainEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            TerrainEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.onTerrainDestroy != null && message.hasOwnProperty("onTerrainDestroy"))\n                    $root.op_gameconfig.Func.encode(message.onTerrainDestroy, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.onTerrainOverFunc != null && message.hasOwnProperty("onTerrainOverFunc"))\n                    $root.op_gameconfig.Func.encode(message.onTerrainOverFunc, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                if (message.onTerrainLeaveFunc != null && message.hasOwnProperty("onTerrainLeaveFunc"))\n                    $root.op_gameconfig.Func.encode(message.onTerrainLeaveFunc, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                if (message.onTerrainSchedule != null && message.hasOwnProperty("onTerrainSchedule"))\n                    $root.op_gameconfig.Func.encode(message.onTerrainSchedule, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n                if (message.onTerrainCreate != null && message.hasOwnProperty("onTerrainCreate"))\n                    $root.op_gameconfig.Func.encode(message.onTerrainCreate, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified TerrainEvent message, length delimited. Does not implicitly {@link op_gameconfig.TerrainEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig.TerrainEvent\n             * @static\n             * @param {op_gameconfig.ITerrainEvent} message TerrainEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            TerrainEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a TerrainEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig.TerrainEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig.TerrainEvent} TerrainEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            TerrainEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig.TerrainEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.onTerrainDestroy = $root.op_gameconfig.Func.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        message.onTerrainOverFunc = $root.op_gameconfig.Func.decode(reader, reader.uint32());\n                        break;\n                    case 3:\n                        message.onTerrainLeaveFunc = $root.op_gameconfig.Func.decode(reader, reader.uint32());\n                        break;\n                    case 4:\n                        message.onTerrainSchedule = $root.op_gameconfig.Func.decode(reader, reader.uint32());\n                        break;\n                    case 5:\n                        message.onTerrainCreate = $root.op_gameconfig.Func.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a TerrainEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig.TerrainEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig.TerrainEvent} TerrainEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            TerrainEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a TerrainEvent message.\n             * @function verify\n             * @memberof op_gameconfig.TerrainEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            TerrainEvent.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.onTerrainDestroy != null && message.hasOwnProperty("onTerrainDestroy")) {\n                    var error = $root.op_gameconfig.Func.verify(message.onTerrainDestroy);\n                    if (error)\n                        return "onTerrainDestroy." + error;\n                }\n                if (message.onTerrainOverFunc != null && message.hasOwnProperty("onTerrainOverFunc")) {\n                    var error = $root.op_gameconfig.Func.verify(message.onTerrainOverFunc);\n                    if (error)\n                        return "onTerrainOverFunc." + error;\n                }\n                if (message.onTerrainLeaveFunc != null && message.hasOwnProperty("onTerrainLeaveFunc")) {\n                    var error = $root.op_gameconfig.Func.verify(message.onTerrainLeaveFunc);\n                    if (error)\n                        return "onTerrainLeaveFunc." + error;\n                }\n                if (message.onTerrainSchedule != null && message.hasOwnProperty("onTerrainSchedule")) {\n                    var error = $root.op_gameconfig.Func.verify(message.onTerrainSchedule);\n                    if (error)\n                        return "onTerrainSchedule." + error;\n                }\n                if (message.onTerrainCreate != null && message.hasOwnProperty("onTerrainCreate")) {\n                    var error = $root.op_gameconfig.Func.verify(message.onTerrainCreate);\n                    if (error)\n                        return "onTerrainCreate." + error;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a TerrainEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig.TerrainEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig.TerrainEvent} TerrainEvent\n             */\n            TerrainEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig.TerrainEvent)\n                    return object;\n                var message = new $root.op_gameconfig.TerrainEvent();\n                if (object.onTerrainDestroy != null) {\n                    if (typeof object.onTerrainDestroy !== "object")\n                        throw TypeError(".op_gameconfig.TerrainEvent.onTerrainDestroy: object expected");\n                    message.onTerrainDestroy = $root.op_gameconfig.Func.fromObject(object.onTerrainDestroy);\n                }\n                if (object.onTerrainOverFunc != null) {\n                    if (typeof object.onTerrainOverFunc !== "object")\n                        throw TypeError(".op_gameconfig.TerrainEvent.onTerrainOverFunc: object expected");\n                    message.onTerrainOverFunc = $root.op_gameconfig.Func.fromObject(object.onTerrainOverFunc);\n                }\n                if (object.onTerrainLeaveFunc != null) {\n                    if (typeof object.onTerrainLeaveFunc !== "object")\n                        throw TypeError(".op_gameconfig.TerrainEvent.onTerrainLeaveFunc: object expected");\n                    message.onTerrainLeaveFunc = $root.op_gameconfig.Func.fromObject(object.onTerrainLeaveFunc);\n                }\n                if (object.onTerrainSchedule != null) {\n                    if (typeof object.onTerrainSchedule !== "object")\n                        throw TypeError(".op_gameconfig.TerrainEvent.onTerrainSchedule: object expected");\n                    message.onTerrainSchedule = $root.op_gameconfig.Func.fromObject(object.onTerrainSchedule);\n                }\n                if (object.onTerrainCreate != null) {\n                    if (typeof object.onTerrainCreate !== "object")\n                        throw TypeError(".op_gameconfig.TerrainEvent.onTerrainCreate: object expected");\n                    message.onTerrainCreate = $root.op_gameconfig.Func.fromObject(object.onTerrainCreate);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a TerrainEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig.TerrainEvent\n             * @static\n             * @param {op_gameconfig.TerrainEvent} message TerrainEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            TerrainEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.onTerrainDestroy = null;\n                    object.onTerrainOverFunc = null;\n                    object.onTerrainLeaveFunc = null;\n                    object.onTerrainSchedule = null;\n                    object.onTerrainCreate = null;\n                }\n                if (message.onTerrainDestroy != null && message.hasOwnProperty("onTerrainDestroy"))\n                    object.onTerrainDestroy = $root.op_gameconfig.Func.toObject(message.onTerrainDestroy, options);\n                if (message.onTerrainOverFunc != null && message.hasOwnProperty("onTerrainOverFunc"))\n                    object.onTerrainOverFunc = $root.op_gameconfig.Func.toObject(message.onTerrainOverFunc, options);\n                if (message.onTerrainLeaveFunc != null && message.hasOwnProperty("onTerrainLeaveFunc"))\n                    object.onTerrainLeaveFunc = $root.op_gameconfig.Func.toObject(message.onTerrainLeaveFunc, options);\n                if (message.onTerrainSchedule != null && message.hasOwnProperty("onTerrainSchedule"))\n                    object.onTerrainSchedule = $root.op_gameconfig.Func.toObject(message.onTerrainSchedule, options);\n                if (message.onTerrainCreate != null && message.hasOwnProperty("onTerrainCreate"))\n                    object.onTerrainCreate = $root.op_gameconfig.Func.toObject(message.onTerrainCreate, options);\n                return object;\n            };\n    \n            /**\n             * Converts this TerrainEvent to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig.TerrainEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            TerrainEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return TerrainEvent;\n        })();\n    \n        op_gameconfig.Animation = (function() {\n    \n            /**\n             * Properties of an Animation.\n             * @memberof op_gameconfig\n             * @interface IAnimation\n             * @property {number} id Animation id\n             * @property {string} name Animation name\n             * @property {Array.<number>|null} [frame] Animation frame\n             * @property {number} frameRate Animation frameRate\n             * @property {string|null} [walkableArea] Animation walkableArea\n             * @property {string|null} [collisionArea] Animation collisionArea\n             * @property {boolean|null} [loop] Animation loop\n             * @property {Array.<number>|null} [originPoint] Animation originPoint\n             * @property {Array.<number>|null} [walkOriginPoint] Animation walkOriginPoint\n             * @property {string|null} [baseLoc] Animation baseLoc\n             * @property {Array.<string>|null} [frameName] Animation frameName\n             */\n    \n            /**\n             * Constructs a new Animation.\n             * @memberof op_gameconfig\n             * @classdesc Represents an Animation.\n             * @implements IAnimation\n             * @constructor\n             * @param {op_gameconfig.IAnimation=} [properties] Properties to set\n             */\n            function Animation(properties) {\n                this.frame = [];\n                this.originPoint = [];\n                this.walkOriginPoint = [];\n                this.frameName = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Animation id.\n             * @member {number} id\n             * @memberof op_gameconfig.Animation\n             * @instance\n             */\n            Animation.prototype.id = 0;\n    \n            /**\n             * Animation name.\n             * @member {string} name\n             * @memberof op_gameconfig.Animation\n             * @instance\n             */\n            Animation.prototype.name = "";\n    \n            /**\n             * Animation frame.\n             * @member {Array.<number>} frame\n             * @memberof op_gameconfig.Animation\n             * @instance\n             */\n            Animation.prototype.frame = $util.emptyArray;\n    \n            /**\n             * Animation frameRate.\n             * @member {number} frameRate\n             * @memberof op_gameconfig.Animation\n             * @instance\n             */\n            Animation.prototype.frameRate = 0;\n    \n            /**\n             * Animation walkableArea.\n             * @member {string} walkableArea\n             * @memberof op_gameconfig.Animation\n             * @instance\n             */\n            Animation.prototype.walkableArea = "";\n    \n            /**\n             * Animation collisionArea.\n             * @member {string} collisionArea\n             * @memberof op_gameconfig.Animation\n             * @instance\n             */\n            Animation.prototype.collisionArea = "";\n    \n            /**\n             * Animation loop.\n             * @member {boolean} loop\n             * @memberof op_gameconfig.Animation\n             * @instance\n             */\n            Animation.prototype.loop = false;\n    \n            /**\n             * Animation originPoint.\n             * @member {Array.<number>} originPoint\n             * @memberof op_gameconfig.Animation\n             * @instance\n             */\n            Animation.prototype.originPoint = $util.emptyArray;\n    \n            /**\n             * Animation walkOriginPoint.\n             * @member {Array.<number>} walkOriginPoint\n             * @memberof op_gameconfig.Animation\n             * @instance\n             */\n            Animation.prototype.walkOriginPoint = $util.emptyArray;\n    \n            /**\n             * Animation baseLoc.\n             * @member {string} baseLoc\n             * @memberof op_gameconfig.Animation\n             * @instance\n             */\n            Animation.prototype.baseLoc = "";\n    \n            /**\n             * Animation frameName.\n             * @member {Array.<string>} frameName\n             * @memberof op_gameconfig.Animation\n             * @instance\n             */\n            Animation.prototype.frameName = $util.emptyArray;\n    \n            /**\n             * Creates a new Animation instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig.Animation\n             * @static\n             * @param {op_gameconfig.IAnimation=} [properties] Properties to set\n             * @returns {op_gameconfig.Animation} Animation instance\n             */\n            Animation.create = function create(properties) {\n                return new Animation(properties);\n            };\n    \n            /**\n             * Encodes the specified Animation message. Does not implicitly {@link op_gameconfig.Animation.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig.Animation\n             * @static\n             * @param {op_gameconfig.IAnimation} message Animation message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Animation.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.id);\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);\n                if (message.frame != null && message.frame.length)\n                    for (var i = 0; i < message.frame.length; ++i)\n                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.frame[i]);\n                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.frameRate);\n                if (message.walkableArea != null && message.hasOwnProperty("walkableArea"))\n                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.walkableArea);\n                if (message.collisionArea != null && message.hasOwnProperty("collisionArea"))\n                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.collisionArea);\n                if (message.loop != null && message.hasOwnProperty("loop"))\n                    writer.uint32(/* id 7, wireType 0 =*/56).bool(message.loop);\n                if (message.originPoint != null && message.originPoint.length)\n                    for (var i = 0; i < message.originPoint.length; ++i)\n                        writer.uint32(/* id 8, wireType 0 =*/64).int32(message.originPoint[i]);\n                if (message.walkOriginPoint != null && message.walkOriginPoint.length)\n                    for (var i = 0; i < message.walkOriginPoint.length; ++i)\n                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.walkOriginPoint[i]);\n                if (message.baseLoc != null && message.hasOwnProperty("baseLoc"))\n                    writer.uint32(/* id 10, wireType 2 =*/82).string(message.baseLoc);\n                if (message.frameName != null && message.frameName.length)\n                    for (var i = 0; i < message.frameName.length; ++i)\n                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.frameName[i]);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Animation message, length delimited. Does not implicitly {@link op_gameconfig.Animation.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig.Animation\n             * @static\n             * @param {op_gameconfig.IAnimation} message Animation message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Animation.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes an Animation message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig.Animation\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig.Animation} Animation\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Animation.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig.Animation();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.id = reader.int32();\n                        break;\n                    case 2:\n                        message.name = reader.string();\n                        break;\n                    case 3:\n                        if (!(message.frame && message.frame.length))\n                            message.frame = [];\n                        if ((tag & 7) === 2) {\n                            var end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2)\n                                message.frame.push(reader.int32());\n                        } else\n                            message.frame.push(reader.int32());\n                        break;\n                    case 4:\n                        message.frameRate = reader.int32();\n                        break;\n                    case 5:\n                        message.walkableArea = reader.string();\n                        break;\n                    case 6:\n                        message.collisionArea = reader.string();\n                        break;\n                    case 7:\n                        message.loop = reader.bool();\n                        break;\n                    case 8:\n                        if (!(message.originPoint && message.originPoint.length))\n                            message.originPoint = [];\n                        if ((tag & 7) === 2) {\n                            var end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2)\n                                message.originPoint.push(reader.int32());\n                        } else\n                            message.originPoint.push(reader.int32());\n                        break;\n                    case 9:\n                        if (!(message.walkOriginPoint && message.walkOriginPoint.length))\n                            message.walkOriginPoint = [];\n                        if ((tag & 7) === 2) {\n                            var end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2)\n                                message.walkOriginPoint.push(reader.int32());\n                        } else\n                            message.walkOriginPoint.push(reader.int32());\n                        break;\n                    case 10:\n                        message.baseLoc = reader.string();\n                        break;\n                    case 11:\n                        if (!(message.frameName && message.frameName.length))\n                            message.frameName = [];\n                        message.frameName.push(reader.string());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("id"))\n                    throw $util.ProtocolError("missing required \'id\'", { instance: message });\n                if (!message.hasOwnProperty("name"))\n                    throw $util.ProtocolError("missing required \'name\'", { instance: message });\n                if (!message.hasOwnProperty("frameRate"))\n                    throw $util.ProtocolError("missing required \'frameRate\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes an Animation message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig.Animation\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig.Animation} Animation\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Animation.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies an Animation message.\n             * @function verify\n             * @memberof op_gameconfig.Animation\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Animation.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.id))\n                    return "id: integer expected";\n                if (!$util.isString(message.name))\n                    return "name: string expected";\n                if (message.frame != null && message.hasOwnProperty("frame")) {\n                    if (!Array.isArray(message.frame))\n                        return "frame: array expected";\n                    for (var i = 0; i < message.frame.length; ++i)\n                        if (!$util.isInteger(message.frame[i]))\n                            return "frame: integer[] expected";\n                }\n                if (!$util.isInteger(message.frameRate))\n                    return "frameRate: integer expected";\n                if (message.walkableArea != null && message.hasOwnProperty("walkableArea"))\n                    if (!$util.isString(message.walkableArea))\n                        return "walkableArea: string expected";\n                if (message.collisionArea != null && message.hasOwnProperty("collisionArea"))\n                    if (!$util.isString(message.collisionArea))\n                        return "collisionArea: string expected";\n                if (message.loop != null && message.hasOwnProperty("loop"))\n                    if (typeof message.loop !== "boolean")\n                        return "loop: boolean expected";\n                if (message.originPoint != null && message.hasOwnProperty("originPoint")) {\n                    if (!Array.isArray(message.originPoint))\n                        return "originPoint: array expected";\n                    for (var i = 0; i < message.originPoint.length; ++i)\n                        if (!$util.isInteger(message.originPoint[i]))\n                            return "originPoint: integer[] expected";\n                }\n                if (message.walkOriginPoint != null && message.hasOwnProperty("walkOriginPoint")) {\n                    if (!Array.isArray(message.walkOriginPoint))\n                        return "walkOriginPoint: array expected";\n                    for (var i = 0; i < message.walkOriginPoint.length; ++i)\n                        if (!$util.isInteger(message.walkOriginPoint[i]))\n                            return "walkOriginPoint: integer[] expected";\n                }\n                if (message.baseLoc != null && message.hasOwnProperty("baseLoc"))\n                    if (!$util.isString(message.baseLoc))\n                        return "baseLoc: string expected";\n                if (message.frameName != null && message.hasOwnProperty("frameName")) {\n                    if (!Array.isArray(message.frameName))\n                        return "frameName: array expected";\n                    for (var i = 0; i < message.frameName.length; ++i)\n                        if (!$util.isString(message.frameName[i]))\n                            return "frameName: string[] expected";\n                }\n                return null;\n            };\n    \n            /**\n             * Creates an Animation message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig.Animation\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig.Animation} Animation\n             */\n            Animation.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig.Animation)\n                    return object;\n                var message = new $root.op_gameconfig.Animation();\n                if (object.id != null)\n                    message.id = object.id | 0;\n                if (object.name != null)\n                    message.name = String(object.name);\n                if (object.frame) {\n                    if (!Array.isArray(object.frame))\n                        throw TypeError(".op_gameconfig.Animation.frame: array expected");\n                    message.frame = [];\n                    for (var i = 0; i < object.frame.length; ++i)\n                        message.frame[i] = object.frame[i] | 0;\n                }\n                if (object.frameRate != null)\n                    message.frameRate = object.frameRate | 0;\n                if (object.walkableArea != null)\n                    message.walkableArea = String(object.walkableArea);\n                if (object.collisionArea != null)\n                    message.collisionArea = String(object.collisionArea);\n                if (object.loop != null)\n                    message.loop = Boolean(object.loop);\n                if (object.originPoint) {\n                    if (!Array.isArray(object.originPoint))\n                        throw TypeError(".op_gameconfig.Animation.originPoint: array expected");\n                    message.originPoint = [];\n                    for (var i = 0; i < object.originPoint.length; ++i)\n                        message.originPoint[i] = object.originPoint[i] | 0;\n                }\n                if (object.walkOriginPoint) {\n                    if (!Array.isArray(object.walkOriginPoint))\n                        throw TypeError(".op_gameconfig.Animation.walkOriginPoint: array expected");\n                    message.walkOriginPoint = [];\n                    for (var i = 0; i < object.walkOriginPoint.length; ++i)\n                        message.walkOriginPoint[i] = object.walkOriginPoint[i] | 0;\n                }\n                if (object.baseLoc != null)\n                    message.baseLoc = String(object.baseLoc);\n                if (object.frameName) {\n                    if (!Array.isArray(object.frameName))\n                        throw TypeError(".op_gameconfig.Animation.frameName: array expected");\n                    message.frameName = [];\n                    for (var i = 0; i < object.frameName.length; ++i)\n                        message.frameName[i] = String(object.frameName[i]);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from an Animation message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig.Animation\n             * @static\n             * @param {op_gameconfig.Animation} message Animation\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Animation.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults) {\n                    object.frame = [];\n                    object.originPoint = [];\n                    object.walkOriginPoint = [];\n                    object.frameName = [];\n                }\n                if (options.defaults) {\n                    object.id = 0;\n                    object.name = "";\n                    object.frameRate = 0;\n                    object.walkableArea = "";\n                    object.collisionArea = "";\n                    object.loop = false;\n                    object.baseLoc = "";\n                }\n                if (message.id != null && message.hasOwnProperty("id"))\n                    object.id = message.id;\n                if (message.name != null && message.hasOwnProperty("name"))\n                    object.name = message.name;\n                if (message.frame && message.frame.length) {\n                    object.frame = [];\n                    for (var j = 0; j < message.frame.length; ++j)\n                        object.frame[j] = message.frame[j];\n                }\n                if (message.frameRate != null && message.hasOwnProperty("frameRate"))\n                    object.frameRate = message.frameRate;\n                if (message.walkableArea != null && message.hasOwnProperty("walkableArea"))\n                    object.walkableArea = message.walkableArea;\n                if (message.collisionArea != null && message.hasOwnProperty("collisionArea"))\n                    object.collisionArea = message.collisionArea;\n                if (message.loop != null && message.hasOwnProperty("loop"))\n                    object.loop = message.loop;\n                if (message.originPoint && message.originPoint.length) {\n                    object.originPoint = [];\n                    for (var j = 0; j < message.originPoint.length; ++j)\n                        object.originPoint[j] = message.originPoint[j];\n                }\n                if (message.walkOriginPoint && message.walkOriginPoint.length) {\n                    object.walkOriginPoint = [];\n                    for (var j = 0; j < message.walkOriginPoint.length; ++j)\n                        object.walkOriginPoint[j] = message.walkOriginPoint[j];\n                }\n                if (message.baseLoc != null && message.hasOwnProperty("baseLoc"))\n                    object.baseLoc = message.baseLoc;\n                if (message.frameName && message.frameName.length) {\n                    object.frameName = [];\n                    for (var j = 0; j < message.frameName.length; ++j)\n                        object.frameName[j] = message.frameName[j];\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this Animation to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig.Animation\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Animation.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Animation;\n        })();\n    \n        op_gameconfig.Element_type = (function() {\n    \n            /**\n             * Properties of an Element_type.\n             * @memberof op_gameconfig\n             * @interface IElement_type\n             * @property {string} type Element_type type\n             * @property {string} name Element_type name\n             * @property {string|null} [des] Element_type des\n             * @property {Array.<op_gameconfig.IAnimation>|null} [animations] Element_type animations\n             * @property {op_gameconfig.IElementEvent|null} [elementEvent] Element_type elementEvent\n             * @property {Array.<op_gameconfig.IAttribute>|null} [attributes] Element_type attributes\n             * @property {string|null} [animationName] Element_type animationName\n             * @property {op_gameconfig.IDisplay|null} [display] Element_type display\n             */\n    \n            /**\n             * Constructs a new Element_type.\n             * @memberof op_gameconfig\n             * @classdesc Represents an Element_type.\n             * @implements IElement_type\n             * @constructor\n             * @param {op_gameconfig.IElement_type=} [properties] Properties to set\n             */\n            function Element_type(properties) {\n                this.animations = [];\n                this.attributes = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Element_type type.\n             * @member {string} type\n             * @memberof op_gameconfig.Element_type\n             * @instance\n             */\n            Element_type.prototype.type = "";\n    \n            /**\n             * Element_type name.\n             * @member {string} name\n             * @memberof op_gameconfig.Element_type\n             * @instance\n             */\n            Element_type.prototype.name = "";\n    \n            /**\n             * Element_type des.\n             * @member {string} des\n             * @memberof op_gameconfig.Element_type\n             * @instance\n             */\n            Element_type.prototype.des = "";\n    \n            /**\n             * Element_type animations.\n             * @member {Array.<op_gameconfig.IAnimation>} animations\n             * @memberof op_gameconfig.Element_type\n             * @instance\n             */\n            Element_type.prototype.animations = $util.emptyArray;\n    \n            /**\n             * Element_type elementEvent.\n             * @member {op_gameconfig.IElementEvent|null|undefined} elementEvent\n             * @memberof op_gameconfig.Element_type\n             * @instance\n             */\n            Element_type.prototype.elementEvent = null;\n    \n            /**\n             * Element_type attributes.\n             * @member {Array.<op_gameconfig.IAttribute>} attributes\n             * @memberof op_gameconfig.Element_type\n             * @instance\n             */\n            Element_type.prototype.attributes = $util.emptyArray;\n    \n            /**\n             * Element_type animationName.\n             * @member {string} animationName\n             * @memberof op_gameconfig.Element_type\n             * @instance\n             */\n            Element_type.prototype.animationName = "";\n    \n            /**\n             * Element_type display.\n             * @member {op_gameconfig.IDisplay|null|undefined} display\n             * @memberof op_gameconfig.Element_type\n             * @instance\n             */\n            Element_type.prototype.display = null;\n    \n            /**\n             * Creates a new Element_type instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig.Element_type\n             * @static\n             * @param {op_gameconfig.IElement_type=} [properties] Properties to set\n             * @returns {op_gameconfig.Element_type} Element_type instance\n             */\n            Element_type.create = function create(properties) {\n                return new Element_type(properties);\n            };\n    \n            /**\n             * Encodes the specified Element_type message. Does not implicitly {@link op_gameconfig.Element_type.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig.Element_type\n             * @static\n             * @param {op_gameconfig.IElement_type} message Element_type message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Element_type.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);\n                if (message.des != null && message.hasOwnProperty("des"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.des);\n                if (message.animations != null && message.animations.length)\n                    for (var i = 0; i < message.animations.length; ++i)\n                        $root.op_gameconfig.Animation.encode(message.animations[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n                if (message.elementEvent != null && message.hasOwnProperty("elementEvent"))\n                    $root.op_gameconfig.ElementEvent.encode(message.elementEvent, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n                if (message.attributes != null && message.attributes.length)\n                    for (var i = 0; i < message.attributes.length; ++i)\n                        $root.op_gameconfig.Attribute.encode(message.attributes[i], writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();\n                if (message.animationName != null && message.hasOwnProperty("animationName"))\n                    writer.uint32(/* id 13, wireType 2 =*/106).string(message.animationName);\n                if (message.display != null && message.hasOwnProperty("display"))\n                    $root.op_gameconfig.Display.encode(message.display, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Element_type message, length delimited. Does not implicitly {@link op_gameconfig.Element_type.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig.Element_type\n             * @static\n             * @param {op_gameconfig.IElement_type} message Element_type message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Element_type.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes an Element_type message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig.Element_type\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig.Element_type} Element_type\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Element_type.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig.Element_type();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.type = reader.string();\n                        break;\n                    case 2:\n                        message.name = reader.string();\n                        break;\n                    case 3:\n                        message.des = reader.string();\n                        break;\n                    case 10:\n                        if (!(message.animations && message.animations.length))\n                            message.animations = [];\n                        message.animations.push($root.op_gameconfig.Animation.decode(reader, reader.uint32()));\n                        break;\n                    case 11:\n                        message.elementEvent = $root.op_gameconfig.ElementEvent.decode(reader, reader.uint32());\n                        break;\n                    case 12:\n                        if (!(message.attributes && message.attributes.length))\n                            message.attributes = [];\n                        message.attributes.push($root.op_gameconfig.Attribute.decode(reader, reader.uint32()));\n                        break;\n                    case 13:\n                        message.animationName = reader.string();\n                        break;\n                    case 14:\n                        message.display = $root.op_gameconfig.Display.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("type"))\n                    throw $util.ProtocolError("missing required \'type\'", { instance: message });\n                if (!message.hasOwnProperty("name"))\n                    throw $util.ProtocolError("missing required \'name\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes an Element_type message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig.Element_type\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig.Element_type} Element_type\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Element_type.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies an Element_type message.\n             * @function verify\n             * @memberof op_gameconfig.Element_type\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Element_type.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.type))\n                    return "type: string expected";\n                if (!$util.isString(message.name))\n                    return "name: string expected";\n                if (message.des != null && message.hasOwnProperty("des"))\n                    if (!$util.isString(message.des))\n                        return "des: string expected";\n                if (message.animations != null && message.hasOwnProperty("animations")) {\n                    if (!Array.isArray(message.animations))\n                        return "animations: array expected";\n                    for (var i = 0; i < message.animations.length; ++i) {\n                        var error = $root.op_gameconfig.Animation.verify(message.animations[i]);\n                        if (error)\n                            return "animations." + error;\n                    }\n                }\n                if (message.elementEvent != null && message.hasOwnProperty("elementEvent")) {\n                    var error = $root.op_gameconfig.ElementEvent.verify(message.elementEvent);\n                    if (error)\n                        return "elementEvent." + error;\n                }\n                if (message.attributes != null && message.hasOwnProperty("attributes")) {\n                    if (!Array.isArray(message.attributes))\n                        return "attributes: array expected";\n                    for (var i = 0; i < message.attributes.length; ++i) {\n                        var error = $root.op_gameconfig.Attribute.verify(message.attributes[i]);\n                        if (error)\n                            return "attributes." + error;\n                    }\n                }\n                if (message.animationName != null && message.hasOwnProperty("animationName"))\n                    if (!$util.isString(message.animationName))\n                        return "animationName: string expected";\n                if (message.display != null && message.hasOwnProperty("display")) {\n                    var error = $root.op_gameconfig.Display.verify(message.display);\n                    if (error)\n                        return "display." + error;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates an Element_type message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig.Element_type\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig.Element_type} Element_type\n             */\n            Element_type.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig.Element_type)\n                    return object;\n                var message = new $root.op_gameconfig.Element_type();\n                if (object.type != null)\n                    message.type = String(object.type);\n                if (object.name != null)\n                    message.name = String(object.name);\n                if (object.des != null)\n                    message.des = String(object.des);\n                if (object.animations) {\n                    if (!Array.isArray(object.animations))\n                        throw TypeError(".op_gameconfig.Element_type.animations: array expected");\n                    message.animations = [];\n                    for (var i = 0; i < object.animations.length; ++i) {\n                        if (typeof object.animations[i] !== "object")\n                            throw TypeError(".op_gameconfig.Element_type.animations: object expected");\n                        message.animations[i] = $root.op_gameconfig.Animation.fromObject(object.animations[i]);\n                    }\n                }\n                if (object.elementEvent != null) {\n                    if (typeof object.elementEvent !== "object")\n                        throw TypeError(".op_gameconfig.Element_type.elementEvent: object expected");\n                    message.elementEvent = $root.op_gameconfig.ElementEvent.fromObject(object.elementEvent);\n                }\n                if (object.attributes) {\n                    if (!Array.isArray(object.attributes))\n                        throw TypeError(".op_gameconfig.Element_type.attributes: array expected");\n                    message.attributes = [];\n                    for (var i = 0; i < object.attributes.length; ++i) {\n                        if (typeof object.attributes[i] !== "object")\n                            throw TypeError(".op_gameconfig.Element_type.attributes: object expected");\n                        message.attributes[i] = $root.op_gameconfig.Attribute.fromObject(object.attributes[i]);\n                    }\n                }\n                if (object.animationName != null)\n                    message.animationName = String(object.animationName);\n                if (object.display != null) {\n                    if (typeof object.display !== "object")\n                        throw TypeError(".op_gameconfig.Element_type.display: object expected");\n                    message.display = $root.op_gameconfig.Display.fromObject(object.display);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from an Element_type message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig.Element_type\n             * @static\n             * @param {op_gameconfig.Element_type} message Element_type\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Element_type.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults) {\n                    object.animations = [];\n                    object.attributes = [];\n                }\n                if (options.defaults) {\n                    object.type = "";\n                    object.name = "";\n                    object.des = "";\n                    object.elementEvent = null;\n                    object.animationName = "";\n                    object.display = null;\n                }\n                if (message.type != null && message.hasOwnProperty("type"))\n                    object.type = message.type;\n                if (message.name != null && message.hasOwnProperty("name"))\n                    object.name = message.name;\n                if (message.des != null && message.hasOwnProperty("des"))\n                    object.des = message.des;\n                if (message.animations && message.animations.length) {\n                    object.animations = [];\n                    for (var j = 0; j < message.animations.length; ++j)\n                        object.animations[j] = $root.op_gameconfig.Animation.toObject(message.animations[j], options);\n                }\n                if (message.elementEvent != null && message.hasOwnProperty("elementEvent"))\n                    object.elementEvent = $root.op_gameconfig.ElementEvent.toObject(message.elementEvent, options);\n                if (message.attributes && message.attributes.length) {\n                    object.attributes = [];\n                    for (var j = 0; j < message.attributes.length; ++j)\n                        object.attributes[j] = $root.op_gameconfig.Attribute.toObject(message.attributes[j], options);\n                }\n                if (message.animationName != null && message.hasOwnProperty("animationName"))\n                    object.animationName = message.animationName;\n                if (message.display != null && message.hasOwnProperty("display"))\n                    object.display = $root.op_gameconfig.Display.toObject(message.display, options);\n                return object;\n            };\n    \n            /**\n             * Converts this Element_type to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig.Element_type\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Element_type.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Element_type;\n        })();\n    \n        op_gameconfig.Element = (function() {\n    \n            /**\n             * Properties of an Element.\n             * @memberof op_gameconfig\n             * @interface IElement\n             * @property {number} id Element id\n             * @property {string} type Element type\n             * @property {number} dir Element dir\n             * @property {number} x Element x\n             * @property {number} y Element y\n             * @property {number} z Element z\n             * @property {string|null} [name] Element name\n             * @property {string|null} [des] Element des\n             * @property {Array.<op_gameconfig.IAnimation>|null} [animations] Element animations\n             * @property {op_gameconfig.IElementEvent|null} [elementEvent] Element elementEvent\n             * @property {Array.<op_gameconfig.IAttribute>|null} [attributes] Element attributes\n             * @property {string|null} [animationName] Element animationName\n             * @property {op_gameconfig.IDisplay|null} [display] Element display\n             */\n    \n            /**\n             * Constructs a new Element.\n             * @memberof op_gameconfig\n             * @classdesc Represents an Element.\n             * @implements IElement\n             * @constructor\n             * @param {op_gameconfig.IElement=} [properties] Properties to set\n             */\n            function Element(properties) {\n                this.animations = [];\n                this.attributes = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Element id.\n             * @member {number} id\n             * @memberof op_gameconfig.Element\n             * @instance\n             */\n            Element.prototype.id = 0;\n    \n            /**\n             * Element type.\n             * @member {string} type\n             * @memberof op_gameconfig.Element\n             * @instance\n             */\n            Element.prototype.type = "";\n    \n            /**\n             * Element dir.\n             * @member {number} dir\n             * @memberof op_gameconfig.Element\n             * @instance\n             */\n            Element.prototype.dir = 0;\n    \n            /**\n             * Element x.\n             * @member {number} x\n             * @memberof op_gameconfig.Element\n             * @instance\n             */\n            Element.prototype.x = 0;\n    \n            /**\n             * Element y.\n             * @member {number} y\n             * @memberof op_gameconfig.Element\n             * @instance\n             */\n            Element.prototype.y = 0;\n    \n            /**\n             * Element z.\n             * @member {number} z\n             * @memberof op_gameconfig.Element\n             * @instance\n             */\n            Element.prototype.z = 0;\n    \n            /**\n             * Element name.\n             * @member {string} name\n             * @memberof op_gameconfig.Element\n             * @instance\n             */\n            Element.prototype.name = "";\n    \n            /**\n             * Element des.\n             * @member {string} des\n             * @memberof op_gameconfig.Element\n             * @instance\n             */\n            Element.prototype.des = "";\n    \n            /**\n             * Element animations.\n             * @member {Array.<op_gameconfig.IAnimation>} animations\n             * @memberof op_gameconfig.Element\n             * @instance\n             */\n            Element.prototype.animations = $util.emptyArray;\n    \n            /**\n             * Element elementEvent.\n             * @member {op_gameconfig.IElementEvent|null|undefined} elementEvent\n             * @memberof op_gameconfig.Element\n             * @instance\n             */\n            Element.prototype.elementEvent = null;\n    \n            /**\n             * Element attributes.\n             * @member {Array.<op_gameconfig.IAttribute>} attributes\n             * @memberof op_gameconfig.Element\n             * @instance\n             */\n            Element.prototype.attributes = $util.emptyArray;\n    \n            /**\n             * Element animationName.\n             * @member {string} animationName\n             * @memberof op_gameconfig.Element\n             * @instance\n             */\n            Element.prototype.animationName = "";\n    \n            /**\n             * Element display.\n             * @member {op_gameconfig.IDisplay|null|undefined} display\n             * @memberof op_gameconfig.Element\n             * @instance\n             */\n            Element.prototype.display = null;\n    \n            /**\n             * Creates a new Element instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig.Element\n             * @static\n             * @param {op_gameconfig.IElement=} [properties] Properties to set\n             * @returns {op_gameconfig.Element} Element instance\n             */\n            Element.create = function create(properties) {\n                return new Element(properties);\n            };\n    \n            /**\n             * Encodes the specified Element message. Does not implicitly {@link op_gameconfig.Element.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig.Element\n             * @static\n             * @param {op_gameconfig.IElement} message Element message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Element.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.id);\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.type);\n                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.dir);\n                writer.uint32(/* id 4, wireType 5 =*/37).float(message.x);\n                writer.uint32(/* id 5, wireType 5 =*/45).float(message.y);\n                writer.uint32(/* id 6, wireType 5 =*/53).float(message.z);\n                if (message.name != null && message.hasOwnProperty("name"))\n                    writer.uint32(/* id 7, wireType 2 =*/58).string(message.name);\n                if (message.des != null && message.hasOwnProperty("des"))\n                    writer.uint32(/* id 8, wireType 2 =*/66).string(message.des);\n                if (message.display != null && message.hasOwnProperty("display"))\n                    $root.op_gameconfig.Display.encode(message.display, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n                if (message.animations != null && message.animations.length)\n                    for (var i = 0; i < message.animations.length; ++i)\n                        $root.op_gameconfig.Animation.encode(message.animations[i], writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();\n                if (message.elementEvent != null && message.hasOwnProperty("elementEvent"))\n                    $root.op_gameconfig.ElementEvent.encode(message.elementEvent, writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();\n                if (message.attributes != null && message.attributes.length)\n                    for (var i = 0; i < message.attributes.length; ++i)\n                        $root.op_gameconfig.Attribute.encode(message.attributes[i], writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();\n                if (message.animationName != null && message.hasOwnProperty("animationName"))\n                    writer.uint32(/* id 18, wireType 2 =*/146).string(message.animationName);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Element message, length delimited. Does not implicitly {@link op_gameconfig.Element.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig.Element\n             * @static\n             * @param {op_gameconfig.IElement} message Element message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Element.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes an Element message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig.Element\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig.Element} Element\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Element.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig.Element();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.id = reader.int32();\n                        break;\n                    case 2:\n                        message.type = reader.string();\n                        break;\n                    case 3:\n                        message.dir = reader.int32();\n                        break;\n                    case 4:\n                        message.x = reader.float();\n                        break;\n                    case 5:\n                        message.y = reader.float();\n                        break;\n                    case 6:\n                        message.z = reader.float();\n                        break;\n                    case 7:\n                        message.name = reader.string();\n                        break;\n                    case 8:\n                        message.des = reader.string();\n                        break;\n                    case 15:\n                        if (!(message.animations && message.animations.length))\n                            message.animations = [];\n                        message.animations.push($root.op_gameconfig.Animation.decode(reader, reader.uint32()));\n                        break;\n                    case 16:\n                        message.elementEvent = $root.op_gameconfig.ElementEvent.decode(reader, reader.uint32());\n                        break;\n                    case 17:\n                        if (!(message.attributes && message.attributes.length))\n                            message.attributes = [];\n                        message.attributes.push($root.op_gameconfig.Attribute.decode(reader, reader.uint32()));\n                        break;\n                    case 18:\n                        message.animationName = reader.string();\n                        break;\n                    case 14:\n                        message.display = $root.op_gameconfig.Display.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("id"))\n                    throw $util.ProtocolError("missing required \'id\'", { instance: message });\n                if (!message.hasOwnProperty("type"))\n                    throw $util.ProtocolError("missing required \'type\'", { instance: message });\n                if (!message.hasOwnProperty("dir"))\n                    throw $util.ProtocolError("missing required \'dir\'", { instance: message });\n                if (!message.hasOwnProperty("x"))\n                    throw $util.ProtocolError("missing required \'x\'", { instance: message });\n                if (!message.hasOwnProperty("y"))\n                    throw $util.ProtocolError("missing required \'y\'", { instance: message });\n                if (!message.hasOwnProperty("z"))\n                    throw $util.ProtocolError("missing required \'z\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes an Element message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig.Element\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig.Element} Element\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Element.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies an Element message.\n             * @function verify\n             * @memberof op_gameconfig.Element\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Element.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.id))\n                    return "id: integer expected";\n                if (!$util.isString(message.type))\n                    return "type: string expected";\n                if (!$util.isInteger(message.dir))\n                    return "dir: integer expected";\n                if (typeof message.x !== "number")\n                    return "x: number expected";\n                if (typeof message.y !== "number")\n                    return "y: number expected";\n                if (typeof message.z !== "number")\n                    return "z: number expected";\n                if (message.name != null && message.hasOwnProperty("name"))\n                    if (!$util.isString(message.name))\n                        return "name: string expected";\n                if (message.des != null && message.hasOwnProperty("des"))\n                    if (!$util.isString(message.des))\n                        return "des: string expected";\n                if (message.animations != null && message.hasOwnProperty("animations")) {\n                    if (!Array.isArray(message.animations))\n                        return "animations: array expected";\n                    for (var i = 0; i < message.animations.length; ++i) {\n                        var error = $root.op_gameconfig.Animation.verify(message.animations[i]);\n                        if (error)\n                            return "animations." + error;\n                    }\n                }\n                if (message.elementEvent != null && message.hasOwnProperty("elementEvent")) {\n                    var error = $root.op_gameconfig.ElementEvent.verify(message.elementEvent);\n                    if (error)\n                        return "elementEvent." + error;\n                }\n                if (message.attributes != null && message.hasOwnProperty("attributes")) {\n                    if (!Array.isArray(message.attributes))\n                        return "attributes: array expected";\n                    for (var i = 0; i < message.attributes.length; ++i) {\n                        var error = $root.op_gameconfig.Attribute.verify(message.attributes[i]);\n                        if (error)\n                            return "attributes." + error;\n                    }\n                }\n                if (message.animationName != null && message.hasOwnProperty("animationName"))\n                    if (!$util.isString(message.animationName))\n                        return "animationName: string expected";\n                if (message.display != null && message.hasOwnProperty("display")) {\n                    var error = $root.op_gameconfig.Display.verify(message.display);\n                    if (error)\n                        return "display." + error;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates an Element message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig.Element\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig.Element} Element\n             */\n            Element.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig.Element)\n                    return object;\n                var message = new $root.op_gameconfig.Element();\n                if (object.id != null)\n                    message.id = object.id | 0;\n                if (object.type != null)\n                    message.type = String(object.type);\n                if (object.dir != null)\n                    message.dir = object.dir | 0;\n                if (object.x != null)\n                    message.x = Number(object.x);\n                if (object.y != null)\n                    message.y = Number(object.y);\n                if (object.z != null)\n                    message.z = Number(object.z);\n                if (object.name != null)\n                    message.name = String(object.name);\n                if (object.des != null)\n                    message.des = String(object.des);\n                if (object.animations) {\n                    if (!Array.isArray(object.animations))\n                        throw TypeError(".op_gameconfig.Element.animations: array expected");\n                    message.animations = [];\n                    for (var i = 0; i < object.animations.length; ++i) {\n                        if (typeof object.animations[i] !== "object")\n                            throw TypeError(".op_gameconfig.Element.animations: object expected");\n                        message.animations[i] = $root.op_gameconfig.Animation.fromObject(object.animations[i]);\n                    }\n                }\n                if (object.elementEvent != null) {\n                    if (typeof object.elementEvent !== "object")\n                        throw TypeError(".op_gameconfig.Element.elementEvent: object expected");\n                    message.elementEvent = $root.op_gameconfig.ElementEvent.fromObject(object.elementEvent);\n                }\n                if (object.attributes) {\n                    if (!Array.isArray(object.attributes))\n                        throw TypeError(".op_gameconfig.Element.attributes: array expected");\n                    message.attributes = [];\n                    for (var i = 0; i < object.attributes.length; ++i) {\n                        if (typeof object.attributes[i] !== "object")\n                            throw TypeError(".op_gameconfig.Element.attributes: object expected");\n                        message.attributes[i] = $root.op_gameconfig.Attribute.fromObject(object.attributes[i]);\n                    }\n                }\n                if (object.animationName != null)\n                    message.animationName = String(object.animationName);\n                if (object.display != null) {\n                    if (typeof object.display !== "object")\n                        throw TypeError(".op_gameconfig.Element.display: object expected");\n                    message.display = $root.op_gameconfig.Display.fromObject(object.display);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from an Element message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig.Element\n             * @static\n             * @param {op_gameconfig.Element} message Element\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Element.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults) {\n                    object.animations = [];\n                    object.attributes = [];\n                }\n                if (options.defaults) {\n                    object.id = 0;\n                    object.type = "";\n                    object.dir = 0;\n                    object.x = 0;\n                    object.y = 0;\n                    object.z = 0;\n                    object.name = "";\n                    object.des = "";\n                    object.display = null;\n                    object.elementEvent = null;\n                    object.animationName = "";\n                }\n                if (message.id != null && message.hasOwnProperty("id"))\n                    object.id = message.id;\n                if (message.type != null && message.hasOwnProperty("type"))\n                    object.type = message.type;\n                if (message.dir != null && message.hasOwnProperty("dir"))\n                    object.dir = message.dir;\n                if (message.x != null && message.hasOwnProperty("x"))\n                    object.x = options.json && !isFinite(message.x) ? String(message.x) : message.x;\n                if (message.y != null && message.hasOwnProperty("y"))\n                    object.y = options.json && !isFinite(message.y) ? String(message.y) : message.y;\n                if (message.z != null && message.hasOwnProperty("z"))\n                    object.z = options.json && !isFinite(message.z) ? String(message.z) : message.z;\n                if (message.name != null && message.hasOwnProperty("name"))\n                    object.name = message.name;\n                if (message.des != null && message.hasOwnProperty("des"))\n                    object.des = message.des;\n                if (message.display != null && message.hasOwnProperty("display"))\n                    object.display = $root.op_gameconfig.Display.toObject(message.display, options);\n                if (message.animations && message.animations.length) {\n                    object.animations = [];\n                    for (var j = 0; j < message.animations.length; ++j)\n                        object.animations[j] = $root.op_gameconfig.Animation.toObject(message.animations[j], options);\n                }\n                if (message.elementEvent != null && message.hasOwnProperty("elementEvent"))\n                    object.elementEvent = $root.op_gameconfig.ElementEvent.toObject(message.elementEvent, options);\n                if (message.attributes && message.attributes.length) {\n                    object.attributes = [];\n                    for (var j = 0; j < message.attributes.length; ++j)\n                        object.attributes[j] = $root.op_gameconfig.Attribute.toObject(message.attributes[j], options);\n                }\n                if (message.animationName != null && message.hasOwnProperty("animationName"))\n                    object.animationName = message.animationName;\n                return object;\n            };\n    \n            /**\n             * Converts this Element to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig.Element\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Element.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Element;\n        })();\n    \n        op_gameconfig.Price = (function() {\n    \n            /**\n             * Properties of a Price.\n             * @memberof op_gameconfig\n             * @interface IPrice\n             * @property {number} price Price price\n             * @property {op_def.CoinType} coinType Price coinType\n             * @property {number|null} [displayPrecision] Price displayPrecision\n             */\n    \n            /**\n             * Constructs a new Price.\n             * @memberof op_gameconfig\n             * @classdesc Represents a Price.\n             * @implements IPrice\n             * @constructor\n             * @param {op_gameconfig.IPrice=} [properties] Properties to set\n             */\n            function Price(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Price price.\n             * @member {number} price\n             * @memberof op_gameconfig.Price\n             * @instance\n             */\n            Price.prototype.price = 0;\n    \n            /**\n             * Price coinType.\n             * @member {op_def.CoinType} coinType\n             * @memberof op_gameconfig.Price\n             * @instance\n             */\n            Price.prototype.coinType = 0;\n    \n            /**\n             * Price displayPrecision.\n             * @member {number} displayPrecision\n             * @memberof op_gameconfig.Price\n             * @instance\n             */\n            Price.prototype.displayPrecision = 0;\n    \n            /**\n             * Creates a new Price instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig.Price\n             * @static\n             * @param {op_gameconfig.IPrice=} [properties] Properties to set\n             * @returns {op_gameconfig.Price} Price instance\n             */\n            Price.create = function create(properties) {\n                return new Price(properties);\n            };\n    \n            /**\n             * Encodes the specified Price message. Does not implicitly {@link op_gameconfig.Price.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig.Price\n             * @static\n             * @param {op_gameconfig.IPrice} message Price message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Price.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 5 =*/13).float(message.price);\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.coinType);\n                if (message.displayPrecision != null && message.hasOwnProperty("displayPrecision"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.displayPrecision);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Price message, length delimited. Does not implicitly {@link op_gameconfig.Price.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig.Price\n             * @static\n             * @param {op_gameconfig.IPrice} message Price message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Price.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a Price message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig.Price\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig.Price} Price\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Price.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig.Price();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.price = reader.float();\n                        break;\n                    case 2:\n                        message.coinType = reader.int32();\n                        break;\n                    case 3:\n                        message.displayPrecision = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("price"))\n                    throw $util.ProtocolError("missing required \'price\'", { instance: message });\n                if (!message.hasOwnProperty("coinType"))\n                    throw $util.ProtocolError("missing required \'coinType\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a Price message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig.Price\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig.Price} Price\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Price.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a Price message.\n             * @function verify\n             * @memberof op_gameconfig.Price\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Price.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (typeof message.price !== "number")\n                    return "price: number expected";\n                switch (message.coinType) {\n                default:\n                    return "coinType: enum value expected";\n                case 0:\n                case 1:\n                case 2:\n                    break;\n                }\n                if (message.displayPrecision != null && message.hasOwnProperty("displayPrecision"))\n                    if (!$util.isInteger(message.displayPrecision))\n                        return "displayPrecision: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a Price message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig.Price\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig.Price} Price\n             */\n            Price.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig.Price)\n                    return object;\n                var message = new $root.op_gameconfig.Price();\n                if (object.price != null)\n                    message.price = Number(object.price);\n                switch (object.coinType) {\n                case "TU_DING_COIN":\n                case 0:\n                    message.coinType = 0;\n                    break;\n                case "QING_SONG_TANG":\n                case 1:\n                    message.coinType = 1;\n                    break;\n                case "GOLD_COIN":\n                case 2:\n                    message.coinType = 2;\n                    break;\n                }\n                if (object.displayPrecision != null)\n                    message.displayPrecision = object.displayPrecision | 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a Price message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig.Price\n             * @static\n             * @param {op_gameconfig.Price} message Price\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Price.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.price = 0;\n                    object.coinType = options.enums === String ? "TU_DING_COIN" : 0;\n                    object.displayPrecision = 0;\n                }\n                if (message.price != null && message.hasOwnProperty("price"))\n                    object.price = options.json && !isFinite(message.price) ? String(message.price) : message.price;\n                if (message.coinType != null && message.hasOwnProperty("coinType"))\n                    object.coinType = options.enums === String ? $root.op_def.CoinType[message.coinType] : message.coinType;\n                if (message.displayPrecision != null && message.hasOwnProperty("displayPrecision"))\n                    object.displayPrecision = message.displayPrecision;\n                return object;\n            };\n    \n            /**\n             * Converts this Price to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig.Price\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Price.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Price;\n        })();\n    \n        op_gameconfig.ItemType = (function() {\n    \n            /**\n             * Properties of an ItemType.\n             * @memberof op_gameconfig\n             * @interface IItemType\n             * @property {string} type ItemType type\n             * @property {string} name ItemType name\n             * @property {string|null} [des] ItemType des\n             * @property {Array.<op_gameconfig.IAnimation>|null} [animations] ItemType animations\n             * @property {op_gameconfig.IItemEvent|null} [itemEvent] ItemType itemEvent\n             * @property {Array.<op_gameconfig.IAttribute>|null} [attributes] ItemType attributes\n             * @property {number} maxcount ItemType maxcount\n             * @property {op_gameconfig.IDisplay|null} [display] ItemType display\n             * @property {Array.<op_gameconfig.IPrice>|null} [price] ItemType price\n             * @property {string|null} [shopDes] ItemType shopDes\n             */\n    \n            /**\n             * Constructs a new ItemType.\n             * @memberof op_gameconfig\n             * @classdesc Represents an ItemType.\n             * @implements IItemType\n             * @constructor\n             * @param {op_gameconfig.IItemType=} [properties] Properties to set\n             */\n            function ItemType(properties) {\n                this.animations = [];\n                this.attributes = [];\n                this.price = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * ItemType type.\n             * @member {string} type\n             * @memberof op_gameconfig.ItemType\n             * @instance\n             */\n            ItemType.prototype.type = "";\n    \n            /**\n             * ItemType name.\n             * @member {string} name\n             * @memberof op_gameconfig.ItemType\n             * @instance\n             */\n            ItemType.prototype.name = "";\n    \n            /**\n             * ItemType des.\n             * @member {string} des\n             * @memberof op_gameconfig.ItemType\n             * @instance\n             */\n            ItemType.prototype.des = "";\n    \n            /**\n             * ItemType animations.\n             * @member {Array.<op_gameconfig.IAnimation>} animations\n             * @memberof op_gameconfig.ItemType\n             * @instance\n             */\n            ItemType.prototype.animations = $util.emptyArray;\n    \n            /**\n             * ItemType itemEvent.\n             * @member {op_gameconfig.IItemEvent|null|undefined} itemEvent\n             * @memberof op_gameconfig.ItemType\n             * @instance\n             */\n            ItemType.prototype.itemEvent = null;\n    \n            /**\n             * ItemType attributes.\n             * @member {Array.<op_gameconfig.IAttribute>} attributes\n             * @memberof op_gameconfig.ItemType\n             * @instance\n             */\n            ItemType.prototype.attributes = $util.emptyArray;\n    \n            /**\n             * ItemType maxcount.\n             * @member {number} maxcount\n             * @memberof op_gameconfig.ItemType\n             * @instance\n             */\n            ItemType.prototype.maxcount = 0;\n    \n            /**\n             * ItemType display.\n             * @member {op_gameconfig.IDisplay|null|undefined} display\n             * @memberof op_gameconfig.ItemType\n             * @instance\n             */\n            ItemType.prototype.display = null;\n    \n            /**\n             * ItemType price.\n             * @member {Array.<op_gameconfig.IPrice>} price\n             * @memberof op_gameconfig.ItemType\n             * @instance\n             */\n            ItemType.prototype.price = $util.emptyArray;\n    \n            /**\n             * ItemType shopDes.\n             * @member {string} shopDes\n             * @memberof op_gameconfig.ItemType\n             * @instance\n             */\n            ItemType.prototype.shopDes = "";\n    \n            /**\n             * Creates a new ItemType instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig.ItemType\n             * @static\n             * @param {op_gameconfig.IItemType=} [properties] Properties to set\n             * @returns {op_gameconfig.ItemType} ItemType instance\n             */\n            ItemType.create = function create(properties) {\n                return new ItemType(properties);\n            };\n    \n            /**\n             * Encodes the specified ItemType message. Does not implicitly {@link op_gameconfig.ItemType.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig.ItemType\n             * @static\n             * @param {op_gameconfig.IItemType} message ItemType message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ItemType.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);\n                if (message.des != null && message.hasOwnProperty("des"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.des);\n                if (message.animations != null && message.animations.length)\n                    for (var i = 0; i < message.animations.length; ++i)\n                        $root.op_gameconfig.Animation.encode(message.animations[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n                if (message.itemEvent != null && message.hasOwnProperty("itemEvent"))\n                    $root.op_gameconfig.ItemEvent.encode(message.itemEvent, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n                if (message.attributes != null && message.attributes.length)\n                    for (var i = 0; i < message.attributes.length; ++i)\n                        $root.op_gameconfig.Attribute.encode(message.attributes[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();\n                writer.uint32(/* id 10, wireType 0 =*/80).int32(message.maxcount);\n                if (message.display != null && message.hasOwnProperty("display"))\n                    $root.op_gameconfig.Display.encode(message.display, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n                if (message.price != null && message.price.length)\n                    for (var i = 0; i < message.price.length; ++i)\n                        $root.op_gameconfig.Price.encode(message.price[i], writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();\n                if (message.shopDes != null && message.hasOwnProperty("shopDes"))\n                    writer.uint32(/* id 16, wireType 2 =*/130).string(message.shopDes);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified ItemType message, length delimited. Does not implicitly {@link op_gameconfig.ItemType.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig.ItemType\n             * @static\n             * @param {op_gameconfig.IItemType} message ItemType message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ItemType.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes an ItemType message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig.ItemType\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig.ItemType} ItemType\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ItemType.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig.ItemType();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.type = reader.string();\n                        break;\n                    case 2:\n                        message.name = reader.string();\n                        break;\n                    case 3:\n                        message.des = reader.string();\n                        break;\n                    case 7:\n                        if (!(message.animations && message.animations.length))\n                            message.animations = [];\n                        message.animations.push($root.op_gameconfig.Animation.decode(reader, reader.uint32()));\n                        break;\n                    case 8:\n                        message.itemEvent = $root.op_gameconfig.ItemEvent.decode(reader, reader.uint32());\n                        break;\n                    case 9:\n                        if (!(message.attributes && message.attributes.length))\n                            message.attributes = [];\n                        message.attributes.push($root.op_gameconfig.Attribute.decode(reader, reader.uint32()));\n                        break;\n                    case 10:\n                        message.maxcount = reader.int32();\n                        break;\n                    case 14:\n                        message.display = $root.op_gameconfig.Display.decode(reader, reader.uint32());\n                        break;\n                    case 15:\n                        if (!(message.price && message.price.length))\n                            message.price = [];\n                        message.price.push($root.op_gameconfig.Price.decode(reader, reader.uint32()));\n                        break;\n                    case 16:\n                        message.shopDes = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("type"))\n                    throw $util.ProtocolError("missing required \'type\'", { instance: message });\n                if (!message.hasOwnProperty("name"))\n                    throw $util.ProtocolError("missing required \'name\'", { instance: message });\n                if (!message.hasOwnProperty("maxcount"))\n                    throw $util.ProtocolError("missing required \'maxcount\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes an ItemType message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig.ItemType\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig.ItemType} ItemType\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ItemType.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies an ItemType message.\n             * @function verify\n             * @memberof op_gameconfig.ItemType\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            ItemType.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.type))\n                    return "type: string expected";\n                if (!$util.isString(message.name))\n                    return "name: string expected";\n                if (message.des != null && message.hasOwnProperty("des"))\n                    if (!$util.isString(message.des))\n                        return "des: string expected";\n                if (message.animations != null && message.hasOwnProperty("animations")) {\n                    if (!Array.isArray(message.animations))\n                        return "animations: array expected";\n                    for (var i = 0; i < message.animations.length; ++i) {\n                        var error = $root.op_gameconfig.Animation.verify(message.animations[i]);\n                        if (error)\n                            return "animations." + error;\n                    }\n                }\n                if (message.itemEvent != null && message.hasOwnProperty("itemEvent")) {\n                    var error = $root.op_gameconfig.ItemEvent.verify(message.itemEvent);\n                    if (error)\n                        return "itemEvent." + error;\n                }\n                if (message.attributes != null && message.hasOwnProperty("attributes")) {\n                    if (!Array.isArray(message.attributes))\n                        return "attributes: array expected";\n                    for (var i = 0; i < message.attributes.length; ++i) {\n                        var error = $root.op_gameconfig.Attribute.verify(message.attributes[i]);\n                        if (error)\n                            return "attributes." + error;\n                    }\n                }\n                if (!$util.isInteger(message.maxcount))\n                    return "maxcount: integer expected";\n                if (message.display != null && message.hasOwnProperty("display")) {\n                    var error = $root.op_gameconfig.Display.verify(message.display);\n                    if (error)\n                        return "display." + error;\n                }\n                if (message.price != null && message.hasOwnProperty("price")) {\n                    if (!Array.isArray(message.price))\n                        return "price: array expected";\n                    for (var i = 0; i < message.price.length; ++i) {\n                        var error = $root.op_gameconfig.Price.verify(message.price[i]);\n                        if (error)\n                            return "price." + error;\n                    }\n                }\n                if (message.shopDes != null && message.hasOwnProperty("shopDes"))\n                    if (!$util.isString(message.shopDes))\n                        return "shopDes: string expected";\n                return null;\n            };\n    \n            /**\n             * Creates an ItemType message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig.ItemType\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig.ItemType} ItemType\n             */\n            ItemType.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig.ItemType)\n                    return object;\n                var message = new $root.op_gameconfig.ItemType();\n                if (object.type != null)\n                    message.type = String(object.type);\n                if (object.name != null)\n                    message.name = String(object.name);\n                if (object.des != null)\n                    message.des = String(object.des);\n                if (object.animations) {\n                    if (!Array.isArray(object.animations))\n                        throw TypeError(".op_gameconfig.ItemType.animations: array expected");\n                    message.animations = [];\n                    for (var i = 0; i < object.animations.length; ++i) {\n                        if (typeof object.animations[i] !== "object")\n                            throw TypeError(".op_gameconfig.ItemType.animations: object expected");\n                        message.animations[i] = $root.op_gameconfig.Animation.fromObject(object.animations[i]);\n                    }\n                }\n                if (object.itemEvent != null) {\n                    if (typeof object.itemEvent !== "object")\n                        throw TypeError(".op_gameconfig.ItemType.itemEvent: object expected");\n                    message.itemEvent = $root.op_gameconfig.ItemEvent.fromObject(object.itemEvent);\n                }\n                if (object.attributes) {\n                    if (!Array.isArray(object.attributes))\n                        throw TypeError(".op_gameconfig.ItemType.attributes: array expected");\n                    message.attributes = [];\n                    for (var i = 0; i < object.attributes.length; ++i) {\n                        if (typeof object.attributes[i] !== "object")\n                            throw TypeError(".op_gameconfig.ItemType.attributes: object expected");\n                        message.attributes[i] = $root.op_gameconfig.Attribute.fromObject(object.attributes[i]);\n                    }\n                }\n                if (object.maxcount != null)\n                    message.maxcount = object.maxcount | 0;\n                if (object.display != null) {\n                    if (typeof object.display !== "object")\n                        throw TypeError(".op_gameconfig.ItemType.display: object expected");\n                    message.display = $root.op_gameconfig.Display.fromObject(object.display);\n                }\n                if (object.price) {\n                    if (!Array.isArray(object.price))\n                        throw TypeError(".op_gameconfig.ItemType.price: array expected");\n                    message.price = [];\n                    for (var i = 0; i < object.price.length; ++i) {\n                        if (typeof object.price[i] !== "object")\n                            throw TypeError(".op_gameconfig.ItemType.price: object expected");\n                        message.price[i] = $root.op_gameconfig.Price.fromObject(object.price[i]);\n                    }\n                }\n                if (object.shopDes != null)\n                    message.shopDes = String(object.shopDes);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from an ItemType message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig.ItemType\n             * @static\n             * @param {op_gameconfig.ItemType} message ItemType\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            ItemType.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults) {\n                    object.animations = [];\n                    object.attributes = [];\n                    object.price = [];\n                }\n                if (options.defaults) {\n                    object.type = "";\n                    object.name = "";\n                    object.des = "";\n                    object.itemEvent = null;\n                    object.maxcount = 0;\n                    object.display = null;\n                    object.shopDes = "";\n                }\n                if (message.type != null && message.hasOwnProperty("type"))\n                    object.type = message.type;\n                if (message.name != null && message.hasOwnProperty("name"))\n                    object.name = message.name;\n                if (message.des != null && message.hasOwnProperty("des"))\n                    object.des = message.des;\n                if (message.animations && message.animations.length) {\n                    object.animations = [];\n                    for (var j = 0; j < message.animations.length; ++j)\n                        object.animations[j] = $root.op_gameconfig.Animation.toObject(message.animations[j], options);\n                }\n                if (message.itemEvent != null && message.hasOwnProperty("itemEvent"))\n                    object.itemEvent = $root.op_gameconfig.ItemEvent.toObject(message.itemEvent, options);\n                if (message.attributes && message.attributes.length) {\n                    object.attributes = [];\n                    for (var j = 0; j < message.attributes.length; ++j)\n                        object.attributes[j] = $root.op_gameconfig.Attribute.toObject(message.attributes[j], options);\n                }\n                if (message.maxcount != null && message.hasOwnProperty("maxcount"))\n                    object.maxcount = message.maxcount;\n                if (message.display != null && message.hasOwnProperty("display"))\n                    object.display = $root.op_gameconfig.Display.toObject(message.display, options);\n                if (message.price && message.price.length) {\n                    object.price = [];\n                    for (var j = 0; j < message.price.length; ++j)\n                        object.price[j] = $root.op_gameconfig.Price.toObject(message.price[j], options);\n                }\n                if (message.shopDes != null && message.hasOwnProperty("shopDes"))\n                    object.shopDes = message.shopDes;\n                return object;\n            };\n    \n            /**\n             * Converts this ItemType to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig.ItemType\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            ItemType.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return ItemType;\n        })();\n    \n        op_gameconfig.Item = (function() {\n    \n            /**\n             * Properties of an Item.\n             * @memberof op_gameconfig\n             * @interface IItem\n             * @property {number} id Item id\n             * @property {string} type Item type\n             * @property {number} count Item count\n             * @property {string|null} [name] Item name\n             * @property {string|null} [des] Item des\n             * @property {Array.<op_gameconfig.IAnimation>|null} [animations] Item animations\n             * @property {op_gameconfig.IItemEvent|null} [itemEvent] Item itemEvent\n             * @property {Array.<op_gameconfig.IAttribute>|null} [attributes] Item attributes\n             * @property {number|null} [maxcount] Item maxcount\n             * @property {string|null} [animationName] Item animationName\n             * @property {op_gameconfig.IDisplay|null} [display] Item display\n             * @property {Array.<op_gameconfig.IPrice>|null} [price] Item price\n             * @property {string|null} [shopDes] Item shopDes\n             */\n    \n            /**\n             * Constructs a new Item.\n             * @memberof op_gameconfig\n             * @classdesc Represents an Item.\n             * @implements IItem\n             * @constructor\n             * @param {op_gameconfig.IItem=} [properties] Properties to set\n             */\n            function Item(properties) {\n                this.animations = [];\n                this.attributes = [];\n                this.price = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Item id.\n             * @member {number} id\n             * @memberof op_gameconfig.Item\n             * @instance\n             */\n            Item.prototype.id = 0;\n    \n            /**\n             * Item type.\n             * @member {string} type\n             * @memberof op_gameconfig.Item\n             * @instance\n             */\n            Item.prototype.type = "";\n    \n            /**\n             * Item count.\n             * @member {number} count\n             * @memberof op_gameconfig.Item\n             * @instance\n             */\n            Item.prototype.count = 1;\n    \n            /**\n             * Item name.\n             * @member {string} name\n             * @memberof op_gameconfig.Item\n             * @instance\n             */\n            Item.prototype.name = "";\n    \n            /**\n             * Item des.\n             * @member {string} des\n             * @memberof op_gameconfig.Item\n             * @instance\n             */\n            Item.prototype.des = "";\n    \n            /**\n             * Item animations.\n             * @member {Array.<op_gameconfig.IAnimation>} animations\n             * @memberof op_gameconfig.Item\n             * @instance\n             */\n            Item.prototype.animations = $util.emptyArray;\n    \n            /**\n             * Item itemEvent.\n             * @member {op_gameconfig.IItemEvent|null|undefined} itemEvent\n             * @memberof op_gameconfig.Item\n             * @instance\n             */\n            Item.prototype.itemEvent = null;\n    \n            /**\n             * Item attributes.\n             * @member {Array.<op_gameconfig.IAttribute>} attributes\n             * @memberof op_gameconfig.Item\n             * @instance\n             */\n            Item.prototype.attributes = $util.emptyArray;\n    \n            /**\n             * Item maxcount.\n             * @member {number} maxcount\n             * @memberof op_gameconfig.Item\n             * @instance\n             */\n            Item.prototype.maxcount = 0;\n    \n            /**\n             * Item animationName.\n             * @member {string} animationName\n             * @memberof op_gameconfig.Item\n             * @instance\n             */\n            Item.prototype.animationName = "";\n    \n            /**\n             * Item display.\n             * @member {op_gameconfig.IDisplay|null|undefined} display\n             * @memberof op_gameconfig.Item\n             * @instance\n             */\n            Item.prototype.display = null;\n    \n            /**\n             * Item price.\n             * @member {Array.<op_gameconfig.IPrice>} price\n             * @memberof op_gameconfig.Item\n             * @instance\n             */\n            Item.prototype.price = $util.emptyArray;\n    \n            /**\n             * Item shopDes.\n             * @member {string} shopDes\n             * @memberof op_gameconfig.Item\n             * @instance\n             */\n            Item.prototype.shopDes = "";\n    \n            /**\n             * Creates a new Item instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig.Item\n             * @static\n             * @param {op_gameconfig.IItem=} [properties] Properties to set\n             * @returns {op_gameconfig.Item} Item instance\n             */\n            Item.create = function create(properties) {\n                return new Item(properties);\n            };\n    \n            /**\n             * Encodes the specified Item message. Does not implicitly {@link op_gameconfig.Item.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig.Item\n             * @static\n             * @param {op_gameconfig.IItem} message Item message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Item.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.id);\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.type);\n                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.count);\n                if (message.name != null && message.hasOwnProperty("name"))\n                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.name);\n                if (message.des != null && message.hasOwnProperty("des"))\n                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.des);\n                if (message.animations != null && message.animations.length)\n                    for (var i = 0; i < message.animations.length; ++i)\n                        $root.op_gameconfig.Animation.encode(message.animations[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();\n                if (message.itemEvent != null && message.hasOwnProperty("itemEvent"))\n                    $root.op_gameconfig.ItemEvent.encode(message.itemEvent, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n                if (message.attributes != null && message.attributes.length)\n                    for (var i = 0; i < message.attributes.length; ++i)\n                        $root.op_gameconfig.Attribute.encode(message.attributes[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n                if (message.maxcount != null && message.hasOwnProperty("maxcount"))\n                    writer.uint32(/* id 12, wireType 0 =*/96).int32(message.maxcount);\n                if (message.animationName != null && message.hasOwnProperty("animationName"))\n                    writer.uint32(/* id 13, wireType 2 =*/106).string(message.animationName);\n                if (message.display != null && message.hasOwnProperty("display"))\n                    $root.op_gameconfig.Display.encode(message.display, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n                if (message.price != null && message.price.length)\n                    for (var i = 0; i < message.price.length; ++i)\n                        $root.op_gameconfig.Price.encode(message.price[i], writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();\n                if (message.shopDes != null && message.hasOwnProperty("shopDes"))\n                    writer.uint32(/* id 16, wireType 2 =*/130).string(message.shopDes);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Item message, length delimited. Does not implicitly {@link op_gameconfig.Item.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig.Item\n             * @static\n             * @param {op_gameconfig.IItem} message Item message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Item.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes an Item message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig.Item\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig.Item} Item\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Item.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig.Item();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.id = reader.int32();\n                        break;\n                    case 2:\n                        message.type = reader.string();\n                        break;\n                    case 3:\n                        message.count = reader.int32();\n                        break;\n                    case 4:\n                        message.name = reader.string();\n                        break;\n                    case 5:\n                        message.des = reader.string();\n                        break;\n                    case 9:\n                        if (!(message.animations && message.animations.length))\n                            message.animations = [];\n                        message.animations.push($root.op_gameconfig.Animation.decode(reader, reader.uint32()));\n                        break;\n                    case 10:\n                        message.itemEvent = $root.op_gameconfig.ItemEvent.decode(reader, reader.uint32());\n                        break;\n                    case 11:\n                        if (!(message.attributes && message.attributes.length))\n                            message.attributes = [];\n                        message.attributes.push($root.op_gameconfig.Attribute.decode(reader, reader.uint32()));\n                        break;\n                    case 12:\n                        message.maxcount = reader.int32();\n                        break;\n                    case 13:\n                        message.animationName = reader.string();\n                        break;\n                    case 14:\n                        message.display = $root.op_gameconfig.Display.decode(reader, reader.uint32());\n                        break;\n                    case 15:\n                        if (!(message.price && message.price.length))\n                            message.price = [];\n                        message.price.push($root.op_gameconfig.Price.decode(reader, reader.uint32()));\n                        break;\n                    case 16:\n                        message.shopDes = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("id"))\n                    throw $util.ProtocolError("missing required \'id\'", { instance: message });\n                if (!message.hasOwnProperty("type"))\n                    throw $util.ProtocolError("missing required \'type\'", { instance: message });\n                if (!message.hasOwnProperty("count"))\n                    throw $util.ProtocolError("missing required \'count\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes an Item message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig.Item\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig.Item} Item\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Item.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies an Item message.\n             * @function verify\n             * @memberof op_gameconfig.Item\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Item.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.id))\n                    return "id: integer expected";\n                if (!$util.isString(message.type))\n                    return "type: string expected";\n                if (!$util.isInteger(message.count))\n                    return "count: integer expected";\n                if (message.name != null && message.hasOwnProperty("name"))\n                    if (!$util.isString(message.name))\n                        return "name: string expected";\n                if (message.des != null && message.hasOwnProperty("des"))\n                    if (!$util.isString(message.des))\n                        return "des: string expected";\n                if (message.animations != null && message.hasOwnProperty("animations")) {\n                    if (!Array.isArray(message.animations))\n                        return "animations: array expected";\n                    for (var i = 0; i < message.animations.length; ++i) {\n                        var error = $root.op_gameconfig.Animation.verify(message.animations[i]);\n                        if (error)\n                            return "animations." + error;\n                    }\n                }\n                if (message.itemEvent != null && message.hasOwnProperty("itemEvent")) {\n                    var error = $root.op_gameconfig.ItemEvent.verify(message.itemEvent);\n                    if (error)\n                        return "itemEvent." + error;\n                }\n                if (message.attributes != null && message.hasOwnProperty("attributes")) {\n                    if (!Array.isArray(message.attributes))\n                        return "attributes: array expected";\n                    for (var i = 0; i < message.attributes.length; ++i) {\n                        var error = $root.op_gameconfig.Attribute.verify(message.attributes[i]);\n                        if (error)\n                            return "attributes." + error;\n                    }\n                }\n                if (message.maxcount != null && message.hasOwnProperty("maxcount"))\n                    if (!$util.isInteger(message.maxcount))\n                        return "maxcount: integer expected";\n                if (message.animationName != null && message.hasOwnProperty("animationName"))\n                    if (!$util.isString(message.animationName))\n                        return "animationName: string expected";\n                if (message.display != null && message.hasOwnProperty("display")) {\n                    var error = $root.op_gameconfig.Display.verify(message.display);\n                    if (error)\n                        return "display." + error;\n                }\n                if (message.price != null && message.hasOwnProperty("price")) {\n                    if (!Array.isArray(message.price))\n                        return "price: array expected";\n                    for (var i = 0; i < message.price.length; ++i) {\n                        var error = $root.op_gameconfig.Price.verify(message.price[i]);\n                        if (error)\n                            return "price." + error;\n                    }\n                }\n                if (message.shopDes != null && message.hasOwnProperty("shopDes"))\n                    if (!$util.isString(message.shopDes))\n                        return "shopDes: string expected";\n                return null;\n            };\n    \n            /**\n             * Creates an Item message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig.Item\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig.Item} Item\n             */\n            Item.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig.Item)\n                    return object;\n                var message = new $root.op_gameconfig.Item();\n                if (object.id != null)\n                    message.id = object.id | 0;\n                if (object.type != null)\n                    message.type = String(object.type);\n                if (object.count != null)\n                    message.count = object.count | 0;\n                if (object.name != null)\n                    message.name = String(object.name);\n                if (object.des != null)\n                    message.des = String(object.des);\n                if (object.animations) {\n                    if (!Array.isArray(object.animations))\n                        throw TypeError(".op_gameconfig.Item.animations: array expected");\n                    message.animations = [];\n                    for (var i = 0; i < object.animations.length; ++i) {\n                        if (typeof object.animations[i] !== "object")\n                            throw TypeError(".op_gameconfig.Item.animations: object expected");\n                        message.animations[i] = $root.op_gameconfig.Animation.fromObject(object.animations[i]);\n                    }\n                }\n                if (object.itemEvent != null) {\n                    if (typeof object.itemEvent !== "object")\n                        throw TypeError(".op_gameconfig.Item.itemEvent: object expected");\n                    message.itemEvent = $root.op_gameconfig.ItemEvent.fromObject(object.itemEvent);\n                }\n                if (object.attributes) {\n                    if (!Array.isArray(object.attributes))\n                        throw TypeError(".op_gameconfig.Item.attributes: array expected");\n                    message.attributes = [];\n                    for (var i = 0; i < object.attributes.length; ++i) {\n                        if (typeof object.attributes[i] !== "object")\n                            throw TypeError(".op_gameconfig.Item.attributes: object expected");\n                        message.attributes[i] = $root.op_gameconfig.Attribute.fromObject(object.attributes[i]);\n                    }\n                }\n                if (object.maxcount != null)\n                    message.maxcount = object.maxcount | 0;\n                if (object.animationName != null)\n                    message.animationName = String(object.animationName);\n                if (object.display != null) {\n                    if (typeof object.display !== "object")\n                        throw TypeError(".op_gameconfig.Item.display: object expected");\n                    message.display = $root.op_gameconfig.Display.fromObject(object.display);\n                }\n                if (object.price) {\n                    if (!Array.isArray(object.price))\n                        throw TypeError(".op_gameconfig.Item.price: array expected");\n                    message.price = [];\n                    for (var i = 0; i < object.price.length; ++i) {\n                        if (typeof object.price[i] !== "object")\n                            throw TypeError(".op_gameconfig.Item.price: object expected");\n                        message.price[i] = $root.op_gameconfig.Price.fromObject(object.price[i]);\n                    }\n                }\n                if (object.shopDes != null)\n                    message.shopDes = String(object.shopDes);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from an Item message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig.Item\n             * @static\n             * @param {op_gameconfig.Item} message Item\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Item.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults) {\n                    object.animations = [];\n                    object.attributes = [];\n                    object.price = [];\n                }\n                if (options.defaults) {\n                    object.id = 0;\n                    object.type = "";\n                    object.count = 1;\n                    object.name = "";\n                    object.des = "";\n                    object.itemEvent = null;\n                    object.maxcount = 0;\n                    object.animationName = "";\n                    object.display = null;\n                    object.shopDes = "";\n                }\n                if (message.id != null && message.hasOwnProperty("id"))\n                    object.id = message.id;\n                if (message.type != null && message.hasOwnProperty("type"))\n                    object.type = message.type;\n                if (message.count != null && message.hasOwnProperty("count"))\n                    object.count = message.count;\n                if (message.name != null && message.hasOwnProperty("name"))\n                    object.name = message.name;\n                if (message.des != null && message.hasOwnProperty("des"))\n                    object.des = message.des;\n                if (message.animations && message.animations.length) {\n                    object.animations = [];\n                    for (var j = 0; j < message.animations.length; ++j)\n                        object.animations[j] = $root.op_gameconfig.Animation.toObject(message.animations[j], options);\n                }\n                if (message.itemEvent != null && message.hasOwnProperty("itemEvent"))\n                    object.itemEvent = $root.op_gameconfig.ItemEvent.toObject(message.itemEvent, options);\n                if (message.attributes && message.attributes.length) {\n                    object.attributes = [];\n                    for (var j = 0; j < message.attributes.length; ++j)\n                        object.attributes[j] = $root.op_gameconfig.Attribute.toObject(message.attributes[j], options);\n                }\n                if (message.maxcount != null && message.hasOwnProperty("maxcount"))\n                    object.maxcount = message.maxcount;\n                if (message.animationName != null && message.hasOwnProperty("animationName"))\n                    object.animationName = message.animationName;\n                if (message.display != null && message.hasOwnProperty("display"))\n                    object.display = $root.op_gameconfig.Display.toObject(message.display, options);\n                if (message.price && message.price.length) {\n                    object.price = [];\n                    for (var j = 0; j < message.price.length; ++j)\n                        object.price[j] = $root.op_gameconfig.Price.toObject(message.price[j], options);\n                }\n                if (message.shopDes != null && message.hasOwnProperty("shopDes"))\n                    object.shopDes = message.shopDes;\n                return object;\n            };\n    \n            /**\n             * Converts this Item to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig.Item\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Item.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Item;\n        })();\n    \n        op_gameconfig.TerrainType = (function() {\n    \n            /**\n             * Properties of a TerrainType.\n             * @memberof op_gameconfig\n             * @interface ITerrainType\n             * @property {string} type TerrainType type\n             * @property {string} name TerrainType name\n             * @property {string|null} [des] TerrainType des\n             * @property {Array.<op_gameconfig.IAnimation>|null} [animations] TerrainType animations\n             * @property {string} animationName TerrainType animationName\n             * @property {op_gameconfig.ITerrainEvent|null} [terrainEvent] TerrainType terrainEvent\n             * @property {op_def.TerrainAnimationType} mode TerrainType mode\n             * @property {op_gameconfig.IDisplay|null} [display] TerrainType display\n             */\n    \n            /**\n             * Constructs a new TerrainType.\n             * @memberof op_gameconfig\n             * @classdesc Represents a TerrainType.\n             * @implements ITerrainType\n             * @constructor\n             * @param {op_gameconfig.ITerrainType=} [properties] Properties to set\n             */\n            function TerrainType(properties) {\n                this.animations = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * TerrainType type.\n             * @member {string} type\n             * @memberof op_gameconfig.TerrainType\n             * @instance\n             */\n            TerrainType.prototype.type = "";\n    \n            /**\n             * TerrainType name.\n             * @member {string} name\n             * @memberof op_gameconfig.TerrainType\n             * @instance\n             */\n            TerrainType.prototype.name = "";\n    \n            /**\n             * TerrainType des.\n             * @member {string} des\n             * @memberof op_gameconfig.TerrainType\n             * @instance\n             */\n            TerrainType.prototype.des = "";\n    \n            /**\n             * TerrainType animations.\n             * @member {Array.<op_gameconfig.IAnimation>} animations\n             * @memberof op_gameconfig.TerrainType\n             * @instance\n             */\n            TerrainType.prototype.animations = $util.emptyArray;\n    \n            /**\n             * TerrainType animationName.\n             * @member {string} animationName\n             * @memberof op_gameconfig.TerrainType\n             * @instance\n             */\n            TerrainType.prototype.animationName = "";\n    \n            /**\n             * TerrainType terrainEvent.\n             * @member {op_gameconfig.ITerrainEvent|null|undefined} terrainEvent\n             * @memberof op_gameconfig.TerrainType\n             * @instance\n             */\n            TerrainType.prototype.terrainEvent = null;\n    \n            /**\n             * TerrainType mode.\n             * @member {op_def.TerrainAnimationType} mode\n             * @memberof op_gameconfig.TerrainType\n             * @instance\n             */\n            TerrainType.prototype.mode = 16;\n    \n            /**\n             * TerrainType display.\n             * @member {op_gameconfig.IDisplay|null|undefined} display\n             * @memberof op_gameconfig.TerrainType\n             * @instance\n             */\n            TerrainType.prototype.display = null;\n    \n            /**\n             * Creates a new TerrainType instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig.TerrainType\n             * @static\n             * @param {op_gameconfig.ITerrainType=} [properties] Properties to set\n             * @returns {op_gameconfig.TerrainType} TerrainType instance\n             */\n            TerrainType.create = function create(properties) {\n                return new TerrainType(properties);\n            };\n    \n            /**\n             * Encodes the specified TerrainType message. Does not implicitly {@link op_gameconfig.TerrainType.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig.TerrainType\n             * @static\n             * @param {op_gameconfig.ITerrainType} message TerrainType message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            TerrainType.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.type);\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);\n                if (message.des != null && message.hasOwnProperty("des"))\n                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.des);\n                if (message.animations != null && message.animations.length)\n                    for (var i = 0; i < message.animations.length; ++i)\n                        $root.op_gameconfig.Animation.encode(message.animations[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.animationName);\n                if (message.terrainEvent != null && message.hasOwnProperty("terrainEvent"))\n                    $root.op_gameconfig.TerrainEvent.encode(message.terrainEvent, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n                writer.uint32(/* id 8, wireType 0 =*/64).int32(message.mode);\n                if (message.display != null && message.hasOwnProperty("display"))\n                    $root.op_gameconfig.Display.encode(message.display, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified TerrainType message, length delimited. Does not implicitly {@link op_gameconfig.TerrainType.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig.TerrainType\n             * @static\n             * @param {op_gameconfig.ITerrainType} message TerrainType message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            TerrainType.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a TerrainType message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig.TerrainType\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig.TerrainType} TerrainType\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            TerrainType.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig.TerrainType();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 2:\n                        message.type = reader.string();\n                        break;\n                    case 3:\n                        message.name = reader.string();\n                        break;\n                    case 4:\n                        message.des = reader.string();\n                        break;\n                    case 5:\n                        if (!(message.animations && message.animations.length))\n                            message.animations = [];\n                        message.animations.push($root.op_gameconfig.Animation.decode(reader, reader.uint32()));\n                        break;\n                    case 6:\n                        message.animationName = reader.string();\n                        break;\n                    case 7:\n                        message.terrainEvent = $root.op_gameconfig.TerrainEvent.decode(reader, reader.uint32());\n                        break;\n                    case 8:\n                        message.mode = reader.int32();\n                        break;\n                    case 14:\n                        message.display = $root.op_gameconfig.Display.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("type"))\n                    throw $util.ProtocolError("missing required \'type\'", { instance: message });\n                if (!message.hasOwnProperty("name"))\n                    throw $util.ProtocolError("missing required \'name\'", { instance: message });\n                if (!message.hasOwnProperty("animationName"))\n                    throw $util.ProtocolError("missing required \'animationName\'", { instance: message });\n                if (!message.hasOwnProperty("mode"))\n                    throw $util.ProtocolError("missing required \'mode\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a TerrainType message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig.TerrainType\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig.TerrainType} TerrainType\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            TerrainType.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a TerrainType message.\n             * @function verify\n             * @memberof op_gameconfig.TerrainType\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            TerrainType.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.type))\n                    return "type: string expected";\n                if (!$util.isString(message.name))\n                    return "name: string expected";\n                if (message.des != null && message.hasOwnProperty("des"))\n                    if (!$util.isString(message.des))\n                        return "des: string expected";\n                if (message.animations != null && message.hasOwnProperty("animations")) {\n                    if (!Array.isArray(message.animations))\n                        return "animations: array expected";\n                    for (var i = 0; i < message.animations.length; ++i) {\n                        var error = $root.op_gameconfig.Animation.verify(message.animations[i]);\n                        if (error)\n                            return "animations." + error;\n                    }\n                }\n                if (!$util.isString(message.animationName))\n                    return "animationName: string expected";\n                if (message.terrainEvent != null && message.hasOwnProperty("terrainEvent")) {\n                    var error = $root.op_gameconfig.TerrainEvent.verify(message.terrainEvent);\n                    if (error)\n                        return "terrainEvent." + error;\n                }\n                switch (message.mode) {\n                default:\n                    return "mode: enum value expected";\n                case 16:\n                case 1:\n                    break;\n                }\n                if (message.display != null && message.hasOwnProperty("display")) {\n                    var error = $root.op_gameconfig.Display.verify(message.display);\n                    if (error)\n                        return "display." + error;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a TerrainType message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig.TerrainType\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig.TerrainType} TerrainType\n             */\n            TerrainType.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig.TerrainType)\n                    return object;\n                var message = new $root.op_gameconfig.TerrainType();\n                if (object.type != null)\n                    message.type = String(object.type);\n                if (object.name != null)\n                    message.name = String(object.name);\n                if (object.des != null)\n                    message.des = String(object.des);\n                if (object.animations) {\n                    if (!Array.isArray(object.animations))\n                        throw TypeError(".op_gameconfig.TerrainType.animations: array expected");\n                    message.animations = [];\n                    for (var i = 0; i < object.animations.length; ++i) {\n                        if (typeof object.animations[i] !== "object")\n                            throw TypeError(".op_gameconfig.TerrainType.animations: object expected");\n                        message.animations[i] = $root.op_gameconfig.Animation.fromObject(object.animations[i]);\n                    }\n                }\n                if (object.animationName != null)\n                    message.animationName = String(object.animationName);\n                if (object.terrainEvent != null) {\n                    if (typeof object.terrainEvent !== "object")\n                        throw TypeError(".op_gameconfig.TerrainType.terrainEvent: object expected");\n                    message.terrainEvent = $root.op_gameconfig.TerrainEvent.fromObject(object.terrainEvent);\n                }\n                switch (object.mode) {\n                case "DYNAMIC_TYPE":\n                case 16:\n                    message.mode = 16;\n                    break;\n                case "STATIC_TYPE":\n                case 1:\n                    message.mode = 1;\n                    break;\n                }\n                if (object.display != null) {\n                    if (typeof object.display !== "object")\n                        throw TypeError(".op_gameconfig.TerrainType.display: object expected");\n                    message.display = $root.op_gameconfig.Display.fromObject(object.display);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a TerrainType message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig.TerrainType\n             * @static\n             * @param {op_gameconfig.TerrainType} message TerrainType\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            TerrainType.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.animations = [];\n                if (options.defaults) {\n                    object.type = "";\n                    object.name = "";\n                    object.des = "";\n                    object.animationName = "";\n                    object.terrainEvent = null;\n                    object.mode = options.enums === String ? "DYNAMIC_TYPE" : 16;\n                    object.display = null;\n                }\n                if (message.type != null && message.hasOwnProperty("type"))\n                    object.type = message.type;\n                if (message.name != null && message.hasOwnProperty("name"))\n                    object.name = message.name;\n                if (message.des != null && message.hasOwnProperty("des"))\n                    object.des = message.des;\n                if (message.animations && message.animations.length) {\n                    object.animations = [];\n                    for (var j = 0; j < message.animations.length; ++j)\n                        object.animations[j] = $root.op_gameconfig.Animation.toObject(message.animations[j], options);\n                }\n                if (message.animationName != null && message.hasOwnProperty("animationName"))\n                    object.animationName = message.animationName;\n                if (message.terrainEvent != null && message.hasOwnProperty("terrainEvent"))\n                    object.terrainEvent = $root.op_gameconfig.TerrainEvent.toObject(message.terrainEvent, options);\n                if (message.mode != null && message.hasOwnProperty("mode"))\n                    object.mode = options.enums === String ? $root.op_def.TerrainAnimationType[message.mode] : message.mode;\n                if (message.display != null && message.hasOwnProperty("display"))\n                    object.display = $root.op_gameconfig.Display.toObject(message.display, options);\n                return object;\n            };\n    \n            /**\n             * Converts this TerrainType to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig.TerrainType\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            TerrainType.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return TerrainType;\n        })();\n    \n        op_gameconfig.Terrain = (function() {\n    \n            /**\n             * Properties of a Terrain.\n             * @memberof op_gameconfig\n             * @interface ITerrain\n             * @property {number|null} [id] Terrain id\n             * @property {string} type Terrain type\n             * @property {string} animationName Terrain animationName\n             * @property {string|null} [name] Terrain name\n             * @property {string|null} [des] Terrain des\n             * @property {Array.<op_gameconfig.IAnimation>|null} [animations] Terrain animations\n             * @property {op_gameconfig.ITerrainEvent|null} [terrainEvent] Terrain terrainEvent\n             * @property {op_def.TerrainAnimationType|null} [mode] Terrain mode\n             * @property {number|null} [x] Terrain x\n             * @property {number|null} [y] Terrain y\n             * @property {number|null} [z] Terrain z\n             * @property {op_gameconfig.IDisplay|null} [display] Terrain display\n             */\n    \n            /**\n             * Constructs a new Terrain.\n             * @memberof op_gameconfig\n             * @classdesc Represents a Terrain.\n             * @implements ITerrain\n             * @constructor\n             * @param {op_gameconfig.ITerrain=} [properties] Properties to set\n             */\n            function Terrain(properties) {\n                this.animations = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Terrain id.\n             * @member {number} id\n             * @memberof op_gameconfig.Terrain\n             * @instance\n             */\n            Terrain.prototype.id = 0;\n    \n            /**\n             * Terrain type.\n             * @member {string} type\n             * @memberof op_gameconfig.Terrain\n             * @instance\n             */\n            Terrain.prototype.type = "";\n    \n            /**\n             * Terrain animationName.\n             * @member {string} animationName\n             * @memberof op_gameconfig.Terrain\n             * @instance\n             */\n            Terrain.prototype.animationName = "";\n    \n            /**\n             * Terrain name.\n             * @member {string} name\n             * @memberof op_gameconfig.Terrain\n             * @instance\n             */\n            Terrain.prototype.name = "";\n    \n            /**\n             * Terrain des.\n             * @member {string} des\n             * @memberof op_gameconfig.Terrain\n             * @instance\n             */\n            Terrain.prototype.des = "";\n    \n            /**\n             * Terrain animations.\n             * @member {Array.<op_gameconfig.IAnimation>} animations\n             * @memberof op_gameconfig.Terrain\n             * @instance\n             */\n            Terrain.prototype.animations = $util.emptyArray;\n    \n            /**\n             * Terrain terrainEvent.\n             * @member {op_gameconfig.ITerrainEvent|null|undefined} terrainEvent\n             * @memberof op_gameconfig.Terrain\n             * @instance\n             */\n            Terrain.prototype.terrainEvent = null;\n    \n            /**\n             * Terrain mode.\n             * @member {op_def.TerrainAnimationType} mode\n             * @memberof op_gameconfig.Terrain\n             * @instance\n             */\n            Terrain.prototype.mode = 16;\n    \n            /**\n             * Terrain x.\n             * @member {number} x\n             * @memberof op_gameconfig.Terrain\n             * @instance\n             */\n            Terrain.prototype.x = 0;\n    \n            /**\n             * Terrain y.\n             * @member {number} y\n             * @memberof op_gameconfig.Terrain\n             * @instance\n             */\n            Terrain.prototype.y = 0;\n    \n            /**\n             * Terrain z.\n             * @member {number} z\n             * @memberof op_gameconfig.Terrain\n             * @instance\n             */\n            Terrain.prototype.z = 0;\n    \n            /**\n             * Terrain display.\n             * @member {op_gameconfig.IDisplay|null|undefined} display\n             * @memberof op_gameconfig.Terrain\n             * @instance\n             */\n            Terrain.prototype.display = null;\n    \n            /**\n             * Creates a new Terrain instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig.Terrain\n             * @static\n             * @param {op_gameconfig.ITerrain=} [properties] Properties to set\n             * @returns {op_gameconfig.Terrain} Terrain instance\n             */\n            Terrain.create = function create(properties) {\n                return new Terrain(properties);\n            };\n    \n            /**\n             * Encodes the specified Terrain message. Does not implicitly {@link op_gameconfig.Terrain.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig.Terrain\n             * @static\n             * @param {op_gameconfig.ITerrain} message Terrain message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Terrain.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.id != null && message.hasOwnProperty("id"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.id);\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.type);\n                if (message.name != null && message.hasOwnProperty("name"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);\n                if (message.des != null && message.hasOwnProperty("des"))\n                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.des);\n                if (message.animations != null && message.animations.length)\n                    for (var i = 0; i < message.animations.length; ++i)\n                        $root.op_gameconfig.Animation.encode(message.animations[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.animationName);\n                if (message.terrainEvent != null && message.hasOwnProperty("terrainEvent"))\n                    $root.op_gameconfig.TerrainEvent.encode(message.terrainEvent, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n                if (message.mode != null && message.hasOwnProperty("mode"))\n                    writer.uint32(/* id 8, wireType 0 =*/64).int32(message.mode);\n                if (message.x != null && message.hasOwnProperty("x"))\n                    writer.uint32(/* id 9, wireType 0 =*/72).int32(message.x);\n                if (message.y != null && message.hasOwnProperty("y"))\n                    writer.uint32(/* id 10, wireType 0 =*/80).int32(message.y);\n                if (message.z != null && message.hasOwnProperty("z"))\n                    writer.uint32(/* id 11, wireType 0 =*/88).int32(message.z);\n                if (message.display != null && message.hasOwnProperty("display"))\n                    $root.op_gameconfig.Display.encode(message.display, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Terrain message, length delimited. Does not implicitly {@link op_gameconfig.Terrain.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig.Terrain\n             * @static\n             * @param {op_gameconfig.ITerrain} message Terrain message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Terrain.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a Terrain message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig.Terrain\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig.Terrain} Terrain\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Terrain.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig.Terrain();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.id = reader.int32();\n                        break;\n                    case 2:\n                        message.type = reader.string();\n                        break;\n                    case 6:\n                        message.animationName = reader.string();\n                        break;\n                    case 3:\n                        message.name = reader.string();\n                        break;\n                    case 4:\n                        message.des = reader.string();\n                        break;\n                    case 5:\n                        if (!(message.animations && message.animations.length))\n                            message.animations = [];\n                        message.animations.push($root.op_gameconfig.Animation.decode(reader, reader.uint32()));\n                        break;\n                    case 7:\n                        message.terrainEvent = $root.op_gameconfig.TerrainEvent.decode(reader, reader.uint32());\n                        break;\n                    case 8:\n                        message.mode = reader.int32();\n                        break;\n                    case 9:\n                        message.x = reader.int32();\n                        break;\n                    case 10:\n                        message.y = reader.int32();\n                        break;\n                    case 11:\n                        message.z = reader.int32();\n                        break;\n                    case 14:\n                        message.display = $root.op_gameconfig.Display.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("type"))\n                    throw $util.ProtocolError("missing required \'type\'", { instance: message });\n                if (!message.hasOwnProperty("animationName"))\n                    throw $util.ProtocolError("missing required \'animationName\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a Terrain message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig.Terrain\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig.Terrain} Terrain\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Terrain.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a Terrain message.\n             * @function verify\n             * @memberof op_gameconfig.Terrain\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Terrain.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.id != null && message.hasOwnProperty("id"))\n                    if (!$util.isInteger(message.id))\n                        return "id: integer expected";\n                if (!$util.isString(message.type))\n                    return "type: string expected";\n                if (!$util.isString(message.animationName))\n                    return "animationName: string expected";\n                if (message.name != null && message.hasOwnProperty("name"))\n                    if (!$util.isString(message.name))\n                        return "name: string expected";\n                if (message.des != null && message.hasOwnProperty("des"))\n                    if (!$util.isString(message.des))\n                        return "des: string expected";\n                if (message.animations != null && message.hasOwnProperty("animations")) {\n                    if (!Array.isArray(message.animations))\n                        return "animations: array expected";\n                    for (var i = 0; i < message.animations.length; ++i) {\n                        var error = $root.op_gameconfig.Animation.verify(message.animations[i]);\n                        if (error)\n                            return "animations." + error;\n                    }\n                }\n                if (message.terrainEvent != null && message.hasOwnProperty("terrainEvent")) {\n                    var error = $root.op_gameconfig.TerrainEvent.verify(message.terrainEvent);\n                    if (error)\n                        return "terrainEvent." + error;\n                }\n                if (message.mode != null && message.hasOwnProperty("mode"))\n                    switch (message.mode) {\n                    default:\n                        return "mode: enum value expected";\n                    case 16:\n                    case 1:\n                        break;\n                    }\n                if (message.x != null && message.hasOwnProperty("x"))\n                    if (!$util.isInteger(message.x))\n                        return "x: integer expected";\n                if (message.y != null && message.hasOwnProperty("y"))\n                    if (!$util.isInteger(message.y))\n                        return "y: integer expected";\n                if (message.z != null && message.hasOwnProperty("z"))\n                    if (!$util.isInteger(message.z))\n                        return "z: integer expected";\n                if (message.display != null && message.hasOwnProperty("display")) {\n                    var error = $root.op_gameconfig.Display.verify(message.display);\n                    if (error)\n                        return "display." + error;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a Terrain message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig.Terrain\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig.Terrain} Terrain\n             */\n            Terrain.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig.Terrain)\n                    return object;\n                var message = new $root.op_gameconfig.Terrain();\n                if (object.id != null)\n                    message.id = object.id | 0;\n                if (object.type != null)\n                    message.type = String(object.type);\n                if (object.animationName != null)\n                    message.animationName = String(object.animationName);\n                if (object.name != null)\n                    message.name = String(object.name);\n                if (object.des != null)\n                    message.des = String(object.des);\n                if (object.animations) {\n                    if (!Array.isArray(object.animations))\n                        throw TypeError(".op_gameconfig.Terrain.animations: array expected");\n                    message.animations = [];\n                    for (var i = 0; i < object.animations.length; ++i) {\n                        if (typeof object.animations[i] !== "object")\n                            throw TypeError(".op_gameconfig.Terrain.animations: object expected");\n                        message.animations[i] = $root.op_gameconfig.Animation.fromObject(object.animations[i]);\n                    }\n                }\n                if (object.terrainEvent != null) {\n                    if (typeof object.terrainEvent !== "object")\n                        throw TypeError(".op_gameconfig.Terrain.terrainEvent: object expected");\n                    message.terrainEvent = $root.op_gameconfig.TerrainEvent.fromObject(object.terrainEvent);\n                }\n                switch (object.mode) {\n                case "DYNAMIC_TYPE":\n                case 16:\n                    message.mode = 16;\n                    break;\n                case "STATIC_TYPE":\n                case 1:\n                    message.mode = 1;\n                    break;\n                }\n                if (object.x != null)\n                    message.x = object.x | 0;\n                if (object.y != null)\n                    message.y = object.y | 0;\n                if (object.z != null)\n                    message.z = object.z | 0;\n                if (object.display != null) {\n                    if (typeof object.display !== "object")\n                        throw TypeError(".op_gameconfig.Terrain.display: object expected");\n                    message.display = $root.op_gameconfig.Display.fromObject(object.display);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a Terrain message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig.Terrain\n             * @static\n             * @param {op_gameconfig.Terrain} message Terrain\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Terrain.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.animations = [];\n                if (options.defaults) {\n                    object.id = 0;\n                    object.type = "";\n                    object.name = "";\n                    object.des = "";\n                    object.animationName = "";\n                    object.terrainEvent = null;\n                    object.mode = options.enums === String ? "DYNAMIC_TYPE" : 16;\n                    object.x = 0;\n                    object.y = 0;\n                    object.z = 0;\n                    object.display = null;\n                }\n                if (message.id != null && message.hasOwnProperty("id"))\n                    object.id = message.id;\n                if (message.type != null && message.hasOwnProperty("type"))\n                    object.type = message.type;\n                if (message.name != null && message.hasOwnProperty("name"))\n                    object.name = message.name;\n                if (message.des != null && message.hasOwnProperty("des"))\n                    object.des = message.des;\n                if (message.animations && message.animations.length) {\n                    object.animations = [];\n                    for (var j = 0; j < message.animations.length; ++j)\n                        object.animations[j] = $root.op_gameconfig.Animation.toObject(message.animations[j], options);\n                }\n                if (message.animationName != null && message.hasOwnProperty("animationName"))\n                    object.animationName = message.animationName;\n                if (message.terrainEvent != null && message.hasOwnProperty("terrainEvent"))\n                    object.terrainEvent = $root.op_gameconfig.TerrainEvent.toObject(message.terrainEvent, options);\n                if (message.mode != null && message.hasOwnProperty("mode"))\n                    object.mode = options.enums === String ? $root.op_def.TerrainAnimationType[message.mode] : message.mode;\n                if (message.x != null && message.hasOwnProperty("x"))\n                    object.x = message.x;\n                if (message.y != null && message.hasOwnProperty("y"))\n                    object.y = message.y;\n                if (message.z != null && message.hasOwnProperty("z"))\n                    object.z = message.z;\n                if (message.display != null && message.hasOwnProperty("display"))\n                    object.display = $root.op_gameconfig.Display.toObject(message.display, options);\n                return object;\n            };\n    \n            /**\n             * Converts this Terrain to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig.Terrain\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Terrain.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Terrain;\n        })();\n    \n        op_gameconfig.Shop = (function() {\n    \n            /**\n             * Properties of a Shop.\n             * @memberof op_gameconfig\n             * @interface IShop\n             * @property {number} id Shop id\n             * @property {Array.<op_gameconfig.IItem>|null} [items] Shop items\n             */\n    \n            /**\n             * Constructs a new Shop.\n             * @memberof op_gameconfig\n             * @classdesc Represents a Shop.\n             * @implements IShop\n             * @constructor\n             * @param {op_gameconfig.IShop=} [properties] Properties to set\n             */\n            function Shop(properties) {\n                this.items = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Shop id.\n             * @member {number} id\n             * @memberof op_gameconfig.Shop\n             * @instance\n             */\n            Shop.prototype.id = 0;\n    \n            /**\n             * Shop items.\n             * @member {Array.<op_gameconfig.IItem>} items\n             * @memberof op_gameconfig.Shop\n             * @instance\n             */\n            Shop.prototype.items = $util.emptyArray;\n    \n            /**\n             * Creates a new Shop instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig.Shop\n             * @static\n             * @param {op_gameconfig.IShop=} [properties] Properties to set\n             * @returns {op_gameconfig.Shop} Shop instance\n             */\n            Shop.create = function create(properties) {\n                return new Shop(properties);\n            };\n    \n            /**\n             * Encodes the specified Shop message. Does not implicitly {@link op_gameconfig.Shop.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig.Shop\n             * @static\n             * @param {op_gameconfig.IShop} message Shop message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Shop.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.id);\n                if (message.items != null && message.items.length)\n                    for (var i = 0; i < message.items.length; ++i)\n                        $root.op_gameconfig.Item.encode(message.items[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Shop message, length delimited. Does not implicitly {@link op_gameconfig.Shop.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig.Shop\n             * @static\n             * @param {op_gameconfig.IShop} message Shop message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Shop.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a Shop message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig.Shop\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig.Shop} Shop\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Shop.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig.Shop();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.id = reader.int32();\n                        break;\n                    case 2:\n                        if (!(message.items && message.items.length))\n                            message.items = [];\n                        message.items.push($root.op_gameconfig.Item.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("id"))\n                    throw $util.ProtocolError("missing required \'id\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a Shop message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig.Shop\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig.Shop} Shop\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Shop.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a Shop message.\n             * @function verify\n             * @memberof op_gameconfig.Shop\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Shop.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.id))\n                    return "id: integer expected";\n                if (message.items != null && message.hasOwnProperty("items")) {\n                    if (!Array.isArray(message.items))\n                        return "items: array expected";\n                    for (var i = 0; i < message.items.length; ++i) {\n                        var error = $root.op_gameconfig.Item.verify(message.items[i]);\n                        if (error)\n                            return "items." + error;\n                    }\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a Shop message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig.Shop\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig.Shop} Shop\n             */\n            Shop.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig.Shop)\n                    return object;\n                var message = new $root.op_gameconfig.Shop();\n                if (object.id != null)\n                    message.id = object.id | 0;\n                if (object.items) {\n                    if (!Array.isArray(object.items))\n                        throw TypeError(".op_gameconfig.Shop.items: array expected");\n                    message.items = [];\n                    for (var i = 0; i < object.items.length; ++i) {\n                        if (typeof object.items[i] !== "object")\n                            throw TypeError(".op_gameconfig.Shop.items: object expected");\n                        message.items[i] = $root.op_gameconfig.Item.fromObject(object.items[i]);\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a Shop message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig.Shop\n             * @static\n             * @param {op_gameconfig.Shop} message Shop\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Shop.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.items = [];\n                if (options.defaults)\n                    object.id = 0;\n                if (message.id != null && message.hasOwnProperty("id"))\n                    object.id = message.id;\n                if (message.items && message.items.length) {\n                    object.items = [];\n                    for (var j = 0; j < message.items.length; ++j)\n                        object.items[j] = $root.op_gameconfig.Item.toObject(message.items[j], options);\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this Shop to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig.Shop\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Shop.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Shop;\n        })();\n    \n        op_gameconfig.SceneEvent = (function() {\n    \n            /**\n             * Properties of a SceneEvent.\n             * @memberof op_gameconfig\n             * @interface ISceneEvent\n             * @property {op_gameconfig.IFunc|null} [onSceneCreate] SceneEvent onSceneCreate\n             * @property {op_gameconfig.IFunc|null} [onSceneRun] SceneEvent onSceneRun\n             * @property {op_gameconfig.IFunc|null} [onSceneDestroy] SceneEvent onSceneDestroy\n             * @property {op_gameconfig.IFunc|null} [onSceneEnter] SceneEvent onSceneEnter\n             * @property {op_gameconfig.IFunc|null} [onSceneLeave] SceneEvent onSceneLeave\n             */\n    \n            /**\n             * Constructs a new SceneEvent.\n             * @memberof op_gameconfig\n             * @classdesc Represents a SceneEvent.\n             * @implements ISceneEvent\n             * @constructor\n             * @param {op_gameconfig.ISceneEvent=} [properties] Properties to set\n             */\n            function SceneEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * SceneEvent onSceneCreate.\n             * @member {op_gameconfig.IFunc|null|undefined} onSceneCreate\n             * @memberof op_gameconfig.SceneEvent\n             * @instance\n             */\n            SceneEvent.prototype.onSceneCreate = null;\n    \n            /**\n             * SceneEvent onSceneRun.\n             * @member {op_gameconfig.IFunc|null|undefined} onSceneRun\n             * @memberof op_gameconfig.SceneEvent\n             * @instance\n             */\n            SceneEvent.prototype.onSceneRun = null;\n    \n            /**\n             * SceneEvent onSceneDestroy.\n             * @member {op_gameconfig.IFunc|null|undefined} onSceneDestroy\n             * @memberof op_gameconfig.SceneEvent\n             * @instance\n             */\n            SceneEvent.prototype.onSceneDestroy = null;\n    \n            /**\n             * SceneEvent onSceneEnter.\n             * @member {op_gameconfig.IFunc|null|undefined} onSceneEnter\n             * @memberof op_gameconfig.SceneEvent\n             * @instance\n             */\n            SceneEvent.prototype.onSceneEnter = null;\n    \n            /**\n             * SceneEvent onSceneLeave.\n             * @member {op_gameconfig.IFunc|null|undefined} onSceneLeave\n             * @memberof op_gameconfig.SceneEvent\n             * @instance\n             */\n            SceneEvent.prototype.onSceneLeave = null;\n    \n            /**\n             * Creates a new SceneEvent instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig.SceneEvent\n             * @static\n             * @param {op_gameconfig.ISceneEvent=} [properties] Properties to set\n             * @returns {op_gameconfig.SceneEvent} SceneEvent instance\n             */\n            SceneEvent.create = function create(properties) {\n                return new SceneEvent(properties);\n            };\n    \n            /**\n             * Encodes the specified SceneEvent message. Does not implicitly {@link op_gameconfig.SceneEvent.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig.SceneEvent\n             * @static\n             * @param {op_gameconfig.ISceneEvent} message SceneEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            SceneEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.onSceneCreate != null && message.hasOwnProperty("onSceneCreate"))\n                    $root.op_gameconfig.Func.encode(message.onSceneCreate, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.onSceneRun != null && message.hasOwnProperty("onSceneRun"))\n                    $root.op_gameconfig.Func.encode(message.onSceneRun, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                if (message.onSceneDestroy != null && message.hasOwnProperty("onSceneDestroy"))\n                    $root.op_gameconfig.Func.encode(message.onSceneDestroy, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                if (message.onSceneEnter != null && message.hasOwnProperty("onSceneEnter"))\n                    $root.op_gameconfig.Func.encode(message.onSceneEnter, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n                if (message.onSceneLeave != null && message.hasOwnProperty("onSceneLeave"))\n                    $root.op_gameconfig.Func.encode(message.onSceneLeave, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified SceneEvent message, length delimited. Does not implicitly {@link op_gameconfig.SceneEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig.SceneEvent\n             * @static\n             * @param {op_gameconfig.ISceneEvent} message SceneEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            SceneEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a SceneEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig.SceneEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig.SceneEvent} SceneEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            SceneEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig.SceneEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.onSceneCreate = $root.op_gameconfig.Func.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        message.onSceneRun = $root.op_gameconfig.Func.decode(reader, reader.uint32());\n                        break;\n                    case 3:\n                        message.onSceneDestroy = $root.op_gameconfig.Func.decode(reader, reader.uint32());\n                        break;\n                    case 4:\n                        message.onSceneEnter = $root.op_gameconfig.Func.decode(reader, reader.uint32());\n                        break;\n                    case 5:\n                        message.onSceneLeave = $root.op_gameconfig.Func.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a SceneEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig.SceneEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig.SceneEvent} SceneEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            SceneEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a SceneEvent message.\n             * @function verify\n             * @memberof op_gameconfig.SceneEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            SceneEvent.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.onSceneCreate != null && message.hasOwnProperty("onSceneCreate")) {\n                    var error = $root.op_gameconfig.Func.verify(message.onSceneCreate);\n                    if (error)\n                        return "onSceneCreate." + error;\n                }\n                if (message.onSceneRun != null && message.hasOwnProperty("onSceneRun")) {\n                    var error = $root.op_gameconfig.Func.verify(message.onSceneRun);\n                    if (error)\n                        return "onSceneRun." + error;\n                }\n                if (message.onSceneDestroy != null && message.hasOwnProperty("onSceneDestroy")) {\n                    var error = $root.op_gameconfig.Func.verify(message.onSceneDestroy);\n                    if (error)\n                        return "onSceneDestroy." + error;\n                }\n                if (message.onSceneEnter != null && message.hasOwnProperty("onSceneEnter")) {\n                    var error = $root.op_gameconfig.Func.verify(message.onSceneEnter);\n                    if (error)\n                        return "onSceneEnter." + error;\n                }\n                if (message.onSceneLeave != null && message.hasOwnProperty("onSceneLeave")) {\n                    var error = $root.op_gameconfig.Func.verify(message.onSceneLeave);\n                    if (error)\n                        return "onSceneLeave." + error;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a SceneEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig.SceneEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig.SceneEvent} SceneEvent\n             */\n            SceneEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig.SceneEvent)\n                    return object;\n                var message = new $root.op_gameconfig.SceneEvent();\n                if (object.onSceneCreate != null) {\n                    if (typeof object.onSceneCreate !== "object")\n                        throw TypeError(".op_gameconfig.SceneEvent.onSceneCreate: object expected");\n                    message.onSceneCreate = $root.op_gameconfig.Func.fromObject(object.onSceneCreate);\n                }\n                if (object.onSceneRun != null) {\n                    if (typeof object.onSceneRun !== "object")\n                        throw TypeError(".op_gameconfig.SceneEvent.onSceneRun: object expected");\n                    message.onSceneRun = $root.op_gameconfig.Func.fromObject(object.onSceneRun);\n                }\n                if (object.onSceneDestroy != null) {\n                    if (typeof object.onSceneDestroy !== "object")\n                        throw TypeError(".op_gameconfig.SceneEvent.onSceneDestroy: object expected");\n                    message.onSceneDestroy = $root.op_gameconfig.Func.fromObject(object.onSceneDestroy);\n                }\n                if (object.onSceneEnter != null) {\n                    if (typeof object.onSceneEnter !== "object")\n                        throw TypeError(".op_gameconfig.SceneEvent.onSceneEnter: object expected");\n                    message.onSceneEnter = $root.op_gameconfig.Func.fromObject(object.onSceneEnter);\n                }\n                if (object.onSceneLeave != null) {\n                    if (typeof object.onSceneLeave !== "object")\n                        throw TypeError(".op_gameconfig.SceneEvent.onSceneLeave: object expected");\n                    message.onSceneLeave = $root.op_gameconfig.Func.fromObject(object.onSceneLeave);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a SceneEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig.SceneEvent\n             * @static\n             * @param {op_gameconfig.SceneEvent} message SceneEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            SceneEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.onSceneCreate = null;\n                    object.onSceneRun = null;\n                    object.onSceneDestroy = null;\n                    object.onSceneEnter = null;\n                    object.onSceneLeave = null;\n                }\n                if (message.onSceneCreate != null && message.hasOwnProperty("onSceneCreate"))\n                    object.onSceneCreate = $root.op_gameconfig.Func.toObject(message.onSceneCreate, options);\n                if (message.onSceneRun != null && message.hasOwnProperty("onSceneRun"))\n                    object.onSceneRun = $root.op_gameconfig.Func.toObject(message.onSceneRun, options);\n                if (message.onSceneDestroy != null && message.hasOwnProperty("onSceneDestroy"))\n                    object.onSceneDestroy = $root.op_gameconfig.Func.toObject(message.onSceneDestroy, options);\n                if (message.onSceneEnter != null && message.hasOwnProperty("onSceneEnter"))\n                    object.onSceneEnter = $root.op_gameconfig.Func.toObject(message.onSceneEnter, options);\n                if (message.onSceneLeave != null && message.hasOwnProperty("onSceneLeave"))\n                    object.onSceneLeave = $root.op_gameconfig.Func.toObject(message.onSceneLeave, options);\n                return object;\n            };\n    \n            /**\n             * Converts this SceneEvent to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig.SceneEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            SceneEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return SceneEvent;\n        })();\n    \n        op_gameconfig.Scene = (function() {\n    \n            /**\n             * Properties of a Scene.\n             * @memberof op_gameconfig\n             * @interface IScene\n             * @property {number} id Scene id\n             * @property {string} name Scene name\n             * @property {number} cols Scene cols\n             * @property {number} rows Scene rows\n             * @property {number} tileWidth Scene tileWidth\n             * @property {number} tileHeight Scene tileHeight\n             * @property {number|null} [zStart] Scene zStart\n             * @property {number|null} [zEnd] Scene zEnd\n             * @property {Array.<op_gameconfig.IElement>|null} [elements] Scene elements\n             * @property {Array.<op_gameconfig.ITerrain>|null} [terrains] Scene terrains\n             * @property {op_gameconfig.ISceneEvent|null} [event] Scene event\n             */\n    \n            /**\n             * Constructs a new Scene.\n             * @memberof op_gameconfig\n             * @classdesc Represents a Scene.\n             * @implements IScene\n             * @constructor\n             * @param {op_gameconfig.IScene=} [properties] Properties to set\n             */\n            function Scene(properties) {\n                this.elements = [];\n                this.terrains = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Scene id.\n             * @member {number} id\n             * @memberof op_gameconfig.Scene\n             * @instance\n             */\n            Scene.prototype.id = 0;\n    \n            /**\n             * Scene name.\n             * @member {string} name\n             * @memberof op_gameconfig.Scene\n             * @instance\n             */\n            Scene.prototype.name = "";\n    \n            /**\n             * Scene cols.\n             * @member {number} cols\n             * @memberof op_gameconfig.Scene\n             * @instance\n             */\n            Scene.prototype.cols = 0;\n    \n            /**\n             * Scene rows.\n             * @member {number} rows\n             * @memberof op_gameconfig.Scene\n             * @instance\n             */\n            Scene.prototype.rows = 0;\n    \n            /**\n             * Scene tileWidth.\n             * @member {number} tileWidth\n             * @memberof op_gameconfig.Scene\n             * @instance\n             */\n            Scene.prototype.tileWidth = 0;\n    \n            /**\n             * Scene tileHeight.\n             * @member {number} tileHeight\n             * @memberof op_gameconfig.Scene\n             * @instance\n             */\n            Scene.prototype.tileHeight = 0;\n    \n            /**\n             * Scene zStart.\n             * @member {number} zStart\n             * @memberof op_gameconfig.Scene\n             * @instance\n             */\n            Scene.prototype.zStart = 0;\n    \n            /**\n             * Scene zEnd.\n             * @member {number} zEnd\n             * @memberof op_gameconfig.Scene\n             * @instance\n             */\n            Scene.prototype.zEnd = 0;\n    \n            /**\n             * Scene elements.\n             * @member {Array.<op_gameconfig.IElement>} elements\n             * @memberof op_gameconfig.Scene\n             * @instance\n             */\n            Scene.prototype.elements = $util.emptyArray;\n    \n            /**\n             * Scene terrains.\n             * @member {Array.<op_gameconfig.ITerrain>} terrains\n             * @memberof op_gameconfig.Scene\n             * @instance\n             */\n            Scene.prototype.terrains = $util.emptyArray;\n    \n            /**\n             * Scene event.\n             * @member {op_gameconfig.ISceneEvent|null|undefined} event\n             * @memberof op_gameconfig.Scene\n             * @instance\n             */\n            Scene.prototype.event = null;\n    \n            /**\n             * Creates a new Scene instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig.Scene\n             * @static\n             * @param {op_gameconfig.IScene=} [properties] Properties to set\n             * @returns {op_gameconfig.Scene} Scene instance\n             */\n            Scene.create = function create(properties) {\n                return new Scene(properties);\n            };\n    \n            /**\n             * Encodes the specified Scene message. Does not implicitly {@link op_gameconfig.Scene.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig.Scene\n             * @static\n             * @param {op_gameconfig.IScene} message Scene message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Scene.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.id);\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);\n                writer.uint32(/* id 3, wireType 5 =*/29).float(message.cols);\n                writer.uint32(/* id 4, wireType 5 =*/37).float(message.rows);\n                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.tileWidth);\n                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.tileHeight);\n                if (message.zStart != null && message.hasOwnProperty("zStart"))\n                    writer.uint32(/* id 7, wireType 5 =*/61).float(message.zStart);\n                if (message.zEnd != null && message.hasOwnProperty("zEnd"))\n                    writer.uint32(/* id 8, wireType 5 =*/69).float(message.zEnd);\n                if (message.elements != null && message.elements.length)\n                    for (var i = 0; i < message.elements.length; ++i)\n                        $root.op_gameconfig.Element.encode(message.elements[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();\n                if (message.terrains != null && message.terrains.length)\n                    for (var i = 0; i < message.terrains.length; ++i)\n                        $root.op_gameconfig.Terrain.encode(message.terrains[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n                if (message.event != null && message.hasOwnProperty("event"))\n                    $root.op_gameconfig.SceneEvent.encode(message.event, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Scene message, length delimited. Does not implicitly {@link op_gameconfig.Scene.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig.Scene\n             * @static\n             * @param {op_gameconfig.IScene} message Scene message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Scene.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a Scene message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig.Scene\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig.Scene} Scene\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Scene.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig.Scene();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.id = reader.int32();\n                        break;\n                    case 2:\n                        message.name = reader.string();\n                        break;\n                    case 3:\n                        message.cols = reader.float();\n                        break;\n                    case 4:\n                        message.rows = reader.float();\n                        break;\n                    case 5:\n                        message.tileWidth = reader.int32();\n                        break;\n                    case 6:\n                        message.tileHeight = reader.int32();\n                        break;\n                    case 7:\n                        message.zStart = reader.float();\n                        break;\n                    case 8:\n                        message.zEnd = reader.float();\n                        break;\n                    case 9:\n                        if (!(message.elements && message.elements.length))\n                            message.elements = [];\n                        message.elements.push($root.op_gameconfig.Element.decode(reader, reader.uint32()));\n                        break;\n                    case 10:\n                        if (!(message.terrains && message.terrains.length))\n                            message.terrains = [];\n                        message.terrains.push($root.op_gameconfig.Terrain.decode(reader, reader.uint32()));\n                        break;\n                    case 11:\n                        message.event = $root.op_gameconfig.SceneEvent.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("id"))\n                    throw $util.ProtocolError("missing required \'id\'", { instance: message });\n                if (!message.hasOwnProperty("name"))\n                    throw $util.ProtocolError("missing required \'name\'", { instance: message });\n                if (!message.hasOwnProperty("cols"))\n                    throw $util.ProtocolError("missing required \'cols\'", { instance: message });\n                if (!message.hasOwnProperty("rows"))\n                    throw $util.ProtocolError("missing required \'rows\'", { instance: message });\n                if (!message.hasOwnProperty("tileWidth"))\n                    throw $util.ProtocolError("missing required \'tileWidth\'", { instance: message });\n                if (!message.hasOwnProperty("tileHeight"))\n                    throw $util.ProtocolError("missing required \'tileHeight\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a Scene message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig.Scene\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig.Scene} Scene\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Scene.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a Scene message.\n             * @function verify\n             * @memberof op_gameconfig.Scene\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Scene.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.id))\n                    return "id: integer expected";\n                if (!$util.isString(message.name))\n                    return "name: string expected";\n                if (typeof message.cols !== "number")\n                    return "cols: number expected";\n                if (typeof message.rows !== "number")\n                    return "rows: number expected";\n                if (!$util.isInteger(message.tileWidth))\n                    return "tileWidth: integer expected";\n                if (!$util.isInteger(message.tileHeight))\n                    return "tileHeight: integer expected";\n                if (message.zStart != null && message.hasOwnProperty("zStart"))\n                    if (typeof message.zStart !== "number")\n                        return "zStart: number expected";\n                if (message.zEnd != null && message.hasOwnProperty("zEnd"))\n                    if (typeof message.zEnd !== "number")\n                        return "zEnd: number expected";\n                if (message.elements != null && message.hasOwnProperty("elements")) {\n                    if (!Array.isArray(message.elements))\n                        return "elements: array expected";\n                    for (var i = 0; i < message.elements.length; ++i) {\n                        var error = $root.op_gameconfig.Element.verify(message.elements[i]);\n                        if (error)\n                            return "elements." + error;\n                    }\n                }\n                if (message.terrains != null && message.hasOwnProperty("terrains")) {\n                    if (!Array.isArray(message.terrains))\n                        return "terrains: array expected";\n                    for (var i = 0; i < message.terrains.length; ++i) {\n                        var error = $root.op_gameconfig.Terrain.verify(message.terrains[i]);\n                        if (error)\n                            return "terrains." + error;\n                    }\n                }\n                if (message.event != null && message.hasOwnProperty("event")) {\n                    var error = $root.op_gameconfig.SceneEvent.verify(message.event);\n                    if (error)\n                        return "event." + error;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a Scene message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig.Scene\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig.Scene} Scene\n             */\n            Scene.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig.Scene)\n                    return object;\n                var message = new $root.op_gameconfig.Scene();\n                if (object.id != null)\n                    message.id = object.id | 0;\n                if (object.name != null)\n                    message.name = String(object.name);\n                if (object.cols != null)\n                    message.cols = Number(object.cols);\n                if (object.rows != null)\n                    message.rows = Number(object.rows);\n                if (object.tileWidth != null)\n                    message.tileWidth = object.tileWidth | 0;\n                if (object.tileHeight != null)\n                    message.tileHeight = object.tileHeight | 0;\n                if (object.zStart != null)\n                    message.zStart = Number(object.zStart);\n                if (object.zEnd != null)\n                    message.zEnd = Number(object.zEnd);\n                if (object.elements) {\n                    if (!Array.isArray(object.elements))\n                        throw TypeError(".op_gameconfig.Scene.elements: array expected");\n                    message.elements = [];\n                    for (var i = 0; i < object.elements.length; ++i) {\n                        if (typeof object.elements[i] !== "object")\n                            throw TypeError(".op_gameconfig.Scene.elements: object expected");\n                        message.elements[i] = $root.op_gameconfig.Element.fromObject(object.elements[i]);\n                    }\n                }\n                if (object.terrains) {\n                    if (!Array.isArray(object.terrains))\n                        throw TypeError(".op_gameconfig.Scene.terrains: array expected");\n                    message.terrains = [];\n                    for (var i = 0; i < object.terrains.length; ++i) {\n                        if (typeof object.terrains[i] !== "object")\n                            throw TypeError(".op_gameconfig.Scene.terrains: object expected");\n                        message.terrains[i] = $root.op_gameconfig.Terrain.fromObject(object.terrains[i]);\n                    }\n                }\n                if (object.event != null) {\n                    if (typeof object.event !== "object")\n                        throw TypeError(".op_gameconfig.Scene.event: object expected");\n                    message.event = $root.op_gameconfig.SceneEvent.fromObject(object.event);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a Scene message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig.Scene\n             * @static\n             * @param {op_gameconfig.Scene} message Scene\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Scene.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults) {\n                    object.elements = [];\n                    object.terrains = [];\n                }\n                if (options.defaults) {\n                    object.id = 0;\n                    object.name = "";\n                    object.cols = 0;\n                    object.rows = 0;\n                    object.tileWidth = 0;\n                    object.tileHeight = 0;\n                    object.zStart = 0;\n                    object.zEnd = 0;\n                    object.event = null;\n                }\n                if (message.id != null && message.hasOwnProperty("id"))\n                    object.id = message.id;\n                if (message.name != null && message.hasOwnProperty("name"))\n                    object.name = message.name;\n                if (message.cols != null && message.hasOwnProperty("cols"))\n                    object.cols = options.json && !isFinite(message.cols) ? String(message.cols) : message.cols;\n                if (message.rows != null && message.hasOwnProperty("rows"))\n                    object.rows = options.json && !isFinite(message.rows) ? String(message.rows) : message.rows;\n                if (message.tileWidth != null && message.hasOwnProperty("tileWidth"))\n                    object.tileWidth = message.tileWidth;\n                if (message.tileHeight != null && message.hasOwnProperty("tileHeight"))\n                    object.tileHeight = message.tileHeight;\n                if (message.zStart != null && message.hasOwnProperty("zStart"))\n                    object.zStart = options.json && !isFinite(message.zStart) ? String(message.zStart) : message.zStart;\n                if (message.zEnd != null && message.hasOwnProperty("zEnd"))\n                    object.zEnd = options.json && !isFinite(message.zEnd) ? String(message.zEnd) : message.zEnd;\n                if (message.elements && message.elements.length) {\n                    object.elements = [];\n                    for (var j = 0; j < message.elements.length; ++j)\n                        object.elements[j] = $root.op_gameconfig.Element.toObject(message.elements[j], options);\n                }\n                if (message.terrains && message.terrains.length) {\n                    object.terrains = [];\n                    for (var j = 0; j < message.terrains.length; ++j)\n                        object.terrains[j] = $root.op_gameconfig.Terrain.toObject(message.terrains[j], options);\n                }\n                if (message.event != null && message.hasOwnProperty("event"))\n                    object.event = $root.op_gameconfig.SceneEvent.toObject(message.event, options);\n                return object;\n            };\n    \n            /**\n             * Converts this Scene to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig.Scene\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Scene.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Scene;\n        })();\n    \n        op_gameconfig.AvatarBackbone = (function() {\n    \n            /**\n             * Properties of an AvatarBackbone.\n             * @memberof op_gameconfig\n             * @interface IAvatarBackbone\n             * @property {string} id AvatarBackbone id\n             * @property {Array.<op_gameconfig.IAnimation>|null} [animations] AvatarBackbone animations\n             * @property {string|null} [animationName] AvatarBackbone animationName\n             */\n    \n            /**\n             * Constructs a new AvatarBackbone.\n             * @memberof op_gameconfig\n             * @classdesc Represents an AvatarBackbone.\n             * @implements IAvatarBackbone\n             * @constructor\n             * @param {op_gameconfig.IAvatarBackbone=} [properties] Properties to set\n             */\n            function AvatarBackbone(properties) {\n                this.animations = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * AvatarBackbone id.\n             * @member {string} id\n             * @memberof op_gameconfig.AvatarBackbone\n             * @instance\n             */\n            AvatarBackbone.prototype.id = "";\n    \n            /**\n             * AvatarBackbone animations.\n             * @member {Array.<op_gameconfig.IAnimation>} animations\n             * @memberof op_gameconfig.AvatarBackbone\n             * @instance\n             */\n            AvatarBackbone.prototype.animations = $util.emptyArray;\n    \n            /**\n             * AvatarBackbone animationName.\n             * @member {string} animationName\n             * @memberof op_gameconfig.AvatarBackbone\n             * @instance\n             */\n            AvatarBackbone.prototype.animationName = "";\n    \n            /**\n             * Creates a new AvatarBackbone instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig.AvatarBackbone\n             * @static\n             * @param {op_gameconfig.IAvatarBackbone=} [properties] Properties to set\n             * @returns {op_gameconfig.AvatarBackbone} AvatarBackbone instance\n             */\n            AvatarBackbone.create = function create(properties) {\n                return new AvatarBackbone(properties);\n            };\n    \n            /**\n             * Encodes the specified AvatarBackbone message. Does not implicitly {@link op_gameconfig.AvatarBackbone.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig.AvatarBackbone\n             * @static\n             * @param {op_gameconfig.IAvatarBackbone} message AvatarBackbone message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            AvatarBackbone.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.id);\n                if (message.animations != null && message.animations.length)\n                    for (var i = 0; i < message.animations.length; ++i)\n                        $root.op_gameconfig.Animation.encode(message.animations[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n                if (message.animationName != null && message.hasOwnProperty("animationName"))\n                    writer.uint32(/* id 8, wireType 2 =*/66).string(message.animationName);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified AvatarBackbone message, length delimited. Does not implicitly {@link op_gameconfig.AvatarBackbone.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig.AvatarBackbone\n             * @static\n             * @param {op_gameconfig.IAvatarBackbone} message AvatarBackbone message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            AvatarBackbone.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes an AvatarBackbone message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig.AvatarBackbone\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig.AvatarBackbone} AvatarBackbone\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            AvatarBackbone.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig.AvatarBackbone();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.id = reader.string();\n                        break;\n                    case 7:\n                        if (!(message.animations && message.animations.length))\n                            message.animations = [];\n                        message.animations.push($root.op_gameconfig.Animation.decode(reader, reader.uint32()));\n                        break;\n                    case 8:\n                        message.animationName = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("id"))\n                    throw $util.ProtocolError("missing required \'id\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes an AvatarBackbone message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig.AvatarBackbone\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig.AvatarBackbone} AvatarBackbone\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            AvatarBackbone.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies an AvatarBackbone message.\n             * @function verify\n             * @memberof op_gameconfig.AvatarBackbone\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            AvatarBackbone.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.id))\n                    return "id: string expected";\n                if (message.animations != null && message.hasOwnProperty("animations")) {\n                    if (!Array.isArray(message.animations))\n                        return "animations: array expected";\n                    for (var i = 0; i < message.animations.length; ++i) {\n                        var error = $root.op_gameconfig.Animation.verify(message.animations[i]);\n                        if (error)\n                            return "animations." + error;\n                    }\n                }\n                if (message.animationName != null && message.hasOwnProperty("animationName"))\n                    if (!$util.isString(message.animationName))\n                        return "animationName: string expected";\n                return null;\n            };\n    \n            /**\n             * Creates an AvatarBackbone message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig.AvatarBackbone\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig.AvatarBackbone} AvatarBackbone\n             */\n            AvatarBackbone.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig.AvatarBackbone)\n                    return object;\n                var message = new $root.op_gameconfig.AvatarBackbone();\n                if (object.id != null)\n                    message.id = String(object.id);\n                if (object.animations) {\n                    if (!Array.isArray(object.animations))\n                        throw TypeError(".op_gameconfig.AvatarBackbone.animations: array expected");\n                    message.animations = [];\n                    for (var i = 0; i < object.animations.length; ++i) {\n                        if (typeof object.animations[i] !== "object")\n                            throw TypeError(".op_gameconfig.AvatarBackbone.animations: object expected");\n                        message.animations[i] = $root.op_gameconfig.Animation.fromObject(object.animations[i]);\n                    }\n                }\n                if (object.animationName != null)\n                    message.animationName = String(object.animationName);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from an AvatarBackbone message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig.AvatarBackbone\n             * @static\n             * @param {op_gameconfig.AvatarBackbone} message AvatarBackbone\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            AvatarBackbone.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.animations = [];\n                if (options.defaults) {\n                    object.id = "";\n                    object.animationName = "";\n                }\n                if (message.id != null && message.hasOwnProperty("id"))\n                    object.id = message.id;\n                if (message.animations && message.animations.length) {\n                    object.animations = [];\n                    for (var j = 0; j < message.animations.length; ++j)\n                        object.animations[j] = $root.op_gameconfig.Animation.toObject(message.animations[j], options);\n                }\n                if (message.animationName != null && message.hasOwnProperty("animationName"))\n                    object.animationName = message.animationName;\n                return object;\n            };\n    \n            /**\n             * Converts this AvatarBackbone to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig.AvatarBackbone\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            AvatarBackbone.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return AvatarBackbone;\n        })();\n    \n        op_gameconfig.Avatar = (function() {\n    \n            /**\n             * Properties of an Avatar.\n             * @memberof op_gameconfig\n             * @interface IAvatar\n             * @property {string} id Avatar id\n             * @property {Array.<number>|null} [dirable] Avatar dirable\n             * @property {string|null} [headBaseId] Avatar headBaseId\n             * @property {string|null} [headHairId] Avatar headHairId\n             * @property {string|null} [headEyesId] Avatar headEyesId\n             * @property {string|null} [headBackId] Avatar headBackId\n             * @property {string|null} [headMousId] Avatar headMousId\n             * @property {string|null} [headHatsId] Avatar headHatsId\n             * @property {string|null} [headMaskId] Avatar headMaskId\n             * @property {string|null} [headSpecId] Avatar headSpecId\n             * @property {string|null} [bodyBaseId] Avatar bodyBaseId\n             * @property {string|null} [bodyCostId] Avatar bodyCostId\n             * @property {string|null} [bodyDresId] Avatar bodyDresId\n             * @property {string|null} [bodyTailId] Avatar bodyTailId\n             * @property {string|null} [bodyWingId] Avatar bodyWingId\n             * @property {string|null} [bodySpecId] Avatar bodySpecId\n             * @property {string|null} [farmBaseId] Avatar farmBaseId\n             * @property {string|null} [farmCostId] Avatar farmCostId\n             * @property {string|null} [farmShldId] Avatar farmShldId\n             * @property {string|null} [farmWeapId] Avatar farmWeapId\n             * @property {string|null} [farmSpecId] Avatar farmSpecId\n             * @property {string|null} [barmBaseId] Avatar barmBaseId\n             * @property {string|null} [barmCostId] Avatar barmCostId\n             * @property {string|null} [barmShldId] Avatar barmShldId\n             * @property {string|null} [barmWeapId] Avatar barmWeapId\n             * @property {string|null} [barmSpecId] Avatar barmSpecId\n             * @property {string|null} [flegBaseId] Avatar flegBaseId\n             * @property {string|null} [flegCostId] Avatar flegCostId\n             * @property {string|null} [flegSpecId] Avatar flegSpecId\n             * @property {string|null} [blegBaseId] Avatar blegBaseId\n             * @property {string|null} [blegCostId] Avatar blegCostId\n             * @property {string|null} [blegSpecId] Avatar blegSpecId\n             */\n    \n            /**\n             * Constructs a new Avatar.\n             * @memberof op_gameconfig\n             * @classdesc Represents an Avatar.\n             * @implements IAvatar\n             * @constructor\n             * @param {op_gameconfig.IAvatar=} [properties] Properties to set\n             */\n            function Avatar(properties) {\n                this.dirable = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Avatar id.\n             * @member {string} id\n             * @memberof op_gameconfig.Avatar\n             * @instance\n             */\n            Avatar.prototype.id = "";\n    \n            /**\n             * Avatar dirable.\n             * @member {Array.<number>} dirable\n             * @memberof op_gameconfig.Avatar\n             * @instance\n             */\n            Avatar.prototype.dirable = $util.emptyArray;\n    \n            /**\n             * Avatar headBaseId.\n             * @member {string} headBaseId\n             * @memberof op_gameconfig.Avatar\n             * @instance\n             */\n            Avatar.prototype.headBaseId = "";\n    \n            /**\n             * Avatar headHairId.\n             * @member {string} headHairId\n             * @memberof op_gameconfig.Avatar\n             * @instance\n             */\n            Avatar.prototype.headHairId = "";\n    \n            /**\n             * Avatar headEyesId.\n             * @member {string} headEyesId\n             * @memberof op_gameconfig.Avatar\n             * @instance\n             */\n            Avatar.prototype.headEyesId = "";\n    \n            /**\n             * Avatar headBackId.\n             * @member {string} headBackId\n             * @memberof op_gameconfig.Avatar\n             * @instance\n             */\n            Avatar.prototype.headBackId = "";\n    \n            /**\n             * Avatar headMousId.\n             * @member {string} headMousId\n             * @memberof op_gameconfig.Avatar\n             * @instance\n             */\n            Avatar.prototype.headMousId = "";\n    \n            /**\n             * Avatar headHatsId.\n             * @member {string} headHatsId\n             * @memberof op_gameconfig.Avatar\n             * @instance\n             */\n            Avatar.prototype.headHatsId = "";\n    \n            /**\n             * Avatar headMaskId.\n             * @member {string} headMaskId\n             * @memberof op_gameconfig.Avatar\n             * @instance\n             */\n            Avatar.prototype.headMaskId = "";\n    \n            /**\n             * Avatar headSpecId.\n             * @member {string} headSpecId\n             * @memberof op_gameconfig.Avatar\n             * @instance\n             */\n            Avatar.prototype.headSpecId = "";\n    \n            /**\n             * Avatar bodyBaseId.\n             * @member {string} bodyBaseId\n             * @memberof op_gameconfig.Avatar\n             * @instance\n             */\n            Avatar.prototype.bodyBaseId = "";\n    \n            /**\n             * Avatar bodyCostId.\n             * @member {string} bodyCostId\n             * @memberof op_gameconfig.Avatar\n             * @instance\n             */\n            Avatar.prototype.bodyCostId = "";\n    \n            /**\n             * Avatar bodyDresId.\n             * @member {string} bodyDresId\n             * @memberof op_gameconfig.Avatar\n             * @instance\n             */\n            Avatar.prototype.bodyDresId = "";\n    \n            /**\n             * Avatar bodyTailId.\n             * @member {string} bodyTailId\n             * @memberof op_gameconfig.Avatar\n             * @instance\n             */\n            Avatar.prototype.bodyTailId = "";\n    \n            /**\n             * Avatar bodyWingId.\n             * @member {string} bodyWingId\n             * @memberof op_gameconfig.Avatar\n             * @instance\n             */\n            Avatar.prototype.bodyWingId = "";\n    \n            /**\n             * Avatar bodySpecId.\n             * @member {string} bodySpecId\n             * @memberof op_gameconfig.Avatar\n             * @instance\n             */\n            Avatar.prototype.bodySpecId = "";\n    \n            /**\n             * Avatar farmBaseId.\n             * @member {string} farmBaseId\n             * @memberof op_gameconfig.Avatar\n             * @instance\n             */\n            Avatar.prototype.farmBaseId = "";\n    \n            /**\n             * Avatar farmCostId.\n             * @member {string} farmCostId\n             * @memberof op_gameconfig.Avatar\n             * @instance\n             */\n            Avatar.prototype.farmCostId = "";\n    \n            /**\n             * Avatar farmShldId.\n             * @member {string} farmShldId\n             * @memberof op_gameconfig.Avatar\n             * @instance\n             */\n            Avatar.prototype.farmShldId = "";\n    \n            /**\n             * Avatar farmWeapId.\n             * @member {string} farmWeapId\n             * @memberof op_gameconfig.Avatar\n             * @instance\n             */\n            Avatar.prototype.farmWeapId = "";\n    \n            /**\n             * Avatar farmSpecId.\n             * @member {string} farmSpecId\n             * @memberof op_gameconfig.Avatar\n             * @instance\n             */\n            Avatar.prototype.farmSpecId = "";\n    \n            /**\n             * Avatar barmBaseId.\n             * @member {string} barmBaseId\n             * @memberof op_gameconfig.Avatar\n             * @instance\n             */\n            Avatar.prototype.barmBaseId = "";\n    \n            /**\n             * Avatar barmCostId.\n             * @member {string} barmCostId\n             * @memberof op_gameconfig.Avatar\n             * @instance\n             */\n            Avatar.prototype.barmCostId = "";\n    \n            /**\n             * Avatar barmShldId.\n             * @member {string} barmShldId\n             * @memberof op_gameconfig.Avatar\n             * @instance\n             */\n            Avatar.prototype.barmShldId = "";\n    \n            /**\n             * Avatar barmWeapId.\n             * @member {string} barmWeapId\n             * @memberof op_gameconfig.Avatar\n             * @instance\n             */\n            Avatar.prototype.barmWeapId = "";\n    \n            /**\n             * Avatar barmSpecId.\n             * @member {string} barmSpecId\n             * @memberof op_gameconfig.Avatar\n             * @instance\n             */\n            Avatar.prototype.barmSpecId = "";\n    \n            /**\n             * Avatar flegBaseId.\n             * @member {string} flegBaseId\n             * @memberof op_gameconfig.Avatar\n             * @instance\n             */\n            Avatar.prototype.flegBaseId = "";\n    \n            /**\n             * Avatar flegCostId.\n             * @member {string} flegCostId\n             * @memberof op_gameconfig.Avatar\n             * @instance\n             */\n            Avatar.prototype.flegCostId = "";\n    \n            /**\n             * Avatar flegSpecId.\n             * @member {string} flegSpecId\n             * @memberof op_gameconfig.Avatar\n             * @instance\n             */\n            Avatar.prototype.flegSpecId = "";\n    \n            /**\n             * Avatar blegBaseId.\n             * @member {string} blegBaseId\n             * @memberof op_gameconfig.Avatar\n             * @instance\n             */\n            Avatar.prototype.blegBaseId = "";\n    \n            /**\n             * Avatar blegCostId.\n             * @member {string} blegCostId\n             * @memberof op_gameconfig.Avatar\n             * @instance\n             */\n            Avatar.prototype.blegCostId = "";\n    \n            /**\n             * Avatar blegSpecId.\n             * @member {string} blegSpecId\n             * @memberof op_gameconfig.Avatar\n             * @instance\n             */\n            Avatar.prototype.blegSpecId = "";\n    \n            /**\n             * Creates a new Avatar instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig.Avatar\n             * @static\n             * @param {op_gameconfig.IAvatar=} [properties] Properties to set\n             * @returns {op_gameconfig.Avatar} Avatar instance\n             */\n            Avatar.create = function create(properties) {\n                return new Avatar(properties);\n            };\n    \n            /**\n             * Encodes the specified Avatar message. Does not implicitly {@link op_gameconfig.Avatar.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig.Avatar\n             * @static\n             * @param {op_gameconfig.IAvatar} message Avatar message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Avatar.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.id);\n                if (message.headBaseId != null && message.hasOwnProperty("headBaseId"))\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.headBaseId);\n                if (message.headHairId != null && message.hasOwnProperty("headHairId"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.headHairId);\n                if (message.headEyesId != null && message.hasOwnProperty("headEyesId"))\n                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.headEyesId);\n                if (message.headBackId != null && message.hasOwnProperty("headBackId"))\n                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.headBackId);\n                if (message.headMousId != null && message.hasOwnProperty("headMousId"))\n                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.headMousId);\n                if (message.headHatsId != null && message.hasOwnProperty("headHatsId"))\n                    writer.uint32(/* id 7, wireType 2 =*/58).string(message.headHatsId);\n                if (message.headMaskId != null && message.hasOwnProperty("headMaskId"))\n                    writer.uint32(/* id 8, wireType 2 =*/66).string(message.headMaskId);\n                if (message.headSpecId != null && message.hasOwnProperty("headSpecId"))\n                    writer.uint32(/* id 9, wireType 2 =*/74).string(message.headSpecId);\n                if (message.bodyBaseId != null && message.hasOwnProperty("bodyBaseId"))\n                    writer.uint32(/* id 11, wireType 2 =*/90).string(message.bodyBaseId);\n                if (message.bodyCostId != null && message.hasOwnProperty("bodyCostId"))\n                    writer.uint32(/* id 12, wireType 2 =*/98).string(message.bodyCostId);\n                if (message.bodyDresId != null && message.hasOwnProperty("bodyDresId"))\n                    writer.uint32(/* id 13, wireType 2 =*/106).string(message.bodyDresId);\n                if (message.bodyTailId != null && message.hasOwnProperty("bodyTailId"))\n                    writer.uint32(/* id 14, wireType 2 =*/114).string(message.bodyTailId);\n                if (message.bodyWingId != null && message.hasOwnProperty("bodyWingId"))\n                    writer.uint32(/* id 15, wireType 2 =*/122).string(message.bodyWingId);\n                if (message.bodySpecId != null && message.hasOwnProperty("bodySpecId"))\n                    writer.uint32(/* id 16, wireType 2 =*/130).string(message.bodySpecId);\n                if (message.farmBaseId != null && message.hasOwnProperty("farmBaseId"))\n                    writer.uint32(/* id 21, wireType 2 =*/170).string(message.farmBaseId);\n                if (message.farmCostId != null && message.hasOwnProperty("farmCostId"))\n                    writer.uint32(/* id 22, wireType 2 =*/178).string(message.farmCostId);\n                if (message.farmShldId != null && message.hasOwnProperty("farmShldId"))\n                    writer.uint32(/* id 23, wireType 2 =*/186).string(message.farmShldId);\n                if (message.farmWeapId != null && message.hasOwnProperty("farmWeapId"))\n                    writer.uint32(/* id 24, wireType 2 =*/194).string(message.farmWeapId);\n                if (message.farmSpecId != null && message.hasOwnProperty("farmSpecId"))\n                    writer.uint32(/* id 25, wireType 2 =*/202).string(message.farmSpecId);\n                if (message.barmBaseId != null && message.hasOwnProperty("barmBaseId"))\n                    writer.uint32(/* id 31, wireType 2 =*/250).string(message.barmBaseId);\n                if (message.barmCostId != null && message.hasOwnProperty("barmCostId"))\n                    writer.uint32(/* id 32, wireType 2 =*/258).string(message.barmCostId);\n                if (message.barmShldId != null && message.hasOwnProperty("barmShldId"))\n                    writer.uint32(/* id 33, wireType 2 =*/266).string(message.barmShldId);\n                if (message.barmWeapId != null && message.hasOwnProperty("barmWeapId"))\n                    writer.uint32(/* id 34, wireType 2 =*/274).string(message.barmWeapId);\n                if (message.barmSpecId != null && message.hasOwnProperty("barmSpecId"))\n                    writer.uint32(/* id 35, wireType 2 =*/282).string(message.barmSpecId);\n                if (message.flegBaseId != null && message.hasOwnProperty("flegBaseId"))\n                    writer.uint32(/* id 41, wireType 2 =*/330).string(message.flegBaseId);\n                if (message.flegCostId != null && message.hasOwnProperty("flegCostId"))\n                    writer.uint32(/* id 42, wireType 2 =*/338).string(message.flegCostId);\n                if (message.flegSpecId != null && message.hasOwnProperty("flegSpecId"))\n                    writer.uint32(/* id 43, wireType 2 =*/346).string(message.flegSpecId);\n                if (message.blegBaseId != null && message.hasOwnProperty("blegBaseId"))\n                    writer.uint32(/* id 51, wireType 2 =*/410).string(message.blegBaseId);\n                if (message.blegCostId != null && message.hasOwnProperty("blegCostId"))\n                    writer.uint32(/* id 52, wireType 2 =*/418).string(message.blegCostId);\n                if (message.blegSpecId != null && message.hasOwnProperty("blegSpecId"))\n                    writer.uint32(/* id 53, wireType 2 =*/426).string(message.blegSpecId);\n                if (message.dirable != null && message.dirable.length)\n                    for (var i = 0; i < message.dirable.length; ++i)\n                        writer.uint32(/* id 80, wireType 0 =*/640).int32(message.dirable[i]);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Avatar message, length delimited. Does not implicitly {@link op_gameconfig.Avatar.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig.Avatar\n             * @static\n             * @param {op_gameconfig.IAvatar} message Avatar message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Avatar.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes an Avatar message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig.Avatar\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig.Avatar} Avatar\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Avatar.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig.Avatar();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.id = reader.string();\n                        break;\n                    case 80:\n                        if (!(message.dirable && message.dirable.length))\n                            message.dirable = [];\n                        if ((tag & 7) === 2) {\n                            var end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2)\n                                message.dirable.push(reader.int32());\n                        } else\n                            message.dirable.push(reader.int32());\n                        break;\n                    case 2:\n                        message.headBaseId = reader.string();\n                        break;\n                    case 3:\n                        message.headHairId = reader.string();\n                        break;\n                    case 4:\n                        message.headEyesId = reader.string();\n                        break;\n                    case 5:\n                        message.headBackId = reader.string();\n                        break;\n                    case 6:\n                        message.headMousId = reader.string();\n                        break;\n                    case 7:\n                        message.headHatsId = reader.string();\n                        break;\n                    case 8:\n                        message.headMaskId = reader.string();\n                        break;\n                    case 9:\n                        message.headSpecId = reader.string();\n                        break;\n                    case 11:\n                        message.bodyBaseId = reader.string();\n                        break;\n                    case 12:\n                        message.bodyCostId = reader.string();\n                        break;\n                    case 13:\n                        message.bodyDresId = reader.string();\n                        break;\n                    case 14:\n                        message.bodyTailId = reader.string();\n                        break;\n                    case 15:\n                        message.bodyWingId = reader.string();\n                        break;\n                    case 16:\n                        message.bodySpecId = reader.string();\n                        break;\n                    case 21:\n                        message.farmBaseId = reader.string();\n                        break;\n                    case 22:\n                        message.farmCostId = reader.string();\n                        break;\n                    case 23:\n                        message.farmShldId = reader.string();\n                        break;\n                    case 24:\n                        message.farmWeapId = reader.string();\n                        break;\n                    case 25:\n                        message.farmSpecId = reader.string();\n                        break;\n                    case 31:\n                        message.barmBaseId = reader.string();\n                        break;\n                    case 32:\n                        message.barmCostId = reader.string();\n                        break;\n                    case 33:\n                        message.barmShldId = reader.string();\n                        break;\n                    case 34:\n                        message.barmWeapId = reader.string();\n                        break;\n                    case 35:\n                        message.barmSpecId = reader.string();\n                        break;\n                    case 41:\n                        message.flegBaseId = reader.string();\n                        break;\n                    case 42:\n                        message.flegCostId = reader.string();\n                        break;\n                    case 43:\n                        message.flegSpecId = reader.string();\n                        break;\n                    case 51:\n                        message.blegBaseId = reader.string();\n                        break;\n                    case 52:\n                        message.blegCostId = reader.string();\n                        break;\n                    case 53:\n                        message.blegSpecId = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("id"))\n                    throw $util.ProtocolError("missing required \'id\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes an Avatar message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig.Avatar\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig.Avatar} Avatar\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Avatar.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies an Avatar message.\n             * @function verify\n             * @memberof op_gameconfig.Avatar\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Avatar.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.id))\n                    return "id: string expected";\n                if (message.dirable != null && message.hasOwnProperty("dirable")) {\n                    if (!Array.isArray(message.dirable))\n                        return "dirable: array expected";\n                    for (var i = 0; i < message.dirable.length; ++i)\n                        if (!$util.isInteger(message.dirable[i]))\n                            return "dirable: integer[] expected";\n                }\n                if (message.headBaseId != null && message.hasOwnProperty("headBaseId"))\n                    if (!$util.isString(message.headBaseId))\n                        return "headBaseId: string expected";\n                if (message.headHairId != null && message.hasOwnProperty("headHairId"))\n                    if (!$util.isString(message.headHairId))\n                        return "headHairId: string expected";\n                if (message.headEyesId != null && message.hasOwnProperty("headEyesId"))\n                    if (!$util.isString(message.headEyesId))\n                        return "headEyesId: string expected";\n                if (message.headBackId != null && message.hasOwnProperty("headBackId"))\n                    if (!$util.isString(message.headBackId))\n                        return "headBackId: string expected";\n                if (message.headMousId != null && message.hasOwnProperty("headMousId"))\n                    if (!$util.isString(message.headMousId))\n                        return "headMousId: string expected";\n                if (message.headHatsId != null && message.hasOwnProperty("headHatsId"))\n                    if (!$util.isString(message.headHatsId))\n                        return "headHatsId: string expected";\n                if (message.headMaskId != null && message.hasOwnProperty("headMaskId"))\n                    if (!$util.isString(message.headMaskId))\n                        return "headMaskId: string expected";\n                if (message.headSpecId != null && message.hasOwnProperty("headSpecId"))\n                    if (!$util.isString(message.headSpecId))\n                        return "headSpecId: string expected";\n                if (message.bodyBaseId != null && message.hasOwnProperty("bodyBaseId"))\n                    if (!$util.isString(message.bodyBaseId))\n                        return "bodyBaseId: string expected";\n                if (message.bodyCostId != null && message.hasOwnProperty("bodyCostId"))\n                    if (!$util.isString(message.bodyCostId))\n                        return "bodyCostId: string expected";\n                if (message.bodyDresId != null && message.hasOwnProperty("bodyDresId"))\n                    if (!$util.isString(message.bodyDresId))\n                        return "bodyDresId: string expected";\n                if (message.bodyTailId != null && message.hasOwnProperty("bodyTailId"))\n                    if (!$util.isString(message.bodyTailId))\n                        return "bodyTailId: string expected";\n                if (message.bodyWingId != null && message.hasOwnProperty("bodyWingId"))\n                    if (!$util.isString(message.bodyWingId))\n                        return "bodyWingId: string expected";\n                if (message.bodySpecId != null && message.hasOwnProperty("bodySpecId"))\n                    if (!$util.isString(message.bodySpecId))\n                        return "bodySpecId: string expected";\n                if (message.farmBaseId != null && message.hasOwnProperty("farmBaseId"))\n                    if (!$util.isString(message.farmBaseId))\n                        return "farmBaseId: string expected";\n                if (message.farmCostId != null && message.hasOwnProperty("farmCostId"))\n                    if (!$util.isString(message.farmCostId))\n                        return "farmCostId: string expected";\n                if (message.farmShldId != null && message.hasOwnProperty("farmShldId"))\n                    if (!$util.isString(message.farmShldId))\n                        return "farmShldId: string expected";\n                if (message.farmWeapId != null && message.hasOwnProperty("farmWeapId"))\n                    if (!$util.isString(message.farmWeapId))\n                        return "farmWeapId: string expected";\n                if (message.farmSpecId != null && message.hasOwnProperty("farmSpecId"))\n                    if (!$util.isString(message.farmSpecId))\n                        return "farmSpecId: string expected";\n                if (message.barmBaseId != null && message.hasOwnProperty("barmBaseId"))\n                    if (!$util.isString(message.barmBaseId))\n                        return "barmBaseId: string expected";\n                if (message.barmCostId != null && message.hasOwnProperty("barmCostId"))\n                    if (!$util.isString(message.barmCostId))\n                        return "barmCostId: string expected";\n                if (message.barmShldId != null && message.hasOwnProperty("barmShldId"))\n                    if (!$util.isString(message.barmShldId))\n                        return "barmShldId: string expected";\n                if (message.barmWeapId != null && message.hasOwnProperty("barmWeapId"))\n                    if (!$util.isString(message.barmWeapId))\n                        return "barmWeapId: string expected";\n                if (message.barmSpecId != null && message.hasOwnProperty("barmSpecId"))\n                    if (!$util.isString(message.barmSpecId))\n                        return "barmSpecId: string expected";\n                if (message.flegBaseId != null && message.hasOwnProperty("flegBaseId"))\n                    if (!$util.isString(message.flegBaseId))\n                        return "flegBaseId: string expected";\n                if (message.flegCostId != null && message.hasOwnProperty("flegCostId"))\n                    if (!$util.isString(message.flegCostId))\n                        return "flegCostId: string expected";\n                if (message.flegSpecId != null && message.hasOwnProperty("flegSpecId"))\n                    if (!$util.isString(message.flegSpecId))\n                        return "flegSpecId: string expected";\n                if (message.blegBaseId != null && message.hasOwnProperty("blegBaseId"))\n                    if (!$util.isString(message.blegBaseId))\n                        return "blegBaseId: string expected";\n                if (message.blegCostId != null && message.hasOwnProperty("blegCostId"))\n                    if (!$util.isString(message.blegCostId))\n                        return "blegCostId: string expected";\n                if (message.blegSpecId != null && message.hasOwnProperty("blegSpecId"))\n                    if (!$util.isString(message.blegSpecId))\n                        return "blegSpecId: string expected";\n                return null;\n            };\n    \n            /**\n             * Creates an Avatar message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig.Avatar\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig.Avatar} Avatar\n             */\n            Avatar.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig.Avatar)\n                    return object;\n                var message = new $root.op_gameconfig.Avatar();\n                if (object.id != null)\n                    message.id = String(object.id);\n                if (object.dirable) {\n                    if (!Array.isArray(object.dirable))\n                        throw TypeError(".op_gameconfig.Avatar.dirable: array expected");\n                    message.dirable = [];\n                    for (var i = 0; i < object.dirable.length; ++i)\n                        message.dirable[i] = object.dirable[i] | 0;\n                }\n                if (object.headBaseId != null)\n                    message.headBaseId = String(object.headBaseId);\n                if (object.headHairId != null)\n                    message.headHairId = String(object.headHairId);\n                if (object.headEyesId != null)\n                    message.headEyesId = String(object.headEyesId);\n                if (object.headBackId != null)\n                    message.headBackId = String(object.headBackId);\n                if (object.headMousId != null)\n                    message.headMousId = String(object.headMousId);\n                if (object.headHatsId != null)\n                    message.headHatsId = String(object.headHatsId);\n                if (object.headMaskId != null)\n                    message.headMaskId = String(object.headMaskId);\n                if (object.headSpecId != null)\n                    message.headSpecId = String(object.headSpecId);\n                if (object.bodyBaseId != null)\n                    message.bodyBaseId = String(object.bodyBaseId);\n                if (object.bodyCostId != null)\n                    message.bodyCostId = String(object.bodyCostId);\n                if (object.bodyDresId != null)\n                    message.bodyDresId = String(object.bodyDresId);\n                if (object.bodyTailId != null)\n                    message.bodyTailId = String(object.bodyTailId);\n                if (object.bodyWingId != null)\n                    message.bodyWingId = String(object.bodyWingId);\n                if (object.bodySpecId != null)\n                    message.bodySpecId = String(object.bodySpecId);\n                if (object.farmBaseId != null)\n                    message.farmBaseId = String(object.farmBaseId);\n                if (object.farmCostId != null)\n                    message.farmCostId = String(object.farmCostId);\n                if (object.farmShldId != null)\n                    message.farmShldId = String(object.farmShldId);\n                if (object.farmWeapId != null)\n                    message.farmWeapId = String(object.farmWeapId);\n                if (object.farmSpecId != null)\n                    message.farmSpecId = String(object.farmSpecId);\n                if (object.barmBaseId != null)\n                    message.barmBaseId = String(object.barmBaseId);\n                if (object.barmCostId != null)\n                    message.barmCostId = String(object.barmCostId);\n                if (object.barmShldId != null)\n                    message.barmShldId = String(object.barmShldId);\n                if (object.barmWeapId != null)\n                    message.barmWeapId = String(object.barmWeapId);\n                if (object.barmSpecId != null)\n                    message.barmSpecId = String(object.barmSpecId);\n                if (object.flegBaseId != null)\n                    message.flegBaseId = String(object.flegBaseId);\n                if (object.flegCostId != null)\n                    message.flegCostId = String(object.flegCostId);\n                if (object.flegSpecId != null)\n                    message.flegSpecId = String(object.flegSpecId);\n                if (object.blegBaseId != null)\n                    message.blegBaseId = String(object.blegBaseId);\n                if (object.blegCostId != null)\n                    message.blegCostId = String(object.blegCostId);\n                if (object.blegSpecId != null)\n                    message.blegSpecId = String(object.blegSpecId);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from an Avatar message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig.Avatar\n             * @static\n             * @param {op_gameconfig.Avatar} message Avatar\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Avatar.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.dirable = [];\n                if (options.defaults) {\n                    object.id = "";\n                    object.headBaseId = "";\n                    object.headHairId = "";\n                    object.headEyesId = "";\n                    object.headBackId = "";\n                    object.headMousId = "";\n                    object.headHatsId = "";\n                    object.headMaskId = "";\n                    object.headSpecId = "";\n                    object.bodyBaseId = "";\n                    object.bodyCostId = "";\n                    object.bodyDresId = "";\n                    object.bodyTailId = "";\n                    object.bodyWingId = "";\n                    object.bodySpecId = "";\n                    object.farmBaseId = "";\n                    object.farmCostId = "";\n                    object.farmShldId = "";\n                    object.farmWeapId = "";\n                    object.farmSpecId = "";\n                    object.barmBaseId = "";\n                    object.barmCostId = "";\n                    object.barmShldId = "";\n                    object.barmWeapId = "";\n                    object.barmSpecId = "";\n                    object.flegBaseId = "";\n                    object.flegCostId = "";\n                    object.flegSpecId = "";\n                    object.blegBaseId = "";\n                    object.blegCostId = "";\n                    object.blegSpecId = "";\n                }\n                if (message.id != null && message.hasOwnProperty("id"))\n                    object.id = message.id;\n                if (message.headBaseId != null && message.hasOwnProperty("headBaseId"))\n                    object.headBaseId = message.headBaseId;\n                if (message.headHairId != null && message.hasOwnProperty("headHairId"))\n                    object.headHairId = message.headHairId;\n                if (message.headEyesId != null && message.hasOwnProperty("headEyesId"))\n                    object.headEyesId = message.headEyesId;\n                if (message.headBackId != null && message.hasOwnProperty("headBackId"))\n                    object.headBackId = message.headBackId;\n                if (message.headMousId != null && message.hasOwnProperty("headMousId"))\n                    object.headMousId = message.headMousId;\n                if (message.headHatsId != null && message.hasOwnProperty("headHatsId"))\n                    object.headHatsId = message.headHatsId;\n                if (message.headMaskId != null && message.hasOwnProperty("headMaskId"))\n                    object.headMaskId = message.headMaskId;\n                if (message.headSpecId != null && message.hasOwnProperty("headSpecId"))\n                    object.headSpecId = message.headSpecId;\n                if (message.bodyBaseId != null && message.hasOwnProperty("bodyBaseId"))\n                    object.bodyBaseId = message.bodyBaseId;\n                if (message.bodyCostId != null && message.hasOwnProperty("bodyCostId"))\n                    object.bodyCostId = message.bodyCostId;\n                if (message.bodyDresId != null && message.hasOwnProperty("bodyDresId"))\n                    object.bodyDresId = message.bodyDresId;\n                if (message.bodyTailId != null && message.hasOwnProperty("bodyTailId"))\n                    object.bodyTailId = message.bodyTailId;\n                if (message.bodyWingId != null && message.hasOwnProperty("bodyWingId"))\n                    object.bodyWingId = message.bodyWingId;\n                if (message.bodySpecId != null && message.hasOwnProperty("bodySpecId"))\n                    object.bodySpecId = message.bodySpecId;\n                if (message.farmBaseId != null && message.hasOwnProperty("farmBaseId"))\n                    object.farmBaseId = message.farmBaseId;\n                if (message.farmCostId != null && message.hasOwnProperty("farmCostId"))\n                    object.farmCostId = message.farmCostId;\n                if (message.farmShldId != null && message.hasOwnProperty("farmShldId"))\n                    object.farmShldId = message.farmShldId;\n                if (message.farmWeapId != null && message.hasOwnProperty("farmWeapId"))\n                    object.farmWeapId = message.farmWeapId;\n                if (message.farmSpecId != null && message.hasOwnProperty("farmSpecId"))\n                    object.farmSpecId = message.farmSpecId;\n                if (message.barmBaseId != null && message.hasOwnProperty("barmBaseId"))\n                    object.barmBaseId = message.barmBaseId;\n                if (message.barmCostId != null && message.hasOwnProperty("barmCostId"))\n                    object.barmCostId = message.barmCostId;\n                if (message.barmShldId != null && message.hasOwnProperty("barmShldId"))\n                    object.barmShldId = message.barmShldId;\n                if (message.barmWeapId != null && message.hasOwnProperty("barmWeapId"))\n                    object.barmWeapId = message.barmWeapId;\n                if (message.barmSpecId != null && message.hasOwnProperty("barmSpecId"))\n                    object.barmSpecId = message.barmSpecId;\n                if (message.flegBaseId != null && message.hasOwnProperty("flegBaseId"))\n                    object.flegBaseId = message.flegBaseId;\n                if (message.flegCostId != null && message.hasOwnProperty("flegCostId"))\n                    object.flegCostId = message.flegCostId;\n                if (message.flegSpecId != null && message.hasOwnProperty("flegSpecId"))\n                    object.flegSpecId = message.flegSpecId;\n                if (message.blegBaseId != null && message.hasOwnProperty("blegBaseId"))\n                    object.blegBaseId = message.blegBaseId;\n                if (message.blegCostId != null && message.hasOwnProperty("blegCostId"))\n                    object.blegCostId = message.blegCostId;\n                if (message.blegSpecId != null && message.hasOwnProperty("blegSpecId"))\n                    object.blegSpecId = message.blegSpecId;\n                if (message.dirable && message.dirable.length) {\n                    object.dirable = [];\n                    for (var j = 0; j < message.dirable.length; ++j)\n                        object.dirable[j] = message.dirable[j];\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this Avatar to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig.Avatar\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Avatar.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Avatar;\n        })();\n    \n        op_gameconfig.Slot = (function() {\n    \n            /**\n             * Properties of a Slot.\n             * @memberof op_gameconfig\n             * @interface ISlot\n             * @property {string|null} [bondAttrCurkey] Slot bondAttrCurkey\n             * @property {string} bondAttrMaxkey Slot bondAttrMaxkey\n             * @property {string} color Slot color\n             * @property {string} bondName Slot bondName\n             * @property {boolean|null} ["public"] Slot public\n             */\n    \n            /**\n             * Constructs a new Slot.\n             * @memberof op_gameconfig\n             * @classdesc Represents a Slot.\n             * @implements ISlot\n             * @constructor\n             * @param {op_gameconfig.ISlot=} [properties] Properties to set\n             */\n            function Slot(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Slot bondAttrCurkey.\n             * @member {string} bondAttrCurkey\n             * @memberof op_gameconfig.Slot\n             * @instance\n             */\n            Slot.prototype.bondAttrCurkey = "";\n    \n            /**\n             * Slot bondAttrMaxkey.\n             * @member {string} bondAttrMaxkey\n             * @memberof op_gameconfig.Slot\n             * @instance\n             */\n            Slot.prototype.bondAttrMaxkey = "";\n    \n            /**\n             * Slot color.\n             * @member {string} color\n             * @memberof op_gameconfig.Slot\n             * @instance\n             */\n            Slot.prototype.color = "";\n    \n            /**\n             * Slot bondName.\n             * @member {string} bondName\n             * @memberof op_gameconfig.Slot\n             * @instance\n             */\n            Slot.prototype.bondName = "";\n    \n            /**\n             * Slot public.\n             * @member {boolean} public\n             * @memberof op_gameconfig.Slot\n             * @instance\n             */\n            Slot.prototype["public"] = false;\n    \n            /**\n             * Creates a new Slot instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig.Slot\n             * @static\n             * @param {op_gameconfig.ISlot=} [properties] Properties to set\n             * @returns {op_gameconfig.Slot} Slot instance\n             */\n            Slot.create = function create(properties) {\n                return new Slot(properties);\n            };\n    \n            /**\n             * Encodes the specified Slot message. Does not implicitly {@link op_gameconfig.Slot.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig.Slot\n             * @static\n             * @param {op_gameconfig.ISlot} message Slot message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Slot.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.bondAttrCurkey != null && message.hasOwnProperty("bondAttrCurkey"))\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.bondAttrCurkey);\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.bondAttrMaxkey);\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.color);\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.bondName);\n                if (message["public"] != null && message.hasOwnProperty("public"))\n                    writer.uint32(/* id 5, wireType 0 =*/40).bool(message["public"]);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Slot message, length delimited. Does not implicitly {@link op_gameconfig.Slot.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig.Slot\n             * @static\n             * @param {op_gameconfig.ISlot} message Slot message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Slot.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a Slot message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig.Slot\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig.Slot} Slot\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Slot.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig.Slot();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.bondAttrCurkey = reader.string();\n                        break;\n                    case 2:\n                        message.bondAttrMaxkey = reader.string();\n                        break;\n                    case 3:\n                        message.color = reader.string();\n                        break;\n                    case 4:\n                        message.bondName = reader.string();\n                        break;\n                    case 5:\n                        message["public"] = reader.bool();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("bondAttrMaxkey"))\n                    throw $util.ProtocolError("missing required \'bondAttrMaxkey\'", { instance: message });\n                if (!message.hasOwnProperty("color"))\n                    throw $util.ProtocolError("missing required \'color\'", { instance: message });\n                if (!message.hasOwnProperty("bondName"))\n                    throw $util.ProtocolError("missing required \'bondName\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a Slot message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig.Slot\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig.Slot} Slot\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Slot.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a Slot message.\n             * @function verify\n             * @memberof op_gameconfig.Slot\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Slot.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.bondAttrCurkey != null && message.hasOwnProperty("bondAttrCurkey"))\n                    if (!$util.isString(message.bondAttrCurkey))\n                        return "bondAttrCurkey: string expected";\n                if (!$util.isString(message.bondAttrMaxkey))\n                    return "bondAttrMaxkey: string expected";\n                if (!$util.isString(message.color))\n                    return "color: string expected";\n                if (!$util.isString(message.bondName))\n                    return "bondName: string expected";\n                if (message["public"] != null && message.hasOwnProperty("public"))\n                    if (typeof message["public"] !== "boolean")\n                        return "public: boolean expected";\n                return null;\n            };\n    \n            /**\n             * Creates a Slot message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig.Slot\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig.Slot} Slot\n             */\n            Slot.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig.Slot)\n                    return object;\n                var message = new $root.op_gameconfig.Slot();\n                if (object.bondAttrCurkey != null)\n                    message.bondAttrCurkey = String(object.bondAttrCurkey);\n                if (object.bondAttrMaxkey != null)\n                    message.bondAttrMaxkey = String(object.bondAttrMaxkey);\n                if (object.color != null)\n                    message.color = String(object.color);\n                if (object.bondName != null)\n                    message.bondName = String(object.bondName);\n                if (object["public"] != null)\n                    message["public"] = Boolean(object["public"]);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a Slot message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig.Slot\n             * @static\n             * @param {op_gameconfig.Slot} message Slot\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Slot.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.bondAttrCurkey = "";\n                    object.bondAttrMaxkey = "";\n                    object.color = "";\n                    object.bondName = "";\n                    object["public"] = false;\n                }\n                if (message.bondAttrCurkey != null && message.hasOwnProperty("bondAttrCurkey"))\n                    object.bondAttrCurkey = message.bondAttrCurkey;\n                if (message.bondAttrMaxkey != null && message.hasOwnProperty("bondAttrMaxkey"))\n                    object.bondAttrMaxkey = message.bondAttrMaxkey;\n                if (message.color != null && message.hasOwnProperty("color"))\n                    object.color = message.color;\n                if (message.bondName != null && message.hasOwnProperty("bondName"))\n                    object.bondName = message.bondName;\n                if (message["public"] != null && message.hasOwnProperty("public"))\n                    object["public"] = message["public"];\n                return object;\n            };\n    \n            /**\n             * Converts this Slot to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig.Slot\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Slot.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Slot;\n        })();\n    \n        op_gameconfig.Package = (function() {\n    \n            /**\n             * Properties of a Package.\n             * @memberof op_gameconfig\n             * @interface IPackage\n             * @property {number} maxIndex Package maxIndex\n             * @property {Array.<op_gameconfig.IItem>|null} [items] Package items\n             * @property {number} id Package id\n             */\n    \n            /**\n             * Constructs a new Package.\n             * @memberof op_gameconfig\n             * @classdesc Represents a Package.\n             * @implements IPackage\n             * @constructor\n             * @param {op_gameconfig.IPackage=} [properties] Properties to set\n             */\n            function Package(properties) {\n                this.items = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Package maxIndex.\n             * @member {number} maxIndex\n             * @memberof op_gameconfig.Package\n             * @instance\n             */\n            Package.prototype.maxIndex = 0;\n    \n            /**\n             * Package items.\n             * @member {Array.<op_gameconfig.IItem>} items\n             * @memberof op_gameconfig.Package\n             * @instance\n             */\n            Package.prototype.items = $util.emptyArray;\n    \n            /**\n             * Package id.\n             * @member {number} id\n             * @memberof op_gameconfig.Package\n             * @instance\n             */\n            Package.prototype.id = 0;\n    \n            /**\n             * Creates a new Package instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig.Package\n             * @static\n             * @param {op_gameconfig.IPackage=} [properties] Properties to set\n             * @returns {op_gameconfig.Package} Package instance\n             */\n            Package.create = function create(properties) {\n                return new Package(properties);\n            };\n    \n            /**\n             * Encodes the specified Package message. Does not implicitly {@link op_gameconfig.Package.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig.Package\n             * @static\n             * @param {op_gameconfig.IPackage} message Package message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Package.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.maxIndex);\n                if (message.items != null && message.items.length)\n                    for (var i = 0; i < message.items.length; ++i)\n                        $root.op_gameconfig.Item.encode(message.items[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.id);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Package message, length delimited. Does not implicitly {@link op_gameconfig.Package.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig.Package\n             * @static\n             * @param {op_gameconfig.IPackage} message Package message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Package.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a Package message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig.Package\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig.Package} Package\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Package.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig.Package();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.maxIndex = reader.int32();\n                        break;\n                    case 2:\n                        if (!(message.items && message.items.length))\n                            message.items = [];\n                        message.items.push($root.op_gameconfig.Item.decode(reader, reader.uint32()));\n                        break;\n                    case 3:\n                        message.id = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("maxIndex"))\n                    throw $util.ProtocolError("missing required \'maxIndex\'", { instance: message });\n                if (!message.hasOwnProperty("id"))\n                    throw $util.ProtocolError("missing required \'id\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a Package message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig.Package\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig.Package} Package\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Package.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a Package message.\n             * @function verify\n             * @memberof op_gameconfig.Package\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Package.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.maxIndex))\n                    return "maxIndex: integer expected";\n                if (message.items != null && message.hasOwnProperty("items")) {\n                    if (!Array.isArray(message.items))\n                        return "items: array expected";\n                    for (var i = 0; i < message.items.length; ++i) {\n                        var error = $root.op_gameconfig.Item.verify(message.items[i]);\n                        if (error)\n                            return "items." + error;\n                    }\n                }\n                if (!$util.isInteger(message.id))\n                    return "id: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a Package message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig.Package\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig.Package} Package\n             */\n            Package.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig.Package)\n                    return object;\n                var message = new $root.op_gameconfig.Package();\n                if (object.maxIndex != null)\n                    message.maxIndex = object.maxIndex | 0;\n                if (object.items) {\n                    if (!Array.isArray(object.items))\n                        throw TypeError(".op_gameconfig.Package.items: array expected");\n                    message.items = [];\n                    for (var i = 0; i < object.items.length; ++i) {\n                        if (typeof object.items[i] !== "object")\n                            throw TypeError(".op_gameconfig.Package.items: object expected");\n                        message.items[i] = $root.op_gameconfig.Item.fromObject(object.items[i]);\n                    }\n                }\n                if (object.id != null)\n                    message.id = object.id | 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a Package message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig.Package\n             * @static\n             * @param {op_gameconfig.Package} message Package\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Package.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.items = [];\n                if (options.defaults) {\n                    object.maxIndex = 0;\n                    object.id = 0;\n                }\n                if (message.maxIndex != null && message.hasOwnProperty("maxIndex"))\n                    object.maxIndex = message.maxIndex;\n                if (message.items && message.items.length) {\n                    object.items = [];\n                    for (var j = 0; j < message.items.length; ++j)\n                        object.items[j] = $root.op_gameconfig.Item.toObject(message.items[j], options);\n                }\n                if (message.id != null && message.hasOwnProperty("id"))\n                    object.id = message.id;\n                return object;\n            };\n    \n            /**\n             * Converts this Package to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig.Package\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Package.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Package;\n        })();\n    \n        op_gameconfig.Character = (function() {\n    \n            /**\n             * Properties of a Character.\n             * @memberof op_gameconfig\n             * @interface ICharacter\n             * @property {number} id Character id\n             * @property {string} name Character name\n             * @property {number} maxNum Character maxNum\n             * @property {string} camp Character camp\n             * @property {op_gameconfig.IAvatar} avatar Character avatar\n             * @property {Array.<op_gameconfig.IAttribute>|null} [attributes] Character attributes\n             * @property {Array.<op_gameconfig.IPackage>|null} ["package"] Character package\n             * @property {number|null} [sceneId] Character sceneId\n             * @property {number|null} [x] Character x\n             * @property {number|null} [y] Character y\n             * @property {number|null} [z] Character z\n             * @property {op_gameconfig.ICharacterEvent|null} [characterEvent] Character characterEvent\n             * @property {number} avatarDir Character avatarDir\n             * @property {Array.<op_gameconfig.ISlot>|null} [slots] Character slots\n             * @property {op_gameconfig.IDisplay|null} [editorDisplay] Character editorDisplay\n             * @property {Array.<op_gameconfig.IAnimation>|null} [editorAnimations] Character editorAnimations\n             * @property {string|null} [editorAnimationName] Character editorAnimationName\n             * @property {Array.<op_gameconfig.IShop>|null} [shops] Character shops\n             */\n    \n            /**\n             * Constructs a new Character.\n             * @memberof op_gameconfig\n             * @classdesc Represents a Character.\n             * @implements ICharacter\n             * @constructor\n             * @param {op_gameconfig.ICharacter=} [properties] Properties to set\n             */\n            function Character(properties) {\n                this.attributes = [];\n                this["package"] = [];\n                this.slots = [];\n                this.editorAnimations = [];\n                this.shops = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Character id.\n             * @member {number} id\n             * @memberof op_gameconfig.Character\n             * @instance\n             */\n            Character.prototype.id = 0;\n    \n            /**\n             * Character name.\n             * @member {string} name\n             * @memberof op_gameconfig.Character\n             * @instance\n             */\n            Character.prototype.name = "";\n    \n            /**\n             * Character maxNum.\n             * @member {number} maxNum\n             * @memberof op_gameconfig.Character\n             * @instance\n             */\n            Character.prototype.maxNum = 20;\n    \n            /**\n             * Character camp.\n             * @member {string} camp\n             * @memberof op_gameconfig.Character\n             * @instance\n             */\n            Character.prototype.camp = "";\n    \n            /**\n             * Character avatar.\n             * @member {op_gameconfig.IAvatar} avatar\n             * @memberof op_gameconfig.Character\n             * @instance\n             */\n            Character.prototype.avatar = null;\n    \n            /**\n             * Character attributes.\n             * @member {Array.<op_gameconfig.IAttribute>} attributes\n             * @memberof op_gameconfig.Character\n             * @instance\n             */\n            Character.prototype.attributes = $util.emptyArray;\n    \n            /**\n             * Character package.\n             * @member {Array.<op_gameconfig.IPackage>} package\n             * @memberof op_gameconfig.Character\n             * @instance\n             */\n            Character.prototype["package"] = $util.emptyArray;\n    \n            /**\n             * Character sceneId.\n             * @member {number} sceneId\n             * @memberof op_gameconfig.Character\n             * @instance\n             */\n            Character.prototype.sceneId = 0;\n    \n            /**\n             * Character x.\n             * @member {number} x\n             * @memberof op_gameconfig.Character\n             * @instance\n             */\n            Character.prototype.x = 0;\n    \n            /**\n             * Character y.\n             * @member {number} y\n             * @memberof op_gameconfig.Character\n             * @instance\n             */\n            Character.prototype.y = 0;\n    \n            /**\n             * Character z.\n             * @member {number} z\n             * @memberof op_gameconfig.Character\n             * @instance\n             */\n            Character.prototype.z = 0;\n    \n            /**\n             * Character characterEvent.\n             * @member {op_gameconfig.ICharacterEvent|null|undefined} characterEvent\n             * @memberof op_gameconfig.Character\n             * @instance\n             */\n            Character.prototype.characterEvent = null;\n    \n            /**\n             * Character avatarDir.\n             * @member {number} avatarDir\n             * @memberof op_gameconfig.Character\n             * @instance\n             */\n            Character.prototype.avatarDir = 0;\n    \n            /**\n             * Character slots.\n             * @member {Array.<op_gameconfig.ISlot>} slots\n             * @memberof op_gameconfig.Character\n             * @instance\n             */\n            Character.prototype.slots = $util.emptyArray;\n    \n            /**\n             * Character editorDisplay.\n             * @member {op_gameconfig.IDisplay|null|undefined} editorDisplay\n             * @memberof op_gameconfig.Character\n             * @instance\n             */\n            Character.prototype.editorDisplay = null;\n    \n            /**\n             * Character editorAnimations.\n             * @member {Array.<op_gameconfig.IAnimation>} editorAnimations\n             * @memberof op_gameconfig.Character\n             * @instance\n             */\n            Character.prototype.editorAnimations = $util.emptyArray;\n    \n            /**\n             * Character editorAnimationName.\n             * @member {string} editorAnimationName\n             * @memberof op_gameconfig.Character\n             * @instance\n             */\n            Character.prototype.editorAnimationName = "";\n    \n            /**\n             * Character shops.\n             * @member {Array.<op_gameconfig.IShop>} shops\n             * @memberof op_gameconfig.Character\n             * @instance\n             */\n            Character.prototype.shops = $util.emptyArray;\n    \n            /**\n             * Creates a new Character instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig.Character\n             * @static\n             * @param {op_gameconfig.ICharacter=} [properties] Properties to set\n             * @returns {op_gameconfig.Character} Character instance\n             */\n            Character.create = function create(properties) {\n                return new Character(properties);\n            };\n    \n            /**\n             * Encodes the specified Character message. Does not implicitly {@link op_gameconfig.Character.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig.Character\n             * @static\n             * @param {op_gameconfig.ICharacter} message Character message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Character.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.id);\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);\n                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.maxNum);\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.camp);\n                $root.op_gameconfig.Avatar.encode(message.avatar, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n                if (message.attributes != null && message.attributes.length)\n                    for (var i = 0; i < message.attributes.length; ++i)\n                        $root.op_gameconfig.Attribute.encode(message.attributes[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n                if (message["package"] != null && message["package"].length)\n                    for (var i = 0; i < message["package"].length; ++i)\n                        $root.op_gameconfig.Package.encode(message["package"][i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n                if (message.sceneId != null && message.hasOwnProperty("sceneId"))\n                    writer.uint32(/* id 8, wireType 0 =*/64).int32(message.sceneId);\n                if (message.x != null && message.hasOwnProperty("x"))\n                    writer.uint32(/* id 9, wireType 0 =*/72).int32(message.x);\n                if (message.y != null && message.hasOwnProperty("y"))\n                    writer.uint32(/* id 10, wireType 0 =*/80).int32(message.y);\n                if (message.z != null && message.hasOwnProperty("z"))\n                    writer.uint32(/* id 11, wireType 0 =*/88).int32(message.z);\n                if (message.characterEvent != null && message.hasOwnProperty("characterEvent"))\n                    $root.op_gameconfig.CharacterEvent.encode(message.characterEvent, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();\n                writer.uint32(/* id 13, wireType 0 =*/104).int32(message.avatarDir);\n                if (message.slots != null && message.slots.length)\n                    for (var i = 0; i < message.slots.length; ++i)\n                        $root.op_gameconfig.Slot.encode(message.slots[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n                if (message.editorDisplay != null && message.hasOwnProperty("editorDisplay"))\n                    $root.op_gameconfig.Display.encode(message.editorDisplay, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();\n                if (message.editorAnimations != null && message.editorAnimations.length)\n                    for (var i = 0; i < message.editorAnimations.length; ++i)\n                        $root.op_gameconfig.Animation.encode(message.editorAnimations[i], writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();\n                if (message.editorAnimationName != null && message.hasOwnProperty("editorAnimationName"))\n                    writer.uint32(/* id 17, wireType 2 =*/138).string(message.editorAnimationName);\n                if (message.shops != null && message.shops.length)\n                    for (var i = 0; i < message.shops.length; ++i)\n                        $root.op_gameconfig.Shop.encode(message.shops[i], writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Character message, length delimited. Does not implicitly {@link op_gameconfig.Character.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig.Character\n             * @static\n             * @param {op_gameconfig.ICharacter} message Character message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Character.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a Character message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig.Character\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig.Character} Character\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Character.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig.Character();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.id = reader.int32();\n                        break;\n                    case 2:\n                        message.name = reader.string();\n                        break;\n                    case 3:\n                        message.maxNum = reader.int32();\n                        break;\n                    case 4:\n                        message.camp = reader.string();\n                        break;\n                    case 5:\n                        message.avatar = $root.op_gameconfig.Avatar.decode(reader, reader.uint32());\n                        break;\n                    case 6:\n                        if (!(message.attributes && message.attributes.length))\n                            message.attributes = [];\n                        message.attributes.push($root.op_gameconfig.Attribute.decode(reader, reader.uint32()));\n                        break;\n                    case 7:\n                        if (!(message["package"] && message["package"].length))\n                            message["package"] = [];\n                        message["package"].push($root.op_gameconfig.Package.decode(reader, reader.uint32()));\n                        break;\n                    case 8:\n                        message.sceneId = reader.int32();\n                        break;\n                    case 9:\n                        message.x = reader.int32();\n                        break;\n                    case 10:\n                        message.y = reader.int32();\n                        break;\n                    case 11:\n                        message.z = reader.int32();\n                        break;\n                    case 12:\n                        message.characterEvent = $root.op_gameconfig.CharacterEvent.decode(reader, reader.uint32());\n                        break;\n                    case 13:\n                        message.avatarDir = reader.int32();\n                        break;\n                    case 14:\n                        if (!(message.slots && message.slots.length))\n                            message.slots = [];\n                        message.slots.push($root.op_gameconfig.Slot.decode(reader, reader.uint32()));\n                        break;\n                    case 15:\n                        message.editorDisplay = $root.op_gameconfig.Display.decode(reader, reader.uint32());\n                        break;\n                    case 16:\n                        if (!(message.editorAnimations && message.editorAnimations.length))\n                            message.editorAnimations = [];\n                        message.editorAnimations.push($root.op_gameconfig.Animation.decode(reader, reader.uint32()));\n                        break;\n                    case 17:\n                        message.editorAnimationName = reader.string();\n                        break;\n                    case 18:\n                        if (!(message.shops && message.shops.length))\n                            message.shops = [];\n                        message.shops.push($root.op_gameconfig.Shop.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("id"))\n                    throw $util.ProtocolError("missing required \'id\'", { instance: message });\n                if (!message.hasOwnProperty("name"))\n                    throw $util.ProtocolError("missing required \'name\'", { instance: message });\n                if (!message.hasOwnProperty("maxNum"))\n                    throw $util.ProtocolError("missing required \'maxNum\'", { instance: message });\n                if (!message.hasOwnProperty("camp"))\n                    throw $util.ProtocolError("missing required \'camp\'", { instance: message });\n                if (!message.hasOwnProperty("avatar"))\n                    throw $util.ProtocolError("missing required \'avatar\'", { instance: message });\n                if (!message.hasOwnProperty("avatarDir"))\n                    throw $util.ProtocolError("missing required \'avatarDir\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a Character message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig.Character\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig.Character} Character\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Character.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a Character message.\n             * @function verify\n             * @memberof op_gameconfig.Character\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Character.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.id))\n                    return "id: integer expected";\n                if (!$util.isString(message.name))\n                    return "name: string expected";\n                if (!$util.isInteger(message.maxNum))\n                    return "maxNum: integer expected";\n                if (!$util.isString(message.camp))\n                    return "camp: string expected";\n                {\n                    var error = $root.op_gameconfig.Avatar.verify(message.avatar);\n                    if (error)\n                        return "avatar." + error;\n                }\n                if (message.attributes != null && message.hasOwnProperty("attributes")) {\n                    if (!Array.isArray(message.attributes))\n                        return "attributes: array expected";\n                    for (var i = 0; i < message.attributes.length; ++i) {\n                        var error = $root.op_gameconfig.Attribute.verify(message.attributes[i]);\n                        if (error)\n                            return "attributes." + error;\n                    }\n                }\n                if (message["package"] != null && message.hasOwnProperty("package")) {\n                    if (!Array.isArray(message["package"]))\n                        return "package: array expected";\n                    for (var i = 0; i < message["package"].length; ++i) {\n                        var error = $root.op_gameconfig.Package.verify(message["package"][i]);\n                        if (error)\n                            return "package." + error;\n                    }\n                }\n                if (message.sceneId != null && message.hasOwnProperty("sceneId"))\n                    if (!$util.isInteger(message.sceneId))\n                        return "sceneId: integer expected";\n                if (message.x != null && message.hasOwnProperty("x"))\n                    if (!$util.isInteger(message.x))\n                        return "x: integer expected";\n                if (message.y != null && message.hasOwnProperty("y"))\n                    if (!$util.isInteger(message.y))\n                        return "y: integer expected";\n                if (message.z != null && message.hasOwnProperty("z"))\n                    if (!$util.isInteger(message.z))\n                        return "z: integer expected";\n                if (message.characterEvent != null && message.hasOwnProperty("characterEvent")) {\n                    var error = $root.op_gameconfig.CharacterEvent.verify(message.characterEvent);\n                    if (error)\n                        return "characterEvent." + error;\n                }\n                if (!$util.isInteger(message.avatarDir))\n                    return "avatarDir: integer expected";\n                if (message.slots != null && message.hasOwnProperty("slots")) {\n                    if (!Array.isArray(message.slots))\n                        return "slots: array expected";\n                    for (var i = 0; i < message.slots.length; ++i) {\n                        var error = $root.op_gameconfig.Slot.verify(message.slots[i]);\n                        if (error)\n                            return "slots." + error;\n                    }\n                }\n                if (message.editorDisplay != null && message.hasOwnProperty("editorDisplay")) {\n                    var error = $root.op_gameconfig.Display.verify(message.editorDisplay);\n                    if (error)\n                        return "editorDisplay." + error;\n                }\n                if (message.editorAnimations != null && message.hasOwnProperty("editorAnimations")) {\n                    if (!Array.isArray(message.editorAnimations))\n                        return "editorAnimations: array expected";\n                    for (var i = 0; i < message.editorAnimations.length; ++i) {\n                        var error = $root.op_gameconfig.Animation.verify(message.editorAnimations[i]);\n                        if (error)\n                            return "editorAnimations." + error;\n                    }\n                }\n                if (message.editorAnimationName != null && message.hasOwnProperty("editorAnimationName"))\n                    if (!$util.isString(message.editorAnimationName))\n                        return "editorAnimationName: string expected";\n                if (message.shops != null && message.hasOwnProperty("shops")) {\n                    if (!Array.isArray(message.shops))\n                        return "shops: array expected";\n                    for (var i = 0; i < message.shops.length; ++i) {\n                        var error = $root.op_gameconfig.Shop.verify(message.shops[i]);\n                        if (error)\n                            return "shops." + error;\n                    }\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a Character message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig.Character\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig.Character} Character\n             */\n            Character.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig.Character)\n                    return object;\n                var message = new $root.op_gameconfig.Character();\n                if (object.id != null)\n                    message.id = object.id | 0;\n                if (object.name != null)\n                    message.name = String(object.name);\n                if (object.maxNum != null)\n                    message.maxNum = object.maxNum | 0;\n                if (object.camp != null)\n                    message.camp = String(object.camp);\n                if (object.avatar != null) {\n                    if (typeof object.avatar !== "object")\n                        throw TypeError(".op_gameconfig.Character.avatar: object expected");\n                    message.avatar = $root.op_gameconfig.Avatar.fromObject(object.avatar);\n                }\n                if (object.attributes) {\n                    if (!Array.isArray(object.attributes))\n                        throw TypeError(".op_gameconfig.Character.attributes: array expected");\n                    message.attributes = [];\n                    for (var i = 0; i < object.attributes.length; ++i) {\n                        if (typeof object.attributes[i] !== "object")\n                            throw TypeError(".op_gameconfig.Character.attributes: object expected");\n                        message.attributes[i] = $root.op_gameconfig.Attribute.fromObject(object.attributes[i]);\n                    }\n                }\n                if (object["package"]) {\n                    if (!Array.isArray(object["package"]))\n                        throw TypeError(".op_gameconfig.Character.package: array expected");\n                    message["package"] = [];\n                    for (var i = 0; i < object["package"].length; ++i) {\n                        if (typeof object["package"][i] !== "object")\n                            throw TypeError(".op_gameconfig.Character.package: object expected");\n                        message["package"][i] = $root.op_gameconfig.Package.fromObject(object["package"][i]);\n                    }\n                }\n                if (object.sceneId != null)\n                    message.sceneId = object.sceneId | 0;\n                if (object.x != null)\n                    message.x = object.x | 0;\n                if (object.y != null)\n                    message.y = object.y | 0;\n                if (object.z != null)\n                    message.z = object.z | 0;\n                if (object.characterEvent != null) {\n                    if (typeof object.characterEvent !== "object")\n                        throw TypeError(".op_gameconfig.Character.characterEvent: object expected");\n                    message.characterEvent = $root.op_gameconfig.CharacterEvent.fromObject(object.characterEvent);\n                }\n                if (object.avatarDir != null)\n                    message.avatarDir = object.avatarDir | 0;\n                if (object.slots) {\n                    if (!Array.isArray(object.slots))\n                        throw TypeError(".op_gameconfig.Character.slots: array expected");\n                    message.slots = [];\n                    for (var i = 0; i < object.slots.length; ++i) {\n                        if (typeof object.slots[i] !== "object")\n                            throw TypeError(".op_gameconfig.Character.slots: object expected");\n                        message.slots[i] = $root.op_gameconfig.Slot.fromObject(object.slots[i]);\n                    }\n                }\n                if (object.editorDisplay != null) {\n                    if (typeof object.editorDisplay !== "object")\n                        throw TypeError(".op_gameconfig.Character.editorDisplay: object expected");\n                    message.editorDisplay = $root.op_gameconfig.Display.fromObject(object.editorDisplay);\n                }\n                if (object.editorAnimations) {\n                    if (!Array.isArray(object.editorAnimations))\n                        throw TypeError(".op_gameconfig.Character.editorAnimations: array expected");\n                    message.editorAnimations = [];\n                    for (var i = 0; i < object.editorAnimations.length; ++i) {\n                        if (typeof object.editorAnimations[i] !== "object")\n                            throw TypeError(".op_gameconfig.Character.editorAnimations: object expected");\n                        message.editorAnimations[i] = $root.op_gameconfig.Animation.fromObject(object.editorAnimations[i]);\n                    }\n                }\n                if (object.editorAnimationName != null)\n                    message.editorAnimationName = String(object.editorAnimationName);\n                if (object.shops) {\n                    if (!Array.isArray(object.shops))\n                        throw TypeError(".op_gameconfig.Character.shops: array expected");\n                    message.shops = [];\n                    for (var i = 0; i < object.shops.length; ++i) {\n                        if (typeof object.shops[i] !== "object")\n                            throw TypeError(".op_gameconfig.Character.shops: object expected");\n                        message.shops[i] = $root.op_gameconfig.Shop.fromObject(object.shops[i]);\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a Character message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig.Character\n             * @static\n             * @param {op_gameconfig.Character} message Character\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Character.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults) {\n                    object.attributes = [];\n                    object["package"] = [];\n                    object.slots = [];\n                    object.editorAnimations = [];\n                    object.shops = [];\n                }\n                if (options.defaults) {\n                    object.id = 0;\n                    object.name = "";\n                    object.maxNum = 20;\n                    object.camp = "";\n                    object.avatar = null;\n                    object.sceneId = 0;\n                    object.x = 0;\n                    object.y = 0;\n                    object.z = 0;\n                    object.characterEvent = null;\n                    object.avatarDir = 0;\n                    object.editorDisplay = null;\n                    object.editorAnimationName = "";\n                }\n                if (message.id != null && message.hasOwnProperty("id"))\n                    object.id = message.id;\n                if (message.name != null && message.hasOwnProperty("name"))\n                    object.name = message.name;\n                if (message.maxNum != null && message.hasOwnProperty("maxNum"))\n                    object.maxNum = message.maxNum;\n                if (message.camp != null && message.hasOwnProperty("camp"))\n                    object.camp = message.camp;\n                if (message.avatar != null && message.hasOwnProperty("avatar"))\n                    object.avatar = $root.op_gameconfig.Avatar.toObject(message.avatar, options);\n                if (message.attributes && message.attributes.length) {\n                    object.attributes = [];\n                    for (var j = 0; j < message.attributes.length; ++j)\n                        object.attributes[j] = $root.op_gameconfig.Attribute.toObject(message.attributes[j], options);\n                }\n                if (message["package"] && message["package"].length) {\n                    object["package"] = [];\n                    for (var j = 0; j < message["package"].length; ++j)\n                        object["package"][j] = $root.op_gameconfig.Package.toObject(message["package"][j], options);\n                }\n                if (message.sceneId != null && message.hasOwnProperty("sceneId"))\n                    object.sceneId = message.sceneId;\n                if (message.x != null && message.hasOwnProperty("x"))\n                    object.x = message.x;\n                if (message.y != null && message.hasOwnProperty("y"))\n                    object.y = message.y;\n                if (message.z != null && message.hasOwnProperty("z"))\n                    object.z = message.z;\n                if (message.characterEvent != null && message.hasOwnProperty("characterEvent"))\n                    object.characterEvent = $root.op_gameconfig.CharacterEvent.toObject(message.characterEvent, options);\n                if (message.avatarDir != null && message.hasOwnProperty("avatarDir"))\n                    object.avatarDir = message.avatarDir;\n                if (message.slots && message.slots.length) {\n                    object.slots = [];\n                    for (var j = 0; j < message.slots.length; ++j)\n                        object.slots[j] = $root.op_gameconfig.Slot.toObject(message.slots[j], options);\n                }\n                if (message.editorDisplay != null && message.hasOwnProperty("editorDisplay"))\n                    object.editorDisplay = $root.op_gameconfig.Display.toObject(message.editorDisplay, options);\n                if (message.editorAnimations && message.editorAnimations.length) {\n                    object.editorAnimations = [];\n                    for (var j = 0; j < message.editorAnimations.length; ++j)\n                        object.editorAnimations[j] = $root.op_gameconfig.Animation.toObject(message.editorAnimations[j], options);\n                }\n                if (message.editorAnimationName != null && message.hasOwnProperty("editorAnimationName"))\n                    object.editorAnimationName = message.editorAnimationName;\n                if (message.shops && message.shops.length) {\n                    object.shops = [];\n                    for (var j = 0; j < message.shops.length; ++j)\n                        object.shops[j] = $root.op_gameconfig.Shop.toObject(message.shops[j], options);\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this Character to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig.Character\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Character.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Character;\n        })();\n    \n        op_gameconfig.GameEvent = (function() {\n    \n            /**\n             * Properties of a GameEvent.\n             * @memberof op_gameconfig\n             * @interface IGameEvent\n             * @property {op_gameconfig.IFunc|null} [onGameCreate] GameEvent onGameCreate\n             * @property {op_gameconfig.IFunc|null} [onGameRun] GameEvent onGameRun\n             * @property {op_gameconfig.IFunc|null} [onGameDestroy] GameEvent onGameDestroy\n             * @property {op_gameconfig.IFunc|null} [onSelectCharacter] GameEvent onSelectCharacter\n             * @property {op_gameconfig.IFunc|null} [onGameEnter] GameEvent onGameEnter\n             * @property {op_gameconfig.IFunc|null} [onGameLeave] GameEvent onGameLeave\n             * @property {op_gameconfig.IFunc|null} [onRightMouseDown] GameEvent onRightMouseDown\n             * @property {op_gameconfig.IFunc|null} [onRightMouseUp] GameEvent onRightMouseUp\n             * @property {op_gameconfig.IFunc|null} [onLeftMouseDown] GameEvent onLeftMouseDown\n             * @property {op_gameconfig.IFunc|null} [onLeftMouseUp] GameEvent onLeftMouseUp\n             * @property {op_gameconfig.IFunc|null} [onMouseOut] GameEvent onMouseOut\n             * @property {op_gameconfig.IFunc|null} [onMouseOver] GameEvent onMouseOver\n             */\n    \n            /**\n             * Constructs a new GameEvent.\n             * @memberof op_gameconfig\n             * @classdesc Represents a GameEvent.\n             * @implements IGameEvent\n             * @constructor\n             * @param {op_gameconfig.IGameEvent=} [properties] Properties to set\n             */\n            function GameEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * GameEvent onGameCreate.\n             * @member {op_gameconfig.IFunc|null|undefined} onGameCreate\n             * @memberof op_gameconfig.GameEvent\n             * @instance\n             */\n            GameEvent.prototype.onGameCreate = null;\n    \n            /**\n             * GameEvent onGameRun.\n             * @member {op_gameconfig.IFunc|null|undefined} onGameRun\n             * @memberof op_gameconfig.GameEvent\n             * @instance\n             */\n            GameEvent.prototype.onGameRun = null;\n    \n            /**\n             * GameEvent onGameDestroy.\n             * @member {op_gameconfig.IFunc|null|undefined} onGameDestroy\n             * @memberof op_gameconfig.GameEvent\n             * @instance\n             */\n            GameEvent.prototype.onGameDestroy = null;\n    \n            /**\n             * GameEvent onSelectCharacter.\n             * @member {op_gameconfig.IFunc|null|undefined} onSelectCharacter\n             * @memberof op_gameconfig.GameEvent\n             * @instance\n             */\n            GameEvent.prototype.onSelectCharacter = null;\n    \n            /**\n             * GameEvent onGameEnter.\n             * @member {op_gameconfig.IFunc|null|undefined} onGameEnter\n             * @memberof op_gameconfig.GameEvent\n             * @instance\n             */\n            GameEvent.prototype.onGameEnter = null;\n    \n            /**\n             * GameEvent onGameLeave.\n             * @member {op_gameconfig.IFunc|null|undefined} onGameLeave\n             * @memberof op_gameconfig.GameEvent\n             * @instance\n             */\n            GameEvent.prototype.onGameLeave = null;\n    \n            /**\n             * GameEvent onRightMouseDown.\n             * @member {op_gameconfig.IFunc|null|undefined} onRightMouseDown\n             * @memberof op_gameconfig.GameEvent\n             * @instance\n             */\n            GameEvent.prototype.onRightMouseDown = null;\n    \n            /**\n             * GameEvent onRightMouseUp.\n             * @member {op_gameconfig.IFunc|null|undefined} onRightMouseUp\n             * @memberof op_gameconfig.GameEvent\n             * @instance\n             */\n            GameEvent.prototype.onRightMouseUp = null;\n    \n            /**\n             * GameEvent onLeftMouseDown.\n             * @member {op_gameconfig.IFunc|null|undefined} onLeftMouseDown\n             * @memberof op_gameconfig.GameEvent\n             * @instance\n             */\n            GameEvent.prototype.onLeftMouseDown = null;\n    \n            /**\n             * GameEvent onLeftMouseUp.\n             * @member {op_gameconfig.IFunc|null|undefined} onLeftMouseUp\n             * @memberof op_gameconfig.GameEvent\n             * @instance\n             */\n            GameEvent.prototype.onLeftMouseUp = null;\n    \n            /**\n             * GameEvent onMouseOut.\n             * @member {op_gameconfig.IFunc|null|undefined} onMouseOut\n             * @memberof op_gameconfig.GameEvent\n             * @instance\n             */\n            GameEvent.prototype.onMouseOut = null;\n    \n            /**\n             * GameEvent onMouseOver.\n             * @member {op_gameconfig.IFunc|null|undefined} onMouseOver\n             * @memberof op_gameconfig.GameEvent\n             * @instance\n             */\n            GameEvent.prototype.onMouseOver = null;\n    \n            /**\n             * Creates a new GameEvent instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig.GameEvent\n             * @static\n             * @param {op_gameconfig.IGameEvent=} [properties] Properties to set\n             * @returns {op_gameconfig.GameEvent} GameEvent instance\n             */\n            GameEvent.create = function create(properties) {\n                return new GameEvent(properties);\n            };\n    \n            /**\n             * Encodes the specified GameEvent message. Does not implicitly {@link op_gameconfig.GameEvent.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig.GameEvent\n             * @static\n             * @param {op_gameconfig.IGameEvent} message GameEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            GameEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.onGameCreate != null && message.hasOwnProperty("onGameCreate"))\n                    $root.op_gameconfig.Func.encode(message.onGameCreate, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.onGameRun != null && message.hasOwnProperty("onGameRun"))\n                    $root.op_gameconfig.Func.encode(message.onGameRun, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                if (message.onGameDestroy != null && message.hasOwnProperty("onGameDestroy"))\n                    $root.op_gameconfig.Func.encode(message.onGameDestroy, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                if (message.onSelectCharacter != null && message.hasOwnProperty("onSelectCharacter"))\n                    $root.op_gameconfig.Func.encode(message.onSelectCharacter, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n                if (message.onGameEnter != null && message.hasOwnProperty("onGameEnter"))\n                    $root.op_gameconfig.Func.encode(message.onGameEnter, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n                if (message.onGameLeave != null && message.hasOwnProperty("onGameLeave"))\n                    $root.op_gameconfig.Func.encode(message.onGameLeave, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n                if (message.onRightMouseDown != null && message.hasOwnProperty("onRightMouseDown"))\n                    $root.op_gameconfig.Func.encode(message.onRightMouseDown, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n                if (message.onRightMouseUp != null && message.hasOwnProperty("onRightMouseUp"))\n                    $root.op_gameconfig.Func.encode(message.onRightMouseUp, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n                if (message.onLeftMouseDown != null && message.hasOwnProperty("onLeftMouseDown"))\n                    $root.op_gameconfig.Func.encode(message.onLeftMouseDown, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();\n                if (message.onLeftMouseUp != null && message.hasOwnProperty("onLeftMouseUp"))\n                    $root.op_gameconfig.Func.encode(message.onLeftMouseUp, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n                if (message.onMouseOut != null && message.hasOwnProperty("onMouseOut"))\n                    $root.op_gameconfig.Func.encode(message.onMouseOut, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n                if (message.onMouseOver != null && message.hasOwnProperty("onMouseOver"))\n                    $root.op_gameconfig.Func.encode(message.onMouseOver, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified GameEvent message, length delimited. Does not implicitly {@link op_gameconfig.GameEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig.GameEvent\n             * @static\n             * @param {op_gameconfig.IGameEvent} message GameEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            GameEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a GameEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig.GameEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig.GameEvent} GameEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            GameEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig.GameEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.onGameCreate = $root.op_gameconfig.Func.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        message.onGameRun = $root.op_gameconfig.Func.decode(reader, reader.uint32());\n                        break;\n                    case 3:\n                        message.onGameDestroy = $root.op_gameconfig.Func.decode(reader, reader.uint32());\n                        break;\n                    case 4:\n                        message.onSelectCharacter = $root.op_gameconfig.Func.decode(reader, reader.uint32());\n                        break;\n                    case 5:\n                        message.onGameEnter = $root.op_gameconfig.Func.decode(reader, reader.uint32());\n                        break;\n                    case 6:\n                        message.onGameLeave = $root.op_gameconfig.Func.decode(reader, reader.uint32());\n                        break;\n                    case 7:\n                        message.onRightMouseDown = $root.op_gameconfig.Func.decode(reader, reader.uint32());\n                        break;\n                    case 8:\n                        message.onRightMouseUp = $root.op_gameconfig.Func.decode(reader, reader.uint32());\n                        break;\n                    case 9:\n                        message.onLeftMouseDown = $root.op_gameconfig.Func.decode(reader, reader.uint32());\n                        break;\n                    case 10:\n                        message.onLeftMouseUp = $root.op_gameconfig.Func.decode(reader, reader.uint32());\n                        break;\n                    case 11:\n                        message.onMouseOut = $root.op_gameconfig.Func.decode(reader, reader.uint32());\n                        break;\n                    case 12:\n                        message.onMouseOver = $root.op_gameconfig.Func.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a GameEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig.GameEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig.GameEvent} GameEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            GameEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a GameEvent message.\n             * @function verify\n             * @memberof op_gameconfig.GameEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            GameEvent.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.onGameCreate != null && message.hasOwnProperty("onGameCreate")) {\n                    var error = $root.op_gameconfig.Func.verify(message.onGameCreate);\n                    if (error)\n                        return "onGameCreate." + error;\n                }\n                if (message.onGameRun != null && message.hasOwnProperty("onGameRun")) {\n                    var error = $root.op_gameconfig.Func.verify(message.onGameRun);\n                    if (error)\n                        return "onGameRun." + error;\n                }\n                if (message.onGameDestroy != null && message.hasOwnProperty("onGameDestroy")) {\n                    var error = $root.op_gameconfig.Func.verify(message.onGameDestroy);\n                    if (error)\n                        return "onGameDestroy." + error;\n                }\n                if (message.onSelectCharacter != null && message.hasOwnProperty("onSelectCharacter")) {\n                    var error = $root.op_gameconfig.Func.verify(message.onSelectCharacter);\n                    if (error)\n                        return "onSelectCharacter." + error;\n                }\n                if (message.onGameEnter != null && message.hasOwnProperty("onGameEnter")) {\n                    var error = $root.op_gameconfig.Func.verify(message.onGameEnter);\n                    if (error)\n                        return "onGameEnter." + error;\n                }\n                if (message.onGameLeave != null && message.hasOwnProperty("onGameLeave")) {\n                    var error = $root.op_gameconfig.Func.verify(message.onGameLeave);\n                    if (error)\n                        return "onGameLeave." + error;\n                }\n                if (message.onRightMouseDown != null && message.hasOwnProperty("onRightMouseDown")) {\n                    var error = $root.op_gameconfig.Func.verify(message.onRightMouseDown);\n                    if (error)\n                        return "onRightMouseDown." + error;\n                }\n                if (message.onRightMouseUp != null && message.hasOwnProperty("onRightMouseUp")) {\n                    var error = $root.op_gameconfig.Func.verify(message.onRightMouseUp);\n                    if (error)\n                        return "onRightMouseUp." + error;\n                }\n                if (message.onLeftMouseDown != null && message.hasOwnProperty("onLeftMouseDown")) {\n                    var error = $root.op_gameconfig.Func.verify(message.onLeftMouseDown);\n                    if (error)\n                        return "onLeftMouseDown." + error;\n                }\n                if (message.onLeftMouseUp != null && message.hasOwnProperty("onLeftMouseUp")) {\n                    var error = $root.op_gameconfig.Func.verify(message.onLeftMouseUp);\n                    if (error)\n                        return "onLeftMouseUp." + error;\n                }\n                if (message.onMouseOut != null && message.hasOwnProperty("onMouseOut")) {\n                    var error = $root.op_gameconfig.Func.verify(message.onMouseOut);\n                    if (error)\n                        return "onMouseOut." + error;\n                }\n                if (message.onMouseOver != null && message.hasOwnProperty("onMouseOver")) {\n                    var error = $root.op_gameconfig.Func.verify(message.onMouseOver);\n                    if (error)\n                        return "onMouseOver." + error;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a GameEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig.GameEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig.GameEvent} GameEvent\n             */\n            GameEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig.GameEvent)\n                    return object;\n                var message = new $root.op_gameconfig.GameEvent();\n                if (object.onGameCreate != null) {\n                    if (typeof object.onGameCreate !== "object")\n                        throw TypeError(".op_gameconfig.GameEvent.onGameCreate: object expected");\n                    message.onGameCreate = $root.op_gameconfig.Func.fromObject(object.onGameCreate);\n                }\n                if (object.onGameRun != null) {\n                    if (typeof object.onGameRun !== "object")\n                        throw TypeError(".op_gameconfig.GameEvent.onGameRun: object expected");\n                    message.onGameRun = $root.op_gameconfig.Func.fromObject(object.onGameRun);\n                }\n                if (object.onGameDestroy != null) {\n                    if (typeof object.onGameDestroy !== "object")\n                        throw TypeError(".op_gameconfig.GameEvent.onGameDestroy: object expected");\n                    message.onGameDestroy = $root.op_gameconfig.Func.fromObject(object.onGameDestroy);\n                }\n                if (object.onSelectCharacter != null) {\n                    if (typeof object.onSelectCharacter !== "object")\n                        throw TypeError(".op_gameconfig.GameEvent.onSelectCharacter: object expected");\n                    message.onSelectCharacter = $root.op_gameconfig.Func.fromObject(object.onSelectCharacter);\n                }\n                if (object.onGameEnter != null) {\n                    if (typeof object.onGameEnter !== "object")\n                        throw TypeError(".op_gameconfig.GameEvent.onGameEnter: object expected");\n                    message.onGameEnter = $root.op_gameconfig.Func.fromObject(object.onGameEnter);\n                }\n                if (object.onGameLeave != null) {\n                    if (typeof object.onGameLeave !== "object")\n                        throw TypeError(".op_gameconfig.GameEvent.onGameLeave: object expected");\n                    message.onGameLeave = $root.op_gameconfig.Func.fromObject(object.onGameLeave);\n                }\n                if (object.onRightMouseDown != null) {\n                    if (typeof object.onRightMouseDown !== "object")\n                        throw TypeError(".op_gameconfig.GameEvent.onRightMouseDown: object expected");\n                    message.onRightMouseDown = $root.op_gameconfig.Func.fromObject(object.onRightMouseDown);\n                }\n                if (object.onRightMouseUp != null) {\n                    if (typeof object.onRightMouseUp !== "object")\n                        throw TypeError(".op_gameconfig.GameEvent.onRightMouseUp: object expected");\n                    message.onRightMouseUp = $root.op_gameconfig.Func.fromObject(object.onRightMouseUp);\n                }\n                if (object.onLeftMouseDown != null) {\n                    if (typeof object.onLeftMouseDown !== "object")\n                        throw TypeError(".op_gameconfig.GameEvent.onLeftMouseDown: object expected");\n                    message.onLeftMouseDown = $root.op_gameconfig.Func.fromObject(object.onLeftMouseDown);\n                }\n                if (object.onLeftMouseUp != null) {\n                    if (typeof object.onLeftMouseUp !== "object")\n                        throw TypeError(".op_gameconfig.GameEvent.onLeftMouseUp: object expected");\n                    message.onLeftMouseUp = $root.op_gameconfig.Func.fromObject(object.onLeftMouseUp);\n                }\n                if (object.onMouseOut != null) {\n                    if (typeof object.onMouseOut !== "object")\n                        throw TypeError(".op_gameconfig.GameEvent.onMouseOut: object expected");\n                    message.onMouseOut = $root.op_gameconfig.Func.fromObject(object.onMouseOut);\n                }\n                if (object.onMouseOver != null) {\n                    if (typeof object.onMouseOver !== "object")\n                        throw TypeError(".op_gameconfig.GameEvent.onMouseOver: object expected");\n                    message.onMouseOver = $root.op_gameconfig.Func.fromObject(object.onMouseOver);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a GameEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig.GameEvent\n             * @static\n             * @param {op_gameconfig.GameEvent} message GameEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            GameEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.onGameCreate = null;\n                    object.onGameRun = null;\n                    object.onGameDestroy = null;\n                    object.onSelectCharacter = null;\n                    object.onGameEnter = null;\n                    object.onGameLeave = null;\n                    object.onRightMouseDown = null;\n                    object.onRightMouseUp = null;\n                    object.onLeftMouseDown = null;\n                    object.onLeftMouseUp = null;\n                    object.onMouseOut = null;\n                    object.onMouseOver = null;\n                }\n                if (message.onGameCreate != null && message.hasOwnProperty("onGameCreate"))\n                    object.onGameCreate = $root.op_gameconfig.Func.toObject(message.onGameCreate, options);\n                if (message.onGameRun != null && message.hasOwnProperty("onGameRun"))\n                    object.onGameRun = $root.op_gameconfig.Func.toObject(message.onGameRun, options);\n                if (message.onGameDestroy != null && message.hasOwnProperty("onGameDestroy"))\n                    object.onGameDestroy = $root.op_gameconfig.Func.toObject(message.onGameDestroy, options);\n                if (message.onSelectCharacter != null && message.hasOwnProperty("onSelectCharacter"))\n                    object.onSelectCharacter = $root.op_gameconfig.Func.toObject(message.onSelectCharacter, options);\n                if (message.onGameEnter != null && message.hasOwnProperty("onGameEnter"))\n                    object.onGameEnter = $root.op_gameconfig.Func.toObject(message.onGameEnter, options);\n                if (message.onGameLeave != null && message.hasOwnProperty("onGameLeave"))\n                    object.onGameLeave = $root.op_gameconfig.Func.toObject(message.onGameLeave, options);\n                if (message.onRightMouseDown != null && message.hasOwnProperty("onRightMouseDown"))\n                    object.onRightMouseDown = $root.op_gameconfig.Func.toObject(message.onRightMouseDown, options);\n                if (message.onRightMouseUp != null && message.hasOwnProperty("onRightMouseUp"))\n                    object.onRightMouseUp = $root.op_gameconfig.Func.toObject(message.onRightMouseUp, options);\n                if (message.onLeftMouseDown != null && message.hasOwnProperty("onLeftMouseDown"))\n                    object.onLeftMouseDown = $root.op_gameconfig.Func.toObject(message.onLeftMouseDown, options);\n                if (message.onLeftMouseUp != null && message.hasOwnProperty("onLeftMouseUp"))\n                    object.onLeftMouseUp = $root.op_gameconfig.Func.toObject(message.onLeftMouseUp, options);\n                if (message.onMouseOut != null && message.hasOwnProperty("onMouseOut"))\n                    object.onMouseOut = $root.op_gameconfig.Func.toObject(message.onMouseOut, options);\n                if (message.onMouseOver != null && message.hasOwnProperty("onMouseOver"))\n                    object.onMouseOver = $root.op_gameconfig.Func.toObject(message.onMouseOver, options);\n                return object;\n            };\n    \n            /**\n             * Converts this GameEvent to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig.GameEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            GameEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return GameEvent;\n        })();\n    \n        op_gameconfig.Game = (function() {\n    \n            /**\n             * Properties of a Game.\n             * @memberof op_gameconfig\n             * @interface IGame\n             * @property {string} gameId Game gameId\n             * @property {string} name Game name\n             * @property {Array.<op_gameconfig.IScene>|null} [scenes] Game scenes\n             * @property {Array.<op_gameconfig.ICharacter>|null} [characters] Game characters\n             * @property {Array.<string>|null} [resourceRoot] Game resourceRoot\n             * @property {Array.<op_gameconfig.ITerrainType>|null} [terrain_Types] Game terrain_Types\n             * @property {Array.<op_gameconfig.IElement_type>|null} [element_Types] Game element_Types\n             * @property {Array.<op_gameconfig.IItemType>|null} [item_Types] Game item_Types\n             * @property {op_gameconfig.IGameEvent|null} [gameEvent] Game gameEvent\n             * @property {Array.<op_gameconfig.IAvatarBackbone>|null} [avatarBackbone] Game avatarBackbone\n             * @property {Array.<op_gameconfig.IAttribute>|null} [attributes] Game attributes\n             */\n    \n            /**\n             * Constructs a new Game.\n             * @memberof op_gameconfig\n             * @classdesc Represents a Game.\n             * @implements IGame\n             * @constructor\n             * @param {op_gameconfig.IGame=} [properties] Properties to set\n             */\n            function Game(properties) {\n                this.scenes = [];\n                this.characters = [];\n                this.resourceRoot = [];\n                this.terrain_Types = [];\n                this.element_Types = [];\n                this.item_Types = [];\n                this.avatarBackbone = [];\n                this.attributes = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Game gameId.\n             * @member {string} gameId\n             * @memberof op_gameconfig.Game\n             * @instance\n             */\n            Game.prototype.gameId = "";\n    \n            /**\n             * Game name.\n             * @member {string} name\n             * @memberof op_gameconfig.Game\n             * @instance\n             */\n            Game.prototype.name = "";\n    \n            /**\n             * Game scenes.\n             * @member {Array.<op_gameconfig.IScene>} scenes\n             * @memberof op_gameconfig.Game\n             * @instance\n             */\n            Game.prototype.scenes = $util.emptyArray;\n    \n            /**\n             * Game characters.\n             * @member {Array.<op_gameconfig.ICharacter>} characters\n             * @memberof op_gameconfig.Game\n             * @instance\n             */\n            Game.prototype.characters = $util.emptyArray;\n    \n            /**\n             * Game resourceRoot.\n             * @member {Array.<string>} resourceRoot\n             * @memberof op_gameconfig.Game\n             * @instance\n             */\n            Game.prototype.resourceRoot = $util.emptyArray;\n    \n            /**\n             * Game terrain_Types.\n             * @member {Array.<op_gameconfig.ITerrainType>} terrain_Types\n             * @memberof op_gameconfig.Game\n             * @instance\n             */\n            Game.prototype.terrain_Types = $util.emptyArray;\n    \n            /**\n             * Game element_Types.\n             * @member {Array.<op_gameconfig.IElement_type>} element_Types\n             * @memberof op_gameconfig.Game\n             * @instance\n             */\n            Game.prototype.element_Types = $util.emptyArray;\n    \n            /**\n             * Game item_Types.\n             * @member {Array.<op_gameconfig.IItemType>} item_Types\n             * @memberof op_gameconfig.Game\n             * @instance\n             */\n            Game.prototype.item_Types = $util.emptyArray;\n    \n            /**\n             * Game gameEvent.\n             * @member {op_gameconfig.IGameEvent|null|undefined} gameEvent\n             * @memberof op_gameconfig.Game\n             * @instance\n             */\n            Game.prototype.gameEvent = null;\n    \n            /**\n             * Game avatarBackbone.\n             * @member {Array.<op_gameconfig.IAvatarBackbone>} avatarBackbone\n             * @memberof op_gameconfig.Game\n             * @instance\n             */\n            Game.prototype.avatarBackbone = $util.emptyArray;\n    \n            /**\n             * Game attributes.\n             * @member {Array.<op_gameconfig.IAttribute>} attributes\n             * @memberof op_gameconfig.Game\n             * @instance\n             */\n            Game.prototype.attributes = $util.emptyArray;\n    \n            /**\n             * Creates a new Game instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig.Game\n             * @static\n             * @param {op_gameconfig.IGame=} [properties] Properties to set\n             * @returns {op_gameconfig.Game} Game instance\n             */\n            Game.create = function create(properties) {\n                return new Game(properties);\n            };\n    \n            /**\n             * Encodes the specified Game message. Does not implicitly {@link op_gameconfig.Game.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig.Game\n             * @static\n             * @param {op_gameconfig.IGame} message Game message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Game.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.gameId);\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);\n                if (message.scenes != null && message.scenes.length)\n                    for (var i = 0; i < message.scenes.length; ++i)\n                        $root.op_gameconfig.Scene.encode(message.scenes[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n                if (message.characters != null && message.characters.length)\n                    for (var i = 0; i < message.characters.length; ++i)\n                        $root.op_gameconfig.Character.encode(message.characters[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n                if (message.resourceRoot != null && message.resourceRoot.length)\n                    for (var i = 0; i < message.resourceRoot.length; ++i)\n                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.resourceRoot[i]);\n                if (message.terrain_Types != null && message.terrain_Types.length)\n                    for (var i = 0; i < message.terrain_Types.length; ++i)\n                        $root.op_gameconfig.TerrainType.encode(message.terrain_Types[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n                if (message.element_Types != null && message.element_Types.length)\n                    for (var i = 0; i < message.element_Types.length; ++i)\n                        $root.op_gameconfig.Element_type.encode(message.element_Types[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();\n                if (message.item_Types != null && message.item_Types.length)\n                    for (var i = 0; i < message.item_Types.length; ++i)\n                        $root.op_gameconfig.ItemType.encode(message.item_Types[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n                if (message.gameEvent != null && message.hasOwnProperty("gameEvent"))\n                    $root.op_gameconfig.GameEvent.encode(message.gameEvent, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n                if (message.avatarBackbone != null && message.avatarBackbone.length)\n                    for (var i = 0; i < message.avatarBackbone.length; ++i)\n                        $root.op_gameconfig.AvatarBackbone.encode(message.avatarBackbone[i], writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();\n                if (message.attributes != null && message.attributes.length)\n                    for (var i = 0; i < message.attributes.length; ++i)\n                        $root.op_gameconfig.Attribute.encode(message.attributes[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Game message, length delimited. Does not implicitly {@link op_gameconfig.Game.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig.Game\n             * @static\n             * @param {op_gameconfig.IGame} message Game message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Game.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a Game message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig.Game\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig.Game} Game\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Game.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig.Game();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.gameId = reader.string();\n                        break;\n                    case 2:\n                        message.name = reader.string();\n                        break;\n                    case 5:\n                        if (!(message.scenes && message.scenes.length))\n                            message.scenes = [];\n                        message.scenes.push($root.op_gameconfig.Scene.decode(reader, reader.uint32()));\n                        break;\n                    case 6:\n                        if (!(message.characters && message.characters.length))\n                            message.characters = [];\n                        message.characters.push($root.op_gameconfig.Character.decode(reader, reader.uint32()));\n                        break;\n                    case 7:\n                        if (!(message.resourceRoot && message.resourceRoot.length))\n                            message.resourceRoot = [];\n                        message.resourceRoot.push(reader.string());\n                        break;\n                    case 8:\n                        if (!(message.terrain_Types && message.terrain_Types.length))\n                            message.terrain_Types = [];\n                        message.terrain_Types.push($root.op_gameconfig.TerrainType.decode(reader, reader.uint32()));\n                        break;\n                    case 9:\n                        if (!(message.element_Types && message.element_Types.length))\n                            message.element_Types = [];\n                        message.element_Types.push($root.op_gameconfig.Element_type.decode(reader, reader.uint32()));\n                        break;\n                    case 10:\n                        if (!(message.item_Types && message.item_Types.length))\n                            message.item_Types = [];\n                        message.item_Types.push($root.op_gameconfig.ItemType.decode(reader, reader.uint32()));\n                        break;\n                    case 11:\n                        message.gameEvent = $root.op_gameconfig.GameEvent.decode(reader, reader.uint32());\n                        break;\n                    case 12:\n                        if (!(message.avatarBackbone && message.avatarBackbone.length))\n                            message.avatarBackbone = [];\n                        message.avatarBackbone.push($root.op_gameconfig.AvatarBackbone.decode(reader, reader.uint32()));\n                        break;\n                    case 13:\n                        if (!(message.attributes && message.attributes.length))\n                            message.attributes = [];\n                        message.attributes.push($root.op_gameconfig.Attribute.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("gameId"))\n                    throw $util.ProtocolError("missing required \'gameId\'", { instance: message });\n                if (!message.hasOwnProperty("name"))\n                    throw $util.ProtocolError("missing required \'name\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a Game message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig.Game\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig.Game} Game\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Game.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a Game message.\n             * @function verify\n             * @memberof op_gameconfig.Game\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Game.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.gameId))\n                    return "gameId: string expected";\n                if (!$util.isString(message.name))\n                    return "name: string expected";\n                if (message.scenes != null && message.hasOwnProperty("scenes")) {\n                    if (!Array.isArray(message.scenes))\n                        return "scenes: array expected";\n                    for (var i = 0; i < message.scenes.length; ++i) {\n                        var error = $root.op_gameconfig.Scene.verify(message.scenes[i]);\n                        if (error)\n                            return "scenes." + error;\n                    }\n                }\n                if (message.characters != null && message.hasOwnProperty("characters")) {\n                    if (!Array.isArray(message.characters))\n                        return "characters: array expected";\n                    for (var i = 0; i < message.characters.length; ++i) {\n                        var error = $root.op_gameconfig.Character.verify(message.characters[i]);\n                        if (error)\n                            return "characters." + error;\n                    }\n                }\n                if (message.resourceRoot != null && message.hasOwnProperty("resourceRoot")) {\n                    if (!Array.isArray(message.resourceRoot))\n                        return "resourceRoot: array expected";\n                    for (var i = 0; i < message.resourceRoot.length; ++i)\n                        if (!$util.isString(message.resourceRoot[i]))\n                            return "resourceRoot: string[] expected";\n                }\n                if (message.terrain_Types != null && message.hasOwnProperty("terrain_Types")) {\n                    if (!Array.isArray(message.terrain_Types))\n                        return "terrain_Types: array expected";\n                    for (var i = 0; i < message.terrain_Types.length; ++i) {\n                        var error = $root.op_gameconfig.TerrainType.verify(message.terrain_Types[i]);\n                        if (error)\n                            return "terrain_Types." + error;\n                    }\n                }\n                if (message.element_Types != null && message.hasOwnProperty("element_Types")) {\n                    if (!Array.isArray(message.element_Types))\n                        return "element_Types: array expected";\n                    for (var i = 0; i < message.element_Types.length; ++i) {\n                        var error = $root.op_gameconfig.Element_type.verify(message.element_Types[i]);\n                        if (error)\n                            return "element_Types." + error;\n                    }\n                }\n                if (message.item_Types != null && message.hasOwnProperty("item_Types")) {\n                    if (!Array.isArray(message.item_Types))\n                        return "item_Types: array expected";\n                    for (var i = 0; i < message.item_Types.length; ++i) {\n                        var error = $root.op_gameconfig.ItemType.verify(message.item_Types[i]);\n                        if (error)\n                            return "item_Types." + error;\n                    }\n                }\n                if (message.gameEvent != null && message.hasOwnProperty("gameEvent")) {\n                    var error = $root.op_gameconfig.GameEvent.verify(message.gameEvent);\n                    if (error)\n                        return "gameEvent." + error;\n                }\n                if (message.avatarBackbone != null && message.hasOwnProperty("avatarBackbone")) {\n                    if (!Array.isArray(message.avatarBackbone))\n                        return "avatarBackbone: array expected";\n                    for (var i = 0; i < message.avatarBackbone.length; ++i) {\n                        var error = $root.op_gameconfig.AvatarBackbone.verify(message.avatarBackbone[i]);\n                        if (error)\n                            return "avatarBackbone." + error;\n                    }\n                }\n                if (message.attributes != null && message.hasOwnProperty("attributes")) {\n                    if (!Array.isArray(message.attributes))\n                        return "attributes: array expected";\n                    for (var i = 0; i < message.attributes.length; ++i) {\n                        var error = $root.op_gameconfig.Attribute.verify(message.attributes[i]);\n                        if (error)\n                            return "attributes." + error;\n                    }\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a Game message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig.Game\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig.Game} Game\n             */\n            Game.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig.Game)\n                    return object;\n                var message = new $root.op_gameconfig.Game();\n                if (object.gameId != null)\n                    message.gameId = String(object.gameId);\n                if (object.name != null)\n                    message.name = String(object.name);\n                if (object.scenes) {\n                    if (!Array.isArray(object.scenes))\n                        throw TypeError(".op_gameconfig.Game.scenes: array expected");\n                    message.scenes = [];\n                    for (var i = 0; i < object.scenes.length; ++i) {\n                        if (typeof object.scenes[i] !== "object")\n                            throw TypeError(".op_gameconfig.Game.scenes: object expected");\n                        message.scenes[i] = $root.op_gameconfig.Scene.fromObject(object.scenes[i]);\n                    }\n                }\n                if (object.characters) {\n                    if (!Array.isArray(object.characters))\n                        throw TypeError(".op_gameconfig.Game.characters: array expected");\n                    message.characters = [];\n                    for (var i = 0; i < object.characters.length; ++i) {\n                        if (typeof object.characters[i] !== "object")\n                            throw TypeError(".op_gameconfig.Game.characters: object expected");\n                        message.characters[i] = $root.op_gameconfig.Character.fromObject(object.characters[i]);\n                    }\n                }\n                if (object.resourceRoot) {\n                    if (!Array.isArray(object.resourceRoot))\n                        throw TypeError(".op_gameconfig.Game.resourceRoot: array expected");\n                    message.resourceRoot = [];\n                    for (var i = 0; i < object.resourceRoot.length; ++i)\n                        message.resourceRoot[i] = String(object.resourceRoot[i]);\n                }\n                if (object.terrain_Types) {\n                    if (!Array.isArray(object.terrain_Types))\n                        throw TypeError(".op_gameconfig.Game.terrain_Types: array expected");\n                    message.terrain_Types = [];\n                    for (var i = 0; i < object.terrain_Types.length; ++i) {\n                        if (typeof object.terrain_Types[i] !== "object")\n                            throw TypeError(".op_gameconfig.Game.terrain_Types: object expected");\n                        message.terrain_Types[i] = $root.op_gameconfig.TerrainType.fromObject(object.terrain_Types[i]);\n                    }\n                }\n                if (object.element_Types) {\n                    if (!Array.isArray(object.element_Types))\n                        throw TypeError(".op_gameconfig.Game.element_Types: array expected");\n                    message.element_Types = [];\n                    for (var i = 0; i < object.element_Types.length; ++i) {\n                        if (typeof object.element_Types[i] !== "object")\n                            throw TypeError(".op_gameconfig.Game.element_Types: object expected");\n                        message.element_Types[i] = $root.op_gameconfig.Element_type.fromObject(object.element_Types[i]);\n                    }\n                }\n                if (object.item_Types) {\n                    if (!Array.isArray(object.item_Types))\n                        throw TypeError(".op_gameconfig.Game.item_Types: array expected");\n                    message.item_Types = [];\n                    for (var i = 0; i < object.item_Types.length; ++i) {\n                        if (typeof object.item_Types[i] !== "object")\n                            throw TypeError(".op_gameconfig.Game.item_Types: object expected");\n                        message.item_Types[i] = $root.op_gameconfig.ItemType.fromObject(object.item_Types[i]);\n                    }\n                }\n                if (object.gameEvent != null) {\n                    if (typeof object.gameEvent !== "object")\n                        throw TypeError(".op_gameconfig.Game.gameEvent: object expected");\n                    message.gameEvent = $root.op_gameconfig.GameEvent.fromObject(object.gameEvent);\n                }\n                if (object.avatarBackbone) {\n                    if (!Array.isArray(object.avatarBackbone))\n                        throw TypeError(".op_gameconfig.Game.avatarBackbone: array expected");\n                    message.avatarBackbone = [];\n                    for (var i = 0; i < object.avatarBackbone.length; ++i) {\n                        if (typeof object.avatarBackbone[i] !== "object")\n                            throw TypeError(".op_gameconfig.Game.avatarBackbone: object expected");\n                        message.avatarBackbone[i] = $root.op_gameconfig.AvatarBackbone.fromObject(object.avatarBackbone[i]);\n                    }\n                }\n                if (object.attributes) {\n                    if (!Array.isArray(object.attributes))\n                        throw TypeError(".op_gameconfig.Game.attributes: array expected");\n                    message.attributes = [];\n                    for (var i = 0; i < object.attributes.length; ++i) {\n                        if (typeof object.attributes[i] !== "object")\n                            throw TypeError(".op_gameconfig.Game.attributes: object expected");\n                        message.attributes[i] = $root.op_gameconfig.Attribute.fromObject(object.attributes[i]);\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a Game message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig.Game\n             * @static\n             * @param {op_gameconfig.Game} message Game\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Game.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults) {\n                    object.scenes = [];\n                    object.characters = [];\n                    object.resourceRoot = [];\n                    object.terrain_Types = [];\n                    object.element_Types = [];\n                    object.item_Types = [];\n                    object.avatarBackbone = [];\n                    object.attributes = [];\n                }\n                if (options.defaults) {\n                    object.gameId = "";\n                    object.name = "";\n                    object.gameEvent = null;\n                }\n                if (message.gameId != null && message.hasOwnProperty("gameId"))\n                    object.gameId = message.gameId;\n                if (message.name != null && message.hasOwnProperty("name"))\n                    object.name = message.name;\n                if (message.scenes && message.scenes.length) {\n                    object.scenes = [];\n                    for (var j = 0; j < message.scenes.length; ++j)\n                        object.scenes[j] = $root.op_gameconfig.Scene.toObject(message.scenes[j], options);\n                }\n                if (message.characters && message.characters.length) {\n                    object.characters = [];\n                    for (var j = 0; j < message.characters.length; ++j)\n                        object.characters[j] = $root.op_gameconfig.Character.toObject(message.characters[j], options);\n                }\n                if (message.resourceRoot && message.resourceRoot.length) {\n                    object.resourceRoot = [];\n                    for (var j = 0; j < message.resourceRoot.length; ++j)\n                        object.resourceRoot[j] = message.resourceRoot[j];\n                }\n                if (message.terrain_Types && message.terrain_Types.length) {\n                    object.terrain_Types = [];\n                    for (var j = 0; j < message.terrain_Types.length; ++j)\n                        object.terrain_Types[j] = $root.op_gameconfig.TerrainType.toObject(message.terrain_Types[j], options);\n                }\n                if (message.element_Types && message.element_Types.length) {\n                    object.element_Types = [];\n                    for (var j = 0; j < message.element_Types.length; ++j)\n                        object.element_Types[j] = $root.op_gameconfig.Element_type.toObject(message.element_Types[j], options);\n                }\n                if (message.item_Types && message.item_Types.length) {\n                    object.item_Types = [];\n                    for (var j = 0; j < message.item_Types.length; ++j)\n                        object.item_Types[j] = $root.op_gameconfig.ItemType.toObject(message.item_Types[j], options);\n                }\n                if (message.gameEvent != null && message.hasOwnProperty("gameEvent"))\n                    object.gameEvent = $root.op_gameconfig.GameEvent.toObject(message.gameEvent, options);\n                if (message.avatarBackbone && message.avatarBackbone.length) {\n                    object.avatarBackbone = [];\n                    for (var j = 0; j < message.avatarBackbone.length; ++j)\n                        object.avatarBackbone[j] = $root.op_gameconfig.AvatarBackbone.toObject(message.avatarBackbone[j], options);\n                }\n                if (message.attributes && message.attributes.length) {\n                    object.attributes = [];\n                    for (var j = 0; j < message.attributes.length; ++j)\n                        object.attributes[j] = $root.op_gameconfig.Attribute.toObject(message.attributes[j], options);\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this Game to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig.Game\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Game.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Game;\n        })();\n    \n        return op_gameconfig;\n    })();\n    \n    $root.op_gameconfig_01 = (function() {\n    \n        /**\n         * Namespace op_gameconfig_01.\n         * @exports op_gameconfig_01\n         * @namespace\n         */\n        var op_gameconfig_01 = {};\n    \n        op_gameconfig_01.Access = (function() {\n    \n            /**\n             * Properties of an Access.\n             * @memberof op_gameconfig_01\n             * @interface IAccess\n             * @property {op_gameconfig_01.INode} node Access node\n             * @property {op_def.AccessEnum} access Access access\n             */\n    \n            /**\n             * Constructs a new Access.\n             * @memberof op_gameconfig_01\n             * @classdesc Represents an Access.\n             * @implements IAccess\n             * @constructor\n             * @param {op_gameconfig_01.IAccess=} [properties] Properties to set\n             */\n            function Access(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Access node.\n             * @member {op_gameconfig_01.INode} node\n             * @memberof op_gameconfig_01.Access\n             * @instance\n             */\n            Access.prototype.node = null;\n    \n            /**\n             * Access access.\n             * @member {op_def.AccessEnum} access\n             * @memberof op_gameconfig_01.Access\n             * @instance\n             */\n            Access.prototype.access = 1;\n    \n            /**\n             * Creates a new Access instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig_01.Access\n             * @static\n             * @param {op_gameconfig_01.IAccess=} [properties] Properties to set\n             * @returns {op_gameconfig_01.Access} Access instance\n             */\n            Access.create = function create(properties) {\n                return new Access(properties);\n            };\n    \n            /**\n             * Encodes the specified Access message. Does not implicitly {@link op_gameconfig_01.Access.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig_01.Access\n             * @static\n             * @param {op_gameconfig_01.IAccess} message Access message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Access.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                $root.op_gameconfig_01.Node.encode(message.node, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.access);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Access message, length delimited. Does not implicitly {@link op_gameconfig_01.Access.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig_01.Access\n             * @static\n             * @param {op_gameconfig_01.IAccess} message Access message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Access.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes an Access message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig_01.Access\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig_01.Access} Access\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Access.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig_01.Access();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.node = $root.op_gameconfig_01.Node.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        message.access = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("node"))\n                    throw $util.ProtocolError("missing required \'node\'", { instance: message });\n                if (!message.hasOwnProperty("access"))\n                    throw $util.ProtocolError("missing required \'access\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes an Access message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig_01.Access\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig_01.Access} Access\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Access.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies an Access message.\n             * @function verify\n             * @memberof op_gameconfig_01.Access\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Access.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                {\n                    var error = $root.op_gameconfig_01.Node.verify(message.node);\n                    if (error)\n                        return "node." + error;\n                }\n                switch (message.access) {\n                default:\n                    return "access: enum value expected";\n                case 1:\n                case 2:\n                case 65535:\n                    break;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates an Access message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig_01.Access\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig_01.Access} Access\n             */\n            Access.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig_01.Access)\n                    return object;\n                var message = new $root.op_gameconfig_01.Access();\n                if (object.node != null) {\n                    if (typeof object.node !== "object")\n                        throw TypeError(".op_gameconfig_01.Access.node: object expected");\n                    message.node = $root.op_gameconfig_01.Node.fromObject(object.node);\n                }\n                switch (object.access) {\n                case "Accessible":\n                case 1:\n                    message.access = 1;\n                    break;\n                case "TakeOut":\n                case 2:\n                    message.access = 2;\n                    break;\n                case "Unlimited":\n                case 65535:\n                    message.access = 65535;\n                    break;\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from an Access message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig_01.Access\n             * @static\n             * @param {op_gameconfig_01.Access} message Access\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Access.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.node = null;\n                    object.access = options.enums === String ? "Accessible" : 1;\n                }\n                if (message.node != null && message.hasOwnProperty("node"))\n                    object.node = $root.op_gameconfig_01.Node.toObject(message.node, options);\n                if (message.access != null && message.hasOwnProperty("access"))\n                    object.access = options.enums === String ? $root.op_def.AccessEnum[message.access] : message.access;\n                return object;\n            };\n    \n            /**\n             * Converts this Access to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig_01.Access\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Access.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Access;\n        })();\n    \n        op_gameconfig_01.Entity = (function() {\n    \n            /**\n             * Properties of an Entity.\n             * @memberof op_gameconfig_01\n             * @interface IEntity\n             * @property {op_gameconfig_01.INode} node Entity node\n             */\n    \n            /**\n             * Constructs a new Entity.\n             * @memberof op_gameconfig_01\n             * @classdesc Represents an Entity.\n             * @implements IEntity\n             * @constructor\n             * @param {op_gameconfig_01.IEntity=} [properties] Properties to set\n             */\n            function Entity(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Entity node.\n             * @member {op_gameconfig_01.INode} node\n             * @memberof op_gameconfig_01.Entity\n             * @instance\n             */\n            Entity.prototype.node = null;\n    \n            /**\n             * Creates a new Entity instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig_01.Entity\n             * @static\n             * @param {op_gameconfig_01.IEntity=} [properties] Properties to set\n             * @returns {op_gameconfig_01.Entity} Entity instance\n             */\n            Entity.create = function create(properties) {\n                return new Entity(properties);\n            };\n    \n            /**\n             * Encodes the specified Entity message. Does not implicitly {@link op_gameconfig_01.Entity.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig_01.Entity\n             * @static\n             * @param {op_gameconfig_01.IEntity} message Entity message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Entity.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                $root.op_gameconfig_01.Node.encode(message.node, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Entity message, length delimited. Does not implicitly {@link op_gameconfig_01.Entity.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig_01.Entity\n             * @static\n             * @param {op_gameconfig_01.IEntity} message Entity message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Entity.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes an Entity message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig_01.Entity\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig_01.Entity} Entity\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Entity.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig_01.Entity();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.node = $root.op_gameconfig_01.Node.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("node"))\n                    throw $util.ProtocolError("missing required \'node\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes an Entity message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig_01.Entity\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig_01.Entity} Entity\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Entity.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies an Entity message.\n             * @function verify\n             * @memberof op_gameconfig_01.Entity\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Entity.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                {\n                    var error = $root.op_gameconfig_01.Node.verify(message.node);\n                    if (error)\n                        return "node." + error;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates an Entity message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig_01.Entity\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig_01.Entity} Entity\n             */\n            Entity.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig_01.Entity)\n                    return object;\n                var message = new $root.op_gameconfig_01.Entity();\n                if (object.node != null) {\n                    if (typeof object.node !== "object")\n                        throw TypeError(".op_gameconfig_01.Entity.node: object expected");\n                    message.node = $root.op_gameconfig_01.Node.fromObject(object.node);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from an Entity message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig_01.Entity\n             * @static\n             * @param {op_gameconfig_01.Entity} message Entity\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Entity.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.node = null;\n                if (message.node != null && message.hasOwnProperty("node"))\n                    object.node = $root.op_gameconfig_01.Node.toObject(message.node, options);\n                return object;\n            };\n    \n            /**\n             * Converts this Entity to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig_01.Entity\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Entity.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Entity;\n        })();\n    \n        op_gameconfig_01.Node = (function() {\n    \n            /**\n             * Properties of a Node.\n             * @memberof op_gameconfig_01\n             * @interface INode\n             * @property {number} id Node id\n             * @property {op_def.NodeType} type Node type\n             * @property {number} Parent Node Parent\n             * @property {Array.<op_def.NodeType>|null} [LockParent] Node LockParent\n             * @property {string} name Node name\n             * @property {string|null} [sn] Node sn\n             */\n    \n            /**\n             * Constructs a new Node.\n             * @memberof op_gameconfig_01\n             * @classdesc Represents a Node.\n             * @implements INode\n             * @constructor\n             * @param {op_gameconfig_01.INode=} [properties] Properties to set\n             */\n            function Node(properties) {\n                this.LockParent = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Node id.\n             * @member {number} id\n             * @memberof op_gameconfig_01.Node\n             * @instance\n             */\n            Node.prototype.id = 0;\n    \n            /**\n             * Node type.\n             * @member {op_def.NodeType} type\n             * @memberof op_gameconfig_01.Node\n             * @instance\n             */\n            Node.prototype.type = 0;\n    \n            /**\n             * Node Parent.\n             * @member {number} Parent\n             * @memberof op_gameconfig_01.Node\n             * @instance\n             */\n            Node.prototype.Parent = 0;\n    \n            /**\n             * Node LockParent.\n             * @member {Array.<op_def.NodeType>} LockParent\n             * @memberof op_gameconfig_01.Node\n             * @instance\n             */\n            Node.prototype.LockParent = $util.emptyArray;\n    \n            /**\n             * Node name.\n             * @member {string} name\n             * @memberof op_gameconfig_01.Node\n             * @instance\n             */\n            Node.prototype.name = "";\n    \n            /**\n             * Node sn.\n             * @member {string} sn\n             * @memberof op_gameconfig_01.Node\n             * @instance\n             */\n            Node.prototype.sn = "";\n    \n            /**\n             * Creates a new Node instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig_01.Node\n             * @static\n             * @param {op_gameconfig_01.INode=} [properties] Properties to set\n             * @returns {op_gameconfig_01.Node} Node instance\n             */\n            Node.create = function create(properties) {\n                return new Node(properties);\n            };\n    \n            /**\n             * Encodes the specified Node message. Does not implicitly {@link op_gameconfig_01.Node.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig_01.Node\n             * @static\n             * @param {op_gameconfig_01.INode} message Node message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Node.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.id);\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.type);\n                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.Parent);\n                if (message.LockParent != null && message.LockParent.length)\n                    for (var i = 0; i < message.LockParent.length; ++i)\n                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.LockParent[i]);\n                writer.uint32(/* id 5, wireType 2 =*/42).string(message.name);\n                if (message.sn != null && message.hasOwnProperty("sn"))\n                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.sn);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Node message, length delimited. Does not implicitly {@link op_gameconfig_01.Node.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig_01.Node\n             * @static\n             * @param {op_gameconfig_01.INode} message Node message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Node.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a Node message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig_01.Node\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig_01.Node} Node\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Node.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig_01.Node();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.id = reader.int32();\n                        break;\n                    case 2:\n                        message.type = reader.int32();\n                        break;\n                    case 3:\n                        message.Parent = reader.int32();\n                        break;\n                    case 4:\n                        if (!(message.LockParent && message.LockParent.length))\n                            message.LockParent = [];\n                        if ((tag & 7) === 2) {\n                            var end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2)\n                                message.LockParent.push(reader.int32());\n                        } else\n                            message.LockParent.push(reader.int32());\n                        break;\n                    case 5:\n                        message.name = reader.string();\n                        break;\n                    case 6:\n                        message.sn = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("id"))\n                    throw $util.ProtocolError("missing required \'id\'", { instance: message });\n                if (!message.hasOwnProperty("type"))\n                    throw $util.ProtocolError("missing required \'type\'", { instance: message });\n                if (!message.hasOwnProperty("Parent"))\n                    throw $util.ProtocolError("missing required \'Parent\'", { instance: message });\n                if (!message.hasOwnProperty("name"))\n                    throw $util.ProtocolError("missing required \'name\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a Node message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig_01.Node\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig_01.Node} Node\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Node.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a Node message.\n             * @function verify\n             * @memberof op_gameconfig_01.Node\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Node.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.id))\n                    return "id: integer expected";\n                switch (message.type) {\n                default:\n                    return "type: enum value expected";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                case 9:\n                case 10:\n                case 11:\n                case 12:\n                case 13:\n                case 14:\n                case 15:\n                case 16:\n                case 17:\n                case 18:\n                case 19:\n                case 20:\n                case 21:\n                case 22:\n                case 23:\n                case 24:\n                case 25:\n                case 26:\n                case 27:\n                case 28:\n                case 29:\n                    break;\n                }\n                if (!$util.isInteger(message.Parent))\n                    return "Parent: integer expected";\n                if (message.LockParent != null && message.hasOwnProperty("LockParent")) {\n                    if (!Array.isArray(message.LockParent))\n                        return "LockParent: array expected";\n                    for (var i = 0; i < message.LockParent.length; ++i)\n                        switch (message.LockParent[i]) {\n                        default:\n                            return "LockParent: enum value[] expected";\n                        case 0:\n                        case 1:\n                        case 2:\n                        case 3:\n                        case 4:\n                        case 5:\n                        case 6:\n                        case 7:\n                        case 8:\n                        case 9:\n                        case 10:\n                        case 11:\n                        case 12:\n                        case 13:\n                        case 14:\n                        case 15:\n                        case 16:\n                        case 17:\n                        case 18:\n                        case 19:\n                        case 20:\n                        case 21:\n                        case 22:\n                        case 23:\n                        case 24:\n                        case 25:\n                        case 26:\n                        case 27:\n                        case 28:\n                        case 29:\n                            break;\n                        }\n                }\n                if (!$util.isString(message.name))\n                    return "name: string expected";\n                if (message.sn != null && message.hasOwnProperty("sn"))\n                    if (!$util.isString(message.sn))\n                        return "sn: string expected";\n                return null;\n            };\n    \n            /**\n             * Creates a Node message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig_01.Node\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig_01.Node} Node\n             */\n            Node.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig_01.Node)\n                    return object;\n                var message = new $root.op_gameconfig_01.Node();\n                if (object.id != null)\n                    message.id = object.id | 0;\n                switch (object.type) {\n                case "UnknownNodeType":\n                case 0:\n                    message.type = 0;\n                    break;\n                case "GameNodeType":\n                case 1:\n                    message.type = 1;\n                    break;\n                case "SceneNodeType":\n                case 2:\n                    message.type = 2;\n                    break;\n                case "ElementNodeType":\n                case 3:\n                    message.type = 3;\n                    break;\n                case "TerrainNodeType":\n                case 4:\n                    message.type = 4;\n                    break;\n                case "CharacterNodeType":\n                case 5:\n                    message.type = 5;\n                    break;\n                case "LocationType":\n                case 6:\n                    message.type = 6;\n                    break;\n                case "MovableType":\n                case 7:\n                    message.type = 7;\n                    break;\n                case "DisplayType":\n                case 8:\n                    message.type = 8;\n                    break;\n                case "AttributeType":\n                case 9:\n                    message.type = 9;\n                    break;\n                case "FunctionType":\n                case 10:\n                    message.type = 10;\n                    break;\n                case "AnimationsType":\n                case 11:\n                    message.type = 11;\n                    break;\n                case "EventType":\n                case 12:\n                    message.type = 12;\n                    break;\n                case "MapSizeType":\n                case 13:\n                    message.type = 13;\n                    break;\n                case "UIType":\n                case 14:\n                    message.type = 14;\n                    break;\n                case "TimerType":\n                case 15:\n                    message.type = 15;\n                    break;\n                case "PackageType":\n                case 16:\n                    message.type = 16;\n                    break;\n                case "PackageItemType":\n                case 17:\n                    message.type = 17;\n                    break;\n                case "AvatarType":\n                case 18:\n                    message.type = 18;\n                    break;\n                case "SettingsType":\n                case 19:\n                    message.type = 19;\n                    break;\n                case "CampType":\n                case 20:\n                    message.type = 20;\n                    break;\n                case "MutexType":\n                case 21:\n                    message.type = 21;\n                    break;\n                case "AnimationDataType":\n                case 22:\n                    message.type = 22;\n                    break;\n                case "ForkType":\n                case 23:\n                    message.type = 23;\n                    break;\n                case "ButtonType":\n                case 24:\n                    message.type = 24;\n                    break;\n                case "TextType":\n                case 25:\n                    message.type = 25;\n                    break;\n                case "AccessType":\n                case 26:\n                    message.type = 26;\n                    break;\n                case "SpawnPointType":\n                case 27:\n                    message.type = 27;\n                    break;\n                case "CommodityType":\n                case 28:\n                    message.type = 28;\n                    break;\n                case "ShopType":\n                case 29:\n                    message.type = 29;\n                    break;\n                }\n                if (object.Parent != null)\n                    message.Parent = object.Parent | 0;\n                if (object.LockParent) {\n                    if (!Array.isArray(object.LockParent))\n                        throw TypeError(".op_gameconfig_01.Node.LockParent: array expected");\n                    message.LockParent = [];\n                    for (var i = 0; i < object.LockParent.length; ++i)\n                        switch (object.LockParent[i]) {\n                        default:\n                        case "UnknownNodeType":\n                        case 0:\n                            message.LockParent[i] = 0;\n                            break;\n                        case "GameNodeType":\n                        case 1:\n                            message.LockParent[i] = 1;\n                            break;\n                        case "SceneNodeType":\n                        case 2:\n                            message.LockParent[i] = 2;\n                            break;\n                        case "ElementNodeType":\n                        case 3:\n                            message.LockParent[i] = 3;\n                            break;\n                        case "TerrainNodeType":\n                        case 4:\n                            message.LockParent[i] = 4;\n                            break;\n                        case "CharacterNodeType":\n                        case 5:\n                            message.LockParent[i] = 5;\n                            break;\n                        case "LocationType":\n                        case 6:\n                            message.LockParent[i] = 6;\n                            break;\n                        case "MovableType":\n                        case 7:\n                            message.LockParent[i] = 7;\n                            break;\n                        case "DisplayType":\n                        case 8:\n                            message.LockParent[i] = 8;\n                            break;\n                        case "AttributeType":\n                        case 9:\n                            message.LockParent[i] = 9;\n                            break;\n                        case "FunctionType":\n                        case 10:\n                            message.LockParent[i] = 10;\n                            break;\n                        case "AnimationsType":\n                        case 11:\n                            message.LockParent[i] = 11;\n                            break;\n                        case "EventType":\n                        case 12:\n                            message.LockParent[i] = 12;\n                            break;\n                        case "MapSizeType":\n                        case 13:\n                            message.LockParent[i] = 13;\n                            break;\n                        case "UIType":\n                        case 14:\n                            message.LockParent[i] = 14;\n                            break;\n                        case "TimerType":\n                        case 15:\n                            message.LockParent[i] = 15;\n                            break;\n                        case "PackageType":\n                        case 16:\n                            message.LockParent[i] = 16;\n                            break;\n                        case "PackageItemType":\n                        case 17:\n                            message.LockParent[i] = 17;\n                            break;\n                        case "AvatarType":\n                        case 18:\n                            message.LockParent[i] = 18;\n                            break;\n                        case "SettingsType":\n                        case 19:\n                            message.LockParent[i] = 19;\n                            break;\n                        case "CampType":\n                        case 20:\n                            message.LockParent[i] = 20;\n                            break;\n                        case "MutexType":\n                        case 21:\n                            message.LockParent[i] = 21;\n                            break;\n                        case "AnimationDataType":\n                        case 22:\n                            message.LockParent[i] = 22;\n                            break;\n                        case "ForkType":\n                        case 23:\n                            message.LockParent[i] = 23;\n                            break;\n                        case "ButtonType":\n                        case 24:\n                            message.LockParent[i] = 24;\n                            break;\n                        case "TextType":\n                        case 25:\n                            message.LockParent[i] = 25;\n                            break;\n                        case "AccessType":\n                        case 26:\n                            message.LockParent[i] = 26;\n                            break;\n                        case "SpawnPointType":\n                        case 27:\n                            message.LockParent[i] = 27;\n                            break;\n                        case "CommodityType":\n                        case 28:\n                            message.LockParent[i] = 28;\n                            break;\n                        case "ShopType":\n                        case 29:\n                            message.LockParent[i] = 29;\n                            break;\n                        }\n                }\n                if (object.name != null)\n                    message.name = String(object.name);\n                if (object.sn != null)\n                    message.sn = String(object.sn);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a Node message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig_01.Node\n             * @static\n             * @param {op_gameconfig_01.Node} message Node\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Node.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.LockParent = [];\n                if (options.defaults) {\n                    object.id = 0;\n                    object.type = options.enums === String ? "UnknownNodeType" : 0;\n                    object.Parent = 0;\n                    object.name = "";\n                    object.sn = "";\n                }\n                if (message.id != null && message.hasOwnProperty("id"))\n                    object.id = message.id;\n                if (message.type != null && message.hasOwnProperty("type"))\n                    object.type = options.enums === String ? $root.op_def.NodeType[message.type] : message.type;\n                if (message.Parent != null && message.hasOwnProperty("Parent"))\n                    object.Parent = message.Parent;\n                if (message.LockParent && message.LockParent.length) {\n                    object.LockParent = [];\n                    for (var j = 0; j < message.LockParent.length; ++j)\n                        object.LockParent[j] = options.enums === String ? $root.op_def.NodeType[message.LockParent[j]] : message.LockParent[j];\n                }\n                if (message.name != null && message.hasOwnProperty("name"))\n                    object.name = message.name;\n                if (message.sn != null && message.hasOwnProperty("sn"))\n                    object.sn = message.sn;\n                return object;\n            };\n    \n            /**\n             * Converts this Node to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig_01.Node\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Node.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Node;\n        })();\n    \n        op_gameconfig_01.Game = (function() {\n    \n            /**\n             * Properties of a Game.\n             * @memberof op_gameconfig_01\n             * @interface IGame\n             * @property {op_gameconfig_01.INode} node Game node\n             * @property {Array.<op_gameconfig_01.IEntity>|null} [entity] Game entity\n             * @property {Array.<op_gameconfig_01.ILocation>|null} [loc] Game loc\n             * @property {Array.<op_gameconfig_01.IMovable>|null} [movable] Game movable\n             * @property {Array.<op_gameconfig_01.IDisplay>|null} [display] Game display\n             * @property {Array.<op_gameconfig_01.IAttribute>|null} [attr] Game attr\n             * @property {Array.<op_gameconfig_01.IFunction>|null} [func] Game func\n             * @property {Array.<op_gameconfig_01.IEvent>|null} [event] Game event\n             * @property {Array.<op_gameconfig_01.IMapSize>|null} [mapSize] Game mapSize\n             * @property {Array.<op_gameconfig_01.IUI>|null} [ui] Game ui\n             * @property {Array.<op_gameconfig_01.ITimer>|null} [timer] Game timer\n             * @property {Array.<op_gameconfig_01.IMutex>|null} [mutex] Game mutex\n             * @property {Array.<op_gameconfig_01.IAvatar>|null} [avatar] Game avatar\n             * @property {Array.<op_gameconfig_01.ICamp>|null} [camp] Game camp\n             * @property {Array.<op_gameconfig_01.IAnimations>|null} [animations] Game animations\n             * @property {Array.<op_gameconfig_01.IAnimationData>|null} [animationdatas] Game animationdatas\n             * @property {Array.<op_gameconfig_01.IButton>|null} [button] Game button\n             * @property {op_gameconfig_01.ISettings|null} [settings] Game settings\n             * @property {Array.<op_gameconfig_01.IText>|null} [text] Game text\n             * @property {Array.<op_gameconfig_01.ISpawnPoint>|null} [spawnpoint] Game spawnpoint\n             * @property {Array.<op_gameconfig_01.IAccess>|null} [access] Game access\n             * @property {Array.<op_gameconfig_01.ICommodity>|null} [commodities] Game commodities\n             */\n    \n            /**\n             * Constructs a new Game.\n             * @memberof op_gameconfig_01\n             * @classdesc Represents a Game.\n             * @implements IGame\n             * @constructor\n             * @param {op_gameconfig_01.IGame=} [properties] Properties to set\n             */\n            function Game(properties) {\n                this.entity = [];\n                this.loc = [];\n                this.movable = [];\n                this.display = [];\n                this.attr = [];\n                this.func = [];\n                this.event = [];\n                this.mapSize = [];\n                this.ui = [];\n                this.timer = [];\n                this.mutex = [];\n                this.avatar = [];\n                this.camp = [];\n                this.animations = [];\n                this.animationdatas = [];\n                this.button = [];\n                this.text = [];\n                this.spawnpoint = [];\n                this.access = [];\n                this.commodities = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Game node.\n             * @member {op_gameconfig_01.INode} node\n             * @memberof op_gameconfig_01.Game\n             * @instance\n             */\n            Game.prototype.node = null;\n    \n            /**\n             * Game entity.\n             * @member {Array.<op_gameconfig_01.IEntity>} entity\n             * @memberof op_gameconfig_01.Game\n             * @instance\n             */\n            Game.prototype.entity = $util.emptyArray;\n    \n            /**\n             * Game loc.\n             * @member {Array.<op_gameconfig_01.ILocation>} loc\n             * @memberof op_gameconfig_01.Game\n             * @instance\n             */\n            Game.prototype.loc = $util.emptyArray;\n    \n            /**\n             * Game movable.\n             * @member {Array.<op_gameconfig_01.IMovable>} movable\n             * @memberof op_gameconfig_01.Game\n             * @instance\n             */\n            Game.prototype.movable = $util.emptyArray;\n    \n            /**\n             * Game display.\n             * @member {Array.<op_gameconfig_01.IDisplay>} display\n             * @memberof op_gameconfig_01.Game\n             * @instance\n             */\n            Game.prototype.display = $util.emptyArray;\n    \n            /**\n             * Game attr.\n             * @member {Array.<op_gameconfig_01.IAttribute>} attr\n             * @memberof op_gameconfig_01.Game\n             * @instance\n             */\n            Game.prototype.attr = $util.emptyArray;\n    \n            /**\n             * Game func.\n             * @member {Array.<op_gameconfig_01.IFunction>} func\n             * @memberof op_gameconfig_01.Game\n             * @instance\n             */\n            Game.prototype.func = $util.emptyArray;\n    \n            /**\n             * Game event.\n             * @member {Array.<op_gameconfig_01.IEvent>} event\n             * @memberof op_gameconfig_01.Game\n             * @instance\n             */\n            Game.prototype.event = $util.emptyArray;\n    \n            /**\n             * Game mapSize.\n             * @member {Array.<op_gameconfig_01.IMapSize>} mapSize\n             * @memberof op_gameconfig_01.Game\n             * @instance\n             */\n            Game.prototype.mapSize = $util.emptyArray;\n    \n            /**\n             * Game ui.\n             * @member {Array.<op_gameconfig_01.IUI>} ui\n             * @memberof op_gameconfig_01.Game\n             * @instance\n             */\n            Game.prototype.ui = $util.emptyArray;\n    \n            /**\n             * Game timer.\n             * @member {Array.<op_gameconfig_01.ITimer>} timer\n             * @memberof op_gameconfig_01.Game\n             * @instance\n             */\n            Game.prototype.timer = $util.emptyArray;\n    \n            /**\n             * Game mutex.\n             * @member {Array.<op_gameconfig_01.IMutex>} mutex\n             * @memberof op_gameconfig_01.Game\n             * @instance\n             */\n            Game.prototype.mutex = $util.emptyArray;\n    \n            /**\n             * Game avatar.\n             * @member {Array.<op_gameconfig_01.IAvatar>} avatar\n             * @memberof op_gameconfig_01.Game\n             * @instance\n             */\n            Game.prototype.avatar = $util.emptyArray;\n    \n            /**\n             * Game camp.\n             * @member {Array.<op_gameconfig_01.ICamp>} camp\n             * @memberof op_gameconfig_01.Game\n             * @instance\n             */\n            Game.prototype.camp = $util.emptyArray;\n    \n            /**\n             * Game animations.\n             * @member {Array.<op_gameconfig_01.IAnimations>} animations\n             * @memberof op_gameconfig_01.Game\n             * @instance\n             */\n            Game.prototype.animations = $util.emptyArray;\n    \n            /**\n             * Game animationdatas.\n             * @member {Array.<op_gameconfig_01.IAnimationData>} animationdatas\n             * @memberof op_gameconfig_01.Game\n             * @instance\n             */\n            Game.prototype.animationdatas = $util.emptyArray;\n    \n            /**\n             * Game button.\n             * @member {Array.<op_gameconfig_01.IButton>} button\n             * @memberof op_gameconfig_01.Game\n             * @instance\n             */\n            Game.prototype.button = $util.emptyArray;\n    \n            /**\n             * Game settings.\n             * @member {op_gameconfig_01.ISettings|null|undefined} settings\n             * @memberof op_gameconfig_01.Game\n             * @instance\n             */\n            Game.prototype.settings = null;\n    \n            /**\n             * Game text.\n             * @member {Array.<op_gameconfig_01.IText>} text\n             * @memberof op_gameconfig_01.Game\n             * @instance\n             */\n            Game.prototype.text = $util.emptyArray;\n    \n            /**\n             * Game spawnpoint.\n             * @member {Array.<op_gameconfig_01.ISpawnPoint>} spawnpoint\n             * @memberof op_gameconfig_01.Game\n             * @instance\n             */\n            Game.prototype.spawnpoint = $util.emptyArray;\n    \n            /**\n             * Game access.\n             * @member {Array.<op_gameconfig_01.IAccess>} access\n             * @memberof op_gameconfig_01.Game\n             * @instance\n             */\n            Game.prototype.access = $util.emptyArray;\n    \n            /**\n             * Game commodities.\n             * @member {Array.<op_gameconfig_01.ICommodity>} commodities\n             * @memberof op_gameconfig_01.Game\n             * @instance\n             */\n            Game.prototype.commodities = $util.emptyArray;\n    \n            /**\n             * Creates a new Game instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig_01.Game\n             * @static\n             * @param {op_gameconfig_01.IGame=} [properties] Properties to set\n             * @returns {op_gameconfig_01.Game} Game instance\n             */\n            Game.create = function create(properties) {\n                return new Game(properties);\n            };\n    \n            /**\n             * Encodes the specified Game message. Does not implicitly {@link op_gameconfig_01.Game.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig_01.Game\n             * @static\n             * @param {op_gameconfig_01.IGame} message Game message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Game.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                $root.op_gameconfig_01.Node.encode(message.node, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.entity != null && message.entity.length)\n                    for (var i = 0; i < message.entity.length; ++i)\n                        $root.op_gameconfig_01.Entity.encode(message.entity[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                if (message.loc != null && message.loc.length)\n                    for (var i = 0; i < message.loc.length; ++i)\n                        $root.op_gameconfig_01.Location.encode(message.loc[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                if (message.movable != null && message.movable.length)\n                    for (var i = 0; i < message.movable.length; ++i)\n                        $root.op_gameconfig_01.Movable.encode(message.movable[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n                if (message.display != null && message.display.length)\n                    for (var i = 0; i < message.display.length; ++i)\n                        $root.op_gameconfig_01.Display.encode(message.display[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n                if (message.attr != null && message.attr.length)\n                    for (var i = 0; i < message.attr.length; ++i)\n                        $root.op_gameconfig_01.Attribute.encode(message.attr[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n                if (message.func != null && message.func.length)\n                    for (var i = 0; i < message.func.length; ++i)\n                        $root.op_gameconfig_01.Function.encode(message.func[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n                if (message.event != null && message.event.length)\n                    for (var i = 0; i < message.event.length; ++i)\n                        $root.op_gameconfig_01.Event.encode(message.event[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n                if (message.mapSize != null && message.mapSize.length)\n                    for (var i = 0; i < message.mapSize.length; ++i)\n                        $root.op_gameconfig_01.MapSize.encode(message.mapSize[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();\n                if (message.ui != null && message.ui.length)\n                    for (var i = 0; i < message.ui.length; ++i)\n                        $root.op_gameconfig_01.UI.encode(message.ui[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n                if (message.timer != null && message.timer.length)\n                    for (var i = 0; i < message.timer.length; ++i)\n                        $root.op_gameconfig_01.Timer.encode(message.timer[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n                if (message.mutex != null && message.mutex.length)\n                    for (var i = 0; i < message.mutex.length; ++i)\n                        $root.op_gameconfig_01.Mutex.encode(message.mutex[i], writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();\n                if (message.avatar != null && message.avatar.length)\n                    for (var i = 0; i < message.avatar.length; ++i)\n                        $root.op_gameconfig_01.Avatar.encode(message.avatar[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n                if (message.camp != null && message.camp.length)\n                    for (var i = 0; i < message.camp.length; ++i)\n                        $root.op_gameconfig_01.Camp.encode(message.camp[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n                if (message.animations != null && message.animations.length)\n                    for (var i = 0; i < message.animations.length; ++i)\n                        $root.op_gameconfig_01.Animations.encode(message.animations[i], writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();\n                if (message.animationdatas != null && message.animationdatas.length)\n                    for (var i = 0; i < message.animationdatas.length; ++i)\n                        $root.op_gameconfig_01.AnimationData.encode(message.animationdatas[i], writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();\n                if (message.button != null && message.button.length)\n                    for (var i = 0; i < message.button.length; ++i)\n                        $root.op_gameconfig_01.Button.encode(message.button[i], writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();\n                if (message.settings != null && message.hasOwnProperty("settings"))\n                    $root.op_gameconfig_01.Settings.encode(message.settings, writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();\n                if (message.text != null && message.text.length)\n                    for (var i = 0; i < message.text.length; ++i)\n                        $root.op_gameconfig_01.Text.encode(message.text[i], writer.uint32(/* id 19, wireType 2 =*/154).fork()).ldelim();\n                if (message.spawnpoint != null && message.spawnpoint.length)\n                    for (var i = 0; i < message.spawnpoint.length; ++i)\n                        $root.op_gameconfig_01.SpawnPoint.encode(message.spawnpoint[i], writer.uint32(/* id 20, wireType 2 =*/162).fork()).ldelim();\n                if (message.access != null && message.access.length)\n                    for (var i = 0; i < message.access.length; ++i)\n                        $root.op_gameconfig_01.Access.encode(message.access[i], writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();\n                if (message.commodities != null && message.commodities.length)\n                    for (var i = 0; i < message.commodities.length; ++i)\n                        $root.op_gameconfig_01.Commodity.encode(message.commodities[i], writer.uint32(/* id 22, wireType 2 =*/178).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Game message, length delimited. Does not implicitly {@link op_gameconfig_01.Game.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig_01.Game\n             * @static\n             * @param {op_gameconfig_01.IGame} message Game message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Game.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a Game message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig_01.Game\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig_01.Game} Game\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Game.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig_01.Game();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.node = $root.op_gameconfig_01.Node.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        if (!(message.entity && message.entity.length))\n                            message.entity = [];\n                        message.entity.push($root.op_gameconfig_01.Entity.decode(reader, reader.uint32()));\n                        break;\n                    case 3:\n                        if (!(message.loc && message.loc.length))\n                            message.loc = [];\n                        message.loc.push($root.op_gameconfig_01.Location.decode(reader, reader.uint32()));\n                        break;\n                    case 4:\n                        if (!(message.movable && message.movable.length))\n                            message.movable = [];\n                        message.movable.push($root.op_gameconfig_01.Movable.decode(reader, reader.uint32()));\n                        break;\n                    case 5:\n                        if (!(message.display && message.display.length))\n                            message.display = [];\n                        message.display.push($root.op_gameconfig_01.Display.decode(reader, reader.uint32()));\n                        break;\n                    case 6:\n                        if (!(message.attr && message.attr.length))\n                            message.attr = [];\n                        message.attr.push($root.op_gameconfig_01.Attribute.decode(reader, reader.uint32()));\n                        break;\n                    case 7:\n                        if (!(message.func && message.func.length))\n                            message.func = [];\n                        message.func.push($root.op_gameconfig_01.Function.decode(reader, reader.uint32()));\n                        break;\n                    case 8:\n                        if (!(message.event && message.event.length))\n                            message.event = [];\n                        message.event.push($root.op_gameconfig_01.Event.decode(reader, reader.uint32()));\n                        break;\n                    case 9:\n                        if (!(message.mapSize && message.mapSize.length))\n                            message.mapSize = [];\n                        message.mapSize.push($root.op_gameconfig_01.MapSize.decode(reader, reader.uint32()));\n                        break;\n                    case 10:\n                        if (!(message.ui && message.ui.length))\n                            message.ui = [];\n                        message.ui.push($root.op_gameconfig_01.UI.decode(reader, reader.uint32()));\n                        break;\n                    case 11:\n                        if (!(message.timer && message.timer.length))\n                            message.timer = [];\n                        message.timer.push($root.op_gameconfig_01.Timer.decode(reader, reader.uint32()));\n                        break;\n                    case 12:\n                        if (!(message.mutex && message.mutex.length))\n                            message.mutex = [];\n                        message.mutex.push($root.op_gameconfig_01.Mutex.decode(reader, reader.uint32()));\n                        break;\n                    case 13:\n                        if (!(message.avatar && message.avatar.length))\n                            message.avatar = [];\n                        message.avatar.push($root.op_gameconfig_01.Avatar.decode(reader, reader.uint32()));\n                        break;\n                    case 14:\n                        if (!(message.camp && message.camp.length))\n                            message.camp = [];\n                        message.camp.push($root.op_gameconfig_01.Camp.decode(reader, reader.uint32()));\n                        break;\n                    case 15:\n                        if (!(message.animations && message.animations.length))\n                            message.animations = [];\n                        message.animations.push($root.op_gameconfig_01.Animations.decode(reader, reader.uint32()));\n                        break;\n                    case 16:\n                        if (!(message.animationdatas && message.animationdatas.length))\n                            message.animationdatas = [];\n                        message.animationdatas.push($root.op_gameconfig_01.AnimationData.decode(reader, reader.uint32()));\n                        break;\n                    case 17:\n                        if (!(message.button && message.button.length))\n                            message.button = [];\n                        message.button.push($root.op_gameconfig_01.Button.decode(reader, reader.uint32()));\n                        break;\n                    case 18:\n                        message.settings = $root.op_gameconfig_01.Settings.decode(reader, reader.uint32());\n                        break;\n                    case 19:\n                        if (!(message.text && message.text.length))\n                            message.text = [];\n                        message.text.push($root.op_gameconfig_01.Text.decode(reader, reader.uint32()));\n                        break;\n                    case 20:\n                        if (!(message.spawnpoint && message.spawnpoint.length))\n                            message.spawnpoint = [];\n                        message.spawnpoint.push($root.op_gameconfig_01.SpawnPoint.decode(reader, reader.uint32()));\n                        break;\n                    case 21:\n                        if (!(message.access && message.access.length))\n                            message.access = [];\n                        message.access.push($root.op_gameconfig_01.Access.decode(reader, reader.uint32()));\n                        break;\n                    case 22:\n                        if (!(message.commodities && message.commodities.length))\n                            message.commodities = [];\n                        message.commodities.push($root.op_gameconfig_01.Commodity.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("node"))\n                    throw $util.ProtocolError("missing required \'node\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a Game message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig_01.Game\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig_01.Game} Game\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Game.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a Game message.\n             * @function verify\n             * @memberof op_gameconfig_01.Game\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Game.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                {\n                    var error = $root.op_gameconfig_01.Node.verify(message.node);\n                    if (error)\n                        return "node." + error;\n                }\n                if (message.entity != null && message.hasOwnProperty("entity")) {\n                    if (!Array.isArray(message.entity))\n                        return "entity: array expected";\n                    for (var i = 0; i < message.entity.length; ++i) {\n                        var error = $root.op_gameconfig_01.Entity.verify(message.entity[i]);\n                        if (error)\n                            return "entity." + error;\n                    }\n                }\n                if (message.loc != null && message.hasOwnProperty("loc")) {\n                    if (!Array.isArray(message.loc))\n                        return "loc: array expected";\n                    for (var i = 0; i < message.loc.length; ++i) {\n                        var error = $root.op_gameconfig_01.Location.verify(message.loc[i]);\n                        if (error)\n                            return "loc." + error;\n                    }\n                }\n                if (message.movable != null && message.hasOwnProperty("movable")) {\n                    if (!Array.isArray(message.movable))\n                        return "movable: array expected";\n                    for (var i = 0; i < message.movable.length; ++i) {\n                        var error = $root.op_gameconfig_01.Movable.verify(message.movable[i]);\n                        if (error)\n                            return "movable." + error;\n                    }\n                }\n                if (message.display != null && message.hasOwnProperty("display")) {\n                    if (!Array.isArray(message.display))\n                        return "display: array expected";\n                    for (var i = 0; i < message.display.length; ++i) {\n                        var error = $root.op_gameconfig_01.Display.verify(message.display[i]);\n                        if (error)\n                            return "display." + error;\n                    }\n                }\n                if (message.attr != null && message.hasOwnProperty("attr")) {\n                    if (!Array.isArray(message.attr))\n                        return "attr: array expected";\n                    for (var i = 0; i < message.attr.length; ++i) {\n                        var error = $root.op_gameconfig_01.Attribute.verify(message.attr[i]);\n                        if (error)\n                            return "attr." + error;\n                    }\n                }\n                if (message.func != null && message.hasOwnProperty("func")) {\n                    if (!Array.isArray(message.func))\n                        return "func: array expected";\n                    for (var i = 0; i < message.func.length; ++i) {\n                        var error = $root.op_gameconfig_01.Function.verify(message.func[i]);\n                        if (error)\n                            return "func." + error;\n                    }\n                }\n                if (message.event != null && message.hasOwnProperty("event")) {\n                    if (!Array.isArray(message.event))\n                        return "event: array expected";\n                    for (var i = 0; i < message.event.length; ++i) {\n                        var error = $root.op_gameconfig_01.Event.verify(message.event[i]);\n                        if (error)\n                            return "event." + error;\n                    }\n                }\n                if (message.mapSize != null && message.hasOwnProperty("mapSize")) {\n                    if (!Array.isArray(message.mapSize))\n                        return "mapSize: array expected";\n                    for (var i = 0; i < message.mapSize.length; ++i) {\n                        var error = $root.op_gameconfig_01.MapSize.verify(message.mapSize[i]);\n                        if (error)\n                            return "mapSize." + error;\n                    }\n                }\n                if (message.ui != null && message.hasOwnProperty("ui")) {\n                    if (!Array.isArray(message.ui))\n                        return "ui: array expected";\n                    for (var i = 0; i < message.ui.length; ++i) {\n                        var error = $root.op_gameconfig_01.UI.verify(message.ui[i]);\n                        if (error)\n                            return "ui." + error;\n                    }\n                }\n                if (message.timer != null && message.hasOwnProperty("timer")) {\n                    if (!Array.isArray(message.timer))\n                        return "timer: array expected";\n                    for (var i = 0; i < message.timer.length; ++i) {\n                        var error = $root.op_gameconfig_01.Timer.verify(message.timer[i]);\n                        if (error)\n                            return "timer." + error;\n                    }\n                }\n                if (message.mutex != null && message.hasOwnProperty("mutex")) {\n                    if (!Array.isArray(message.mutex))\n                        return "mutex: array expected";\n                    for (var i = 0; i < message.mutex.length; ++i) {\n                        var error = $root.op_gameconfig_01.Mutex.verify(message.mutex[i]);\n                        if (error)\n                            return "mutex." + error;\n                    }\n                }\n                if (message.avatar != null && message.hasOwnProperty("avatar")) {\n                    if (!Array.isArray(message.avatar))\n                        return "avatar: array expected";\n                    for (var i = 0; i < message.avatar.length; ++i) {\n                        var error = $root.op_gameconfig_01.Avatar.verify(message.avatar[i]);\n                        if (error)\n                            return "avatar." + error;\n                    }\n                }\n                if (message.camp != null && message.hasOwnProperty("camp")) {\n                    if (!Array.isArray(message.camp))\n                        return "camp: array expected";\n                    for (var i = 0; i < message.camp.length; ++i) {\n                        var error = $root.op_gameconfig_01.Camp.verify(message.camp[i]);\n                        if (error)\n                            return "camp." + error;\n                    }\n                }\n                if (message.animations != null && message.hasOwnProperty("animations")) {\n                    if (!Array.isArray(message.animations))\n                        return "animations: array expected";\n                    for (var i = 0; i < message.animations.length; ++i) {\n                        var error = $root.op_gameconfig_01.Animations.verify(message.animations[i]);\n                        if (error)\n                            return "animations." + error;\n                    }\n                }\n                if (message.animationdatas != null && message.hasOwnProperty("animationdatas")) {\n                    if (!Array.isArray(message.animationdatas))\n                        return "animationdatas: array expected";\n                    for (var i = 0; i < message.animationdatas.length; ++i) {\n                        var error = $root.op_gameconfig_01.AnimationData.verify(message.animationdatas[i]);\n                        if (error)\n                            return "animationdatas." + error;\n                    }\n                }\n                if (message.button != null && message.hasOwnProperty("button")) {\n                    if (!Array.isArray(message.button))\n                        return "button: array expected";\n                    for (var i = 0; i < message.button.length; ++i) {\n                        var error = $root.op_gameconfig_01.Button.verify(message.button[i]);\n                        if (error)\n                            return "button." + error;\n                    }\n                }\n                if (message.settings != null && message.hasOwnProperty("settings")) {\n                    var error = $root.op_gameconfig_01.Settings.verify(message.settings);\n                    if (error)\n                        return "settings." + error;\n                }\n                if (message.text != null && message.hasOwnProperty("text")) {\n                    if (!Array.isArray(message.text))\n                        return "text: array expected";\n                    for (var i = 0; i < message.text.length; ++i) {\n                        var error = $root.op_gameconfig_01.Text.verify(message.text[i]);\n                        if (error)\n                            return "text." + error;\n                    }\n                }\n                if (message.spawnpoint != null && message.hasOwnProperty("spawnpoint")) {\n                    if (!Array.isArray(message.spawnpoint))\n                        return "spawnpoint: array expected";\n                    for (var i = 0; i < message.spawnpoint.length; ++i) {\n                        var error = $root.op_gameconfig_01.SpawnPoint.verify(message.spawnpoint[i]);\n                        if (error)\n                            return "spawnpoint." + error;\n                    }\n                }\n                if (message.access != null && message.hasOwnProperty("access")) {\n                    if (!Array.isArray(message.access))\n                        return "access: array expected";\n                    for (var i = 0; i < message.access.length; ++i) {\n                        var error = $root.op_gameconfig_01.Access.verify(message.access[i]);\n                        if (error)\n                            return "access." + error;\n                    }\n                }\n                if (message.commodities != null && message.hasOwnProperty("commodities")) {\n                    if (!Array.isArray(message.commodities))\n                        return "commodities: array expected";\n                    for (var i = 0; i < message.commodities.length; ++i) {\n                        var error = $root.op_gameconfig_01.Commodity.verify(message.commodities[i]);\n                        if (error)\n                            return "commodities." + error;\n                    }\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a Game message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig_01.Game\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig_01.Game} Game\n             */\n            Game.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig_01.Game)\n                    return object;\n                var message = new $root.op_gameconfig_01.Game();\n                if (object.node != null) {\n                    if (typeof object.node !== "object")\n                        throw TypeError(".op_gameconfig_01.Game.node: object expected");\n                    message.node = $root.op_gameconfig_01.Node.fromObject(object.node);\n                }\n                if (object.entity) {\n                    if (!Array.isArray(object.entity))\n                        throw TypeError(".op_gameconfig_01.Game.entity: array expected");\n                    message.entity = [];\n                    for (var i = 0; i < object.entity.length; ++i) {\n                        if (typeof object.entity[i] !== "object")\n                            throw TypeError(".op_gameconfig_01.Game.entity: object expected");\n                        message.entity[i] = $root.op_gameconfig_01.Entity.fromObject(object.entity[i]);\n                    }\n                }\n                if (object.loc) {\n                    if (!Array.isArray(object.loc))\n                        throw TypeError(".op_gameconfig_01.Game.loc: array expected");\n                    message.loc = [];\n                    for (var i = 0; i < object.loc.length; ++i) {\n                        if (typeof object.loc[i] !== "object")\n                            throw TypeError(".op_gameconfig_01.Game.loc: object expected");\n                        message.loc[i] = $root.op_gameconfig_01.Location.fromObject(object.loc[i]);\n                    }\n                }\n                if (object.movable) {\n                    if (!Array.isArray(object.movable))\n                        throw TypeError(".op_gameconfig_01.Game.movable: array expected");\n                    message.movable = [];\n                    for (var i = 0; i < object.movable.length; ++i) {\n                        if (typeof object.movable[i] !== "object")\n                            throw TypeError(".op_gameconfig_01.Game.movable: object expected");\n                        message.movable[i] = $root.op_gameconfig_01.Movable.fromObject(object.movable[i]);\n                    }\n                }\n                if (object.display) {\n                    if (!Array.isArray(object.display))\n                        throw TypeError(".op_gameconfig_01.Game.display: array expected");\n                    message.display = [];\n                    for (var i = 0; i < object.display.length; ++i) {\n                        if (typeof object.display[i] !== "object")\n                            throw TypeError(".op_gameconfig_01.Game.display: object expected");\n                        message.display[i] = $root.op_gameconfig_01.Display.fromObject(object.display[i]);\n                    }\n                }\n                if (object.attr) {\n                    if (!Array.isArray(object.attr))\n                        throw TypeError(".op_gameconfig_01.Game.attr: array expected");\n                    message.attr = [];\n                    for (var i = 0; i < object.attr.length; ++i) {\n                        if (typeof object.attr[i] !== "object")\n                            throw TypeError(".op_gameconfig_01.Game.attr: object expected");\n                        message.attr[i] = $root.op_gameconfig_01.Attribute.fromObject(object.attr[i]);\n                    }\n                }\n                if (object.func) {\n                    if (!Array.isArray(object.func))\n                        throw TypeError(".op_gameconfig_01.Game.func: array expected");\n                    message.func = [];\n                    for (var i = 0; i < object.func.length; ++i) {\n                        if (typeof object.func[i] !== "object")\n                            throw TypeError(".op_gameconfig_01.Game.func: object expected");\n                        message.func[i] = $root.op_gameconfig_01.Function.fromObject(object.func[i]);\n                    }\n                }\n                if (object.event) {\n                    if (!Array.isArray(object.event))\n                        throw TypeError(".op_gameconfig_01.Game.event: array expected");\n                    message.event = [];\n                    for (var i = 0; i < object.event.length; ++i) {\n                        if (typeof object.event[i] !== "object")\n                            throw TypeError(".op_gameconfig_01.Game.event: object expected");\n                        message.event[i] = $root.op_gameconfig_01.Event.fromObject(object.event[i]);\n                    }\n                }\n                if (object.mapSize) {\n                    if (!Array.isArray(object.mapSize))\n                        throw TypeError(".op_gameconfig_01.Game.mapSize: array expected");\n                    message.mapSize = [];\n                    for (var i = 0; i < object.mapSize.length; ++i) {\n                        if (typeof object.mapSize[i] !== "object")\n                            throw TypeError(".op_gameconfig_01.Game.mapSize: object expected");\n                        message.mapSize[i] = $root.op_gameconfig_01.MapSize.fromObject(object.mapSize[i]);\n                    }\n                }\n                if (object.ui) {\n                    if (!Array.isArray(object.ui))\n                        throw TypeError(".op_gameconfig_01.Game.ui: array expected");\n                    message.ui = [];\n                    for (var i = 0; i < object.ui.length; ++i) {\n                        if (typeof object.ui[i] !== "object")\n                            throw TypeError(".op_gameconfig_01.Game.ui: object expected");\n                        message.ui[i] = $root.op_gameconfig_01.UI.fromObject(object.ui[i]);\n                    }\n                }\n                if (object.timer) {\n                    if (!Array.isArray(object.timer))\n                        throw TypeError(".op_gameconfig_01.Game.timer: array expected");\n                    message.timer = [];\n                    for (var i = 0; i < object.timer.length; ++i) {\n                        if (typeof object.timer[i] !== "object")\n                            throw TypeError(".op_gameconfig_01.Game.timer: object expected");\n                        message.timer[i] = $root.op_gameconfig_01.Timer.fromObject(object.timer[i]);\n                    }\n                }\n                if (object.mutex) {\n                    if (!Array.isArray(object.mutex))\n                        throw TypeError(".op_gameconfig_01.Game.mutex: array expected");\n                    message.mutex = [];\n                    for (var i = 0; i < object.mutex.length; ++i) {\n                        if (typeof object.mutex[i] !== "object")\n                            throw TypeError(".op_gameconfig_01.Game.mutex: object expected");\n                        message.mutex[i] = $root.op_gameconfig_01.Mutex.fromObject(object.mutex[i]);\n                    }\n                }\n                if (object.avatar) {\n                    if (!Array.isArray(object.avatar))\n                        throw TypeError(".op_gameconfig_01.Game.avatar: array expected");\n                    message.avatar = [];\n                    for (var i = 0; i < object.avatar.length; ++i) {\n                        if (typeof object.avatar[i] !== "object")\n                            throw TypeError(".op_gameconfig_01.Game.avatar: object expected");\n                        message.avatar[i] = $root.op_gameconfig_01.Avatar.fromObject(object.avatar[i]);\n                    }\n                }\n                if (object.camp) {\n                    if (!Array.isArray(object.camp))\n                        throw TypeError(".op_gameconfig_01.Game.camp: array expected");\n                    message.camp = [];\n                    for (var i = 0; i < object.camp.length; ++i) {\n                        if (typeof object.camp[i] !== "object")\n                            throw TypeError(".op_gameconfig_01.Game.camp: object expected");\n                        message.camp[i] = $root.op_gameconfig_01.Camp.fromObject(object.camp[i]);\n                    }\n                }\n                if (object.animations) {\n                    if (!Array.isArray(object.animations))\n                        throw TypeError(".op_gameconfig_01.Game.animations: array expected");\n                    message.animations = [];\n                    for (var i = 0; i < object.animations.length; ++i) {\n                        if (typeof object.animations[i] !== "object")\n                            throw TypeError(".op_gameconfig_01.Game.animations: object expected");\n                        message.animations[i] = $root.op_gameconfig_01.Animations.fromObject(object.animations[i]);\n                    }\n                }\n                if (object.animationdatas) {\n                    if (!Array.isArray(object.animationdatas))\n                        throw TypeError(".op_gameconfig_01.Game.animationdatas: array expected");\n                    message.animationdatas = [];\n                    for (var i = 0; i < object.animationdatas.length; ++i) {\n                        if (typeof object.animationdatas[i] !== "object")\n                            throw TypeError(".op_gameconfig_01.Game.animationdatas: object expected");\n                        message.animationdatas[i] = $root.op_gameconfig_01.AnimationData.fromObject(object.animationdatas[i]);\n                    }\n                }\n                if (object.button) {\n                    if (!Array.isArray(object.button))\n                        throw TypeError(".op_gameconfig_01.Game.button: array expected");\n                    message.button = [];\n                    for (var i = 0; i < object.button.length; ++i) {\n                        if (typeof object.button[i] !== "object")\n                            throw TypeError(".op_gameconfig_01.Game.button: object expected");\n                        message.button[i] = $root.op_gameconfig_01.Button.fromObject(object.button[i]);\n                    }\n                }\n                if (object.settings != null) {\n                    if (typeof object.settings !== "object")\n                        throw TypeError(".op_gameconfig_01.Game.settings: object expected");\n                    message.settings = $root.op_gameconfig_01.Settings.fromObject(object.settings);\n                }\n                if (object.text) {\n                    if (!Array.isArray(object.text))\n                        throw TypeError(".op_gameconfig_01.Game.text: array expected");\n                    message.text = [];\n                    for (var i = 0; i < object.text.length; ++i) {\n                        if (typeof object.text[i] !== "object")\n                            throw TypeError(".op_gameconfig_01.Game.text: object expected");\n                        message.text[i] = $root.op_gameconfig_01.Text.fromObject(object.text[i]);\n                    }\n                }\n                if (object.spawnpoint) {\n                    if (!Array.isArray(object.spawnpoint))\n                        throw TypeError(".op_gameconfig_01.Game.spawnpoint: array expected");\n                    message.spawnpoint = [];\n                    for (var i = 0; i < object.spawnpoint.length; ++i) {\n                        if (typeof object.spawnpoint[i] !== "object")\n                            throw TypeError(".op_gameconfig_01.Game.spawnpoint: object expected");\n                        message.spawnpoint[i] = $root.op_gameconfig_01.SpawnPoint.fromObject(object.spawnpoint[i]);\n                    }\n                }\n                if (object.access) {\n                    if (!Array.isArray(object.access))\n                        throw TypeError(".op_gameconfig_01.Game.access: array expected");\n                    message.access = [];\n                    for (var i = 0; i < object.access.length; ++i) {\n                        if (typeof object.access[i] !== "object")\n                            throw TypeError(".op_gameconfig_01.Game.access: object expected");\n                        message.access[i] = $root.op_gameconfig_01.Access.fromObject(object.access[i]);\n                    }\n                }\n                if (object.commodities) {\n                    if (!Array.isArray(object.commodities))\n                        throw TypeError(".op_gameconfig_01.Game.commodities: array expected");\n                    message.commodities = [];\n                    for (var i = 0; i < object.commodities.length; ++i) {\n                        if (typeof object.commodities[i] !== "object")\n                            throw TypeError(".op_gameconfig_01.Game.commodities: object expected");\n                        message.commodities[i] = $root.op_gameconfig_01.Commodity.fromObject(object.commodities[i]);\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a Game message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig_01.Game\n             * @static\n             * @param {op_gameconfig_01.Game} message Game\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Game.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults) {\n                    object.entity = [];\n                    object.loc = [];\n                    object.movable = [];\n                    object.display = [];\n                    object.attr = [];\n                    object.func = [];\n                    object.event = [];\n                    object.mapSize = [];\n                    object.ui = [];\n                    object.timer = [];\n                    object.mutex = [];\n                    object.avatar = [];\n                    object.camp = [];\n                    object.animations = [];\n                    object.animationdatas = [];\n                    object.button = [];\n                    object.text = [];\n                    object.spawnpoint = [];\n                    object.access = [];\n                    object.commodities = [];\n                }\n                if (options.defaults) {\n                    object.node = null;\n                    object.settings = null;\n                }\n                if (message.node != null && message.hasOwnProperty("node"))\n                    object.node = $root.op_gameconfig_01.Node.toObject(message.node, options);\n                if (message.entity && message.entity.length) {\n                    object.entity = [];\n                    for (var j = 0; j < message.entity.length; ++j)\n                        object.entity[j] = $root.op_gameconfig_01.Entity.toObject(message.entity[j], options);\n                }\n                if (message.loc && message.loc.length) {\n                    object.loc = [];\n                    for (var j = 0; j < message.loc.length; ++j)\n                        object.loc[j] = $root.op_gameconfig_01.Location.toObject(message.loc[j], options);\n                }\n                if (message.movable && message.movable.length) {\n                    object.movable = [];\n                    for (var j = 0; j < message.movable.length; ++j)\n                        object.movable[j] = $root.op_gameconfig_01.Movable.toObject(message.movable[j], options);\n                }\n                if (message.display && message.display.length) {\n                    object.display = [];\n                    for (var j = 0; j < message.display.length; ++j)\n                        object.display[j] = $root.op_gameconfig_01.Display.toObject(message.display[j], options);\n                }\n                if (message.attr && message.attr.length) {\n                    object.attr = [];\n                    for (var j = 0; j < message.attr.length; ++j)\n                        object.attr[j] = $root.op_gameconfig_01.Attribute.toObject(message.attr[j], options);\n                }\n                if (message.func && message.func.length) {\n                    object.func = [];\n                    for (var j = 0; j < message.func.length; ++j)\n                        object.func[j] = $root.op_gameconfig_01.Function.toObject(message.func[j], options);\n                }\n                if (message.event && message.event.length) {\n                    object.event = [];\n                    for (var j = 0; j < message.event.length; ++j)\n                        object.event[j] = $root.op_gameconfig_01.Event.toObject(message.event[j], options);\n                }\n                if (message.mapSize && message.mapSize.length) {\n                    object.mapSize = [];\n                    for (var j = 0; j < message.mapSize.length; ++j)\n                        object.mapSize[j] = $root.op_gameconfig_01.MapSize.toObject(message.mapSize[j], options);\n                }\n                if (message.ui && message.ui.length) {\n                    object.ui = [];\n                    for (var j = 0; j < message.ui.length; ++j)\n                        object.ui[j] = $root.op_gameconfig_01.UI.toObject(message.ui[j], options);\n                }\n                if (message.timer && message.timer.length) {\n                    object.timer = [];\n                    for (var j = 0; j < message.timer.length; ++j)\n                        object.timer[j] = $root.op_gameconfig_01.Timer.toObject(message.timer[j], options);\n                }\n                if (message.mutex && message.mutex.length) {\n                    object.mutex = [];\n                    for (var j = 0; j < message.mutex.length; ++j)\n                        object.mutex[j] = $root.op_gameconfig_01.Mutex.toObject(message.mutex[j], options);\n                }\n                if (message.avatar && message.avatar.length) {\n                    object.avatar = [];\n                    for (var j = 0; j < message.avatar.length; ++j)\n                        object.avatar[j] = $root.op_gameconfig_01.Avatar.toObject(message.avatar[j], options);\n                }\n                if (message.camp && message.camp.length) {\n                    object.camp = [];\n                    for (var j = 0; j < message.camp.length; ++j)\n                        object.camp[j] = $root.op_gameconfig_01.Camp.toObject(message.camp[j], options);\n                }\n                if (message.animations && message.animations.length) {\n                    object.animations = [];\n                    for (var j = 0; j < message.animations.length; ++j)\n                        object.animations[j] = $root.op_gameconfig_01.Animations.toObject(message.animations[j], options);\n                }\n                if (message.animationdatas && message.animationdatas.length) {\n                    object.animationdatas = [];\n                    for (var j = 0; j < message.animationdatas.length; ++j)\n                        object.animationdatas[j] = $root.op_gameconfig_01.AnimationData.toObject(message.animationdatas[j], options);\n                }\n                if (message.button && message.button.length) {\n                    object.button = [];\n                    for (var j = 0; j < message.button.length; ++j)\n                        object.button[j] = $root.op_gameconfig_01.Button.toObject(message.button[j], options);\n                }\n                if (message.settings != null && message.hasOwnProperty("settings"))\n                    object.settings = $root.op_gameconfig_01.Settings.toObject(message.settings, options);\n                if (message.text && message.text.length) {\n                    object.text = [];\n                    for (var j = 0; j < message.text.length; ++j)\n                        object.text[j] = $root.op_gameconfig_01.Text.toObject(message.text[j], options);\n                }\n                if (message.spawnpoint && message.spawnpoint.length) {\n                    object.spawnpoint = [];\n                    for (var j = 0; j < message.spawnpoint.length; ++j)\n                        object.spawnpoint[j] = $root.op_gameconfig_01.SpawnPoint.toObject(message.spawnpoint[j], options);\n                }\n                if (message.access && message.access.length) {\n                    object.access = [];\n                    for (var j = 0; j < message.access.length; ++j)\n                        object.access[j] = $root.op_gameconfig_01.Access.toObject(message.access[j], options);\n                }\n                if (message.commodities && message.commodities.length) {\n                    object.commodities = [];\n                    for (var j = 0; j < message.commodities.length; ++j)\n                        object.commodities[j] = $root.op_gameconfig_01.Commodity.toObject(message.commodities[j], options);\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this Game to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig_01.Game\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Game.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Game;\n        })();\n    \n        op_gameconfig_01.Settings = (function() {\n    \n            /**\n             * Properties of a Settings.\n             * @memberof op_gameconfig_01\n             * @interface ISettings\n             * @property {op_gameconfig_01.INode} node Settings node\n             * @property {number|null} [maxNumber] Settings maxNumber\n             * @property {number} spawnpointid Settings spawnpointid\n             * @property {op_def.KeyCode|null} [voiceKeycode] Settings voiceKeycode\n             */\n    \n            /**\n             * Constructs a new Settings.\n             * @memberof op_gameconfig_01\n             * @classdesc Represents a Settings.\n             * @implements ISettings\n             * @constructor\n             * @param {op_gameconfig_01.ISettings=} [properties] Properties to set\n             */\n            function Settings(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Settings node.\n             * @member {op_gameconfig_01.INode} node\n             * @memberof op_gameconfig_01.Settings\n             * @instance\n             */\n            Settings.prototype.node = null;\n    \n            /**\n             * Settings maxNumber.\n             * @member {number} maxNumber\n             * @memberof op_gameconfig_01.Settings\n             * @instance\n             */\n            Settings.prototype.maxNumber = 0;\n    \n            /**\n             * Settings spawnpointid.\n             * @member {number} spawnpointid\n             * @memberof op_gameconfig_01.Settings\n             * @instance\n             */\n            Settings.prototype.spawnpointid = 0;\n    \n            /**\n             * Settings voiceKeycode.\n             * @member {op_def.KeyCode} voiceKeycode\n             * @memberof op_gameconfig_01.Settings\n             * @instance\n             */\n            Settings.prototype.voiceKeycode = -1;\n    \n            /**\n             * Creates a new Settings instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig_01.Settings\n             * @static\n             * @param {op_gameconfig_01.ISettings=} [properties] Properties to set\n             * @returns {op_gameconfig_01.Settings} Settings instance\n             */\n            Settings.create = function create(properties) {\n                return new Settings(properties);\n            };\n    \n            /**\n             * Encodes the specified Settings message. Does not implicitly {@link op_gameconfig_01.Settings.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig_01.Settings\n             * @static\n             * @param {op_gameconfig_01.ISettings} message Settings message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Settings.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                $root.op_gameconfig_01.Node.encode(message.node, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.maxNumber != null && message.hasOwnProperty("maxNumber"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.maxNumber);\n                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.spawnpointid);\n                if (message.voiceKeycode != null && message.hasOwnProperty("voiceKeycode"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.voiceKeycode);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Settings message, length delimited. Does not implicitly {@link op_gameconfig_01.Settings.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig_01.Settings\n             * @static\n             * @param {op_gameconfig_01.ISettings} message Settings message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Settings.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a Settings message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig_01.Settings\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig_01.Settings} Settings\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Settings.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig_01.Settings();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.node = $root.op_gameconfig_01.Node.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        message.maxNumber = reader.int32();\n                        break;\n                    case 3:\n                        message.spawnpointid = reader.int32();\n                        break;\n                    case 4:\n                        message.voiceKeycode = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("node"))\n                    throw $util.ProtocolError("missing required \'node\'", { instance: message });\n                if (!message.hasOwnProperty("spawnpointid"))\n                    throw $util.ProtocolError("missing required \'spawnpointid\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a Settings message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig_01.Settings\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig_01.Settings} Settings\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Settings.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a Settings message.\n             * @function verify\n             * @memberof op_gameconfig_01.Settings\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Settings.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                {\n                    var error = $root.op_gameconfig_01.Node.verify(message.node);\n                    if (error)\n                        return "node." + error;\n                }\n                if (message.maxNumber != null && message.hasOwnProperty("maxNumber"))\n                    if (!$util.isInteger(message.maxNumber))\n                        return "maxNumber: integer expected";\n                if (!$util.isInteger(message.spawnpointid))\n                    return "spawnpointid: integer expected";\n                if (message.voiceKeycode != null && message.hasOwnProperty("voiceKeycode"))\n                    switch (message.voiceKeycode) {\n                    default:\n                        return "voiceKeycode: enum value expected";\n                    case -1:\n                    case 65:\n                    case 66:\n                    case 67:\n                    case 68:\n                    case 69:\n                    case 70:\n                    case 71:\n                    case 72:\n                    case 73:\n                    case 74:\n                    case 75:\n                    case 76:\n                    case 77:\n                    case 78:\n                    case 79:\n                    case 80:\n                    case 81:\n                    case 82:\n                    case 83:\n                    case 84:\n                    case 85:\n                    case 86:\n                    case 87:\n                    case 88:\n                    case 89:\n                    case 90:\n                    case 48:\n                    case 49:\n                    case 50:\n                    case 51:\n                    case 52:\n                    case 53:\n                    case 54:\n                    case 55:\n                    case 56:\n                    case 57:\n                    case 96:\n                    case 97:\n                    case 98:\n                    case 99:\n                    case 100:\n                    case 101:\n                    case 102:\n                    case 103:\n                    case 104:\n                    case 105:\n                    case 106:\n                    case 107:\n                    case 108:\n                    case 109:\n                    case 110:\n                    case 111:\n                    case 112:\n                    case 113:\n                    case 114:\n                    case 115:\n                    case 116:\n                    case 117:\n                    case 118:\n                    case 119:\n                    case 120:\n                    case 121:\n                    case 122:\n                    case 123:\n                    case 124:\n                    case 125:\n                    case 126:\n                    case 186:\n                    case 187:\n                    case 188:\n                    case 189:\n                    case 190:\n                    case 191:\n                    case 192:\n                    case 219:\n                    case 220:\n                    case 221:\n                    case 222:\n                    case 8:\n                    case 9:\n                    case 12:\n                    case 13:\n                    case 16:\n                    case 17:\n                    case 18:\n                    case 20:\n                    case 27:\n                    case 32:\n                    case 33:\n                    case 34:\n                    case 35:\n                    case 36:\n                    case 37:\n                    case 38:\n                    case 39:\n                    case 40:\n                    case 43:\n                    case 44:\n                    case 45:\n                    case 46:\n                    case 47:\n                    case 144:\n                        break;\n                    }\n                return null;\n            };\n    \n            /**\n             * Creates a Settings message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig_01.Settings\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig_01.Settings} Settings\n             */\n            Settings.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig_01.Settings)\n                    return object;\n                var message = new $root.op_gameconfig_01.Settings();\n                if (object.node != null) {\n                    if (typeof object.node !== "object")\n                        throw TypeError(".op_gameconfig_01.Settings.node: object expected");\n                    message.node = $root.op_gameconfig_01.Node.fromObject(object.node);\n                }\n                if (object.maxNumber != null)\n                    message.maxNumber = object.maxNumber | 0;\n                if (object.spawnpointid != null)\n                    message.spawnpointid = object.spawnpointid | 0;\n                switch (object.voiceKeycode) {\n                case "Unknown":\n                case -1:\n                    message.voiceKeycode = -1;\n                    break;\n                case "A":\n                case 65:\n                    message.voiceKeycode = 65;\n                    break;\n                case "B":\n                case 66:\n                    message.voiceKeycode = 66;\n                    break;\n                case "C":\n                case 67:\n                    message.voiceKeycode = 67;\n                    break;\n                case "D":\n                case 68:\n                    message.voiceKeycode = 68;\n                    break;\n                case "E":\n                case 69:\n                    message.voiceKeycode = 69;\n                    break;\n                case "F":\n                case 70:\n                    message.voiceKeycode = 70;\n                    break;\n                case "G":\n                case 71:\n                    message.voiceKeycode = 71;\n                    break;\n                case "H":\n                case 72:\n                    message.voiceKeycode = 72;\n                    break;\n                case "I":\n                case 73:\n                    message.voiceKeycode = 73;\n                    break;\n                case "J":\n                case 74:\n                    message.voiceKeycode = 74;\n                    break;\n                case "K":\n                case 75:\n                    message.voiceKeycode = 75;\n                    break;\n                case "L":\n                case 76:\n                    message.voiceKeycode = 76;\n                    break;\n                case "M":\n                case 77:\n                    message.voiceKeycode = 77;\n                    break;\n                case "N":\n                case 78:\n                    message.voiceKeycode = 78;\n                    break;\n                case "O":\n                case 79:\n                    message.voiceKeycode = 79;\n                    break;\n                case "P":\n                case 80:\n                    message.voiceKeycode = 80;\n                    break;\n                case "Q":\n                case 81:\n                    message.voiceKeycode = 81;\n                    break;\n                case "R":\n                case 82:\n                    message.voiceKeycode = 82;\n                    break;\n                case "S":\n                case 83:\n                    message.voiceKeycode = 83;\n                    break;\n                case "T":\n                case 84:\n                    message.voiceKeycode = 84;\n                    break;\n                case "U":\n                case 85:\n                    message.voiceKeycode = 85;\n                    break;\n                case "V":\n                case 86:\n                    message.voiceKeycode = 86;\n                    break;\n                case "W":\n                case 87:\n                    message.voiceKeycode = 87;\n                    break;\n                case "X":\n                case 88:\n                    message.voiceKeycode = 88;\n                    break;\n                case "Y":\n                case 89:\n                    message.voiceKeycode = 89;\n                    break;\n                case "Z":\n                case 90:\n                    message.voiceKeycode = 90;\n                    break;\n                case "ZERO":\n                case 48:\n                    message.voiceKeycode = 48;\n                    break;\n                case "ONE":\n                case 49:\n                    message.voiceKeycode = 49;\n                    break;\n                case "TWO":\n                case 50:\n                    message.voiceKeycode = 50;\n                    break;\n                case "THREE":\n                case 51:\n                    message.voiceKeycode = 51;\n                    break;\n                case "FOUR":\n                case 52:\n                    message.voiceKeycode = 52;\n                    break;\n                case "FIVE":\n                case 53:\n                    message.voiceKeycode = 53;\n                    break;\n                case "SIX":\n                case 54:\n                    message.voiceKeycode = 54;\n                    break;\n                case "SEVEN":\n                case 55:\n                    message.voiceKeycode = 55;\n                    break;\n                case "EIGHT":\n                case 56:\n                    message.voiceKeycode = 56;\n                    break;\n                case "NINE":\n                case 57:\n                    message.voiceKeycode = 57;\n                    break;\n                case "NUMPAD_0":\n                case 96:\n                    message.voiceKeycode = 96;\n                    break;\n                case "NUMPAD_1":\n                case 97:\n                    message.voiceKeycode = 97;\n                    break;\n                case "NUMPAD_2":\n                case 98:\n                    message.voiceKeycode = 98;\n                    break;\n                case "NUMPAD_3":\n                case 99:\n                    message.voiceKeycode = 99;\n                    break;\n                case "NUMPAD_4":\n                case 100:\n                    message.voiceKeycode = 100;\n                    break;\n                case "NUMPAD_5":\n                case 101:\n                    message.voiceKeycode = 101;\n                    break;\n                case "NUMPAD_6":\n                case 102:\n                    message.voiceKeycode = 102;\n                    break;\n                case "NUMPAD_7":\n                case 103:\n                    message.voiceKeycode = 103;\n                    break;\n                case "NUMPAD_8":\n                case 104:\n                    message.voiceKeycode = 104;\n                    break;\n                case "NUMPAD_9":\n                case 105:\n                    message.voiceKeycode = 105;\n                    break;\n                case "NUMPAD_MULTIPLY":\n                case 106:\n                    message.voiceKeycode = 106;\n                    break;\n                case "NUMPAD_ADD":\n                case 107:\n                    message.voiceKeycode = 107;\n                    break;\n                case "NUMPAD_ENTER":\n                case 108:\n                    message.voiceKeycode = 108;\n                    break;\n                case "NUMPAD_SUBTRACT":\n                case 109:\n                    message.voiceKeycode = 109;\n                    break;\n                case "NUMPAD_DECIMAL":\n                case 110:\n                    message.voiceKeycode = 110;\n                    break;\n                case "NUMPAD_DIVIDE":\n                case 111:\n                    message.voiceKeycode = 111;\n                    break;\n                case "F1":\n                case 112:\n                    message.voiceKeycode = 112;\n                    break;\n                case "F2":\n                case 113:\n                    message.voiceKeycode = 113;\n                    break;\n                case "F3":\n                case 114:\n                    message.voiceKeycode = 114;\n                    break;\n                case "F4":\n                case 115:\n                    message.voiceKeycode = 115;\n                    break;\n                case "F5":\n                case 116:\n                    message.voiceKeycode = 116;\n                    break;\n                case "F6":\n                case 117:\n                    message.voiceKeycode = 117;\n                    break;\n                case "F7":\n                case 118:\n                    message.voiceKeycode = 118;\n                    break;\n                case "F8":\n                case 119:\n                    message.voiceKeycode = 119;\n                    break;\n                case "F9":\n                case 120:\n                    message.voiceKeycode = 120;\n                    break;\n                case "F10":\n                case 121:\n                    message.voiceKeycode = 121;\n                    break;\n                case "F11":\n                case 122:\n                    message.voiceKeycode = 122;\n                    break;\n                case "F12":\n                case 123:\n                    message.voiceKeycode = 123;\n                    break;\n                case "F13":\n                case 124:\n                    message.voiceKeycode = 124;\n                    break;\n                case "F14":\n                case 125:\n                    message.voiceKeycode = 125;\n                    break;\n                case "F15":\n                case 126:\n                    message.voiceKeycode = 126;\n                    break;\n                case "COLON":\n                case 186:\n                    message.voiceKeycode = 186;\n                    break;\n                case "EQUALS":\n                case 187:\n                    message.voiceKeycode = 187;\n                    break;\n                case "COMMA":\n                case 188:\n                    message.voiceKeycode = 188;\n                    break;\n                case "UNDERSCORE":\n                case 189:\n                    message.voiceKeycode = 189;\n                    break;\n                case "PERIOD":\n                case 190:\n                    message.voiceKeycode = 190;\n                    break;\n                case "QUESTION_MARK":\n                case 191:\n                    message.voiceKeycode = 191;\n                    break;\n                case "TILDE":\n                case 192:\n                    message.voiceKeycode = 192;\n                    break;\n                case "OPEN_BRACKET":\n                case 219:\n                    message.voiceKeycode = 219;\n                    break;\n                case "BACKWARD_SLASH":\n                case 220:\n                    message.voiceKeycode = 220;\n                    break;\n                case "CLOSED_BRACKET":\n                case 221:\n                    message.voiceKeycode = 221;\n                    break;\n                case "QUOTES":\n                case 222:\n                    message.voiceKeycode = 222;\n                    break;\n                case "BACKSPACE":\n                case 8:\n                    message.voiceKeycode = 8;\n                    break;\n                case "TAB":\n                case 9:\n                    message.voiceKeycode = 9;\n                    break;\n                case "CLEAR":\n                case 12:\n                    message.voiceKeycode = 12;\n                    break;\n                case "ENTER":\n                case 13:\n                    message.voiceKeycode = 13;\n                    break;\n                case "SHIFT":\n                case 16:\n                    message.voiceKeycode = 16;\n                    break;\n                case "CONTROL":\n                case 17:\n                    message.voiceKeycode = 17;\n                    break;\n                case "ALT":\n                case 18:\n                    message.voiceKeycode = 18;\n                    break;\n                case "CAPS_LOCK":\n                case 20:\n                    message.voiceKeycode = 20;\n                    break;\n                case "ESC":\n                case 27:\n                    message.voiceKeycode = 27;\n                    break;\n                case "SPACEBAR":\n                case 32:\n                    message.voiceKeycode = 32;\n                    break;\n                case "PAGE_UP":\n                case 33:\n                    message.voiceKeycode = 33;\n                    break;\n                case "PAGE_DOWN":\n                case 34:\n                    message.voiceKeycode = 34;\n                    break;\n                case "END":\n                case 35:\n                    message.voiceKeycode = 35;\n                    break;\n                case "HOME":\n                case 36:\n                    message.voiceKeycode = 36;\n                    break;\n                case "KB_LEFT":\n                case 37:\n                    message.voiceKeycode = 37;\n                    break;\n                case "KB_UP":\n                case 38:\n                    message.voiceKeycode = 38;\n                    break;\n                case "KB_RIGHT":\n                case 39:\n                    message.voiceKeycode = 39;\n                    break;\n                case "KB_DOWN":\n                case 40:\n                    message.voiceKeycode = 40;\n                    break;\n                case "PLUS":\n                case 43:\n                    message.voiceKeycode = 43;\n                    break;\n                case "MINUS":\n                case 44:\n                    message.voiceKeycode = 44;\n                    break;\n                case "INSERT":\n                case 45:\n                    message.voiceKeycode = 45;\n                    break;\n                case "DELETE":\n                case 46:\n                    message.voiceKeycode = 46;\n                    break;\n                case "HELP":\n                case 47:\n                    message.voiceKeycode = 47;\n                    break;\n                case "NUM_LOCK":\n                case 144:\n                    message.voiceKeycode = 144;\n                    break;\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a Settings message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig_01.Settings\n             * @static\n             * @param {op_gameconfig_01.Settings} message Settings\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Settings.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.node = null;\n                    object.maxNumber = 0;\n                    object.spawnpointid = 0;\n                    object.voiceKeycode = options.enums === String ? "Unknown" : -1;\n                }\n                if (message.node != null && message.hasOwnProperty("node"))\n                    object.node = $root.op_gameconfig_01.Node.toObject(message.node, options);\n                if (message.maxNumber != null && message.hasOwnProperty("maxNumber"))\n                    object.maxNumber = message.maxNumber;\n                if (message.spawnpointid != null && message.hasOwnProperty("spawnpointid"))\n                    object.spawnpointid = message.spawnpointid;\n                if (message.voiceKeycode != null && message.hasOwnProperty("voiceKeycode"))\n                    object.voiceKeycode = options.enums === String ? $root.op_def.KeyCode[message.voiceKeycode] : message.voiceKeycode;\n                return object;\n            };\n    \n            /**\n             * Converts this Settings to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig_01.Settings\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Settings.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Settings;\n        })();\n    \n        op_gameconfig_01.Camp = (function() {\n    \n            /**\n             * Properties of a Camp.\n             * @memberof op_gameconfig_01\n             * @interface ICamp\n             * @property {op_gameconfig_01.INode} node Camp node\n             * @property {number|null} [maxNumber] Camp maxNumber\n             */\n    \n            /**\n             * Constructs a new Camp.\n             * @memberof op_gameconfig_01\n             * @classdesc Represents a Camp.\n             * @implements ICamp\n             * @constructor\n             * @param {op_gameconfig_01.ICamp=} [properties] Properties to set\n             */\n            function Camp(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Camp node.\n             * @member {op_gameconfig_01.INode} node\n             * @memberof op_gameconfig_01.Camp\n             * @instance\n             */\n            Camp.prototype.node = null;\n    \n            /**\n             * Camp maxNumber.\n             * @member {number} maxNumber\n             * @memberof op_gameconfig_01.Camp\n             * @instance\n             */\n            Camp.prototype.maxNumber = 0;\n    \n            /**\n             * Creates a new Camp instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig_01.Camp\n             * @static\n             * @param {op_gameconfig_01.ICamp=} [properties] Properties to set\n             * @returns {op_gameconfig_01.Camp} Camp instance\n             */\n            Camp.create = function create(properties) {\n                return new Camp(properties);\n            };\n    \n            /**\n             * Encodes the specified Camp message. Does not implicitly {@link op_gameconfig_01.Camp.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig_01.Camp\n             * @static\n             * @param {op_gameconfig_01.ICamp} message Camp message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Camp.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                $root.op_gameconfig_01.Node.encode(message.node, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.maxNumber != null && message.hasOwnProperty("maxNumber"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.maxNumber);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Camp message, length delimited. Does not implicitly {@link op_gameconfig_01.Camp.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig_01.Camp\n             * @static\n             * @param {op_gameconfig_01.ICamp} message Camp message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Camp.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a Camp message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig_01.Camp\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig_01.Camp} Camp\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Camp.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig_01.Camp();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.node = $root.op_gameconfig_01.Node.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        message.maxNumber = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("node"))\n                    throw $util.ProtocolError("missing required \'node\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a Camp message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig_01.Camp\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig_01.Camp} Camp\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Camp.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a Camp message.\n             * @function verify\n             * @memberof op_gameconfig_01.Camp\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Camp.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                {\n                    var error = $root.op_gameconfig_01.Node.verify(message.node);\n                    if (error)\n                        return "node." + error;\n                }\n                if (message.maxNumber != null && message.hasOwnProperty("maxNumber"))\n                    if (!$util.isInteger(message.maxNumber))\n                        return "maxNumber: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a Camp message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig_01.Camp\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig_01.Camp} Camp\n             */\n            Camp.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig_01.Camp)\n                    return object;\n                var message = new $root.op_gameconfig_01.Camp();\n                if (object.node != null) {\n                    if (typeof object.node !== "object")\n                        throw TypeError(".op_gameconfig_01.Camp.node: object expected");\n                    message.node = $root.op_gameconfig_01.Node.fromObject(object.node);\n                }\n                if (object.maxNumber != null)\n                    message.maxNumber = object.maxNumber | 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a Camp message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig_01.Camp\n             * @static\n             * @param {op_gameconfig_01.Camp} message Camp\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Camp.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.node = null;\n                    object.maxNumber = 0;\n                }\n                if (message.node != null && message.hasOwnProperty("node"))\n                    object.node = $root.op_gameconfig_01.Node.toObject(message.node, options);\n                if (message.maxNumber != null && message.hasOwnProperty("maxNumber"))\n                    object.maxNumber = message.maxNumber;\n                return object;\n            };\n    \n            /**\n             * Converts this Camp to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig_01.Camp\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Camp.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Camp;\n        })();\n    \n        op_gameconfig_01.Avatar = (function() {\n    \n            /**\n             * Properties of an Avatar.\n             * @memberof op_gameconfig_01\n             * @interface IAvatar\n             * @property {op_gameconfig_01.INode} node Avatar node\n             * @property {Array.<number>|null} [dirable] Avatar dirable\n             * @property {number} defaultDir Avatar defaultDir\n             * @property {string|null} [backboneId] Avatar backboneId\n             * @property {string|null} [headBaseId] Avatar headBaseId\n             * @property {string|null} [headHairId] Avatar headHairId\n             * @property {string|null} [headEyesId] Avatar headEyesId\n             * @property {string|null} [headBackId] Avatar headBackId\n             * @property {string|null} [headMousId] Avatar headMousId\n             * @property {string|null} [headHatsId] Avatar headHatsId\n             * @property {string|null} [headMaskId] Avatar headMaskId\n             * @property {string|null} [headSpecId] Avatar headSpecId\n             * @property {string|null} [bodyBaseId] Avatar bodyBaseId\n             * @property {string|null} [bodyCostId] Avatar bodyCostId\n             * @property {string|null} [bodyDresId] Avatar bodyDresId\n             * @property {string|null} [bodyTailId] Avatar bodyTailId\n             * @property {string|null} [bodyWingId] Avatar bodyWingId\n             * @property {string|null} [bodySpecId] Avatar bodySpecId\n             * @property {string|null} [farmBaseId] Avatar farmBaseId\n             * @property {string|null} [farmCostId] Avatar farmCostId\n             * @property {string|null} [farmShldId] Avatar farmShldId\n             * @property {string|null} [farmWeapId] Avatar farmWeapId\n             * @property {string|null} [farmSpecId] Avatar farmSpecId\n             * @property {string|null} [barmBaseId] Avatar barmBaseId\n             * @property {string|null} [barmCostId] Avatar barmCostId\n             * @property {string|null} [barmShldId] Avatar barmShldId\n             * @property {string|null} [barmWeapId] Avatar barmWeapId\n             * @property {string|null} [barmSpecId] Avatar barmSpecId\n             * @property {string|null} [flegBaseId] Avatar flegBaseId\n             * @property {string|null} [flegCostId] Avatar flegCostId\n             * @property {string|null} [flegSpecId] Avatar flegSpecId\n             * @property {string|null} [blegBaseId] Avatar blegBaseId\n             * @property {string|null} [blegCostId] Avatar blegCostId\n             * @property {string|null} [blegSpecId] Avatar blegSpecId\n             */\n    \n            /**\n             * Constructs a new Avatar.\n             * @memberof op_gameconfig_01\n             * @classdesc Represents an Avatar.\n             * @implements IAvatar\n             * @constructor\n             * @param {op_gameconfig_01.IAvatar=} [properties] Properties to set\n             */\n            function Avatar(properties) {\n                this.dirable = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Avatar node.\n             * @member {op_gameconfig_01.INode} node\n             * @memberof op_gameconfig_01.Avatar\n             * @instance\n             */\n            Avatar.prototype.node = null;\n    \n            /**\n             * Avatar dirable.\n             * @member {Array.<number>} dirable\n             * @memberof op_gameconfig_01.Avatar\n             * @instance\n             */\n            Avatar.prototype.dirable = $util.emptyArray;\n    \n            /**\n             * Avatar defaultDir.\n             * @member {number} defaultDir\n             * @memberof op_gameconfig_01.Avatar\n             * @instance\n             */\n            Avatar.prototype.defaultDir = 0;\n    \n            /**\n             * Avatar backboneId.\n             * @member {string} backboneId\n             * @memberof op_gameconfig_01.Avatar\n             * @instance\n             */\n            Avatar.prototype.backboneId = "";\n    \n            /**\n             * Avatar headBaseId.\n             * @member {string} headBaseId\n             * @memberof op_gameconfig_01.Avatar\n             * @instance\n             */\n            Avatar.prototype.headBaseId = "";\n    \n            /**\n             * Avatar headHairId.\n             * @member {string} headHairId\n             * @memberof op_gameconfig_01.Avatar\n             * @instance\n             */\n            Avatar.prototype.headHairId = "";\n    \n            /**\n             * Avatar headEyesId.\n             * @member {string} headEyesId\n             * @memberof op_gameconfig_01.Avatar\n             * @instance\n             */\n            Avatar.prototype.headEyesId = "";\n    \n            /**\n             * Avatar headBackId.\n             * @member {string} headBackId\n             * @memberof op_gameconfig_01.Avatar\n             * @instance\n             */\n            Avatar.prototype.headBackId = "";\n    \n            /**\n             * Avatar headMousId.\n             * @member {string} headMousId\n             * @memberof op_gameconfig_01.Avatar\n             * @instance\n             */\n            Avatar.prototype.headMousId = "";\n    \n            /**\n             * Avatar headHatsId.\n             * @member {string} headHatsId\n             * @memberof op_gameconfig_01.Avatar\n             * @instance\n             */\n            Avatar.prototype.headHatsId = "";\n    \n            /**\n             * Avatar headMaskId.\n             * @member {string} headMaskId\n             * @memberof op_gameconfig_01.Avatar\n             * @instance\n             */\n            Avatar.prototype.headMaskId = "";\n    \n            /**\n             * Avatar headSpecId.\n             * @member {string} headSpecId\n             * @memberof op_gameconfig_01.Avatar\n             * @instance\n             */\n            Avatar.prototype.headSpecId = "";\n    \n            /**\n             * Avatar bodyBaseId.\n             * @member {string} bodyBaseId\n             * @memberof op_gameconfig_01.Avatar\n             * @instance\n             */\n            Avatar.prototype.bodyBaseId = "";\n    \n            /**\n             * Avatar bodyCostId.\n             * @member {string} bodyCostId\n             * @memberof op_gameconfig_01.Avatar\n             * @instance\n             */\n            Avatar.prototype.bodyCostId = "";\n    \n            /**\n             * Avatar bodyDresId.\n             * @member {string} bodyDresId\n             * @memberof op_gameconfig_01.Avatar\n             * @instance\n             */\n            Avatar.prototype.bodyDresId = "";\n    \n            /**\n             * Avatar bodyTailId.\n             * @member {string} bodyTailId\n             * @memberof op_gameconfig_01.Avatar\n             * @instance\n             */\n            Avatar.prototype.bodyTailId = "";\n    \n            /**\n             * Avatar bodyWingId.\n             * @member {string} bodyWingId\n             * @memberof op_gameconfig_01.Avatar\n             * @instance\n             */\n            Avatar.prototype.bodyWingId = "";\n    \n            /**\n             * Avatar bodySpecId.\n             * @member {string} bodySpecId\n             * @memberof op_gameconfig_01.Avatar\n             * @instance\n             */\n            Avatar.prototype.bodySpecId = "";\n    \n            /**\n             * Avatar farmBaseId.\n             * @member {string} farmBaseId\n             * @memberof op_gameconfig_01.Avatar\n             * @instance\n             */\n            Avatar.prototype.farmBaseId = "";\n    \n            /**\n             * Avatar farmCostId.\n             * @member {string} farmCostId\n             * @memberof op_gameconfig_01.Avatar\n             * @instance\n             */\n            Avatar.prototype.farmCostId = "";\n    \n            /**\n             * Avatar farmShldId.\n             * @member {string} farmShldId\n             * @memberof op_gameconfig_01.Avatar\n             * @instance\n             */\n            Avatar.prototype.farmShldId = "";\n    \n            /**\n             * Avatar farmWeapId.\n             * @member {string} farmWeapId\n             * @memberof op_gameconfig_01.Avatar\n             * @instance\n             */\n            Avatar.prototype.farmWeapId = "";\n    \n            /**\n             * Avatar farmSpecId.\n             * @member {string} farmSpecId\n             * @memberof op_gameconfig_01.Avatar\n             * @instance\n             */\n            Avatar.prototype.farmSpecId = "";\n    \n            /**\n             * Avatar barmBaseId.\n             * @member {string} barmBaseId\n             * @memberof op_gameconfig_01.Avatar\n             * @instance\n             */\n            Avatar.prototype.barmBaseId = "";\n    \n            /**\n             * Avatar barmCostId.\n             * @member {string} barmCostId\n             * @memberof op_gameconfig_01.Avatar\n             * @instance\n             */\n            Avatar.prototype.barmCostId = "";\n    \n            /**\n             * Avatar barmShldId.\n             * @member {string} barmShldId\n             * @memberof op_gameconfig_01.Avatar\n             * @instance\n             */\n            Avatar.prototype.barmShldId = "";\n    \n            /**\n             * Avatar barmWeapId.\n             * @member {string} barmWeapId\n             * @memberof op_gameconfig_01.Avatar\n             * @instance\n             */\n            Avatar.prototype.barmWeapId = "";\n    \n            /**\n             * Avatar barmSpecId.\n             * @member {string} barmSpecId\n             * @memberof op_gameconfig_01.Avatar\n             * @instance\n             */\n            Avatar.prototype.barmSpecId = "";\n    \n            /**\n             * Avatar flegBaseId.\n             * @member {string} flegBaseId\n             * @memberof op_gameconfig_01.Avatar\n             * @instance\n             */\n            Avatar.prototype.flegBaseId = "";\n    \n            /**\n             * Avatar flegCostId.\n             * @member {string} flegCostId\n             * @memberof op_gameconfig_01.Avatar\n             * @instance\n             */\n            Avatar.prototype.flegCostId = "";\n    \n            /**\n             * Avatar flegSpecId.\n             * @member {string} flegSpecId\n             * @memberof op_gameconfig_01.Avatar\n             * @instance\n             */\n            Avatar.prototype.flegSpecId = "";\n    \n            /**\n             * Avatar blegBaseId.\n             * @member {string} blegBaseId\n             * @memberof op_gameconfig_01.Avatar\n             * @instance\n             */\n            Avatar.prototype.blegBaseId = "";\n    \n            /**\n             * Avatar blegCostId.\n             * @member {string} blegCostId\n             * @memberof op_gameconfig_01.Avatar\n             * @instance\n             */\n            Avatar.prototype.blegCostId = "";\n    \n            /**\n             * Avatar blegSpecId.\n             * @member {string} blegSpecId\n             * @memberof op_gameconfig_01.Avatar\n             * @instance\n             */\n            Avatar.prototype.blegSpecId = "";\n    \n            /**\n             * Creates a new Avatar instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig_01.Avatar\n             * @static\n             * @param {op_gameconfig_01.IAvatar=} [properties] Properties to set\n             * @returns {op_gameconfig_01.Avatar} Avatar instance\n             */\n            Avatar.create = function create(properties) {\n                return new Avatar(properties);\n            };\n    \n            /**\n             * Encodes the specified Avatar message. Does not implicitly {@link op_gameconfig_01.Avatar.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig_01.Avatar\n             * @static\n             * @param {op_gameconfig_01.IAvatar} message Avatar message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Avatar.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                $root.op_gameconfig_01.Node.encode(message.node, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.headBaseId != null && message.hasOwnProperty("headBaseId"))\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.headBaseId);\n                if (message.headHairId != null && message.hasOwnProperty("headHairId"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.headHairId);\n                if (message.headEyesId != null && message.hasOwnProperty("headEyesId"))\n                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.headEyesId);\n                if (message.headBackId != null && message.hasOwnProperty("headBackId"))\n                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.headBackId);\n                if (message.headMousId != null && message.hasOwnProperty("headMousId"))\n                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.headMousId);\n                if (message.headHatsId != null && message.hasOwnProperty("headHatsId"))\n                    writer.uint32(/* id 7, wireType 2 =*/58).string(message.headHatsId);\n                if (message.headMaskId != null && message.hasOwnProperty("headMaskId"))\n                    writer.uint32(/* id 8, wireType 2 =*/66).string(message.headMaskId);\n                if (message.headSpecId != null && message.hasOwnProperty("headSpecId"))\n                    writer.uint32(/* id 9, wireType 2 =*/74).string(message.headSpecId);\n                if (message.bodyBaseId != null && message.hasOwnProperty("bodyBaseId"))\n                    writer.uint32(/* id 11, wireType 2 =*/90).string(message.bodyBaseId);\n                if (message.bodyCostId != null && message.hasOwnProperty("bodyCostId"))\n                    writer.uint32(/* id 12, wireType 2 =*/98).string(message.bodyCostId);\n                if (message.bodyDresId != null && message.hasOwnProperty("bodyDresId"))\n                    writer.uint32(/* id 13, wireType 2 =*/106).string(message.bodyDresId);\n                if (message.bodyTailId != null && message.hasOwnProperty("bodyTailId"))\n                    writer.uint32(/* id 14, wireType 2 =*/114).string(message.bodyTailId);\n                if (message.bodyWingId != null && message.hasOwnProperty("bodyWingId"))\n                    writer.uint32(/* id 15, wireType 2 =*/122).string(message.bodyWingId);\n                if (message.bodySpecId != null && message.hasOwnProperty("bodySpecId"))\n                    writer.uint32(/* id 16, wireType 2 =*/130).string(message.bodySpecId);\n                if (message.farmBaseId != null && message.hasOwnProperty("farmBaseId"))\n                    writer.uint32(/* id 21, wireType 2 =*/170).string(message.farmBaseId);\n                if (message.farmCostId != null && message.hasOwnProperty("farmCostId"))\n                    writer.uint32(/* id 22, wireType 2 =*/178).string(message.farmCostId);\n                if (message.farmShldId != null && message.hasOwnProperty("farmShldId"))\n                    writer.uint32(/* id 23, wireType 2 =*/186).string(message.farmShldId);\n                if (message.farmWeapId != null && message.hasOwnProperty("farmWeapId"))\n                    writer.uint32(/* id 24, wireType 2 =*/194).string(message.farmWeapId);\n                if (message.farmSpecId != null && message.hasOwnProperty("farmSpecId"))\n                    writer.uint32(/* id 25, wireType 2 =*/202).string(message.farmSpecId);\n                if (message.barmBaseId != null && message.hasOwnProperty("barmBaseId"))\n                    writer.uint32(/* id 31, wireType 2 =*/250).string(message.barmBaseId);\n                if (message.barmCostId != null && message.hasOwnProperty("barmCostId"))\n                    writer.uint32(/* id 32, wireType 2 =*/258).string(message.barmCostId);\n                if (message.barmShldId != null && message.hasOwnProperty("barmShldId"))\n                    writer.uint32(/* id 33, wireType 2 =*/266).string(message.barmShldId);\n                if (message.barmWeapId != null && message.hasOwnProperty("barmWeapId"))\n                    writer.uint32(/* id 34, wireType 2 =*/274).string(message.barmWeapId);\n                if (message.barmSpecId != null && message.hasOwnProperty("barmSpecId"))\n                    writer.uint32(/* id 35, wireType 2 =*/282).string(message.barmSpecId);\n                if (message.flegBaseId != null && message.hasOwnProperty("flegBaseId"))\n                    writer.uint32(/* id 41, wireType 2 =*/330).string(message.flegBaseId);\n                if (message.flegCostId != null && message.hasOwnProperty("flegCostId"))\n                    writer.uint32(/* id 42, wireType 2 =*/338).string(message.flegCostId);\n                if (message.flegSpecId != null && message.hasOwnProperty("flegSpecId"))\n                    writer.uint32(/* id 43, wireType 2 =*/346).string(message.flegSpecId);\n                if (message.blegBaseId != null && message.hasOwnProperty("blegBaseId"))\n                    writer.uint32(/* id 51, wireType 2 =*/410).string(message.blegBaseId);\n                if (message.blegCostId != null && message.hasOwnProperty("blegCostId"))\n                    writer.uint32(/* id 52, wireType 2 =*/418).string(message.blegCostId);\n                if (message.blegSpecId != null && message.hasOwnProperty("blegSpecId"))\n                    writer.uint32(/* id 53, wireType 2 =*/426).string(message.blegSpecId);\n                if (message.dirable != null && message.dirable.length)\n                    for (var i = 0; i < message.dirable.length; ++i)\n                        writer.uint32(/* id 80, wireType 0 =*/640).int32(message.dirable[i]);\n                writer.uint32(/* id 81, wireType 0 =*/648).int32(message.defaultDir);\n                if (message.backboneId != null && message.hasOwnProperty("backboneId"))\n                    writer.uint32(/* id 82, wireType 2 =*/658).string(message.backboneId);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Avatar message, length delimited. Does not implicitly {@link op_gameconfig_01.Avatar.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig_01.Avatar\n             * @static\n             * @param {op_gameconfig_01.IAvatar} message Avatar message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Avatar.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes an Avatar message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig_01.Avatar\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig_01.Avatar} Avatar\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Avatar.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig_01.Avatar();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.node = $root.op_gameconfig_01.Node.decode(reader, reader.uint32());\n                        break;\n                    case 80:\n                        if (!(message.dirable && message.dirable.length))\n                            message.dirable = [];\n                        if ((tag & 7) === 2) {\n                            var end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2)\n                                message.dirable.push(reader.int32());\n                        } else\n                            message.dirable.push(reader.int32());\n                        break;\n                    case 81:\n                        message.defaultDir = reader.int32();\n                        break;\n                    case 82:\n                        message.backboneId = reader.string();\n                        break;\n                    case 2:\n                        message.headBaseId = reader.string();\n                        break;\n                    case 3:\n                        message.headHairId = reader.string();\n                        break;\n                    case 4:\n                        message.headEyesId = reader.string();\n                        break;\n                    case 5:\n                        message.headBackId = reader.string();\n                        break;\n                    case 6:\n                        message.headMousId = reader.string();\n                        break;\n                    case 7:\n                        message.headHatsId = reader.string();\n                        break;\n                    case 8:\n                        message.headMaskId = reader.string();\n                        break;\n                    case 9:\n                        message.headSpecId = reader.string();\n                        break;\n                    case 11:\n                        message.bodyBaseId = reader.string();\n                        break;\n                    case 12:\n                        message.bodyCostId = reader.string();\n                        break;\n                    case 13:\n                        message.bodyDresId = reader.string();\n                        break;\n                    case 14:\n                        message.bodyTailId = reader.string();\n                        break;\n                    case 15:\n                        message.bodyWingId = reader.string();\n                        break;\n                    case 16:\n                        message.bodySpecId = reader.string();\n                        break;\n                    case 21:\n                        message.farmBaseId = reader.string();\n                        break;\n                    case 22:\n                        message.farmCostId = reader.string();\n                        break;\n                    case 23:\n                        message.farmShldId = reader.string();\n                        break;\n                    case 24:\n                        message.farmWeapId = reader.string();\n                        break;\n                    case 25:\n                        message.farmSpecId = reader.string();\n                        break;\n                    case 31:\n                        message.barmBaseId = reader.string();\n                        break;\n                    case 32:\n                        message.barmCostId = reader.string();\n                        break;\n                    case 33:\n                        message.barmShldId = reader.string();\n                        break;\n                    case 34:\n                        message.barmWeapId = reader.string();\n                        break;\n                    case 35:\n                        message.barmSpecId = reader.string();\n                        break;\n                    case 41:\n                        message.flegBaseId = reader.string();\n                        break;\n                    case 42:\n                        message.flegCostId = reader.string();\n                        break;\n                    case 43:\n                        message.flegSpecId = reader.string();\n                        break;\n                    case 51:\n                        message.blegBaseId = reader.string();\n                        break;\n                    case 52:\n                        message.blegCostId = reader.string();\n                        break;\n                    case 53:\n                        message.blegSpecId = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("node"))\n                    throw $util.ProtocolError("missing required \'node\'", { instance: message });\n                if (!message.hasOwnProperty("defaultDir"))\n                    throw $util.ProtocolError("missing required \'defaultDir\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes an Avatar message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig_01.Avatar\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig_01.Avatar} Avatar\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Avatar.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies an Avatar message.\n             * @function verify\n             * @memberof op_gameconfig_01.Avatar\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Avatar.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                {\n                    var error = $root.op_gameconfig_01.Node.verify(message.node);\n                    if (error)\n                        return "node." + error;\n                }\n                if (message.dirable != null && message.hasOwnProperty("dirable")) {\n                    if (!Array.isArray(message.dirable))\n                        return "dirable: array expected";\n                    for (var i = 0; i < message.dirable.length; ++i)\n                        if (!$util.isInteger(message.dirable[i]))\n                            return "dirable: integer[] expected";\n                }\n                if (!$util.isInteger(message.defaultDir))\n                    return "defaultDir: integer expected";\n                if (message.backboneId != null && message.hasOwnProperty("backboneId"))\n                    if (!$util.isString(message.backboneId))\n                        return "backboneId: string expected";\n                if (message.headBaseId != null && message.hasOwnProperty("headBaseId"))\n                    if (!$util.isString(message.headBaseId))\n                        return "headBaseId: string expected";\n                if (message.headHairId != null && message.hasOwnProperty("headHairId"))\n                    if (!$util.isString(message.headHairId))\n                        return "headHairId: string expected";\n                if (message.headEyesId != null && message.hasOwnProperty("headEyesId"))\n                    if (!$util.isString(message.headEyesId))\n                        return "headEyesId: string expected";\n                if (message.headBackId != null && message.hasOwnProperty("headBackId"))\n                    if (!$util.isString(message.headBackId))\n                        return "headBackId: string expected";\n                if (message.headMousId != null && message.hasOwnProperty("headMousId"))\n                    if (!$util.isString(message.headMousId))\n                        return "headMousId: string expected";\n                if (message.headHatsId != null && message.hasOwnProperty("headHatsId"))\n                    if (!$util.isString(message.headHatsId))\n                        return "headHatsId: string expected";\n                if (message.headMaskId != null && message.hasOwnProperty("headMaskId"))\n                    if (!$util.isString(message.headMaskId))\n                        return "headMaskId: string expected";\n                if (message.headSpecId != null && message.hasOwnProperty("headSpecId"))\n                    if (!$util.isString(message.headSpecId))\n                        return "headSpecId: string expected";\n                if (message.bodyBaseId != null && message.hasOwnProperty("bodyBaseId"))\n                    if (!$util.isString(message.bodyBaseId))\n                        return "bodyBaseId: string expected";\n                if (message.bodyCostId != null && message.hasOwnProperty("bodyCostId"))\n                    if (!$util.isString(message.bodyCostId))\n                        return "bodyCostId: string expected";\n                if (message.bodyDresId != null && message.hasOwnProperty("bodyDresId"))\n                    if (!$util.isString(message.bodyDresId))\n                        return "bodyDresId: string expected";\n                if (message.bodyTailId != null && message.hasOwnProperty("bodyTailId"))\n                    if (!$util.isString(message.bodyTailId))\n                        return "bodyTailId: string expected";\n                if (message.bodyWingId != null && message.hasOwnProperty("bodyWingId"))\n                    if (!$util.isString(message.bodyWingId))\n                        return "bodyWingId: string expected";\n                if (message.bodySpecId != null && message.hasOwnProperty("bodySpecId"))\n                    if (!$util.isString(message.bodySpecId))\n                        return "bodySpecId: string expected";\n                if (message.farmBaseId != null && message.hasOwnProperty("farmBaseId"))\n                    if (!$util.isString(message.farmBaseId))\n                        return "farmBaseId: string expected";\n                if (message.farmCostId != null && message.hasOwnProperty("farmCostId"))\n                    if (!$util.isString(message.farmCostId))\n                        return "farmCostId: string expected";\n                if (message.farmShldId != null && message.hasOwnProperty("farmShldId"))\n                    if (!$util.isString(message.farmShldId))\n                        return "farmShldId: string expected";\n                if (message.farmWeapId != null && message.hasOwnProperty("farmWeapId"))\n                    if (!$util.isString(message.farmWeapId))\n                        return "farmWeapId: string expected";\n                if (message.farmSpecId != null && message.hasOwnProperty("farmSpecId"))\n                    if (!$util.isString(message.farmSpecId))\n                        return "farmSpecId: string expected";\n                if (message.barmBaseId != null && message.hasOwnProperty("barmBaseId"))\n                    if (!$util.isString(message.barmBaseId))\n                        return "barmBaseId: string expected";\n                if (message.barmCostId != null && message.hasOwnProperty("barmCostId"))\n                    if (!$util.isString(message.barmCostId))\n                        return "barmCostId: string expected";\n                if (message.barmShldId != null && message.hasOwnProperty("barmShldId"))\n                    if (!$util.isString(message.barmShldId))\n                        return "barmShldId: string expected";\n                if (message.barmWeapId != null && message.hasOwnProperty("barmWeapId"))\n                    if (!$util.isString(message.barmWeapId))\n                        return "barmWeapId: string expected";\n                if (message.barmSpecId != null && message.hasOwnProperty("barmSpecId"))\n                    if (!$util.isString(message.barmSpecId))\n                        return "barmSpecId: string expected";\n                if (message.flegBaseId != null && message.hasOwnProperty("flegBaseId"))\n                    if (!$util.isString(message.flegBaseId))\n                        return "flegBaseId: string expected";\n                if (message.flegCostId != null && message.hasOwnProperty("flegCostId"))\n                    if (!$util.isString(message.flegCostId))\n                        return "flegCostId: string expected";\n                if (message.flegSpecId != null && message.hasOwnProperty("flegSpecId"))\n                    if (!$util.isString(message.flegSpecId))\n                        return "flegSpecId: string expected";\n                if (message.blegBaseId != null && message.hasOwnProperty("blegBaseId"))\n                    if (!$util.isString(message.blegBaseId))\n                        return "blegBaseId: string expected";\n                if (message.blegCostId != null && message.hasOwnProperty("blegCostId"))\n                    if (!$util.isString(message.blegCostId))\n                        return "blegCostId: string expected";\n                if (message.blegSpecId != null && message.hasOwnProperty("blegSpecId"))\n                    if (!$util.isString(message.blegSpecId))\n                        return "blegSpecId: string expected";\n                return null;\n            };\n    \n            /**\n             * Creates an Avatar message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig_01.Avatar\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig_01.Avatar} Avatar\n             */\n            Avatar.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig_01.Avatar)\n                    return object;\n                var message = new $root.op_gameconfig_01.Avatar();\n                if (object.node != null) {\n                    if (typeof object.node !== "object")\n                        throw TypeError(".op_gameconfig_01.Avatar.node: object expected");\n                    message.node = $root.op_gameconfig_01.Node.fromObject(object.node);\n                }\n                if (object.dirable) {\n                    if (!Array.isArray(object.dirable))\n                        throw TypeError(".op_gameconfig_01.Avatar.dirable: array expected");\n                    message.dirable = [];\n                    for (var i = 0; i < object.dirable.length; ++i)\n                        message.dirable[i] = object.dirable[i] | 0;\n                }\n                if (object.defaultDir != null)\n                    message.defaultDir = object.defaultDir | 0;\n                if (object.backboneId != null)\n                    message.backboneId = String(object.backboneId);\n                if (object.headBaseId != null)\n                    message.headBaseId = String(object.headBaseId);\n                if (object.headHairId != null)\n                    message.headHairId = String(object.headHairId);\n                if (object.headEyesId != null)\n                    message.headEyesId = String(object.headEyesId);\n                if (object.headBackId != null)\n                    message.headBackId = String(object.headBackId);\n                if (object.headMousId != null)\n                    message.headMousId = String(object.headMousId);\n                if (object.headHatsId != null)\n                    message.headHatsId = String(object.headHatsId);\n                if (object.headMaskId != null)\n                    message.headMaskId = String(object.headMaskId);\n                if (object.headSpecId != null)\n                    message.headSpecId = String(object.headSpecId);\n                if (object.bodyBaseId != null)\n                    message.bodyBaseId = String(object.bodyBaseId);\n                if (object.bodyCostId != null)\n                    message.bodyCostId = String(object.bodyCostId);\n                if (object.bodyDresId != null)\n                    message.bodyDresId = String(object.bodyDresId);\n                if (object.bodyTailId != null)\n                    message.bodyTailId = String(object.bodyTailId);\n                if (object.bodyWingId != null)\n                    message.bodyWingId = String(object.bodyWingId);\n                if (object.bodySpecId != null)\n                    message.bodySpecId = String(object.bodySpecId);\n                if (object.farmBaseId != null)\n                    message.farmBaseId = String(object.farmBaseId);\n                if (object.farmCostId != null)\n                    message.farmCostId = String(object.farmCostId);\n                if (object.farmShldId != null)\n                    message.farmShldId = String(object.farmShldId);\n                if (object.farmWeapId != null)\n                    message.farmWeapId = String(object.farmWeapId);\n                if (object.farmSpecId != null)\n                    message.farmSpecId = String(object.farmSpecId);\n                if (object.barmBaseId != null)\n                    message.barmBaseId = String(object.barmBaseId);\n                if (object.barmCostId != null)\n                    message.barmCostId = String(object.barmCostId);\n                if (object.barmShldId != null)\n                    message.barmShldId = String(object.barmShldId);\n                if (object.barmWeapId != null)\n                    message.barmWeapId = String(object.barmWeapId);\n                if (object.barmSpecId != null)\n                    message.barmSpecId = String(object.barmSpecId);\n                if (object.flegBaseId != null)\n                    message.flegBaseId = String(object.flegBaseId);\n                if (object.flegCostId != null)\n                    message.flegCostId = String(object.flegCostId);\n                if (object.flegSpecId != null)\n                    message.flegSpecId = String(object.flegSpecId);\n                if (object.blegBaseId != null)\n                    message.blegBaseId = String(object.blegBaseId);\n                if (object.blegCostId != null)\n                    message.blegCostId = String(object.blegCostId);\n                if (object.blegSpecId != null)\n                    message.blegSpecId = String(object.blegSpecId);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from an Avatar message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig_01.Avatar\n             * @static\n             * @param {op_gameconfig_01.Avatar} message Avatar\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Avatar.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.dirable = [];\n                if (options.defaults) {\n                    object.node = null;\n                    object.headBaseId = "";\n                    object.headHairId = "";\n                    object.headEyesId = "";\n                    object.headBackId = "";\n                    object.headMousId = "";\n                    object.headHatsId = "";\n                    object.headMaskId = "";\n                    object.headSpecId = "";\n                    object.bodyBaseId = "";\n                    object.bodyCostId = "";\n                    object.bodyDresId = "";\n                    object.bodyTailId = "";\n                    object.bodyWingId = "";\n                    object.bodySpecId = "";\n                    object.farmBaseId = "";\n                    object.farmCostId = "";\n                    object.farmShldId = "";\n                    object.farmWeapId = "";\n                    object.farmSpecId = "";\n                    object.barmBaseId = "";\n                    object.barmCostId = "";\n                    object.barmShldId = "";\n                    object.barmWeapId = "";\n                    object.barmSpecId = "";\n                    object.flegBaseId = "";\n                    object.flegCostId = "";\n                    object.flegSpecId = "";\n                    object.blegBaseId = "";\n                    object.blegCostId = "";\n                    object.blegSpecId = "";\n                    object.defaultDir = 0;\n                    object.backboneId = "";\n                }\n                if (message.node != null && message.hasOwnProperty("node"))\n                    object.node = $root.op_gameconfig_01.Node.toObject(message.node, options);\n                if (message.headBaseId != null && message.hasOwnProperty("headBaseId"))\n                    object.headBaseId = message.headBaseId;\n                if (message.headHairId != null && message.hasOwnProperty("headHairId"))\n                    object.headHairId = message.headHairId;\n                if (message.headEyesId != null && message.hasOwnProperty("headEyesId"))\n                    object.headEyesId = message.headEyesId;\n                if (message.headBackId != null && message.hasOwnProperty("headBackId"))\n                    object.headBackId = message.headBackId;\n                if (message.headMousId != null && message.hasOwnProperty("headMousId"))\n                    object.headMousId = message.headMousId;\n                if (message.headHatsId != null && message.hasOwnProperty("headHatsId"))\n                    object.headHatsId = message.headHatsId;\n                if (message.headMaskId != null && message.hasOwnProperty("headMaskId"))\n                    object.headMaskId = message.headMaskId;\n                if (message.headSpecId != null && message.hasOwnProperty("headSpecId"))\n                    object.headSpecId = message.headSpecId;\n                if (message.bodyBaseId != null && message.hasOwnProperty("bodyBaseId"))\n                    object.bodyBaseId = message.bodyBaseId;\n                if (message.bodyCostId != null && message.hasOwnProperty("bodyCostId"))\n                    object.bodyCostId = message.bodyCostId;\n                if (message.bodyDresId != null && message.hasOwnProperty("bodyDresId"))\n                    object.bodyDresId = message.bodyDresId;\n                if (message.bodyTailId != null && message.hasOwnProperty("bodyTailId"))\n                    object.bodyTailId = message.bodyTailId;\n                if (message.bodyWingId != null && message.hasOwnProperty("bodyWingId"))\n                    object.bodyWingId = message.bodyWingId;\n                if (message.bodySpecId != null && message.hasOwnProperty("bodySpecId"))\n                    object.bodySpecId = message.bodySpecId;\n                if (message.farmBaseId != null && message.hasOwnProperty("farmBaseId"))\n                    object.farmBaseId = message.farmBaseId;\n                if (message.farmCostId != null && message.hasOwnProperty("farmCostId"))\n                    object.farmCostId = message.farmCostId;\n                if (message.farmShldId != null && message.hasOwnProperty("farmShldId"))\n                    object.farmShldId = message.farmShldId;\n                if (message.farmWeapId != null && message.hasOwnProperty("farmWeapId"))\n                    object.farmWeapId = message.farmWeapId;\n                if (message.farmSpecId != null && message.hasOwnProperty("farmSpecId"))\n                    object.farmSpecId = message.farmSpecId;\n                if (message.barmBaseId != null && message.hasOwnProperty("barmBaseId"))\n                    object.barmBaseId = message.barmBaseId;\n                if (message.barmCostId != null && message.hasOwnProperty("barmCostId"))\n                    object.barmCostId = message.barmCostId;\n                if (message.barmShldId != null && message.hasOwnProperty("barmShldId"))\n                    object.barmShldId = message.barmShldId;\n                if (message.barmWeapId != null && message.hasOwnProperty("barmWeapId"))\n                    object.barmWeapId = message.barmWeapId;\n                if (message.barmSpecId != null && message.hasOwnProperty("barmSpecId"))\n                    object.barmSpecId = message.barmSpecId;\n                if (message.flegBaseId != null && message.hasOwnProperty("flegBaseId"))\n                    object.flegBaseId = message.flegBaseId;\n                if (message.flegCostId != null && message.hasOwnProperty("flegCostId"))\n                    object.flegCostId = message.flegCostId;\n                if (message.flegSpecId != null && message.hasOwnProperty("flegSpecId"))\n                    object.flegSpecId = message.flegSpecId;\n                if (message.blegBaseId != null && message.hasOwnProperty("blegBaseId"))\n                    object.blegBaseId = message.blegBaseId;\n                if (message.blegCostId != null && message.hasOwnProperty("blegCostId"))\n                    object.blegCostId = message.blegCostId;\n                if (message.blegSpecId != null && message.hasOwnProperty("blegSpecId"))\n                    object.blegSpecId = message.blegSpecId;\n                if (message.dirable && message.dirable.length) {\n                    object.dirable = [];\n                    for (var j = 0; j < message.dirable.length; ++j)\n                        object.dirable[j] = message.dirable[j];\n                }\n                if (message.defaultDir != null && message.hasOwnProperty("defaultDir"))\n                    object.defaultDir = message.defaultDir;\n                if (message.backboneId != null && message.hasOwnProperty("backboneId"))\n                    object.backboneId = message.backboneId;\n                return object;\n            };\n    \n            /**\n             * Converts this Avatar to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig_01.Avatar\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Avatar.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Avatar;\n        })();\n    \n        op_gameconfig_01.Mutex = (function() {\n    \n            /**\n             * Properties of a Mutex.\n             * @memberof op_gameconfig_01\n             * @interface IMutex\n             * @property {op_gameconfig_01.INode} node Mutex node\n             */\n    \n            /**\n             * Constructs a new Mutex.\n             * @memberof op_gameconfig_01\n             * @classdesc Represents a Mutex.\n             * @implements IMutex\n             * @constructor\n             * @param {op_gameconfig_01.IMutex=} [properties] Properties to set\n             */\n            function Mutex(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Mutex node.\n             * @member {op_gameconfig_01.INode} node\n             * @memberof op_gameconfig_01.Mutex\n             * @instance\n             */\n            Mutex.prototype.node = null;\n    \n            /**\n             * Creates a new Mutex instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig_01.Mutex\n             * @static\n             * @param {op_gameconfig_01.IMutex=} [properties] Properties to set\n             * @returns {op_gameconfig_01.Mutex} Mutex instance\n             */\n            Mutex.create = function create(properties) {\n                return new Mutex(properties);\n            };\n    \n            /**\n             * Encodes the specified Mutex message. Does not implicitly {@link op_gameconfig_01.Mutex.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig_01.Mutex\n             * @static\n             * @param {op_gameconfig_01.IMutex} message Mutex message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Mutex.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                $root.op_gameconfig_01.Node.encode(message.node, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Mutex message, length delimited. Does not implicitly {@link op_gameconfig_01.Mutex.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig_01.Mutex\n             * @static\n             * @param {op_gameconfig_01.IMutex} message Mutex message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Mutex.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a Mutex message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig_01.Mutex\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig_01.Mutex} Mutex\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Mutex.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig_01.Mutex();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.node = $root.op_gameconfig_01.Node.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("node"))\n                    throw $util.ProtocolError("missing required \'node\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a Mutex message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig_01.Mutex\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig_01.Mutex} Mutex\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Mutex.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a Mutex message.\n             * @function verify\n             * @memberof op_gameconfig_01.Mutex\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Mutex.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                {\n                    var error = $root.op_gameconfig_01.Node.verify(message.node);\n                    if (error)\n                        return "node." + error;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a Mutex message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig_01.Mutex\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig_01.Mutex} Mutex\n             */\n            Mutex.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig_01.Mutex)\n                    return object;\n                var message = new $root.op_gameconfig_01.Mutex();\n                if (object.node != null) {\n                    if (typeof object.node !== "object")\n                        throw TypeError(".op_gameconfig_01.Mutex.node: object expected");\n                    message.node = $root.op_gameconfig_01.Node.fromObject(object.node);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a Mutex message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig_01.Mutex\n             * @static\n             * @param {op_gameconfig_01.Mutex} message Mutex\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Mutex.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.node = null;\n                if (message.node != null && message.hasOwnProperty("node"))\n                    object.node = $root.op_gameconfig_01.Node.toObject(message.node, options);\n                return object;\n            };\n    \n            /**\n             * Converts this Mutex to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig_01.Mutex\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Mutex.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Mutex;\n        })();\n    \n        op_gameconfig_01.Location = (function() {\n    \n            /**\n             * Properties of a Location.\n             * @memberof op_gameconfig_01\n             * @interface ILocation\n             * @property {op_gameconfig_01.INode} node Location node\n             * @property {number} x Location x\n             * @property {number} y Location y\n             * @property {number} z Location z\n             */\n    \n            /**\n             * Constructs a new Location.\n             * @memberof op_gameconfig_01\n             * @classdesc Represents a Location.\n             * @implements ILocation\n             * @constructor\n             * @param {op_gameconfig_01.ILocation=} [properties] Properties to set\n             */\n            function Location(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Location node.\n             * @member {op_gameconfig_01.INode} node\n             * @memberof op_gameconfig_01.Location\n             * @instance\n             */\n            Location.prototype.node = null;\n    \n            /**\n             * Location x.\n             * @member {number} x\n             * @memberof op_gameconfig_01.Location\n             * @instance\n             */\n            Location.prototype.x = 0;\n    \n            /**\n             * Location y.\n             * @member {number} y\n             * @memberof op_gameconfig_01.Location\n             * @instance\n             */\n            Location.prototype.y = 0;\n    \n            /**\n             * Location z.\n             * @member {number} z\n             * @memberof op_gameconfig_01.Location\n             * @instance\n             */\n            Location.prototype.z = 0;\n    \n            /**\n             * Creates a new Location instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig_01.Location\n             * @static\n             * @param {op_gameconfig_01.ILocation=} [properties] Properties to set\n             * @returns {op_gameconfig_01.Location} Location instance\n             */\n            Location.create = function create(properties) {\n                return new Location(properties);\n            };\n    \n            /**\n             * Encodes the specified Location message. Does not implicitly {@link op_gameconfig_01.Location.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig_01.Location\n             * @static\n             * @param {op_gameconfig_01.ILocation} message Location message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Location.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                $root.op_gameconfig_01.Node.encode(message.node, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                writer.uint32(/* id 2, wireType 5 =*/21).float(message.x);\n                writer.uint32(/* id 3, wireType 5 =*/29).float(message.y);\n                writer.uint32(/* id 4, wireType 5 =*/37).float(message.z);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Location message, length delimited. Does not implicitly {@link op_gameconfig_01.Location.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig_01.Location\n             * @static\n             * @param {op_gameconfig_01.ILocation} message Location message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Location.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a Location message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig_01.Location\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig_01.Location} Location\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Location.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig_01.Location();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.node = $root.op_gameconfig_01.Node.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        message.x = reader.float();\n                        break;\n                    case 3:\n                        message.y = reader.float();\n                        break;\n                    case 4:\n                        message.z = reader.float();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("node"))\n                    throw $util.ProtocolError("missing required \'node\'", { instance: message });\n                if (!message.hasOwnProperty("x"))\n                    throw $util.ProtocolError("missing required \'x\'", { instance: message });\n                if (!message.hasOwnProperty("y"))\n                    throw $util.ProtocolError("missing required \'y\'", { instance: message });\n                if (!message.hasOwnProperty("z"))\n                    throw $util.ProtocolError("missing required \'z\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a Location message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig_01.Location\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig_01.Location} Location\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Location.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a Location message.\n             * @function verify\n             * @memberof op_gameconfig_01.Location\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Location.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                {\n                    var error = $root.op_gameconfig_01.Node.verify(message.node);\n                    if (error)\n                        return "node." + error;\n                }\n                if (typeof message.x !== "number")\n                    return "x: number expected";\n                if (typeof message.y !== "number")\n                    return "y: number expected";\n                if (typeof message.z !== "number")\n                    return "z: number expected";\n                return null;\n            };\n    \n            /**\n             * Creates a Location message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig_01.Location\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig_01.Location} Location\n             */\n            Location.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig_01.Location)\n                    return object;\n                var message = new $root.op_gameconfig_01.Location();\n                if (object.node != null) {\n                    if (typeof object.node !== "object")\n                        throw TypeError(".op_gameconfig_01.Location.node: object expected");\n                    message.node = $root.op_gameconfig_01.Node.fromObject(object.node);\n                }\n                if (object.x != null)\n                    message.x = Number(object.x);\n                if (object.y != null)\n                    message.y = Number(object.y);\n                if (object.z != null)\n                    message.z = Number(object.z);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a Location message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig_01.Location\n             * @static\n             * @param {op_gameconfig_01.Location} message Location\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Location.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.node = null;\n                    object.x = 0;\n                    object.y = 0;\n                    object.z = 0;\n                }\n                if (message.node != null && message.hasOwnProperty("node"))\n                    object.node = $root.op_gameconfig_01.Node.toObject(message.node, options);\n                if (message.x != null && message.hasOwnProperty("x"))\n                    object.x = options.json && !isFinite(message.x) ? String(message.x) : message.x;\n                if (message.y != null && message.hasOwnProperty("y"))\n                    object.y = options.json && !isFinite(message.y) ? String(message.y) : message.y;\n                if (message.z != null && message.hasOwnProperty("z"))\n                    object.z = options.json && !isFinite(message.z) ? String(message.z) : message.z;\n                return object;\n            };\n    \n            /**\n             * Converts this Location to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig_01.Location\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Location.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Location;\n        })();\n    \n        op_gameconfig_01.SpawnPoint = (function() {\n    \n            /**\n             * Properties of a SpawnPoint.\n             * @memberof op_gameconfig_01\n             * @interface ISpawnPoint\n             * @property {op_gameconfig_01.INode} node SpawnPoint node\n             * @property {op_gameconfig_01.ILocation} loc SpawnPoint loc\n             */\n    \n            /**\n             * Constructs a new SpawnPoint.\n             * @memberof op_gameconfig_01\n             * @classdesc Represents a SpawnPoint.\n             * @implements ISpawnPoint\n             * @constructor\n             * @param {op_gameconfig_01.ISpawnPoint=} [properties] Properties to set\n             */\n            function SpawnPoint(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * SpawnPoint node.\n             * @member {op_gameconfig_01.INode} node\n             * @memberof op_gameconfig_01.SpawnPoint\n             * @instance\n             */\n            SpawnPoint.prototype.node = null;\n    \n            /**\n             * SpawnPoint loc.\n             * @member {op_gameconfig_01.ILocation} loc\n             * @memberof op_gameconfig_01.SpawnPoint\n             * @instance\n             */\n            SpawnPoint.prototype.loc = null;\n    \n            /**\n             * Creates a new SpawnPoint instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig_01.SpawnPoint\n             * @static\n             * @param {op_gameconfig_01.ISpawnPoint=} [properties] Properties to set\n             * @returns {op_gameconfig_01.SpawnPoint} SpawnPoint instance\n             */\n            SpawnPoint.create = function create(properties) {\n                return new SpawnPoint(properties);\n            };\n    \n            /**\n             * Encodes the specified SpawnPoint message. Does not implicitly {@link op_gameconfig_01.SpawnPoint.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig_01.SpawnPoint\n             * @static\n             * @param {op_gameconfig_01.ISpawnPoint} message SpawnPoint message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            SpawnPoint.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                $root.op_gameconfig_01.Node.encode(message.node, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                $root.op_gameconfig_01.Location.encode(message.loc, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified SpawnPoint message, length delimited. Does not implicitly {@link op_gameconfig_01.SpawnPoint.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig_01.SpawnPoint\n             * @static\n             * @param {op_gameconfig_01.ISpawnPoint} message SpawnPoint message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            SpawnPoint.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a SpawnPoint message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig_01.SpawnPoint\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig_01.SpawnPoint} SpawnPoint\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            SpawnPoint.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig_01.SpawnPoint();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.node = $root.op_gameconfig_01.Node.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        message.loc = $root.op_gameconfig_01.Location.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("node"))\n                    throw $util.ProtocolError("missing required \'node\'", { instance: message });\n                if (!message.hasOwnProperty("loc"))\n                    throw $util.ProtocolError("missing required \'loc\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a SpawnPoint message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig_01.SpawnPoint\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig_01.SpawnPoint} SpawnPoint\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            SpawnPoint.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a SpawnPoint message.\n             * @function verify\n             * @memberof op_gameconfig_01.SpawnPoint\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            SpawnPoint.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                {\n                    var error = $root.op_gameconfig_01.Node.verify(message.node);\n                    if (error)\n                        return "node." + error;\n                }\n                {\n                    var error = $root.op_gameconfig_01.Location.verify(message.loc);\n                    if (error)\n                        return "loc." + error;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a SpawnPoint message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig_01.SpawnPoint\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig_01.SpawnPoint} SpawnPoint\n             */\n            SpawnPoint.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig_01.SpawnPoint)\n                    return object;\n                var message = new $root.op_gameconfig_01.SpawnPoint();\n                if (object.node != null) {\n                    if (typeof object.node !== "object")\n                        throw TypeError(".op_gameconfig_01.SpawnPoint.node: object expected");\n                    message.node = $root.op_gameconfig_01.Node.fromObject(object.node);\n                }\n                if (object.loc != null) {\n                    if (typeof object.loc !== "object")\n                        throw TypeError(".op_gameconfig_01.SpawnPoint.loc: object expected");\n                    message.loc = $root.op_gameconfig_01.Location.fromObject(object.loc);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a SpawnPoint message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig_01.SpawnPoint\n             * @static\n             * @param {op_gameconfig_01.SpawnPoint} message SpawnPoint\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            SpawnPoint.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.node = null;\n                    object.loc = null;\n                }\n                if (message.node != null && message.hasOwnProperty("node"))\n                    object.node = $root.op_gameconfig_01.Node.toObject(message.node, options);\n                if (message.loc != null && message.hasOwnProperty("loc"))\n                    object.loc = $root.op_gameconfig_01.Location.toObject(message.loc, options);\n                return object;\n            };\n    \n            /**\n             * Converts this SpawnPoint to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig_01.SpawnPoint\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            SpawnPoint.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return SpawnPoint;\n        })();\n    \n        op_gameconfig_01.Movable = (function() {\n    \n            /**\n             * Properties of a Movable.\n             * @memberof op_gameconfig_01\n             * @interface IMovable\n             * @property {op_gameconfig_01.INode} node Movable node\n             * @property {number|null} [dir] Movable dir\n             * @property {number|null} [angle] Movable angle\n             * @property {number|null} [speed] Movable speed\n             */\n    \n            /**\n             * Constructs a new Movable.\n             * @memberof op_gameconfig_01\n             * @classdesc Represents a Movable.\n             * @implements IMovable\n             * @constructor\n             * @param {op_gameconfig_01.IMovable=} [properties] Properties to set\n             */\n            function Movable(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Movable node.\n             * @member {op_gameconfig_01.INode} node\n             * @memberof op_gameconfig_01.Movable\n             * @instance\n             */\n            Movable.prototype.node = null;\n    \n            /**\n             * Movable dir.\n             * @member {number} dir\n             * @memberof op_gameconfig_01.Movable\n             * @instance\n             */\n            Movable.prototype.dir = 0;\n    \n            /**\n             * Movable angle.\n             * @member {number} angle\n             * @memberof op_gameconfig_01.Movable\n             * @instance\n             */\n            Movable.prototype.angle = 0;\n    \n            /**\n             * Movable speed.\n             * @member {number} speed\n             * @memberof op_gameconfig_01.Movable\n             * @instance\n             */\n            Movable.prototype.speed = 0;\n    \n            /**\n             * Creates a new Movable instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig_01.Movable\n             * @static\n             * @param {op_gameconfig_01.IMovable=} [properties] Properties to set\n             * @returns {op_gameconfig_01.Movable} Movable instance\n             */\n            Movable.create = function create(properties) {\n                return new Movable(properties);\n            };\n    \n            /**\n             * Encodes the specified Movable message. Does not implicitly {@link op_gameconfig_01.Movable.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig_01.Movable\n             * @static\n             * @param {op_gameconfig_01.IMovable} message Movable message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Movable.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                $root.op_gameconfig_01.Node.encode(message.node, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.dir != null && message.hasOwnProperty("dir"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.dir);\n                if (message.angle != null && message.hasOwnProperty("angle"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.angle);\n                if (message.speed != null && message.hasOwnProperty("speed"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.speed);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Movable message, length delimited. Does not implicitly {@link op_gameconfig_01.Movable.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig_01.Movable\n             * @static\n             * @param {op_gameconfig_01.IMovable} message Movable message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Movable.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a Movable message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig_01.Movable\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig_01.Movable} Movable\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Movable.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig_01.Movable();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.node = $root.op_gameconfig_01.Node.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        message.dir = reader.int32();\n                        break;\n                    case 3:\n                        message.angle = reader.int32();\n                        break;\n                    case 4:\n                        message.speed = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("node"))\n                    throw $util.ProtocolError("missing required \'node\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a Movable message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig_01.Movable\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig_01.Movable} Movable\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Movable.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a Movable message.\n             * @function verify\n             * @memberof op_gameconfig_01.Movable\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Movable.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                {\n                    var error = $root.op_gameconfig_01.Node.verify(message.node);\n                    if (error)\n                        return "node." + error;\n                }\n                if (message.dir != null && message.hasOwnProperty("dir"))\n                    if (!$util.isInteger(message.dir))\n                        return "dir: integer expected";\n                if (message.angle != null && message.hasOwnProperty("angle"))\n                    if (!$util.isInteger(message.angle))\n                        return "angle: integer expected";\n                if (message.speed != null && message.hasOwnProperty("speed"))\n                    if (!$util.isInteger(message.speed))\n                        return "speed: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a Movable message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig_01.Movable\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig_01.Movable} Movable\n             */\n            Movable.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig_01.Movable)\n                    return object;\n                var message = new $root.op_gameconfig_01.Movable();\n                if (object.node != null) {\n                    if (typeof object.node !== "object")\n                        throw TypeError(".op_gameconfig_01.Movable.node: object expected");\n                    message.node = $root.op_gameconfig_01.Node.fromObject(object.node);\n                }\n                if (object.dir != null)\n                    message.dir = object.dir | 0;\n                if (object.angle != null)\n                    message.angle = object.angle | 0;\n                if (object.speed != null)\n                    message.speed = object.speed | 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a Movable message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig_01.Movable\n             * @static\n             * @param {op_gameconfig_01.Movable} message Movable\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Movable.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.node = null;\n                    object.dir = 0;\n                    object.angle = 0;\n                    object.speed = 0;\n                }\n                if (message.node != null && message.hasOwnProperty("node"))\n                    object.node = $root.op_gameconfig_01.Node.toObject(message.node, options);\n                if (message.dir != null && message.hasOwnProperty("dir"))\n                    object.dir = message.dir;\n                if (message.angle != null && message.hasOwnProperty("angle"))\n                    object.angle = message.angle;\n                if (message.speed != null && message.hasOwnProperty("speed"))\n                    object.speed = message.speed;\n                return object;\n            };\n    \n            /**\n             * Converts this Movable to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig_01.Movable\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Movable.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Movable;\n        })();\n    \n        op_gameconfig_01.Animations = (function() {\n    \n            /**\n             * Properties of an Animations.\n             * @memberof op_gameconfig_01\n             * @interface IAnimations\n             * @property {op_gameconfig_01.INode} node Animations node\n             * @property {string} defaultAnimation Animations defaultAnimation\n             * @property {number|null} [dir] Animations dir\n             * @property {boolean|null} [scale] Animations scale\n             */\n    \n            /**\n             * Constructs a new Animations.\n             * @memberof op_gameconfig_01\n             * @classdesc Represents an Animations.\n             * @implements IAnimations\n             * @constructor\n             * @param {op_gameconfig_01.IAnimations=} [properties] Properties to set\n             */\n            function Animations(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Animations node.\n             * @member {op_gameconfig_01.INode} node\n             * @memberof op_gameconfig_01.Animations\n             * @instance\n             */\n            Animations.prototype.node = null;\n    \n            /**\n             * Animations defaultAnimation.\n             * @member {string} defaultAnimation\n             * @memberof op_gameconfig_01.Animations\n             * @instance\n             */\n            Animations.prototype.defaultAnimation = "";\n    \n            /**\n             * Animations dir.\n             * @member {number} dir\n             * @memberof op_gameconfig_01.Animations\n             * @instance\n             */\n            Animations.prototype.dir = 0;\n    \n            /**\n             * Animations scale.\n             * @member {boolean} scale\n             * @memberof op_gameconfig_01.Animations\n             * @instance\n             */\n            Animations.prototype.scale = false;\n    \n            /**\n             * Creates a new Animations instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig_01.Animations\n             * @static\n             * @param {op_gameconfig_01.IAnimations=} [properties] Properties to set\n             * @returns {op_gameconfig_01.Animations} Animations instance\n             */\n            Animations.create = function create(properties) {\n                return new Animations(properties);\n            };\n    \n            /**\n             * Encodes the specified Animations message. Does not implicitly {@link op_gameconfig_01.Animations.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig_01.Animations\n             * @static\n             * @param {op_gameconfig_01.IAnimations} message Animations message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Animations.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                $root.op_gameconfig_01.Node.encode(message.node, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.defaultAnimation);\n                if (message.dir != null && message.hasOwnProperty("dir"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.dir);\n                if (message.scale != null && message.hasOwnProperty("scale"))\n                    writer.uint32(/* id 11, wireType 0 =*/88).bool(message.scale);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Animations message, length delimited. Does not implicitly {@link op_gameconfig_01.Animations.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig_01.Animations\n             * @static\n             * @param {op_gameconfig_01.IAnimations} message Animations message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Animations.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes an Animations message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig_01.Animations\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig_01.Animations} Animations\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Animations.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig_01.Animations();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.node = $root.op_gameconfig_01.Node.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        message.defaultAnimation = reader.string();\n                        break;\n                    case 3:\n                        message.dir = reader.int32();\n                        break;\n                    case 11:\n                        message.scale = reader.bool();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("node"))\n                    throw $util.ProtocolError("missing required \'node\'", { instance: message });\n                if (!message.hasOwnProperty("defaultAnimation"))\n                    throw $util.ProtocolError("missing required \'defaultAnimation\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes an Animations message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig_01.Animations\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig_01.Animations} Animations\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Animations.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies an Animations message.\n             * @function verify\n             * @memberof op_gameconfig_01.Animations\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Animations.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                {\n                    var error = $root.op_gameconfig_01.Node.verify(message.node);\n                    if (error)\n                        return "node." + error;\n                }\n                if (!$util.isString(message.defaultAnimation))\n                    return "defaultAnimation: string expected";\n                if (message.dir != null && message.hasOwnProperty("dir"))\n                    if (!$util.isInteger(message.dir))\n                        return "dir: integer expected";\n                if (message.scale != null && message.hasOwnProperty("scale"))\n                    if (typeof message.scale !== "boolean")\n                        return "scale: boolean expected";\n                return null;\n            };\n    \n            /**\n             * Creates an Animations message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig_01.Animations\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig_01.Animations} Animations\n             */\n            Animations.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig_01.Animations)\n                    return object;\n                var message = new $root.op_gameconfig_01.Animations();\n                if (object.node != null) {\n                    if (typeof object.node !== "object")\n                        throw TypeError(".op_gameconfig_01.Animations.node: object expected");\n                    message.node = $root.op_gameconfig_01.Node.fromObject(object.node);\n                }\n                if (object.defaultAnimation != null)\n                    message.defaultAnimation = String(object.defaultAnimation);\n                if (object.dir != null)\n                    message.dir = object.dir | 0;\n                if (object.scale != null)\n                    message.scale = Boolean(object.scale);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from an Animations message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig_01.Animations\n             * @static\n             * @param {op_gameconfig_01.Animations} message Animations\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Animations.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.node = null;\n                    object.defaultAnimation = "";\n                    object.dir = 0;\n                    object.scale = false;\n                }\n                if (message.node != null && message.hasOwnProperty("node"))\n                    object.node = $root.op_gameconfig_01.Node.toObject(message.node, options);\n                if (message.defaultAnimation != null && message.hasOwnProperty("defaultAnimation"))\n                    object.defaultAnimation = message.defaultAnimation;\n                if (message.dir != null && message.hasOwnProperty("dir"))\n                    object.dir = message.dir;\n                if (message.scale != null && message.hasOwnProperty("scale"))\n                    object.scale = message.scale;\n                return object;\n            };\n    \n            /**\n             * Converts this Animations to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig_01.Animations\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Animations.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Animations;\n        })();\n    \n        op_gameconfig_01.AnimationData = (function() {\n    \n            /**\n             * Properties of an AnimationData.\n             * @memberof op_gameconfig_01\n             * @interface IAnimationData\n             * @property {op_gameconfig_01.INode} node AnimationData node\n             * @property {Array.<number>|null} [frame] AnimationData frame\n             * @property {number} frameRate AnimationData frameRate\n             * @property {string|null} [walkableArea] AnimationData walkableArea\n             * @property {string|null} [collisionArea] AnimationData collisionArea\n             * @property {boolean|null} [loop] AnimationData loop\n             * @property {Array.<number>|null} [originPoint] AnimationData originPoint\n             * @property {Array.<number>|null} [walkOriginPoint] AnimationData walkOriginPoint\n             * @property {string|null} [baseLoc] AnimationData baseLoc\n             * @property {Array.<string>|null} [frameName] AnimationData frameName\n             */\n    \n            /**\n             * Constructs a new AnimationData.\n             * @memberof op_gameconfig_01\n             * @classdesc Represents an AnimationData.\n             * @implements IAnimationData\n             * @constructor\n             * @param {op_gameconfig_01.IAnimationData=} [properties] Properties to set\n             */\n            function AnimationData(properties) {\n                this.frame = [];\n                this.originPoint = [];\n                this.walkOriginPoint = [];\n                this.frameName = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * AnimationData node.\n             * @member {op_gameconfig_01.INode} node\n             * @memberof op_gameconfig_01.AnimationData\n             * @instance\n             */\n            AnimationData.prototype.node = null;\n    \n            /**\n             * AnimationData frame.\n             * @member {Array.<number>} frame\n             * @memberof op_gameconfig_01.AnimationData\n             * @instance\n             */\n            AnimationData.prototype.frame = $util.emptyArray;\n    \n            /**\n             * AnimationData frameRate.\n             * @member {number} frameRate\n             * @memberof op_gameconfig_01.AnimationData\n             * @instance\n             */\n            AnimationData.prototype.frameRate = 0;\n    \n            /**\n             * AnimationData walkableArea.\n             * @member {string} walkableArea\n             * @memberof op_gameconfig_01.AnimationData\n             * @instance\n             */\n            AnimationData.prototype.walkableArea = "";\n    \n            /**\n             * AnimationData collisionArea.\n             * @member {string} collisionArea\n             * @memberof op_gameconfig_01.AnimationData\n             * @instance\n             */\n            AnimationData.prototype.collisionArea = "";\n    \n            /**\n             * AnimationData loop.\n             * @member {boolean} loop\n             * @memberof op_gameconfig_01.AnimationData\n             * @instance\n             */\n            AnimationData.prototype.loop = false;\n    \n            /**\n             * AnimationData originPoint.\n             * @member {Array.<number>} originPoint\n             * @memberof op_gameconfig_01.AnimationData\n             * @instance\n             */\n            AnimationData.prototype.originPoint = $util.emptyArray;\n    \n            /**\n             * AnimationData walkOriginPoint.\n             * @member {Array.<number>} walkOriginPoint\n             * @memberof op_gameconfig_01.AnimationData\n             * @instance\n             */\n            AnimationData.prototype.walkOriginPoint = $util.emptyArray;\n    \n            /**\n             * AnimationData baseLoc.\n             * @member {string} baseLoc\n             * @memberof op_gameconfig_01.AnimationData\n             * @instance\n             */\n            AnimationData.prototype.baseLoc = "";\n    \n            /**\n             * AnimationData frameName.\n             * @member {Array.<string>} frameName\n             * @memberof op_gameconfig_01.AnimationData\n             * @instance\n             */\n            AnimationData.prototype.frameName = $util.emptyArray;\n    \n            /**\n             * Creates a new AnimationData instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig_01.AnimationData\n             * @static\n             * @param {op_gameconfig_01.IAnimationData=} [properties] Properties to set\n             * @returns {op_gameconfig_01.AnimationData} AnimationData instance\n             */\n            AnimationData.create = function create(properties) {\n                return new AnimationData(properties);\n            };\n    \n            /**\n             * Encodes the specified AnimationData message. Does not implicitly {@link op_gameconfig_01.AnimationData.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig_01.AnimationData\n             * @static\n             * @param {op_gameconfig_01.IAnimationData} message AnimationData message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            AnimationData.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                $root.op_gameconfig_01.Node.encode(message.node, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.frame != null && message.frame.length)\n                    for (var i = 0; i < message.frame.length; ++i)\n                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.frame[i]);\n                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.frameRate);\n                if (message.walkableArea != null && message.hasOwnProperty("walkableArea"))\n                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.walkableArea);\n                if (message.collisionArea != null && message.hasOwnProperty("collisionArea"))\n                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.collisionArea);\n                if (message.loop != null && message.hasOwnProperty("loop"))\n                    writer.uint32(/* id 6, wireType 0 =*/48).bool(message.loop);\n                if (message.originPoint != null && message.originPoint.length)\n                    for (var i = 0; i < message.originPoint.length; ++i)\n                        writer.uint32(/* id 7, wireType 0 =*/56).int32(message.originPoint[i]);\n                if (message.walkOriginPoint != null && message.walkOriginPoint.length)\n                    for (var i = 0; i < message.walkOriginPoint.length; ++i)\n                        writer.uint32(/* id 8, wireType 0 =*/64).int32(message.walkOriginPoint[i]);\n                if (message.baseLoc != null && message.hasOwnProperty("baseLoc"))\n                    writer.uint32(/* id 9, wireType 2 =*/74).string(message.baseLoc);\n                if (message.frameName != null && message.frameName.length)\n                    for (var i = 0; i < message.frameName.length; ++i)\n                        writer.uint32(/* id 10, wireType 2 =*/82).string(message.frameName[i]);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified AnimationData message, length delimited. Does not implicitly {@link op_gameconfig_01.AnimationData.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig_01.AnimationData\n             * @static\n             * @param {op_gameconfig_01.IAnimationData} message AnimationData message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            AnimationData.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes an AnimationData message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig_01.AnimationData\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig_01.AnimationData} AnimationData\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            AnimationData.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig_01.AnimationData();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.node = $root.op_gameconfig_01.Node.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        if (!(message.frame && message.frame.length))\n                            message.frame = [];\n                        if ((tag & 7) === 2) {\n                            var end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2)\n                                message.frame.push(reader.int32());\n                        } else\n                            message.frame.push(reader.int32());\n                        break;\n                    case 3:\n                        message.frameRate = reader.int32();\n                        break;\n                    case 4:\n                        message.walkableArea = reader.string();\n                        break;\n                    case 5:\n                        message.collisionArea = reader.string();\n                        break;\n                    case 6:\n                        message.loop = reader.bool();\n                        break;\n                    case 7:\n                        if (!(message.originPoint && message.originPoint.length))\n                            message.originPoint = [];\n                        if ((tag & 7) === 2) {\n                            var end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2)\n                                message.originPoint.push(reader.int32());\n                        } else\n                            message.originPoint.push(reader.int32());\n                        break;\n                    case 8:\n                        if (!(message.walkOriginPoint && message.walkOriginPoint.length))\n                            message.walkOriginPoint = [];\n                        if ((tag & 7) === 2) {\n                            var end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2)\n                                message.walkOriginPoint.push(reader.int32());\n                        } else\n                            message.walkOriginPoint.push(reader.int32());\n                        break;\n                    case 9:\n                        message.baseLoc = reader.string();\n                        break;\n                    case 10:\n                        if (!(message.frameName && message.frameName.length))\n                            message.frameName = [];\n                        message.frameName.push(reader.string());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("node"))\n                    throw $util.ProtocolError("missing required \'node\'", { instance: message });\n                if (!message.hasOwnProperty("frameRate"))\n                    throw $util.ProtocolError("missing required \'frameRate\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes an AnimationData message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig_01.AnimationData\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig_01.AnimationData} AnimationData\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            AnimationData.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies an AnimationData message.\n             * @function verify\n             * @memberof op_gameconfig_01.AnimationData\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            AnimationData.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                {\n                    var error = $root.op_gameconfig_01.Node.verify(message.node);\n                    if (error)\n                        return "node." + error;\n                }\n                if (message.frame != null && message.hasOwnProperty("frame")) {\n                    if (!Array.isArray(message.frame))\n                        return "frame: array expected";\n                    for (var i = 0; i < message.frame.length; ++i)\n                        if (!$util.isInteger(message.frame[i]))\n                            return "frame: integer[] expected";\n                }\n                if (!$util.isInteger(message.frameRate))\n                    return "frameRate: integer expected";\n                if (message.walkableArea != null && message.hasOwnProperty("walkableArea"))\n                    if (!$util.isString(message.walkableArea))\n                        return "walkableArea: string expected";\n                if (message.collisionArea != null && message.hasOwnProperty("collisionArea"))\n                    if (!$util.isString(message.collisionArea))\n                        return "collisionArea: string expected";\n                if (message.loop != null && message.hasOwnProperty("loop"))\n                    if (typeof message.loop !== "boolean")\n                        return "loop: boolean expected";\n                if (message.originPoint != null && message.hasOwnProperty("originPoint")) {\n                    if (!Array.isArray(message.originPoint))\n                        return "originPoint: array expected";\n                    for (var i = 0; i < message.originPoint.length; ++i)\n                        if (!$util.isInteger(message.originPoint[i]))\n                            return "originPoint: integer[] expected";\n                }\n                if (message.walkOriginPoint != null && message.hasOwnProperty("walkOriginPoint")) {\n                    if (!Array.isArray(message.walkOriginPoint))\n                        return "walkOriginPoint: array expected";\n                    for (var i = 0; i < message.walkOriginPoint.length; ++i)\n                        if (!$util.isInteger(message.walkOriginPoint[i]))\n                            return "walkOriginPoint: integer[] expected";\n                }\n                if (message.baseLoc != null && message.hasOwnProperty("baseLoc"))\n                    if (!$util.isString(message.baseLoc))\n                        return "baseLoc: string expected";\n                if (message.frameName != null && message.hasOwnProperty("frameName")) {\n                    if (!Array.isArray(message.frameName))\n                        return "frameName: array expected";\n                    for (var i = 0; i < message.frameName.length; ++i)\n                        if (!$util.isString(message.frameName[i]))\n                            return "frameName: string[] expected";\n                }\n                return null;\n            };\n    \n            /**\n             * Creates an AnimationData message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig_01.AnimationData\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig_01.AnimationData} AnimationData\n             */\n            AnimationData.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig_01.AnimationData)\n                    return object;\n                var message = new $root.op_gameconfig_01.AnimationData();\n                if (object.node != null) {\n                    if (typeof object.node !== "object")\n                        throw TypeError(".op_gameconfig_01.AnimationData.node: object expected");\n                    message.node = $root.op_gameconfig_01.Node.fromObject(object.node);\n                }\n                if (object.frame) {\n                    if (!Array.isArray(object.frame))\n                        throw TypeError(".op_gameconfig_01.AnimationData.frame: array expected");\n                    message.frame = [];\n                    for (var i = 0; i < object.frame.length; ++i)\n                        message.frame[i] = object.frame[i] | 0;\n                }\n                if (object.frameRate != null)\n                    message.frameRate = object.frameRate | 0;\n                if (object.walkableArea != null)\n                    message.walkableArea = String(object.walkableArea);\n                if (object.collisionArea != null)\n                    message.collisionArea = String(object.collisionArea);\n                if (object.loop != null)\n                    message.loop = Boolean(object.loop);\n                if (object.originPoint) {\n                    if (!Array.isArray(object.originPoint))\n                        throw TypeError(".op_gameconfig_01.AnimationData.originPoint: array expected");\n                    message.originPoint = [];\n                    for (var i = 0; i < object.originPoint.length; ++i)\n                        message.originPoint[i] = object.originPoint[i] | 0;\n                }\n                if (object.walkOriginPoint) {\n                    if (!Array.isArray(object.walkOriginPoint))\n                        throw TypeError(".op_gameconfig_01.AnimationData.walkOriginPoint: array expected");\n                    message.walkOriginPoint = [];\n                    for (var i = 0; i < object.walkOriginPoint.length; ++i)\n                        message.walkOriginPoint[i] = object.walkOriginPoint[i] | 0;\n                }\n                if (object.baseLoc != null)\n                    message.baseLoc = String(object.baseLoc);\n                if (object.frameName) {\n                    if (!Array.isArray(object.frameName))\n                        throw TypeError(".op_gameconfig_01.AnimationData.frameName: array expected");\n                    message.frameName = [];\n                    for (var i = 0; i < object.frameName.length; ++i)\n                        message.frameName[i] = String(object.frameName[i]);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from an AnimationData message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig_01.AnimationData\n             * @static\n             * @param {op_gameconfig_01.AnimationData} message AnimationData\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            AnimationData.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults) {\n                    object.frame = [];\n                    object.originPoint = [];\n                    object.walkOriginPoint = [];\n                    object.frameName = [];\n                }\n                if (options.defaults) {\n                    object.node = null;\n                    object.frameRate = 0;\n                    object.walkableArea = "";\n                    object.collisionArea = "";\n                    object.loop = false;\n                    object.baseLoc = "";\n                }\n                if (message.node != null && message.hasOwnProperty("node"))\n                    object.node = $root.op_gameconfig_01.Node.toObject(message.node, options);\n                if (message.frame && message.frame.length) {\n                    object.frame = [];\n                    for (var j = 0; j < message.frame.length; ++j)\n                        object.frame[j] = message.frame[j];\n                }\n                if (message.frameRate != null && message.hasOwnProperty("frameRate"))\n                    object.frameRate = message.frameRate;\n                if (message.walkableArea != null && message.hasOwnProperty("walkableArea"))\n                    object.walkableArea = message.walkableArea;\n                if (message.collisionArea != null && message.hasOwnProperty("collisionArea"))\n                    object.collisionArea = message.collisionArea;\n                if (message.loop != null && message.hasOwnProperty("loop"))\n                    object.loop = message.loop;\n                if (message.originPoint && message.originPoint.length) {\n                    object.originPoint = [];\n                    for (var j = 0; j < message.originPoint.length; ++j)\n                        object.originPoint[j] = message.originPoint[j];\n                }\n                if (message.walkOriginPoint && message.walkOriginPoint.length) {\n                    object.walkOriginPoint = [];\n                    for (var j = 0; j < message.walkOriginPoint.length; ++j)\n                        object.walkOriginPoint[j] = message.walkOriginPoint[j];\n                }\n                if (message.baseLoc != null && message.hasOwnProperty("baseLoc"))\n                    object.baseLoc = message.baseLoc;\n                if (message.frameName && message.frameName.length) {\n                    object.frameName = [];\n                    for (var j = 0; j < message.frameName.length; ++j)\n                        object.frameName[j] = message.frameName[j];\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this AnimationData to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig_01.AnimationData\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            AnimationData.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return AnimationData;\n        })();\n    \n        op_gameconfig_01.Display = (function() {\n    \n            /**\n             * Properties of a Display.\n             * @memberof op_gameconfig_01\n             * @interface IDisplay\n             * @property {op_gameconfig_01.INode} node Display node\n             * @property {string} dataPath Display dataPath\n             * @property {string} texturePath Display texturePath\n             * @property {string|null} [tips] Display tips\n             * @property {op_def.VerticalAlignment|null} [vertical] Display vertical\n             * @property {op_def.HorizontalAlignment|null} [horizontal] Display horizontal\n             * @property {number|null} [scaleX] Display scaleX\n             * @property {number|null} [scaleY] Display scaleY\n             */\n    \n            /**\n             * Constructs a new Display.\n             * @memberof op_gameconfig_01\n             * @classdesc Represents a Display.\n             * @implements IDisplay\n             * @constructor\n             * @param {op_gameconfig_01.IDisplay=} [properties] Properties to set\n             */\n            function Display(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Display node.\n             * @member {op_gameconfig_01.INode} node\n             * @memberof op_gameconfig_01.Display\n             * @instance\n             */\n            Display.prototype.node = null;\n    \n            /**\n             * Display dataPath.\n             * @member {string} dataPath\n             * @memberof op_gameconfig_01.Display\n             * @instance\n             */\n            Display.prototype.dataPath = "";\n    \n            /**\n             * Display texturePath.\n             * @member {string} texturePath\n             * @memberof op_gameconfig_01.Display\n             * @instance\n             */\n            Display.prototype.texturePath = "";\n    \n            /**\n             * Display tips.\n             * @member {string} tips\n             * @memberof op_gameconfig_01.Display\n             * @instance\n             */\n            Display.prototype.tips = "";\n    \n            /**\n             * Display vertical.\n             * @member {op_def.VerticalAlignment} vertical\n             * @memberof op_gameconfig_01.Display\n             * @instance\n             */\n            Display.prototype.vertical = 0;\n    \n            /**\n             * Display horizontal.\n             * @member {op_def.HorizontalAlignment} horizontal\n             * @memberof op_gameconfig_01.Display\n             * @instance\n             */\n            Display.prototype.horizontal = 0;\n    \n            /**\n             * Display scaleX.\n             * @member {number} scaleX\n             * @memberof op_gameconfig_01.Display\n             * @instance\n             */\n            Display.prototype.scaleX = 1;\n    \n            /**\n             * Display scaleY.\n             * @member {number} scaleY\n             * @memberof op_gameconfig_01.Display\n             * @instance\n             */\n            Display.prototype.scaleY = 1;\n    \n            /**\n             * Creates a new Display instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig_01.Display\n             * @static\n             * @param {op_gameconfig_01.IDisplay=} [properties] Properties to set\n             * @returns {op_gameconfig_01.Display} Display instance\n             */\n            Display.create = function create(properties) {\n                return new Display(properties);\n            };\n    \n            /**\n             * Encodes the specified Display message. Does not implicitly {@link op_gameconfig_01.Display.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig_01.Display\n             * @static\n             * @param {op_gameconfig_01.IDisplay} message Display message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Display.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                $root.op_gameconfig_01.Node.encode(message.node, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.dataPath);\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.texturePath);\n                if (message.tips != null && message.hasOwnProperty("tips"))\n                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.tips);\n                if (message.vertical != null && message.hasOwnProperty("vertical"))\n                    writer.uint32(/* id 5, wireType 0 =*/40).int32(message.vertical);\n                if (message.horizontal != null && message.hasOwnProperty("horizontal"))\n                    writer.uint32(/* id 6, wireType 0 =*/48).int32(message.horizontal);\n                if (message.scaleX != null && message.hasOwnProperty("scaleX"))\n                    writer.uint32(/* id 7, wireType 5 =*/61).float(message.scaleX);\n                if (message.scaleY != null && message.hasOwnProperty("scaleY"))\n                    writer.uint32(/* id 8, wireType 5 =*/69).float(message.scaleY);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Display message, length delimited. Does not implicitly {@link op_gameconfig_01.Display.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig_01.Display\n             * @static\n             * @param {op_gameconfig_01.IDisplay} message Display message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Display.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a Display message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig_01.Display\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig_01.Display} Display\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Display.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig_01.Display();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.node = $root.op_gameconfig_01.Node.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        message.dataPath = reader.string();\n                        break;\n                    case 3:\n                        message.texturePath = reader.string();\n                        break;\n                    case 4:\n                        message.tips = reader.string();\n                        break;\n                    case 5:\n                        message.vertical = reader.int32();\n                        break;\n                    case 6:\n                        message.horizontal = reader.int32();\n                        break;\n                    case 7:\n                        message.scaleX = reader.float();\n                        break;\n                    case 8:\n                        message.scaleY = reader.float();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("node"))\n                    throw $util.ProtocolError("missing required \'node\'", { instance: message });\n                if (!message.hasOwnProperty("dataPath"))\n                    throw $util.ProtocolError("missing required \'dataPath\'", { instance: message });\n                if (!message.hasOwnProperty("texturePath"))\n                    throw $util.ProtocolError("missing required \'texturePath\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a Display message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig_01.Display\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig_01.Display} Display\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Display.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a Display message.\n             * @function verify\n             * @memberof op_gameconfig_01.Display\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Display.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                {\n                    var error = $root.op_gameconfig_01.Node.verify(message.node);\n                    if (error)\n                        return "node." + error;\n                }\n                if (!$util.isString(message.dataPath))\n                    return "dataPath: string expected";\n                if (!$util.isString(message.texturePath))\n                    return "texturePath: string expected";\n                if (message.tips != null && message.hasOwnProperty("tips"))\n                    if (!$util.isString(message.tips))\n                        return "tips: string expected";\n                if (message.vertical != null && message.hasOwnProperty("vertical"))\n                    switch (message.vertical) {\n                    default:\n                        return "vertical: enum value expected";\n                    case 0:\n                    case 1:\n                    case 2:\n                        break;\n                    }\n                if (message.horizontal != null && message.hasOwnProperty("horizontal"))\n                    switch (message.horizontal) {\n                    default:\n                        return "horizontal: enum value expected";\n                    case 0:\n                    case 1:\n                    case 2:\n                        break;\n                    }\n                if (message.scaleX != null && message.hasOwnProperty("scaleX"))\n                    if (typeof message.scaleX !== "number")\n                        return "scaleX: number expected";\n                if (message.scaleY != null && message.hasOwnProperty("scaleY"))\n                    if (typeof message.scaleY !== "number")\n                        return "scaleY: number expected";\n                return null;\n            };\n    \n            /**\n             * Creates a Display message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig_01.Display\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig_01.Display} Display\n             */\n            Display.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig_01.Display)\n                    return object;\n                var message = new $root.op_gameconfig_01.Display();\n                if (object.node != null) {\n                    if (typeof object.node !== "object")\n                        throw TypeError(".op_gameconfig_01.Display.node: object expected");\n                    message.node = $root.op_gameconfig_01.Node.fromObject(object.node);\n                }\n                if (object.dataPath != null)\n                    message.dataPath = String(object.dataPath);\n                if (object.texturePath != null)\n                    message.texturePath = String(object.texturePath);\n                if (object.tips != null)\n                    message.tips = String(object.tips);\n                switch (object.vertical) {\n                case "VERTICAL_TOP":\n                case 0:\n                    message.vertical = 0;\n                    break;\n                case "VERTICAL_CENTER":\n                case 1:\n                    message.vertical = 1;\n                    break;\n                case "VERTICAL_BOTTOM":\n                case 2:\n                    message.vertical = 2;\n                    break;\n                }\n                switch (object.horizontal) {\n                case "HORIZONTAL_LEFT":\n                case 0:\n                    message.horizontal = 0;\n                    break;\n                case "HORIZONTAL_CENTER":\n                case 1:\n                    message.horizontal = 1;\n                    break;\n                case "HORIZONTAL_RIGHT":\n                case 2:\n                    message.horizontal = 2;\n                    break;\n                }\n                if (object.scaleX != null)\n                    message.scaleX = Number(object.scaleX);\n                if (object.scaleY != null)\n                    message.scaleY = Number(object.scaleY);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a Display message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig_01.Display\n             * @static\n             * @param {op_gameconfig_01.Display} message Display\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Display.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.node = null;\n                    object.dataPath = "";\n                    object.texturePath = "";\n                    object.tips = "";\n                    object.vertical = options.enums === String ? "VERTICAL_TOP" : 0;\n                    object.horizontal = options.enums === String ? "HORIZONTAL_LEFT" : 0;\n                    object.scaleX = 1;\n                    object.scaleY = 1;\n                }\n                if (message.node != null && message.hasOwnProperty("node"))\n                    object.node = $root.op_gameconfig_01.Node.toObject(message.node, options);\n                if (message.dataPath != null && message.hasOwnProperty("dataPath"))\n                    object.dataPath = message.dataPath;\n                if (message.texturePath != null && message.hasOwnProperty("texturePath"))\n                    object.texturePath = message.texturePath;\n                if (message.tips != null && message.hasOwnProperty("tips"))\n                    object.tips = message.tips;\n                if (message.vertical != null && message.hasOwnProperty("vertical"))\n                    object.vertical = options.enums === String ? $root.op_def.VerticalAlignment[message.vertical] : message.vertical;\n                if (message.horizontal != null && message.hasOwnProperty("horizontal"))\n                    object.horizontal = options.enums === String ? $root.op_def.HorizontalAlignment[message.horizontal] : message.horizontal;\n                if (message.scaleX != null && message.hasOwnProperty("scaleX"))\n                    object.scaleX = options.json && !isFinite(message.scaleX) ? String(message.scaleX) : message.scaleX;\n                if (message.scaleY != null && message.hasOwnProperty("scaleY"))\n                    object.scaleY = options.json && !isFinite(message.scaleY) ? String(message.scaleY) : message.scaleY;\n                return object;\n            };\n    \n            /**\n             * Converts this Display to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig_01.Display\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Display.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Display;\n        })();\n    \n        op_gameconfig_01.Attribute = (function() {\n    \n            /**\n             * Properties of an Attribute.\n             * @memberof op_gameconfig_01\n             * @interface IAttribute\n             * @property {op_gameconfig_01.INode} node Attribute node\n             * @property {string} key Attribute key\n             * @property {number|null} [intVal] Attribute intVal\n             * @property {string|null} [strVal] Attribute strVal\n             * @property {boolean|null} [boolVal] Attribute boolVal\n             * @property {string|null} [media] Attribute media\n             * @property {string|null} [description] Attribute description\n             */\n    \n            /**\n             * Constructs a new Attribute.\n             * @memberof op_gameconfig_01\n             * @classdesc Represents an Attribute.\n             * @implements IAttribute\n             * @constructor\n             * @param {op_gameconfig_01.IAttribute=} [properties] Properties to set\n             */\n            function Attribute(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Attribute node.\n             * @member {op_gameconfig_01.INode} node\n             * @memberof op_gameconfig_01.Attribute\n             * @instance\n             */\n            Attribute.prototype.node = null;\n    \n            /**\n             * Attribute key.\n             * @member {string} key\n             * @memberof op_gameconfig_01.Attribute\n             * @instance\n             */\n            Attribute.prototype.key = "";\n    \n            /**\n             * Attribute intVal.\n             * @member {number} intVal\n             * @memberof op_gameconfig_01.Attribute\n             * @instance\n             */\n            Attribute.prototype.intVal = 0;\n    \n            /**\n             * Attribute strVal.\n             * @member {string} strVal\n             * @memberof op_gameconfig_01.Attribute\n             * @instance\n             */\n            Attribute.prototype.strVal = "";\n    \n            /**\n             * Attribute boolVal.\n             * @member {boolean} boolVal\n             * @memberof op_gameconfig_01.Attribute\n             * @instance\n             */\n            Attribute.prototype.boolVal = false;\n    \n            /**\n             * Attribute media.\n             * @member {string} media\n             * @memberof op_gameconfig_01.Attribute\n             * @instance\n             */\n            Attribute.prototype.media = "";\n    \n            /**\n             * Attribute description.\n             * @member {string} description\n             * @memberof op_gameconfig_01.Attribute\n             * @instance\n             */\n            Attribute.prototype.description = "";\n    \n            /**\n             * Creates a new Attribute instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig_01.Attribute\n             * @static\n             * @param {op_gameconfig_01.IAttribute=} [properties] Properties to set\n             * @returns {op_gameconfig_01.Attribute} Attribute instance\n             */\n            Attribute.create = function create(properties) {\n                return new Attribute(properties);\n            };\n    \n            /**\n             * Encodes the specified Attribute message. Does not implicitly {@link op_gameconfig_01.Attribute.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig_01.Attribute\n             * @static\n             * @param {op_gameconfig_01.IAttribute} message Attribute message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Attribute.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                $root.op_gameconfig_01.Node.encode(message.node, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.key);\n                if (message.intVal != null && message.hasOwnProperty("intVal"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.intVal);\n                if (message.strVal != null && message.hasOwnProperty("strVal"))\n                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.strVal);\n                if (message.boolVal != null && message.hasOwnProperty("boolVal"))\n                    writer.uint32(/* id 5, wireType 0 =*/40).bool(message.boolVal);\n                if (message.media != null && message.hasOwnProperty("media"))\n                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.media);\n                if (message.description != null && message.hasOwnProperty("description"))\n                    writer.uint32(/* id 7, wireType 2 =*/58).string(message.description);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Attribute message, length delimited. Does not implicitly {@link op_gameconfig_01.Attribute.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig_01.Attribute\n             * @static\n             * @param {op_gameconfig_01.IAttribute} message Attribute message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Attribute.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes an Attribute message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig_01.Attribute\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig_01.Attribute} Attribute\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Attribute.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig_01.Attribute();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.node = $root.op_gameconfig_01.Node.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        message.key = reader.string();\n                        break;\n                    case 3:\n                        message.intVal = reader.int32();\n                        break;\n                    case 4:\n                        message.strVal = reader.string();\n                        break;\n                    case 5:\n                        message.boolVal = reader.bool();\n                        break;\n                    case 6:\n                        message.media = reader.string();\n                        break;\n                    case 7:\n                        message.description = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("node"))\n                    throw $util.ProtocolError("missing required \'node\'", { instance: message });\n                if (!message.hasOwnProperty("key"))\n                    throw $util.ProtocolError("missing required \'key\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes an Attribute message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig_01.Attribute\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig_01.Attribute} Attribute\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Attribute.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies an Attribute message.\n             * @function verify\n             * @memberof op_gameconfig_01.Attribute\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Attribute.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                {\n                    var error = $root.op_gameconfig_01.Node.verify(message.node);\n                    if (error)\n                        return "node." + error;\n                }\n                if (!$util.isString(message.key))\n                    return "key: string expected";\n                if (message.intVal != null && message.hasOwnProperty("intVal"))\n                    if (!$util.isInteger(message.intVal))\n                        return "intVal: integer expected";\n                if (message.strVal != null && message.hasOwnProperty("strVal"))\n                    if (!$util.isString(message.strVal))\n                        return "strVal: string expected";\n                if (message.boolVal != null && message.hasOwnProperty("boolVal"))\n                    if (typeof message.boolVal !== "boolean")\n                        return "boolVal: boolean expected";\n                if (message.media != null && message.hasOwnProperty("media"))\n                    if (!$util.isString(message.media))\n                        return "media: string expected";\n                if (message.description != null && message.hasOwnProperty("description"))\n                    if (!$util.isString(message.description))\n                        return "description: string expected";\n                return null;\n            };\n    \n            /**\n             * Creates an Attribute message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig_01.Attribute\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig_01.Attribute} Attribute\n             */\n            Attribute.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig_01.Attribute)\n                    return object;\n                var message = new $root.op_gameconfig_01.Attribute();\n                if (object.node != null) {\n                    if (typeof object.node !== "object")\n                        throw TypeError(".op_gameconfig_01.Attribute.node: object expected");\n                    message.node = $root.op_gameconfig_01.Node.fromObject(object.node);\n                }\n                if (object.key != null)\n                    message.key = String(object.key);\n                if (object.intVal != null)\n                    message.intVal = object.intVal | 0;\n                if (object.strVal != null)\n                    message.strVal = String(object.strVal);\n                if (object.boolVal != null)\n                    message.boolVal = Boolean(object.boolVal);\n                if (object.media != null)\n                    message.media = String(object.media);\n                if (object.description != null)\n                    message.description = String(object.description);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from an Attribute message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig_01.Attribute\n             * @static\n             * @param {op_gameconfig_01.Attribute} message Attribute\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Attribute.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.node = null;\n                    object.key = "";\n                    object.intVal = 0;\n                    object.strVal = "";\n                    object.boolVal = false;\n                    object.media = "";\n                    object.description = "";\n                }\n                if (message.node != null && message.hasOwnProperty("node"))\n                    object.node = $root.op_gameconfig_01.Node.toObject(message.node, options);\n                if (message.key != null && message.hasOwnProperty("key"))\n                    object.key = message.key;\n                if (message.intVal != null && message.hasOwnProperty("intVal"))\n                    object.intVal = message.intVal;\n                if (message.strVal != null && message.hasOwnProperty("strVal"))\n                    object.strVal = message.strVal;\n                if (message.boolVal != null && message.hasOwnProperty("boolVal"))\n                    object.boolVal = message.boolVal;\n                if (message.media != null && message.hasOwnProperty("media"))\n                    object.media = message.media;\n                if (message.description != null && message.hasOwnProperty("description"))\n                    object.description = message.description;\n                return object;\n            };\n    \n            /**\n             * Converts this Attribute to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig_01.Attribute\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Attribute.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Attribute;\n        })();\n    \n        op_gameconfig_01.Function = (function() {\n    \n            /**\n             * Properties of a Function.\n             * @memberof op_gameconfig_01\n             * @interface IFunction\n             * @property {op_gameconfig_01.INode} node Function node\n             * @property {string} fileName Function fileName\n             * @property {string} funcName Function funcName\n             * @property {string} version Function version\n             */\n    \n            /**\n             * Constructs a new Function.\n             * @memberof op_gameconfig_01\n             * @classdesc Represents a Function.\n             * @implements IFunction\n             * @constructor\n             * @param {op_gameconfig_01.IFunction=} [properties] Properties to set\n             */\n            function Function(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Function node.\n             * @member {op_gameconfig_01.INode} node\n             * @memberof op_gameconfig_01.Function\n             * @instance\n             */\n            Function.prototype.node = null;\n    \n            /**\n             * Function fileName.\n             * @member {string} fileName\n             * @memberof op_gameconfig_01.Function\n             * @instance\n             */\n            Function.prototype.fileName = "";\n    \n            /**\n             * Function funcName.\n             * @member {string} funcName\n             * @memberof op_gameconfig_01.Function\n             * @instance\n             */\n            Function.prototype.funcName = "";\n    \n            /**\n             * Function version.\n             * @member {string} version\n             * @memberof op_gameconfig_01.Function\n             * @instance\n             */\n            Function.prototype.version = "";\n    \n            /**\n             * Creates a new Function instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig_01.Function\n             * @static\n             * @param {op_gameconfig_01.IFunction=} [properties] Properties to set\n             * @returns {op_gameconfig_01.Function} Function instance\n             */\n            Function.create = function create(properties) {\n                return new Function(properties);\n            };\n    \n            /**\n             * Encodes the specified Function message. Does not implicitly {@link op_gameconfig_01.Function.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig_01.Function\n             * @static\n             * @param {op_gameconfig_01.IFunction} message Function message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Function.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                $root.op_gameconfig_01.Node.encode(message.node, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.fileName);\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.funcName);\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.version);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Function message, length delimited. Does not implicitly {@link op_gameconfig_01.Function.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig_01.Function\n             * @static\n             * @param {op_gameconfig_01.IFunction} message Function message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Function.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a Function message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig_01.Function\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig_01.Function} Function\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Function.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig_01.Function();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.node = $root.op_gameconfig_01.Node.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        message.fileName = reader.string();\n                        break;\n                    case 3:\n                        message.funcName = reader.string();\n                        break;\n                    case 4:\n                        message.version = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("node"))\n                    throw $util.ProtocolError("missing required \'node\'", { instance: message });\n                if (!message.hasOwnProperty("fileName"))\n                    throw $util.ProtocolError("missing required \'fileName\'", { instance: message });\n                if (!message.hasOwnProperty("funcName"))\n                    throw $util.ProtocolError("missing required \'funcName\'", { instance: message });\n                if (!message.hasOwnProperty("version"))\n                    throw $util.ProtocolError("missing required \'version\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a Function message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig_01.Function\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig_01.Function} Function\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Function.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a Function message.\n             * @function verify\n             * @memberof op_gameconfig_01.Function\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Function.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                {\n                    var error = $root.op_gameconfig_01.Node.verify(message.node);\n                    if (error)\n                        return "node." + error;\n                }\n                if (!$util.isString(message.fileName))\n                    return "fileName: string expected";\n                if (!$util.isString(message.funcName))\n                    return "funcName: string expected";\n                if (!$util.isString(message.version))\n                    return "version: string expected";\n                return null;\n            };\n    \n            /**\n             * Creates a Function message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig_01.Function\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig_01.Function} Function\n             */\n            Function.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig_01.Function)\n                    return object;\n                var message = new $root.op_gameconfig_01.Function();\n                if (object.node != null) {\n                    if (typeof object.node !== "object")\n                        throw TypeError(".op_gameconfig_01.Function.node: object expected");\n                    message.node = $root.op_gameconfig_01.Node.fromObject(object.node);\n                }\n                if (object.fileName != null)\n                    message.fileName = String(object.fileName);\n                if (object.funcName != null)\n                    message.funcName = String(object.funcName);\n                if (object.version != null)\n                    message.version = String(object.version);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a Function message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig_01.Function\n             * @static\n             * @param {op_gameconfig_01.Function} message Function\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Function.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.node = null;\n                    object.fileName = "";\n                    object.funcName = "";\n                    object.version = "";\n                }\n                if (message.node != null && message.hasOwnProperty("node"))\n                    object.node = $root.op_gameconfig_01.Node.toObject(message.node, options);\n                if (message.fileName != null && message.hasOwnProperty("fileName"))\n                    object.fileName = message.fileName;\n                if (message.funcName != null && message.hasOwnProperty("funcName"))\n                    object.funcName = message.funcName;\n                if (message.version != null && message.hasOwnProperty("version"))\n                    object.version = message.version;\n                return object;\n            };\n    \n            /**\n             * Converts this Function to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig_01.Function\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Function.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Function;\n        })();\n    \n        op_gameconfig_01.Event = (function() {\n    \n            /**\n             * Properties of an Event.\n             * @memberof op_gameconfig_01\n             * @interface IEvent\n             * @property {op_gameconfig_01.INode} node Event node\n             * @property {op_def.GameEvent} eventName Event eventName\n             */\n    \n            /**\n             * Constructs a new Event.\n             * @memberof op_gameconfig_01\n             * @classdesc Represents an Event.\n             * @implements IEvent\n             * @constructor\n             * @param {op_gameconfig_01.IEvent=} [properties] Properties to set\n             */\n            function Event(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Event node.\n             * @member {op_gameconfig_01.INode} node\n             * @memberof op_gameconfig_01.Event\n             * @instance\n             */\n            Event.prototype.node = null;\n    \n            /**\n             * Event eventName.\n             * @member {op_def.GameEvent} eventName\n             * @memberof op_gameconfig_01.Event\n             * @instance\n             */\n            Event.prototype.eventName = 0;\n    \n            /**\n             * Creates a new Event instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig_01.Event\n             * @static\n             * @param {op_gameconfig_01.IEvent=} [properties] Properties to set\n             * @returns {op_gameconfig_01.Event} Event instance\n             */\n            Event.create = function create(properties) {\n                return new Event(properties);\n            };\n    \n            /**\n             * Encodes the specified Event message. Does not implicitly {@link op_gameconfig_01.Event.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig_01.Event\n             * @static\n             * @param {op_gameconfig_01.IEvent} message Event message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Event.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                $root.op_gameconfig_01.Node.encode(message.node, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.eventName);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Event message, length delimited. Does not implicitly {@link op_gameconfig_01.Event.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig_01.Event\n             * @static\n             * @param {op_gameconfig_01.IEvent} message Event message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Event.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes an Event message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig_01.Event\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig_01.Event} Event\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Event.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig_01.Event();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.node = $root.op_gameconfig_01.Node.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        message.eventName = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("node"))\n                    throw $util.ProtocolError("missing required \'node\'", { instance: message });\n                if (!message.hasOwnProperty("eventName"))\n                    throw $util.ProtocolError("missing required \'eventName\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes an Event message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig_01.Event\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig_01.Event} Event\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Event.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies an Event message.\n             * @function verify\n             * @memberof op_gameconfig_01.Event\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Event.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                {\n                    var error = $root.op_gameconfig_01.Node.verify(message.node);\n                    if (error)\n                        return "node." + error;\n                }\n                switch (message.eventName) {\n                default:\n                    return "eventName: enum value expected";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                case 9:\n                case 10:\n                case 11:\n                case 12:\n                case 13:\n                case 14:\n                case 15:\n                case 16:\n                case 17:\n                case 18:\n                case 19:\n                case 20:\n                case 21:\n                case 22:\n                case 23:\n                case 24:\n                case 38:\n                case 25:\n                case 26:\n                case 27:\n                case 28:\n                case 29:\n                case 30:\n                case 31:\n                case 32:\n                case 33:\n                case 34:\n                case 35:\n                case 36:\n                case 37:\n                case 39:\n                case 40:\n                case 41:\n                case 42:\n                case 43:\n                case 44:\n                case 45:\n                case 46:\n                    break;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates an Event message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig_01.Event\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig_01.Event} Event\n             */\n            Event.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig_01.Event)\n                    return object;\n                var message = new $root.op_gameconfig_01.Event();\n                if (object.node != null) {\n                    if (typeof object.node !== "object")\n                        throw TypeError(".op_gameconfig_01.Event.node: object expected");\n                    message.node = $root.op_gameconfig_01.Node.fromObject(object.node);\n                }\n                switch (object.eventName) {\n                case "UnknownEvent":\n                case 0:\n                    message.eventName = 0;\n                    break;\n                case "onGameCreateBefore":\n                case 1:\n                    message.eventName = 1;\n                    break;\n                case "onGameRun":\n                case 2:\n                    message.eventName = 2;\n                    break;\n                case "onGameDestroy":\n                case 3:\n                    message.eventName = 3;\n                    break;\n                case "onGameSelectCharacter":\n                case 4:\n                    message.eventName = 4;\n                    break;\n                case "onGameEnter":\n                case 5:\n                    message.eventName = 5;\n                    break;\n                case "onGameLeave":\n                case 6:\n                    message.eventName = 6;\n                    break;\n                case "onGameRightMouseDown":\n                case 7:\n                    message.eventName = 7;\n                    break;\n                case "onGameRightMouseUp":\n                case 8:\n                    message.eventName = 8;\n                    break;\n                case "onGameLeftMouseDown":\n                case 9:\n                    message.eventName = 9;\n                    break;\n                case "onGameLeftMouseUp":\n                case 10:\n                    message.eventName = 10;\n                    break;\n                case "onGameMouseOut":\n                case 11:\n                    message.eventName = 11;\n                    break;\n                case "onGameMouseOver":\n                case 12:\n                    message.eventName = 12;\n                    break;\n                case "onSceneCreate":\n                case 13:\n                    message.eventName = 13;\n                    break;\n                case "onSceneRun":\n                case 14:\n                    message.eventName = 14;\n                    break;\n                case "onSceneDestroy":\n                case 15:\n                    message.eventName = 15;\n                    break;\n                case "onSceneEnter":\n                case 16:\n                    message.eventName = 16;\n                    break;\n                case "onSceneLeave":\n                case 17:\n                    message.eventName = 17;\n                    break;\n                case "onElementCreate":\n                case 18:\n                    message.eventName = 18;\n                    break;\n                case "onElementDestroy":\n                case 19:\n                    message.eventName = 19;\n                    break;\n                case "onElementHit":\n                case 20:\n                    message.eventName = 20;\n                    break;\n                case "onElementMove":\n                case 21:\n                    message.eventName = 21;\n                    break;\n                case "onElementAttributeChange":\n                case 22:\n                    message.eventName = 22;\n                    break;\n                case "onElementLeave":\n                case 23:\n                    message.eventName = 23;\n                    break;\n                case "onElementStop":\n                case 24:\n                    message.eventName = 24;\n                    break;\n                case "onElementActive":\n                case 38:\n                    message.eventName = 38;\n                    break;\n                case "onCharacterHit":\n                case 25:\n                    message.eventName = 25;\n                    break;\n                case "onCharacterAttributeChange":\n                case 26:\n                    message.eventName = 26;\n                    break;\n                case "onCharacterMove":\n                case 27:\n                    message.eventName = 27;\n                    break;\n                case "onCharacterStop":\n                case 28:\n                    message.eventName = 28;\n                    break;\n                case "onTerrainDestroy":\n                case 29:\n                    message.eventName = 29;\n                    break;\n                case "onTerrainOverFunc":\n                case 30:\n                    message.eventName = 30;\n                    break;\n                case "onTerrainLeaveFunc":\n                case 31:\n                    message.eventName = 31;\n                    break;\n                case "onTerrainSchedule":\n                case 32:\n                    message.eventName = 32;\n                    break;\n                case "onTerrainCreate":\n                case 33:\n                    message.eventName = 33;\n                    break;\n                case "onUiClick":\n                case 34:\n                    message.eventName = 34;\n                    break;\n                case "onItemUse":\n                case 35:\n                    message.eventName = 35;\n                    break;\n                case "onPackageItemMove":\n                case 36:\n                    message.eventName = 36;\n                    break;\n                case "onTimerUpdate":\n                case 37:\n                    message.eventName = 37;\n                    break;\n                case "onGameKeyboardDown":\n                case 39:\n                    message.eventName = 39;\n                    break;\n                case "onGameKeyboardUp":\n                case 40:\n                    message.eventName = 40;\n                    break;\n                case "onCharacterLeave":\n                case 41:\n                    message.eventName = 41;\n                    break;\n                case "onChat":\n                case 42:\n                    message.eventName = 42;\n                    break;\n                case "onGameCreateAfter":\n                case 43:\n                    message.eventName = 43;\n                    break;\n                case "onItemAdd":\n                case 44:\n                    message.eventName = 44;\n                    break;\n                case "onItemRemove":\n                case 45:\n                    message.eventName = 45;\n                    break;\n                case "onItemAttributeChange":\n                case 46:\n                    message.eventName = 46;\n                    break;\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from an Event message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig_01.Event\n             * @static\n             * @param {op_gameconfig_01.Event} message Event\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Event.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.node = null;\n                    object.eventName = options.enums === String ? "UnknownEvent" : 0;\n                }\n                if (message.node != null && message.hasOwnProperty("node"))\n                    object.node = $root.op_gameconfig_01.Node.toObject(message.node, options);\n                if (message.eventName != null && message.hasOwnProperty("eventName"))\n                    object.eventName = options.enums === String ? $root.op_def.GameEvent[message.eventName] : message.eventName;\n                return object;\n            };\n    \n            /**\n             * Converts this Event to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig_01.Event\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Event.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Event;\n        })();\n    \n        op_gameconfig_01.MapSize = (function() {\n    \n            /**\n             * Properties of a MapSize.\n             * @memberof op_gameconfig_01\n             * @interface IMapSize\n             * @property {op_gameconfig_01.INode} node MapSize node\n             * @property {number} cols MapSize cols\n             * @property {number} rows MapSize rows\n             * @property {number} tileWidth MapSize tileWidth\n             * @property {number} tileHeight MapSize tileHeight\n             */\n    \n            /**\n             * Constructs a new MapSize.\n             * @memberof op_gameconfig_01\n             * @classdesc Represents a MapSize.\n             * @implements IMapSize\n             * @constructor\n             * @param {op_gameconfig_01.IMapSize=} [properties] Properties to set\n             */\n            function MapSize(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * MapSize node.\n             * @member {op_gameconfig_01.INode} node\n             * @memberof op_gameconfig_01.MapSize\n             * @instance\n             */\n            MapSize.prototype.node = null;\n    \n            /**\n             * MapSize cols.\n             * @member {number} cols\n             * @memberof op_gameconfig_01.MapSize\n             * @instance\n             */\n            MapSize.prototype.cols = 0;\n    \n            /**\n             * MapSize rows.\n             * @member {number} rows\n             * @memberof op_gameconfig_01.MapSize\n             * @instance\n             */\n            MapSize.prototype.rows = 0;\n    \n            /**\n             * MapSize tileWidth.\n             * @member {number} tileWidth\n             * @memberof op_gameconfig_01.MapSize\n             * @instance\n             */\n            MapSize.prototype.tileWidth = 0;\n    \n            /**\n             * MapSize tileHeight.\n             * @member {number} tileHeight\n             * @memberof op_gameconfig_01.MapSize\n             * @instance\n             */\n            MapSize.prototype.tileHeight = 0;\n    \n            /**\n             * Creates a new MapSize instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig_01.MapSize\n             * @static\n             * @param {op_gameconfig_01.IMapSize=} [properties] Properties to set\n             * @returns {op_gameconfig_01.MapSize} MapSize instance\n             */\n            MapSize.create = function create(properties) {\n                return new MapSize(properties);\n            };\n    \n            /**\n             * Encodes the specified MapSize message. Does not implicitly {@link op_gameconfig_01.MapSize.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig_01.MapSize\n             * @static\n             * @param {op_gameconfig_01.IMapSize} message MapSize message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            MapSize.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                $root.op_gameconfig_01.Node.encode(message.node, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                writer.uint32(/* id 2, wireType 5 =*/21).float(message.cols);\n                writer.uint32(/* id 3, wireType 5 =*/29).float(message.rows);\n                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.tileWidth);\n                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.tileHeight);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified MapSize message, length delimited. Does not implicitly {@link op_gameconfig_01.MapSize.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig_01.MapSize\n             * @static\n             * @param {op_gameconfig_01.IMapSize} message MapSize message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            MapSize.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a MapSize message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig_01.MapSize\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig_01.MapSize} MapSize\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            MapSize.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig_01.MapSize();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.node = $root.op_gameconfig_01.Node.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        message.cols = reader.float();\n                        break;\n                    case 3:\n                        message.rows = reader.float();\n                        break;\n                    case 4:\n                        message.tileWidth = reader.int32();\n                        break;\n                    case 5:\n                        message.tileHeight = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("node"))\n                    throw $util.ProtocolError("missing required \'node\'", { instance: message });\n                if (!message.hasOwnProperty("cols"))\n                    throw $util.ProtocolError("missing required \'cols\'", { instance: message });\n                if (!message.hasOwnProperty("rows"))\n                    throw $util.ProtocolError("missing required \'rows\'", { instance: message });\n                if (!message.hasOwnProperty("tileWidth"))\n                    throw $util.ProtocolError("missing required \'tileWidth\'", { instance: message });\n                if (!message.hasOwnProperty("tileHeight"))\n                    throw $util.ProtocolError("missing required \'tileHeight\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a MapSize message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig_01.MapSize\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig_01.MapSize} MapSize\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            MapSize.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a MapSize message.\n             * @function verify\n             * @memberof op_gameconfig_01.MapSize\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            MapSize.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                {\n                    var error = $root.op_gameconfig_01.Node.verify(message.node);\n                    if (error)\n                        return "node." + error;\n                }\n                if (typeof message.cols !== "number")\n                    return "cols: number expected";\n                if (typeof message.rows !== "number")\n                    return "rows: number expected";\n                if (!$util.isInteger(message.tileWidth))\n                    return "tileWidth: integer expected";\n                if (!$util.isInteger(message.tileHeight))\n                    return "tileHeight: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a MapSize message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig_01.MapSize\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig_01.MapSize} MapSize\n             */\n            MapSize.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig_01.MapSize)\n                    return object;\n                var message = new $root.op_gameconfig_01.MapSize();\n                if (object.node != null) {\n                    if (typeof object.node !== "object")\n                        throw TypeError(".op_gameconfig_01.MapSize.node: object expected");\n                    message.node = $root.op_gameconfig_01.Node.fromObject(object.node);\n                }\n                if (object.cols != null)\n                    message.cols = Number(object.cols);\n                if (object.rows != null)\n                    message.rows = Number(object.rows);\n                if (object.tileWidth != null)\n                    message.tileWidth = object.tileWidth | 0;\n                if (object.tileHeight != null)\n                    message.tileHeight = object.tileHeight | 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a MapSize message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig_01.MapSize\n             * @static\n             * @param {op_gameconfig_01.MapSize} message MapSize\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            MapSize.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.node = null;\n                    object.cols = 0;\n                    object.rows = 0;\n                    object.tileWidth = 0;\n                    object.tileHeight = 0;\n                }\n                if (message.node != null && message.hasOwnProperty("node"))\n                    object.node = $root.op_gameconfig_01.Node.toObject(message.node, options);\n                if (message.cols != null && message.hasOwnProperty("cols"))\n                    object.cols = options.json && !isFinite(message.cols) ? String(message.cols) : message.cols;\n                if (message.rows != null && message.hasOwnProperty("rows"))\n                    object.rows = options.json && !isFinite(message.rows) ? String(message.rows) : message.rows;\n                if (message.tileWidth != null && message.hasOwnProperty("tileWidth"))\n                    object.tileWidth = message.tileWidth;\n                if (message.tileHeight != null && message.hasOwnProperty("tileHeight"))\n                    object.tileHeight = message.tileHeight;\n                return object;\n            };\n    \n            /**\n             * Converts this MapSize to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig_01.MapSize\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            MapSize.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return MapSize;\n        })();\n    \n        op_gameconfig_01.Text = (function() {\n    \n            /**\n             * Properties of a Text.\n             * @memberof op_gameconfig_01\n             * @interface IText\n             * @property {op_gameconfig_01.INode} node Text node\n             * @property {string} text Text text\n             * @property {string|null} [color] Text color\n             */\n    \n            /**\n             * Constructs a new Text.\n             * @memberof op_gameconfig_01\n             * @classdesc Represents a Text.\n             * @implements IText\n             * @constructor\n             * @param {op_gameconfig_01.IText=} [properties] Properties to set\n             */\n            function Text(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Text node.\n             * @member {op_gameconfig_01.INode} node\n             * @memberof op_gameconfig_01.Text\n             * @instance\n             */\n            Text.prototype.node = null;\n    \n            /**\n             * Text text.\n             * @member {string} text\n             * @memberof op_gameconfig_01.Text\n             * @instance\n             */\n            Text.prototype.text = "";\n    \n            /**\n             * Text color.\n             * @member {string} color\n             * @memberof op_gameconfig_01.Text\n             * @instance\n             */\n            Text.prototype.color = "#FFFFFF";\n    \n            /**\n             * Creates a new Text instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig_01.Text\n             * @static\n             * @param {op_gameconfig_01.IText=} [properties] Properties to set\n             * @returns {op_gameconfig_01.Text} Text instance\n             */\n            Text.create = function create(properties) {\n                return new Text(properties);\n            };\n    \n            /**\n             * Encodes the specified Text message. Does not implicitly {@link op_gameconfig_01.Text.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig_01.Text\n             * @static\n             * @param {op_gameconfig_01.IText} message Text message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Text.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                $root.op_gameconfig_01.Node.encode(message.node, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.text);\n                if (message.color != null && message.hasOwnProperty("color"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.color);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Text message, length delimited. Does not implicitly {@link op_gameconfig_01.Text.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig_01.Text\n             * @static\n             * @param {op_gameconfig_01.IText} message Text message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Text.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a Text message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig_01.Text\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig_01.Text} Text\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Text.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig_01.Text();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.node = $root.op_gameconfig_01.Node.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        message.text = reader.string();\n                        break;\n                    case 3:\n                        message.color = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("node"))\n                    throw $util.ProtocolError("missing required \'node\'", { instance: message });\n                if (!message.hasOwnProperty("text"))\n                    throw $util.ProtocolError("missing required \'text\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a Text message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig_01.Text\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig_01.Text} Text\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Text.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a Text message.\n             * @function verify\n             * @memberof op_gameconfig_01.Text\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Text.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                {\n                    var error = $root.op_gameconfig_01.Node.verify(message.node);\n                    if (error)\n                        return "node." + error;\n                }\n                if (!$util.isString(message.text))\n                    return "text: string expected";\n                if (message.color != null && message.hasOwnProperty("color"))\n                    if (!$util.isString(message.color))\n                        return "color: string expected";\n                return null;\n            };\n    \n            /**\n             * Creates a Text message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig_01.Text\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig_01.Text} Text\n             */\n            Text.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig_01.Text)\n                    return object;\n                var message = new $root.op_gameconfig_01.Text();\n                if (object.node != null) {\n                    if (typeof object.node !== "object")\n                        throw TypeError(".op_gameconfig_01.Text.node: object expected");\n                    message.node = $root.op_gameconfig_01.Node.fromObject(object.node);\n                }\n                if (object.text != null)\n                    message.text = String(object.text);\n                if (object.color != null)\n                    message.color = String(object.color);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a Text message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig_01.Text\n             * @static\n             * @param {op_gameconfig_01.Text} message Text\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Text.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.node = null;\n                    object.text = "";\n                    object.color = "#FFFFFF";\n                }\n                if (message.node != null && message.hasOwnProperty("node"))\n                    object.node = $root.op_gameconfig_01.Node.toObject(message.node, options);\n                if (message.text != null && message.hasOwnProperty("text"))\n                    object.text = message.text;\n                if (message.color != null && message.hasOwnProperty("color"))\n                    object.color = message.color;\n                return object;\n            };\n    \n            /**\n             * Converts this Text to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig_01.Text\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Text.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Text;\n        })();\n    \n        op_gameconfig_01.Button = (function() {\n    \n            /**\n             * Properties of a Button.\n             * @memberof op_gameconfig_01\n             * @interface IButton\n             * @property {op_gameconfig_01.INode} node Button node\n             * @property {string} text Button text\n             * @property {string|null} [tips] Button tips\n             */\n    \n            /**\n             * Constructs a new Button.\n             * @memberof op_gameconfig_01\n             * @classdesc Represents a Button.\n             * @implements IButton\n             * @constructor\n             * @param {op_gameconfig_01.IButton=} [properties] Properties to set\n             */\n            function Button(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Button node.\n             * @member {op_gameconfig_01.INode} node\n             * @memberof op_gameconfig_01.Button\n             * @instance\n             */\n            Button.prototype.node = null;\n    \n            /**\n             * Button text.\n             * @member {string} text\n             * @memberof op_gameconfig_01.Button\n             * @instance\n             */\n            Button.prototype.text = "";\n    \n            /**\n             * Button tips.\n             * @member {string} tips\n             * @memberof op_gameconfig_01.Button\n             * @instance\n             */\n            Button.prototype.tips = "";\n    \n            /**\n             * Creates a new Button instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig_01.Button\n             * @static\n             * @param {op_gameconfig_01.IButton=} [properties] Properties to set\n             * @returns {op_gameconfig_01.Button} Button instance\n             */\n            Button.create = function create(properties) {\n                return new Button(properties);\n            };\n    \n            /**\n             * Encodes the specified Button message. Does not implicitly {@link op_gameconfig_01.Button.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig_01.Button\n             * @static\n             * @param {op_gameconfig_01.IButton} message Button message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Button.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                $root.op_gameconfig_01.Node.encode(message.node, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.text);\n                if (message.tips != null && message.hasOwnProperty("tips"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.tips);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Button message, length delimited. Does not implicitly {@link op_gameconfig_01.Button.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig_01.Button\n             * @static\n             * @param {op_gameconfig_01.IButton} message Button message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Button.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a Button message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig_01.Button\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig_01.Button} Button\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Button.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig_01.Button();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.node = $root.op_gameconfig_01.Node.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        message.text = reader.string();\n                        break;\n                    case 3:\n                        message.tips = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("node"))\n                    throw $util.ProtocolError("missing required \'node\'", { instance: message });\n                if (!message.hasOwnProperty("text"))\n                    throw $util.ProtocolError("missing required \'text\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a Button message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig_01.Button\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig_01.Button} Button\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Button.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a Button message.\n             * @function verify\n             * @memberof op_gameconfig_01.Button\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Button.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                {\n                    var error = $root.op_gameconfig_01.Node.verify(message.node);\n                    if (error)\n                        return "node." + error;\n                }\n                if (!$util.isString(message.text))\n                    return "text: string expected";\n                if (message.tips != null && message.hasOwnProperty("tips"))\n                    if (!$util.isString(message.tips))\n                        return "tips: string expected";\n                return null;\n            };\n    \n            /**\n             * Creates a Button message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig_01.Button\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig_01.Button} Button\n             */\n            Button.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig_01.Button)\n                    return object;\n                var message = new $root.op_gameconfig_01.Button();\n                if (object.node != null) {\n                    if (typeof object.node !== "object")\n                        throw TypeError(".op_gameconfig_01.Button.node: object expected");\n                    message.node = $root.op_gameconfig_01.Node.fromObject(object.node);\n                }\n                if (object.text != null)\n                    message.text = String(object.text);\n                if (object.tips != null)\n                    message.tips = String(object.tips);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a Button message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig_01.Button\n             * @static\n             * @param {op_gameconfig_01.Button} message Button\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Button.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.node = null;\n                    object.text = "";\n                    object.tips = "";\n                }\n                if (message.node != null && message.hasOwnProperty("node"))\n                    object.node = $root.op_gameconfig_01.Node.toObject(message.node, options);\n                if (message.text != null && message.hasOwnProperty("text"))\n                    object.text = message.text;\n                if (message.tips != null && message.hasOwnProperty("tips"))\n                    object.tips = message.tips;\n                return object;\n            };\n    \n            /**\n             * Converts this Button to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig_01.Button\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Button.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Button;\n        })();\n    \n        op_gameconfig_01.MenuItem = (function() {\n    \n            /**\n             * Properties of a MenuItem.\n             * @memberof op_gameconfig_01\n             * @interface IMenuItem\n             * @property {op_gameconfig_01.INode} node MenuItem node\n             * @property {string} text MenuItem text\n             * @property {Array.<op_gameconfig_01.IMenuItem>|null} [child] MenuItem child\n             */\n    \n            /**\n             * Constructs a new MenuItem.\n             * @memberof op_gameconfig_01\n             * @classdesc Represents a MenuItem.\n             * @implements IMenuItem\n             * @constructor\n             * @param {op_gameconfig_01.IMenuItem=} [properties] Properties to set\n             */\n            function MenuItem(properties) {\n                this.child = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * MenuItem node.\n             * @member {op_gameconfig_01.INode} node\n             * @memberof op_gameconfig_01.MenuItem\n             * @instance\n             */\n            MenuItem.prototype.node = null;\n    \n            /**\n             * MenuItem text.\n             * @member {string} text\n             * @memberof op_gameconfig_01.MenuItem\n             * @instance\n             */\n            MenuItem.prototype.text = "";\n    \n            /**\n             * MenuItem child.\n             * @member {Array.<op_gameconfig_01.IMenuItem>} child\n             * @memberof op_gameconfig_01.MenuItem\n             * @instance\n             */\n            MenuItem.prototype.child = $util.emptyArray;\n    \n            /**\n             * Creates a new MenuItem instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig_01.MenuItem\n             * @static\n             * @param {op_gameconfig_01.IMenuItem=} [properties] Properties to set\n             * @returns {op_gameconfig_01.MenuItem} MenuItem instance\n             */\n            MenuItem.create = function create(properties) {\n                return new MenuItem(properties);\n            };\n    \n            /**\n             * Encodes the specified MenuItem message. Does not implicitly {@link op_gameconfig_01.MenuItem.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig_01.MenuItem\n             * @static\n             * @param {op_gameconfig_01.IMenuItem} message MenuItem message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            MenuItem.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                $root.op_gameconfig_01.Node.encode(message.node, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.text);\n                if (message.child != null && message.child.length)\n                    for (var i = 0; i < message.child.length; ++i)\n                        $root.op_gameconfig_01.MenuItem.encode(message.child[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified MenuItem message, length delimited. Does not implicitly {@link op_gameconfig_01.MenuItem.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig_01.MenuItem\n             * @static\n             * @param {op_gameconfig_01.IMenuItem} message MenuItem message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            MenuItem.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a MenuItem message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig_01.MenuItem\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig_01.MenuItem} MenuItem\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            MenuItem.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig_01.MenuItem();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.node = $root.op_gameconfig_01.Node.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        message.text = reader.string();\n                        break;\n                    case 3:\n                        if (!(message.child && message.child.length))\n                            message.child = [];\n                        message.child.push($root.op_gameconfig_01.MenuItem.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("node"))\n                    throw $util.ProtocolError("missing required \'node\'", { instance: message });\n                if (!message.hasOwnProperty("text"))\n                    throw $util.ProtocolError("missing required \'text\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a MenuItem message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig_01.MenuItem\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig_01.MenuItem} MenuItem\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            MenuItem.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a MenuItem message.\n             * @function verify\n             * @memberof op_gameconfig_01.MenuItem\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            MenuItem.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                {\n                    var error = $root.op_gameconfig_01.Node.verify(message.node);\n                    if (error)\n                        return "node." + error;\n                }\n                if (!$util.isString(message.text))\n                    return "text: string expected";\n                if (message.child != null && message.hasOwnProperty("child")) {\n                    if (!Array.isArray(message.child))\n                        return "child: array expected";\n                    for (var i = 0; i < message.child.length; ++i) {\n                        var error = $root.op_gameconfig_01.MenuItem.verify(message.child[i]);\n                        if (error)\n                            return "child." + error;\n                    }\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a MenuItem message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig_01.MenuItem\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig_01.MenuItem} MenuItem\n             */\n            MenuItem.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig_01.MenuItem)\n                    return object;\n                var message = new $root.op_gameconfig_01.MenuItem();\n                if (object.node != null) {\n                    if (typeof object.node !== "object")\n                        throw TypeError(".op_gameconfig_01.MenuItem.node: object expected");\n                    message.node = $root.op_gameconfig_01.Node.fromObject(object.node);\n                }\n                if (object.text != null)\n                    message.text = String(object.text);\n                if (object.child) {\n                    if (!Array.isArray(object.child))\n                        throw TypeError(".op_gameconfig_01.MenuItem.child: array expected");\n                    message.child = [];\n                    for (var i = 0; i < object.child.length; ++i) {\n                        if (typeof object.child[i] !== "object")\n                            throw TypeError(".op_gameconfig_01.MenuItem.child: object expected");\n                        message.child[i] = $root.op_gameconfig_01.MenuItem.fromObject(object.child[i]);\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a MenuItem message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig_01.MenuItem\n             * @static\n             * @param {op_gameconfig_01.MenuItem} message MenuItem\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            MenuItem.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.child = [];\n                if (options.defaults) {\n                    object.node = null;\n                    object.text = "";\n                }\n                if (message.node != null && message.hasOwnProperty("node"))\n                    object.node = $root.op_gameconfig_01.Node.toObject(message.node, options);\n                if (message.text != null && message.hasOwnProperty("text"))\n                    object.text = message.text;\n                if (message.child && message.child.length) {\n                    object.child = [];\n                    for (var j = 0; j < message.child.length; ++j)\n                        object.child[j] = $root.op_gameconfig_01.MenuItem.toObject(message.child[j], options);\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this MenuItem to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig_01.MenuItem\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            MenuItem.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return MenuItem;\n        })();\n    \n        op_gameconfig_01.UI = (function() {\n    \n            /**\n             * Properties of a UI.\n             * @memberof op_gameconfig_01\n             * @interface IUI\n             * @property {op_gameconfig_01.INode} node UI node\n             * @property {Array.<string>|null} [text] UI text\n             */\n    \n            /**\n             * Constructs a new UI.\n             * @memberof op_gameconfig_01\n             * @classdesc Represents a UI.\n             * @implements IUI\n             * @constructor\n             * @param {op_gameconfig_01.IUI=} [properties] Properties to set\n             */\n            function UI(properties) {\n                this.text = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * UI node.\n             * @member {op_gameconfig_01.INode} node\n             * @memberof op_gameconfig_01.UI\n             * @instance\n             */\n            UI.prototype.node = null;\n    \n            /**\n             * UI text.\n             * @member {Array.<string>} text\n             * @memberof op_gameconfig_01.UI\n             * @instance\n             */\n            UI.prototype.text = $util.emptyArray;\n    \n            /**\n             * Creates a new UI instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig_01.UI\n             * @static\n             * @param {op_gameconfig_01.IUI=} [properties] Properties to set\n             * @returns {op_gameconfig_01.UI} UI instance\n             */\n            UI.create = function create(properties) {\n                return new UI(properties);\n            };\n    \n            /**\n             * Encodes the specified UI message. Does not implicitly {@link op_gameconfig_01.UI.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig_01.UI\n             * @static\n             * @param {op_gameconfig_01.IUI} message UI message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            UI.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                $root.op_gameconfig_01.Node.encode(message.node, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.text != null && message.text.length)\n                    for (var i = 0; i < message.text.length; ++i)\n                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.text[i]);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified UI message, length delimited. Does not implicitly {@link op_gameconfig_01.UI.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig_01.UI\n             * @static\n             * @param {op_gameconfig_01.IUI} message UI message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            UI.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a UI message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig_01.UI\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig_01.UI} UI\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            UI.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig_01.UI();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.node = $root.op_gameconfig_01.Node.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        if (!(message.text && message.text.length))\n                            message.text = [];\n                        message.text.push(reader.string());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("node"))\n                    throw $util.ProtocolError("missing required \'node\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a UI message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig_01.UI\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig_01.UI} UI\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            UI.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a UI message.\n             * @function verify\n             * @memberof op_gameconfig_01.UI\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            UI.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                {\n                    var error = $root.op_gameconfig_01.Node.verify(message.node);\n                    if (error)\n                        return "node." + error;\n                }\n                if (message.text != null && message.hasOwnProperty("text")) {\n                    if (!Array.isArray(message.text))\n                        return "text: array expected";\n                    for (var i = 0; i < message.text.length; ++i)\n                        if (!$util.isString(message.text[i]))\n                            return "text: string[] expected";\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a UI message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig_01.UI\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig_01.UI} UI\n             */\n            UI.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig_01.UI)\n                    return object;\n                var message = new $root.op_gameconfig_01.UI();\n                if (object.node != null) {\n                    if (typeof object.node !== "object")\n                        throw TypeError(".op_gameconfig_01.UI.node: object expected");\n                    message.node = $root.op_gameconfig_01.Node.fromObject(object.node);\n                }\n                if (object.text) {\n                    if (!Array.isArray(object.text))\n                        throw TypeError(".op_gameconfig_01.UI.text: array expected");\n                    message.text = [];\n                    for (var i = 0; i < object.text.length; ++i)\n                        message.text[i] = String(object.text[i]);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a UI message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig_01.UI\n             * @static\n             * @param {op_gameconfig_01.UI} message UI\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            UI.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.text = [];\n                if (options.defaults)\n                    object.node = null;\n                if (message.node != null && message.hasOwnProperty("node"))\n                    object.node = $root.op_gameconfig_01.Node.toObject(message.node, options);\n                if (message.text && message.text.length) {\n                    object.text = [];\n                    for (var j = 0; j < message.text.length; ++j)\n                        object.text[j] = message.text[j];\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this UI to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig_01.UI\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            UI.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return UI;\n        })();\n    \n        op_gameconfig_01.Timer = (function() {\n    \n            /**\n             * Properties of a Timer.\n             * @memberof op_gameconfig_01\n             * @interface ITimer\n             * @property {op_gameconfig_01.INode} node Timer node\n             * @property {number} timeout Timer timeout\n             * @property {number} interval Timer interval\n             */\n    \n            /**\n             * Constructs a new Timer.\n             * @memberof op_gameconfig_01\n             * @classdesc Represents a Timer.\n             * @implements ITimer\n             * @constructor\n             * @param {op_gameconfig_01.ITimer=} [properties] Properties to set\n             */\n            function Timer(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Timer node.\n             * @member {op_gameconfig_01.INode} node\n             * @memberof op_gameconfig_01.Timer\n             * @instance\n             */\n            Timer.prototype.node = null;\n    \n            /**\n             * Timer timeout.\n             * @member {number} timeout\n             * @memberof op_gameconfig_01.Timer\n             * @instance\n             */\n            Timer.prototype.timeout = 0;\n    \n            /**\n             * Timer interval.\n             * @member {number} interval\n             * @memberof op_gameconfig_01.Timer\n             * @instance\n             */\n            Timer.prototype.interval = 0;\n    \n            /**\n             * Creates a new Timer instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig_01.Timer\n             * @static\n             * @param {op_gameconfig_01.ITimer=} [properties] Properties to set\n             * @returns {op_gameconfig_01.Timer} Timer instance\n             */\n            Timer.create = function create(properties) {\n                return new Timer(properties);\n            };\n    \n            /**\n             * Encodes the specified Timer message. Does not implicitly {@link op_gameconfig_01.Timer.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig_01.Timer\n             * @static\n             * @param {op_gameconfig_01.ITimer} message Timer message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Timer.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                $root.op_gameconfig_01.Node.encode(message.node, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.timeout);\n                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.interval);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Timer message, length delimited. Does not implicitly {@link op_gameconfig_01.Timer.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig_01.Timer\n             * @static\n             * @param {op_gameconfig_01.ITimer} message Timer message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Timer.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a Timer message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig_01.Timer\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig_01.Timer} Timer\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Timer.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig_01.Timer();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.node = $root.op_gameconfig_01.Node.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        message.timeout = reader.int32();\n                        break;\n                    case 3:\n                        message.interval = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("node"))\n                    throw $util.ProtocolError("missing required \'node\'", { instance: message });\n                if (!message.hasOwnProperty("timeout"))\n                    throw $util.ProtocolError("missing required \'timeout\'", { instance: message });\n                if (!message.hasOwnProperty("interval"))\n                    throw $util.ProtocolError("missing required \'interval\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a Timer message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig_01.Timer\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig_01.Timer} Timer\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Timer.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a Timer message.\n             * @function verify\n             * @memberof op_gameconfig_01.Timer\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Timer.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                {\n                    var error = $root.op_gameconfig_01.Node.verify(message.node);\n                    if (error)\n                        return "node." + error;\n                }\n                if (!$util.isInteger(message.timeout))\n                    return "timeout: integer expected";\n                if (!$util.isInteger(message.interval))\n                    return "interval: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a Timer message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig_01.Timer\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig_01.Timer} Timer\n             */\n            Timer.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig_01.Timer)\n                    return object;\n                var message = new $root.op_gameconfig_01.Timer();\n                if (object.node != null) {\n                    if (typeof object.node !== "object")\n                        throw TypeError(".op_gameconfig_01.Timer.node: object expected");\n                    message.node = $root.op_gameconfig_01.Node.fromObject(object.node);\n                }\n                if (object.timeout != null)\n                    message.timeout = object.timeout | 0;\n                if (object.interval != null)\n                    message.interval = object.interval | 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a Timer message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig_01.Timer\n             * @static\n             * @param {op_gameconfig_01.Timer} message Timer\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Timer.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.node = null;\n                    object.timeout = 0;\n                    object.interval = 0;\n                }\n                if (message.node != null && message.hasOwnProperty("node"))\n                    object.node = $root.op_gameconfig_01.Node.toObject(message.node, options);\n                if (message.timeout != null && message.hasOwnProperty("timeout"))\n                    object.timeout = message.timeout;\n                if (message.interval != null && message.hasOwnProperty("interval"))\n                    object.interval = message.interval;\n                return object;\n            };\n    \n            /**\n             * Converts this Timer to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig_01.Timer\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Timer.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Timer;\n        })();\n    \n        op_gameconfig_01.Commodity = (function() {\n    \n            /**\n             * Properties of a Commodity.\n             * @memberof op_gameconfig_01\n             * @interface ICommodity\n             * @property {op_gameconfig_01.INode} node Commodity node\n             * @property {number|null} [price] Commodity price\n             * @property {op_def.CoinType|null} [coinType] Commodity coinType\n             * @property {string|null} [description] Commodity description\n             */\n    \n            /**\n             * Constructs a new Commodity.\n             * @memberof op_gameconfig_01\n             * @classdesc Represents a Commodity.\n             * @implements ICommodity\n             * @constructor\n             * @param {op_gameconfig_01.ICommodity=} [properties] Properties to set\n             */\n            function Commodity(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Commodity node.\n             * @member {op_gameconfig_01.INode} node\n             * @memberof op_gameconfig_01.Commodity\n             * @instance\n             */\n            Commodity.prototype.node = null;\n    \n            /**\n             * Commodity price.\n             * @member {number} price\n             * @memberof op_gameconfig_01.Commodity\n             * @instance\n             */\n            Commodity.prototype.price = 0;\n    \n            /**\n             * Commodity coinType.\n             * @member {op_def.CoinType} coinType\n             * @memberof op_gameconfig_01.Commodity\n             * @instance\n             */\n            Commodity.prototype.coinType = 0;\n    \n            /**\n             * Commodity description.\n             * @member {string} description\n             * @memberof op_gameconfig_01.Commodity\n             * @instance\n             */\n            Commodity.prototype.description = "";\n    \n            /**\n             * Creates a new Commodity instance using the specified properties.\n             * @function create\n             * @memberof op_gameconfig_01.Commodity\n             * @static\n             * @param {op_gameconfig_01.ICommodity=} [properties] Properties to set\n             * @returns {op_gameconfig_01.Commodity} Commodity instance\n             */\n            Commodity.create = function create(properties) {\n                return new Commodity(properties);\n            };\n    \n            /**\n             * Encodes the specified Commodity message. Does not implicitly {@link op_gameconfig_01.Commodity.verify|verify} messages.\n             * @function encode\n             * @memberof op_gameconfig_01.Commodity\n             * @static\n             * @param {op_gameconfig_01.ICommodity} message Commodity message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Commodity.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                $root.op_gameconfig_01.Node.encode(message.node, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.price != null && message.hasOwnProperty("price"))\n                    writer.uint32(/* id 2, wireType 5 =*/21).float(message.price);\n                if (message.coinType != null && message.hasOwnProperty("coinType"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.coinType);\n                if (message.description != null && message.hasOwnProperty("description"))\n                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.description);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Commodity message, length delimited. Does not implicitly {@link op_gameconfig_01.Commodity.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gameconfig_01.Commodity\n             * @static\n             * @param {op_gameconfig_01.ICommodity} message Commodity message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Commodity.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a Commodity message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gameconfig_01.Commodity\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gameconfig_01.Commodity} Commodity\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Commodity.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gameconfig_01.Commodity();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.node = $root.op_gameconfig_01.Node.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        message.price = reader.float();\n                        break;\n                    case 3:\n                        message.coinType = reader.int32();\n                        break;\n                    case 4:\n                        message.description = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("node"))\n                    throw $util.ProtocolError("missing required \'node\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a Commodity message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gameconfig_01.Commodity\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gameconfig_01.Commodity} Commodity\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Commodity.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a Commodity message.\n             * @function verify\n             * @memberof op_gameconfig_01.Commodity\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Commodity.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                {\n                    var error = $root.op_gameconfig_01.Node.verify(message.node);\n                    if (error)\n                        return "node." + error;\n                }\n                if (message.price != null && message.hasOwnProperty("price"))\n                    if (typeof message.price !== "number")\n                        return "price: number expected";\n                if (message.coinType != null && message.hasOwnProperty("coinType"))\n                    switch (message.coinType) {\n                    default:\n                        return "coinType: enum value expected";\n                    case 0:\n                    case 1:\n                    case 2:\n                        break;\n                    }\n                if (message.description != null && message.hasOwnProperty("description"))\n                    if (!$util.isString(message.description))\n                        return "description: string expected";\n                return null;\n            };\n    \n            /**\n             * Creates a Commodity message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gameconfig_01.Commodity\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gameconfig_01.Commodity} Commodity\n             */\n            Commodity.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gameconfig_01.Commodity)\n                    return object;\n                var message = new $root.op_gameconfig_01.Commodity();\n                if (object.node != null) {\n                    if (typeof object.node !== "object")\n                        throw TypeError(".op_gameconfig_01.Commodity.node: object expected");\n                    message.node = $root.op_gameconfig_01.Node.fromObject(object.node);\n                }\n                if (object.price != null)\n                    message.price = Number(object.price);\n                switch (object.coinType) {\n                case "TU_DING_COIN":\n                case 0:\n                    message.coinType = 0;\n                    break;\n                case "QING_SONG_TANG":\n                case 1:\n                    message.coinType = 1;\n                    break;\n                case "GOLD_COIN":\n                case 2:\n                    message.coinType = 2;\n                    break;\n                }\n                if (object.description != null)\n                    message.description = String(object.description);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a Commodity message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gameconfig_01.Commodity\n             * @static\n             * @param {op_gameconfig_01.Commodity} message Commodity\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Commodity.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.node = null;\n                    object.price = 0;\n                    object.coinType = options.enums === String ? "TU_DING_COIN" : 0;\n                    object.description = "";\n                }\n                if (message.node != null && message.hasOwnProperty("node"))\n                    object.node = $root.op_gameconfig_01.Node.toObject(message.node, options);\n                if (message.price != null && message.hasOwnProperty("price"))\n                    object.price = options.json && !isFinite(message.price) ? String(message.price) : message.price;\n                if (message.coinType != null && message.hasOwnProperty("coinType"))\n                    object.coinType = options.enums === String ? $root.op_def.CoinType[message.coinType] : message.coinType;\n                if (message.description != null && message.hasOwnProperty("description"))\n                    object.description = message.description;\n                return object;\n            };\n    \n            /**\n             * Converts this Commodity to JSON.\n             * @function toJSON\n             * @memberof op_gameconfig_01.Commodity\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Commodity.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Commodity;\n        })();\n    \n        return op_gameconfig_01;\n    })();\n    \n    $root.op_cop = (function() {\n    \n        /**\n         * Namespace op_cop.\n         * @exports op_cop\n         * @namespace\n         */\n        var op_cop = {};\n    \n        /**\n         * OPCODE enum.\n         * @name op_cop.OPCODE\n         * @enum {string}\n         * @property {number} OP_MAJOR=21 OP_MAJOR value\n         * @property {number} _OP_UNKNOWN=0 _OP_UNKNOWN value\n         * @property {number} _OP_GALAXY_REPORT_COP_GALAXY_STATUS=1380357 _OP_GALAXY_REPORT_COP_GALAXY_STATUS value\n         * @property {number} _OP_GALAXY_REQ_COP_GALAXY_INIT=1380355 _OP_GALAXY_REQ_COP_GALAXY_INIT value\n         * @property {number} _OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE=1380356 _OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE value\n         * @property {number} _OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION=1380358 _OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION value\n         */\n        op_cop.OPCODE = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[21] = "OP_MAJOR"] = 21;\n            values[valuesById[0] = "_OP_UNKNOWN"] = 0;\n            values[valuesById[1380357] = "_OP_GALAXY_REPORT_COP_GALAXY_STATUS"] = 1380357;\n            values[valuesById[1380355] = "_OP_GALAXY_REQ_COP_GALAXY_INIT"] = 1380355;\n            values[valuesById[1380356] = "_OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE"] = 1380356;\n            values[valuesById[1380358] = "_OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION"] = 1380358;\n            return values;\n        })();\n    \n        op_cop.OP_GALAXY_REQ_COP_GALAXY_INIT = (function() {\n    \n            /**\n             * Properties of a OP_GALAXY_REQ_COP_GALAXY_INIT.\n             * @memberof op_cop\n             * @interface IOP_GALAXY_REQ_COP_GALAXY_INIT\n             * @property {number} galaxyUuid OP_GALAXY_REQ_COP_GALAXY_INIT galaxyUuid\n             */\n    \n            /**\n             * Constructs a new OP_GALAXY_REQ_COP_GALAXY_INIT.\n             * @memberof op_cop\n             * @classdesc Represents a OP_GALAXY_REQ_COP_GALAXY_INIT.\n             * @implements IOP_GALAXY_REQ_COP_GALAXY_INIT\n             * @constructor\n             * @param {op_cop.IOP_GALAXY_REQ_COP_GALAXY_INIT=} [properties] Properties to set\n             */\n            function OP_GALAXY_REQ_COP_GALAXY_INIT(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_GALAXY_REQ_COP_GALAXY_INIT galaxyUuid.\n             * @member {number} galaxyUuid\n             * @memberof op_cop.OP_GALAXY_REQ_COP_GALAXY_INIT\n             * @instance\n             */\n            OP_GALAXY_REQ_COP_GALAXY_INIT.prototype.galaxyUuid = 0;\n    \n            /**\n             * Creates a new OP_GALAXY_REQ_COP_GALAXY_INIT instance using the specified properties.\n             * @function create\n             * @memberof op_cop.OP_GALAXY_REQ_COP_GALAXY_INIT\n             * @static\n             * @param {op_cop.IOP_GALAXY_REQ_COP_GALAXY_INIT=} [properties] Properties to set\n             * @returns {op_cop.OP_GALAXY_REQ_COP_GALAXY_INIT} OP_GALAXY_REQ_COP_GALAXY_INIT instance\n             */\n            OP_GALAXY_REQ_COP_GALAXY_INIT.create = function create(properties) {\n                return new OP_GALAXY_REQ_COP_GALAXY_INIT(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_GALAXY_REQ_COP_GALAXY_INIT message. Does not implicitly {@link op_cop.OP_GALAXY_REQ_COP_GALAXY_INIT.verify|verify} messages.\n             * @function encode\n             * @memberof op_cop.OP_GALAXY_REQ_COP_GALAXY_INIT\n             * @static\n             * @param {op_cop.IOP_GALAXY_REQ_COP_GALAXY_INIT} message OP_GALAXY_REQ_COP_GALAXY_INIT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_GALAXY_REQ_COP_GALAXY_INIT.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.galaxyUuid);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_GALAXY_REQ_COP_GALAXY_INIT message, length delimited. Does not implicitly {@link op_cop.OP_GALAXY_REQ_COP_GALAXY_INIT.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_cop.OP_GALAXY_REQ_COP_GALAXY_INIT\n             * @static\n             * @param {op_cop.IOP_GALAXY_REQ_COP_GALAXY_INIT} message OP_GALAXY_REQ_COP_GALAXY_INIT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_GALAXY_REQ_COP_GALAXY_INIT.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_GALAXY_REQ_COP_GALAXY_INIT message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_cop.OP_GALAXY_REQ_COP_GALAXY_INIT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_cop.OP_GALAXY_REQ_COP_GALAXY_INIT} OP_GALAXY_REQ_COP_GALAXY_INIT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_GALAXY_REQ_COP_GALAXY_INIT.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_cop.OP_GALAXY_REQ_COP_GALAXY_INIT();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.galaxyUuid = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("galaxyUuid"))\n                    throw $util.ProtocolError("missing required \'galaxyUuid\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_GALAXY_REQ_COP_GALAXY_INIT message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_cop.OP_GALAXY_REQ_COP_GALAXY_INIT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_cop.OP_GALAXY_REQ_COP_GALAXY_INIT} OP_GALAXY_REQ_COP_GALAXY_INIT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_GALAXY_REQ_COP_GALAXY_INIT.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_GALAXY_REQ_COP_GALAXY_INIT message.\n             * @function verify\n             * @memberof op_cop.OP_GALAXY_REQ_COP_GALAXY_INIT\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_GALAXY_REQ_COP_GALAXY_INIT.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.galaxyUuid))\n                    return "galaxyUuid: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_GALAXY_REQ_COP_GALAXY_INIT message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_cop.OP_GALAXY_REQ_COP_GALAXY_INIT\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_cop.OP_GALAXY_REQ_COP_GALAXY_INIT} OP_GALAXY_REQ_COP_GALAXY_INIT\n             */\n            OP_GALAXY_REQ_COP_GALAXY_INIT.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_cop.OP_GALAXY_REQ_COP_GALAXY_INIT)\n                    return object;\n                var message = new $root.op_cop.OP_GALAXY_REQ_COP_GALAXY_INIT();\n                if (object.galaxyUuid != null)\n                    message.galaxyUuid = object.galaxyUuid | 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_GALAXY_REQ_COP_GALAXY_INIT message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_cop.OP_GALAXY_REQ_COP_GALAXY_INIT\n             * @static\n             * @param {op_cop.OP_GALAXY_REQ_COP_GALAXY_INIT} message OP_GALAXY_REQ_COP_GALAXY_INIT\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_GALAXY_REQ_COP_GALAXY_INIT.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.galaxyUuid = 0;\n                if (message.galaxyUuid != null && message.hasOwnProperty("galaxyUuid"))\n                    object.galaxyUuid = message.galaxyUuid;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_GALAXY_REQ_COP_GALAXY_INIT to JSON.\n             * @function toJSON\n             * @memberof op_cop.OP_GALAXY_REQ_COP_GALAXY_INIT\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_GALAXY_REQ_COP_GALAXY_INIT.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_GALAXY_REQ_COP_GALAXY_INIT;\n        })();\n    \n        op_cop.OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE = (function() {\n    \n            /**\n             * Properties of a OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE.\n             * @memberof op_cop\n             * @interface IOP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE\n             * @property {number} virtualWorldId OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE virtualWorldId\n             */\n    \n            /**\n             * Constructs a new OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE.\n             * @memberof op_cop\n             * @classdesc Represents a OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE.\n             * @implements IOP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE\n             * @constructor\n             * @param {op_cop.IOP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE=} [properties] Properties to set\n             */\n            function OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE virtualWorldId.\n             * @member {number} virtualWorldId\n             * @memberof op_cop.OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE\n             * @instance\n             */\n            OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE.prototype.virtualWorldId = 0;\n    \n            /**\n             * Creates a new OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE instance using the specified properties.\n             * @function create\n             * @memberof op_cop.OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE\n             * @static\n             * @param {op_cop.IOP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE=} [properties] Properties to set\n             * @returns {op_cop.OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE} OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE instance\n             */\n            OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE.create = function create(properties) {\n                return new OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE message. Does not implicitly {@link op_cop.OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE.verify|verify} messages.\n             * @function encode\n             * @memberof op_cop.OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE\n             * @static\n             * @param {op_cop.IOP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE} message OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.virtualWorldId);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE message, length delimited. Does not implicitly {@link op_cop.OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_cop.OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE\n             * @static\n             * @param {op_cop.IOP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE} message OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_cop.OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_cop.OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE} OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_cop.OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.virtualWorldId = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("virtualWorldId"))\n                    throw $util.ProtocolError("missing required \'virtualWorldId\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_cop.OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_cop.OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE} OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE message.\n             * @function verify\n             * @memberof op_cop.OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.virtualWorldId))\n                    return "virtualWorldId: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_cop.OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_cop.OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE} OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE\n             */\n            OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_cop.OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE)\n                    return object;\n                var message = new $root.op_cop.OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE();\n                if (object.virtualWorldId != null)\n                    message.virtualWorldId = object.virtualWorldId | 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_cop.OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE\n             * @static\n             * @param {op_cop.OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE} message OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.virtualWorldId = 0;\n                if (message.virtualWorldId != null && message.hasOwnProperty("virtualWorldId"))\n                    object.virtualWorldId = message.virtualWorldId;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE to JSON.\n             * @function toJSON\n             * @memberof op_cop.OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_WORLD_REQ_COP_VIRTUAL_WORLD_CLOSE;\n        })();\n    \n        op_cop.OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION.\n             * @memberof op_cop\n             * @interface IOP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION\n             * @property {string|null} [virtualWorldUuid] OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION virtualWorldUuid\n             * @property {string|null} [gameId] OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION gameId\n             * @property {string|null} [userToken] OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION userToken\n             * @property {string|null} [expire] OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION expire\n             * @property {string|null} [fingerprint] OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION fingerprint\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION.\n             * @memberof op_cop\n             * @classdesc Represents a OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION.\n             * @implements IOP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION\n             * @constructor\n             * @param {op_cop.IOP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION virtualWorldUuid.\n             * @member {string} virtualWorldUuid\n             * @memberof op_cop.OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION.prototype.virtualWorldUuid = "";\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION gameId.\n             * @member {string} gameId\n             * @memberof op_cop.OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION.prototype.gameId = "";\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION userToken.\n             * @member {string} userToken\n             * @memberof op_cop.OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION.prototype.userToken = "";\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION expire.\n             * @member {string} expire\n             * @memberof op_cop.OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION.prototype.expire = "";\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION fingerprint.\n             * @member {string} fingerprint\n             * @memberof op_cop.OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION.prototype.fingerprint = "";\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION instance using the specified properties.\n             * @function create\n             * @memberof op_cop.OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION\n             * @static\n             * @param {op_cop.IOP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION=} [properties] Properties to set\n             * @returns {op_cop.OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION} OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION instance\n             */\n            OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION message. Does not implicitly {@link op_cop.OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION.verify|verify} messages.\n             * @function encode\n             * @memberof op_cop.OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION\n             * @static\n             * @param {op_cop.IOP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION} message OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.virtualWorldUuid != null && message.hasOwnProperty("virtualWorldUuid"))\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.virtualWorldUuid);\n                if (message.gameId != null && message.hasOwnProperty("gameId"))\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.gameId);\n                if (message.userToken != null && message.hasOwnProperty("userToken"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.userToken);\n                if (message.expire != null && message.hasOwnProperty("expire"))\n                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.expire);\n                if (message.fingerprint != null && message.hasOwnProperty("fingerprint"))\n                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.fingerprint);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION message, length delimited. Does not implicitly {@link op_cop.OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_cop.OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION\n             * @static\n             * @param {op_cop.IOP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION} message OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_cop.OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_cop.OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION} OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_cop.OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.virtualWorldUuid = reader.string();\n                        break;\n                    case 2:\n                        message.gameId = reader.string();\n                        break;\n                    case 3:\n                        message.userToken = reader.string();\n                        break;\n                    case 4:\n                        message.expire = reader.string();\n                        break;\n                    case 5:\n                        message.fingerprint = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_cop.OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_cop.OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION} OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION message.\n             * @function verify\n             * @memberof op_cop.OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.virtualWorldUuid != null && message.hasOwnProperty("virtualWorldUuid"))\n                    if (!$util.isString(message.virtualWorldUuid))\n                        return "virtualWorldUuid: string expected";\n                if (message.gameId != null && message.hasOwnProperty("gameId"))\n                    if (!$util.isString(message.gameId))\n                        return "gameId: string expected";\n                if (message.userToken != null && message.hasOwnProperty("userToken"))\n                    if (!$util.isString(message.userToken))\n                        return "userToken: string expected";\n                if (message.expire != null && message.hasOwnProperty("expire"))\n                    if (!$util.isString(message.expire))\n                        return "expire: string expected";\n                if (message.fingerprint != null && message.hasOwnProperty("fingerprint"))\n                    if (!$util.isString(message.fingerprint))\n                        return "fingerprint: string expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_cop.OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_cop.OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION} OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION\n             */\n            OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_cop.OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION)\n                    return object;\n                var message = new $root.op_cop.OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION();\n                if (object.virtualWorldUuid != null)\n                    message.virtualWorldUuid = String(object.virtualWorldUuid);\n                if (object.gameId != null)\n                    message.gameId = String(object.gameId);\n                if (object.userToken != null)\n                    message.userToken = String(object.userToken);\n                if (object.expire != null)\n                    message.expire = String(object.expire);\n                if (object.fingerprint != null)\n                    message.fingerprint = String(object.fingerprint);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_cop.OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION\n             * @static\n             * @param {op_cop.OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION} message OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.virtualWorldUuid = "";\n                    object.gameId = "";\n                    object.userToken = "";\n                    object.expire = "";\n                    object.fingerprint = "";\n                }\n                if (message.virtualWorldUuid != null && message.hasOwnProperty("virtualWorldUuid"))\n                    object.virtualWorldUuid = message.virtualWorldUuid;\n                if (message.gameId != null && message.hasOwnProperty("gameId"))\n                    object.gameId = message.gameId;\n                if (message.userToken != null && message.hasOwnProperty("userToken"))\n                    object.userToken = message.userToken;\n                if (message.expire != null && message.hasOwnProperty("expire"))\n                    object.expire = message.expire;\n                if (message.fingerprint != null && message.hasOwnProperty("fingerprint"))\n                    object.fingerprint = message.fingerprint;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION to JSON.\n             * @function toJSON\n             * @memberof op_cop.OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_REQ_COP_PLAYER_CLOSE_SESSION;\n        })();\n    \n        return op_cop;\n    })();\n    \n    $root.op_editor = (function() {\n    \n        /**\n         * Namespace op_editor.\n         * @exports op_editor\n         * @namespace\n         */\n        var op_editor = {};\n    \n        /**\n         * OPCODE enum.\n         * @name op_editor.OPCODE\n         * @enum {string}\n         * @property {number} OP_MAJOR=23 OP_MAJOR value\n         * @property {number} _OP_UNKNOWN=0 _OP_UNKNOWN value\n         * @property {number} _OP_CLIENT_REQ_EDITOR_ADD_ELEMENT=1507329 _OP_CLIENT_REQ_EDITOR_ADD_ELEMENT value\n         * @property {number} _OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT=1507330 _OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT value\n         * @property {number} _OP_CLIENT_REQ_EDITOR_FETCH_OBJECT=1507331 _OP_CLIENT_REQ_EDITOR_FETCH_OBJECT value\n         * @property {number} _OP_CLIENT_REQ_EDITOR_CREATE_SPRITE=1507332 _OP_CLIENT_REQ_EDITOR_CREATE_SPRITE value\n         * @property {number} _OP_CLIENT_REQ_EDITOR_SYNC_SPRITE=1507333 _OP_CLIENT_REQ_EDITOR_SYNC_SPRITE value\n         * @property {number} _OP_CLIENT_REQ_EDITOR_DELETE_SPRITE=1507334 _OP_CLIENT_REQ_EDITOR_DELETE_SPRITE value\n         * @property {number} _OP_CLIENT_REQ_EDITOR_RESET_CAMERA=1507335 _OP_CLIENT_REQ_EDITOR_RESET_CAMERA value\n         * @property {number} _OP_CLIENT_REQ_EDITOR_FETCH_SPRITE=1507336 _OP_CLIENT_REQ_EDITOR_FETCH_SPRITE value\n         */\n        op_editor.OPCODE = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[23] = "OP_MAJOR"] = 23;\n            values[valuesById[0] = "_OP_UNKNOWN"] = 0;\n            values[valuesById[1507329] = "_OP_CLIENT_REQ_EDITOR_ADD_ELEMENT"] = 1507329;\n            values[valuesById[1507330] = "_OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT"] = 1507330;\n            values[valuesById[1507331] = "_OP_CLIENT_REQ_EDITOR_FETCH_OBJECT"] = 1507331;\n            values[valuesById[1507332] = "_OP_CLIENT_REQ_EDITOR_CREATE_SPRITE"] = 1507332;\n            values[valuesById[1507333] = "_OP_CLIENT_REQ_EDITOR_SYNC_SPRITE"] = 1507333;\n            values[valuesById[1507334] = "_OP_CLIENT_REQ_EDITOR_DELETE_SPRITE"] = 1507334;\n            values[valuesById[1507335] = "_OP_CLIENT_REQ_EDITOR_RESET_CAMERA"] = 1507335;\n            values[valuesById[1507336] = "_OP_CLIENT_REQ_EDITOR_FETCH_SPRITE"] = 1507336;\n            return values;\n        })();\n    \n        op_editor.OP_CLIENT_REQ_EDITOR_ADD_ELEMENT = (function() {\n    \n            /**\n             * Properties of a OP_CLIENT_REQ_EDITOR_ADD_ELEMENT.\n             * @memberof op_editor\n             * @interface IOP_CLIENT_REQ_EDITOR_ADD_ELEMENT\n             * @property {op_client.IElement} element OP_CLIENT_REQ_EDITOR_ADD_ELEMENT element\n             */\n    \n            /**\n             * Constructs a new OP_CLIENT_REQ_EDITOR_ADD_ELEMENT.\n             * @memberof op_editor\n             * @classdesc Represents a OP_CLIENT_REQ_EDITOR_ADD_ELEMENT.\n             * @implements IOP_CLIENT_REQ_EDITOR_ADD_ELEMENT\n             * @constructor\n             * @param {op_editor.IOP_CLIENT_REQ_EDITOR_ADD_ELEMENT=} [properties] Properties to set\n             */\n            function OP_CLIENT_REQ_EDITOR_ADD_ELEMENT(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_CLIENT_REQ_EDITOR_ADD_ELEMENT element.\n             * @member {op_client.IElement} element\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_ADD_ELEMENT\n             * @instance\n             */\n            OP_CLIENT_REQ_EDITOR_ADD_ELEMENT.prototype.element = null;\n    \n            /**\n             * Creates a new OP_CLIENT_REQ_EDITOR_ADD_ELEMENT instance using the specified properties.\n             * @function create\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_ADD_ELEMENT\n             * @static\n             * @param {op_editor.IOP_CLIENT_REQ_EDITOR_ADD_ELEMENT=} [properties] Properties to set\n             * @returns {op_editor.OP_CLIENT_REQ_EDITOR_ADD_ELEMENT} OP_CLIENT_REQ_EDITOR_ADD_ELEMENT instance\n             */\n            OP_CLIENT_REQ_EDITOR_ADD_ELEMENT.create = function create(properties) {\n                return new OP_CLIENT_REQ_EDITOR_ADD_ELEMENT(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_EDITOR_ADD_ELEMENT message. Does not implicitly {@link op_editor.OP_CLIENT_REQ_EDITOR_ADD_ELEMENT.verify|verify} messages.\n             * @function encode\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_ADD_ELEMENT\n             * @static\n             * @param {op_editor.IOP_CLIENT_REQ_EDITOR_ADD_ELEMENT} message OP_CLIENT_REQ_EDITOR_ADD_ELEMENT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_EDITOR_ADD_ELEMENT.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                $root.op_client.Element.encode(message.element, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_EDITOR_ADD_ELEMENT message, length delimited. Does not implicitly {@link op_editor.OP_CLIENT_REQ_EDITOR_ADD_ELEMENT.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_ADD_ELEMENT\n             * @static\n             * @param {op_editor.IOP_CLIENT_REQ_EDITOR_ADD_ELEMENT} message OP_CLIENT_REQ_EDITOR_ADD_ELEMENT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_EDITOR_ADD_ELEMENT.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_EDITOR_ADD_ELEMENT message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_ADD_ELEMENT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_editor.OP_CLIENT_REQ_EDITOR_ADD_ELEMENT} OP_CLIENT_REQ_EDITOR_ADD_ELEMENT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_EDITOR_ADD_ELEMENT.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_editor.OP_CLIENT_REQ_EDITOR_ADD_ELEMENT();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.element = $root.op_client.Element.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("element"))\n                    throw $util.ProtocolError("missing required \'element\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_EDITOR_ADD_ELEMENT message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_ADD_ELEMENT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_editor.OP_CLIENT_REQ_EDITOR_ADD_ELEMENT} OP_CLIENT_REQ_EDITOR_ADD_ELEMENT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_EDITOR_ADD_ELEMENT.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_CLIENT_REQ_EDITOR_ADD_ELEMENT message.\n             * @function verify\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_ADD_ELEMENT\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_CLIENT_REQ_EDITOR_ADD_ELEMENT.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                {\n                    var error = $root.op_client.Element.verify(message.element);\n                    if (error)\n                        return "element." + error;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_CLIENT_REQ_EDITOR_ADD_ELEMENT message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_ADD_ELEMENT\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_editor.OP_CLIENT_REQ_EDITOR_ADD_ELEMENT} OP_CLIENT_REQ_EDITOR_ADD_ELEMENT\n             */\n            OP_CLIENT_REQ_EDITOR_ADD_ELEMENT.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_editor.OP_CLIENT_REQ_EDITOR_ADD_ELEMENT)\n                    return object;\n                var message = new $root.op_editor.OP_CLIENT_REQ_EDITOR_ADD_ELEMENT();\n                if (object.element != null) {\n                    if (typeof object.element !== "object")\n                        throw TypeError(".op_editor.OP_CLIENT_REQ_EDITOR_ADD_ELEMENT.element: object expected");\n                    message.element = $root.op_client.Element.fromObject(object.element);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_CLIENT_REQ_EDITOR_ADD_ELEMENT message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_ADD_ELEMENT\n             * @static\n             * @param {op_editor.OP_CLIENT_REQ_EDITOR_ADD_ELEMENT} message OP_CLIENT_REQ_EDITOR_ADD_ELEMENT\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_CLIENT_REQ_EDITOR_ADD_ELEMENT.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.element = null;\n                if (message.element != null && message.hasOwnProperty("element"))\n                    object.element = $root.op_client.Element.toObject(message.element, options);\n                return object;\n            };\n    \n            /**\n             * Converts this OP_CLIENT_REQ_EDITOR_ADD_ELEMENT to JSON.\n             * @function toJSON\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_ADD_ELEMENT\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_CLIENT_REQ_EDITOR_ADD_ELEMENT.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_CLIENT_REQ_EDITOR_ADD_ELEMENT;\n        })();\n    \n        op_editor.Point = (function() {\n    \n            /**\n             * Properties of a Point.\n             * @memberof op_editor\n             * @interface IPoint\n             * @property {number} x Point x\n             * @property {number} y Point y\n             * @property {number|null} [z] Point z\n             */\n    \n            /**\n             * Constructs a new Point.\n             * @memberof op_editor\n             * @classdesc Represents a Point.\n             * @implements IPoint\n             * @constructor\n             * @param {op_editor.IPoint=} [properties] Properties to set\n             */\n            function Point(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * Point x.\n             * @member {number} x\n             * @memberof op_editor.Point\n             * @instance\n             */\n            Point.prototype.x = 0;\n    \n            /**\n             * Point y.\n             * @member {number} y\n             * @memberof op_editor.Point\n             * @instance\n             */\n            Point.prototype.y = 0;\n    \n            /**\n             * Point z.\n             * @member {number} z\n             * @memberof op_editor.Point\n             * @instance\n             */\n            Point.prototype.z = 0;\n    \n            /**\n             * Creates a new Point instance using the specified properties.\n             * @function create\n             * @memberof op_editor.Point\n             * @static\n             * @param {op_editor.IPoint=} [properties] Properties to set\n             * @returns {op_editor.Point} Point instance\n             */\n            Point.create = function create(properties) {\n                return new Point(properties);\n            };\n    \n            /**\n             * Encodes the specified Point message. Does not implicitly {@link op_editor.Point.verify|verify} messages.\n             * @function encode\n             * @memberof op_editor.Point\n             * @static\n             * @param {op_editor.IPoint} message Point message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Point.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.x);\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.y);\n                if (message.z != null && message.hasOwnProperty("z"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.z);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified Point message, length delimited. Does not implicitly {@link op_editor.Point.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_editor.Point\n             * @static\n             * @param {op_editor.IPoint} message Point message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Point.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a Point message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_editor.Point\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_editor.Point} Point\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Point.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_editor.Point();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.x = reader.int32();\n                        break;\n                    case 2:\n                        message.y = reader.int32();\n                        break;\n                    case 3:\n                        message.z = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("x"))\n                    throw $util.ProtocolError("missing required \'x\'", { instance: message });\n                if (!message.hasOwnProperty("y"))\n                    throw $util.ProtocolError("missing required \'y\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a Point message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_editor.Point\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_editor.Point} Point\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Point.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a Point message.\n             * @function verify\n             * @memberof op_editor.Point\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Point.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.x))\n                    return "x: integer expected";\n                if (!$util.isInteger(message.y))\n                    return "y: integer expected";\n                if (message.z != null && message.hasOwnProperty("z"))\n                    if (!$util.isInteger(message.z))\n                        return "z: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a Point message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_editor.Point\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_editor.Point} Point\n             */\n            Point.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_editor.Point)\n                    return object;\n                var message = new $root.op_editor.Point();\n                if (object.x != null)\n                    message.x = object.x | 0;\n                if (object.y != null)\n                    message.y = object.y | 0;\n                if (object.z != null)\n                    message.z = object.z | 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a Point message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_editor.Point\n             * @static\n             * @param {op_editor.Point} message Point\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Point.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.x = 0;\n                    object.y = 0;\n                    object.z = 0;\n                }\n                if (message.x != null && message.hasOwnProperty("x"))\n                    object.x = message.x;\n                if (message.y != null && message.hasOwnProperty("y"))\n                    object.y = message.y;\n                if (message.z != null && message.hasOwnProperty("z"))\n                    object.z = message.z;\n                return object;\n            };\n    \n            /**\n             * Converts this Point to JSON.\n             * @function toJSON\n             * @memberof op_editor.Point\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Point.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return Point;\n        })();\n    \n        op_editor.OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT = (function() {\n    \n            /**\n             * Properties of a OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT.\n             * @memberof op_editor\n             * @interface IOP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT\n             * @property {string} mode OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT mode\n             * @property {op_editor.IPoint} point OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT point\n             */\n    \n            /**\n             * Constructs a new OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT.\n             * @memberof op_editor\n             * @classdesc Represents a OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT.\n             * @implements IOP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT\n             * @constructor\n             * @param {op_editor.IOP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT=} [properties] Properties to set\n             */\n            function OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT mode.\n             * @member {string} mode\n             * @memberof op_editor.OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT\n             * @instance\n             */\n            OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT.prototype.mode = "";\n    \n            /**\n             * OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT point.\n             * @member {op_editor.IPoint} point\n             * @memberof op_editor.OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT\n             * @instance\n             */\n            OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT.prototype.point = null;\n    \n            /**\n             * Creates a new OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT instance using the specified properties.\n             * @function create\n             * @memberof op_editor.OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT\n             * @static\n             * @param {op_editor.IOP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT=} [properties] Properties to set\n             * @returns {op_editor.OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT} OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT instance\n             */\n            OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT.create = function create(properties) {\n                return new OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT message. Does not implicitly {@link op_editor.OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT.verify|verify} messages.\n             * @function encode\n             * @memberof op_editor.OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT\n             * @static\n             * @param {op_editor.IOP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT} message OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.mode);\n                $root.op_editor.Point.encode(message.point, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT message, length delimited. Does not implicitly {@link op_editor.OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_editor.OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT\n             * @static\n             * @param {op_editor.IOP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT} message OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_editor.OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_editor.OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT} OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_editor.OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.mode = reader.string();\n                        break;\n                    case 2:\n                        message.point = $root.op_editor.Point.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("mode"))\n                    throw $util.ProtocolError("missing required \'mode\'", { instance: message });\n                if (!message.hasOwnProperty("point"))\n                    throw $util.ProtocolError("missing required \'point\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_editor.OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_editor.OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT} OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT message.\n             * @function verify\n             * @memberof op_editor.OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.mode))\n                    return "mode: string expected";\n                {\n                    var error = $root.op_editor.Point.verify(message.point);\n                    if (error)\n                        return "point." + error;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_editor.OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_editor.OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT} OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT\n             */\n            OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_editor.OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT)\n                    return object;\n                var message = new $root.op_editor.OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT();\n                if (object.mode != null)\n                    message.mode = String(object.mode);\n                if (object.point != null) {\n                    if (typeof object.point !== "object")\n                        throw TypeError(".op_editor.OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT.point: object expected");\n                    message.point = $root.op_editor.Point.fromObject(object.point);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_editor.OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT\n             * @static\n             * @param {op_editor.OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT} message OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.mode = "";\n                    object.point = null;\n                }\n                if (message.mode != null && message.hasOwnProperty("mode"))\n                    object.mode = message.mode;\n                if (message.point != null && message.hasOwnProperty("point"))\n                    object.point = $root.op_editor.Point.toObject(message.point, options);\n                return object;\n            };\n    \n            /**\n             * Converts this OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT to JSON.\n             * @function toJSON\n             * @memberof op_editor.OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_CLIENT_RES_EDITOR_SCENE_POINT_RESULT;\n        })();\n    \n        op_editor.OP_CLIENT_REQ_EDITOR_FETCH_OBJECT = (function() {\n    \n            /**\n             * Properties of a OP_CLIENT_REQ_EDITOR_FETCH_OBJECT.\n             * @memberof op_editor\n             * @interface IOP_CLIENT_REQ_EDITOR_FETCH_OBJECT\n             * @property {Array.<number>|null} [ids] OP_CLIENT_REQ_EDITOR_FETCH_OBJECT ids\n             */\n    \n            /**\n             * Constructs a new OP_CLIENT_REQ_EDITOR_FETCH_OBJECT.\n             * @memberof op_editor\n             * @classdesc Represents a OP_CLIENT_REQ_EDITOR_FETCH_OBJECT.\n             * @implements IOP_CLIENT_REQ_EDITOR_FETCH_OBJECT\n             * @constructor\n             * @param {op_editor.IOP_CLIENT_REQ_EDITOR_FETCH_OBJECT=} [properties] Properties to set\n             */\n            function OP_CLIENT_REQ_EDITOR_FETCH_OBJECT(properties) {\n                this.ids = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_CLIENT_REQ_EDITOR_FETCH_OBJECT ids.\n             * @member {Array.<number>} ids\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_FETCH_OBJECT\n             * @instance\n             */\n            OP_CLIENT_REQ_EDITOR_FETCH_OBJECT.prototype.ids = $util.emptyArray;\n    \n            /**\n             * Creates a new OP_CLIENT_REQ_EDITOR_FETCH_OBJECT instance using the specified properties.\n             * @function create\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_FETCH_OBJECT\n             * @static\n             * @param {op_editor.IOP_CLIENT_REQ_EDITOR_FETCH_OBJECT=} [properties] Properties to set\n             * @returns {op_editor.OP_CLIENT_REQ_EDITOR_FETCH_OBJECT} OP_CLIENT_REQ_EDITOR_FETCH_OBJECT instance\n             */\n            OP_CLIENT_REQ_EDITOR_FETCH_OBJECT.create = function create(properties) {\n                return new OP_CLIENT_REQ_EDITOR_FETCH_OBJECT(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_EDITOR_FETCH_OBJECT message. Does not implicitly {@link op_editor.OP_CLIENT_REQ_EDITOR_FETCH_OBJECT.verify|verify} messages.\n             * @function encode\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_FETCH_OBJECT\n             * @static\n             * @param {op_editor.IOP_CLIENT_REQ_EDITOR_FETCH_OBJECT} message OP_CLIENT_REQ_EDITOR_FETCH_OBJECT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_EDITOR_FETCH_OBJECT.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.ids != null && message.ids.length)\n                    for (var i = 0; i < message.ids.length; ++i)\n                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ids[i]);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_EDITOR_FETCH_OBJECT message, length delimited. Does not implicitly {@link op_editor.OP_CLIENT_REQ_EDITOR_FETCH_OBJECT.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_FETCH_OBJECT\n             * @static\n             * @param {op_editor.IOP_CLIENT_REQ_EDITOR_FETCH_OBJECT} message OP_CLIENT_REQ_EDITOR_FETCH_OBJECT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_EDITOR_FETCH_OBJECT.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_EDITOR_FETCH_OBJECT message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_FETCH_OBJECT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_editor.OP_CLIENT_REQ_EDITOR_FETCH_OBJECT} OP_CLIENT_REQ_EDITOR_FETCH_OBJECT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_EDITOR_FETCH_OBJECT.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_editor.OP_CLIENT_REQ_EDITOR_FETCH_OBJECT();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.ids && message.ids.length))\n                            message.ids = [];\n                        if ((tag & 7) === 2) {\n                            var end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2)\n                                message.ids.push(reader.int32());\n                        } else\n                            message.ids.push(reader.int32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_EDITOR_FETCH_OBJECT message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_FETCH_OBJECT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_editor.OP_CLIENT_REQ_EDITOR_FETCH_OBJECT} OP_CLIENT_REQ_EDITOR_FETCH_OBJECT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_EDITOR_FETCH_OBJECT.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_CLIENT_REQ_EDITOR_FETCH_OBJECT message.\n             * @function verify\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_FETCH_OBJECT\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_CLIENT_REQ_EDITOR_FETCH_OBJECT.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.ids != null && message.hasOwnProperty("ids")) {\n                    if (!Array.isArray(message.ids))\n                        return "ids: array expected";\n                    for (var i = 0; i < message.ids.length; ++i)\n                        if (!$util.isInteger(message.ids[i]))\n                            return "ids: integer[] expected";\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_CLIENT_REQ_EDITOR_FETCH_OBJECT message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_FETCH_OBJECT\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_editor.OP_CLIENT_REQ_EDITOR_FETCH_OBJECT} OP_CLIENT_REQ_EDITOR_FETCH_OBJECT\n             */\n            OP_CLIENT_REQ_EDITOR_FETCH_OBJECT.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_editor.OP_CLIENT_REQ_EDITOR_FETCH_OBJECT)\n                    return object;\n                var message = new $root.op_editor.OP_CLIENT_REQ_EDITOR_FETCH_OBJECT();\n                if (object.ids) {\n                    if (!Array.isArray(object.ids))\n                        throw TypeError(".op_editor.OP_CLIENT_REQ_EDITOR_FETCH_OBJECT.ids: array expected");\n                    message.ids = [];\n                    for (var i = 0; i < object.ids.length; ++i)\n                        message.ids[i] = object.ids[i] | 0;\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_CLIENT_REQ_EDITOR_FETCH_OBJECT message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_FETCH_OBJECT\n             * @static\n             * @param {op_editor.OP_CLIENT_REQ_EDITOR_FETCH_OBJECT} message OP_CLIENT_REQ_EDITOR_FETCH_OBJECT\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_CLIENT_REQ_EDITOR_FETCH_OBJECT.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.ids = [];\n                if (message.ids && message.ids.length) {\n                    object.ids = [];\n                    for (var j = 0; j < message.ids.length; ++j)\n                        object.ids[j] = message.ids[j];\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this OP_CLIENT_REQ_EDITOR_FETCH_OBJECT to JSON.\n             * @function toJSON\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_FETCH_OBJECT\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_CLIENT_REQ_EDITOR_FETCH_OBJECT.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_CLIENT_REQ_EDITOR_FETCH_OBJECT;\n        })();\n    \n        op_editor.OP_CLIENT_REQ_EDITOR_CREATE_SPRITE = (function() {\n    \n            /**\n             * Properties of a OP_CLIENT_REQ_EDITOR_CREATE_SPRITE.\n             * @memberof op_editor\n             * @interface IOP_CLIENT_REQ_EDITOR_CREATE_SPRITE\n             * @property {Array.<op_client.ISprite>|null} [sprites] OP_CLIENT_REQ_EDITOR_CREATE_SPRITE sprites\n             * @property {op_def.NodeType|null} [nodeType] OP_CLIENT_REQ_EDITOR_CREATE_SPRITE nodeType\n             */\n    \n            /**\n             * Constructs a new OP_CLIENT_REQ_EDITOR_CREATE_SPRITE.\n             * @memberof op_editor\n             * @classdesc Represents a OP_CLIENT_REQ_EDITOR_CREATE_SPRITE.\n             * @implements IOP_CLIENT_REQ_EDITOR_CREATE_SPRITE\n             * @constructor\n             * @param {op_editor.IOP_CLIENT_REQ_EDITOR_CREATE_SPRITE=} [properties] Properties to set\n             */\n            function OP_CLIENT_REQ_EDITOR_CREATE_SPRITE(properties) {\n                this.sprites = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_CLIENT_REQ_EDITOR_CREATE_SPRITE sprites.\n             * @member {Array.<op_client.ISprite>} sprites\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_CREATE_SPRITE\n             * @instance\n             */\n            OP_CLIENT_REQ_EDITOR_CREATE_SPRITE.prototype.sprites = $util.emptyArray;\n    \n            /**\n             * OP_CLIENT_REQ_EDITOR_CREATE_SPRITE nodeType.\n             * @member {op_def.NodeType} nodeType\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_CREATE_SPRITE\n             * @instance\n             */\n            OP_CLIENT_REQ_EDITOR_CREATE_SPRITE.prototype.nodeType = 0;\n    \n            /**\n             * Creates a new OP_CLIENT_REQ_EDITOR_CREATE_SPRITE instance using the specified properties.\n             * @function create\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_CREATE_SPRITE\n             * @static\n             * @param {op_editor.IOP_CLIENT_REQ_EDITOR_CREATE_SPRITE=} [properties] Properties to set\n             * @returns {op_editor.OP_CLIENT_REQ_EDITOR_CREATE_SPRITE} OP_CLIENT_REQ_EDITOR_CREATE_SPRITE instance\n             */\n            OP_CLIENT_REQ_EDITOR_CREATE_SPRITE.create = function create(properties) {\n                return new OP_CLIENT_REQ_EDITOR_CREATE_SPRITE(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_EDITOR_CREATE_SPRITE message. Does not implicitly {@link op_editor.OP_CLIENT_REQ_EDITOR_CREATE_SPRITE.verify|verify} messages.\n             * @function encode\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_CREATE_SPRITE\n             * @static\n             * @param {op_editor.IOP_CLIENT_REQ_EDITOR_CREATE_SPRITE} message OP_CLIENT_REQ_EDITOR_CREATE_SPRITE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_EDITOR_CREATE_SPRITE.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.sprites != null && message.sprites.length)\n                    for (var i = 0; i < message.sprites.length; ++i)\n                        $root.op_client.Sprite.encode(message.sprites[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nodeType);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_EDITOR_CREATE_SPRITE message, length delimited. Does not implicitly {@link op_editor.OP_CLIENT_REQ_EDITOR_CREATE_SPRITE.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_CREATE_SPRITE\n             * @static\n             * @param {op_editor.IOP_CLIENT_REQ_EDITOR_CREATE_SPRITE} message OP_CLIENT_REQ_EDITOR_CREATE_SPRITE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_EDITOR_CREATE_SPRITE.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_EDITOR_CREATE_SPRITE message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_CREATE_SPRITE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_editor.OP_CLIENT_REQ_EDITOR_CREATE_SPRITE} OP_CLIENT_REQ_EDITOR_CREATE_SPRITE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_EDITOR_CREATE_SPRITE.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_editor.OP_CLIENT_REQ_EDITOR_CREATE_SPRITE();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.sprites && message.sprites.length))\n                            message.sprites = [];\n                        message.sprites.push($root.op_client.Sprite.decode(reader, reader.uint32()));\n                        break;\n                    case 2:\n                        message.nodeType = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_EDITOR_CREATE_SPRITE message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_CREATE_SPRITE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_editor.OP_CLIENT_REQ_EDITOR_CREATE_SPRITE} OP_CLIENT_REQ_EDITOR_CREATE_SPRITE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_EDITOR_CREATE_SPRITE.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_CLIENT_REQ_EDITOR_CREATE_SPRITE message.\n             * @function verify\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_CREATE_SPRITE\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_CLIENT_REQ_EDITOR_CREATE_SPRITE.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.sprites != null && message.hasOwnProperty("sprites")) {\n                    if (!Array.isArray(message.sprites))\n                        return "sprites: array expected";\n                    for (var i = 0; i < message.sprites.length; ++i) {\n                        var error = $root.op_client.Sprite.verify(message.sprites[i]);\n                        if (error)\n                            return "sprites." + error;\n                    }\n                }\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    switch (message.nodeType) {\n                    default:\n                        return "nodeType: enum value expected";\n                    case 0:\n                    case 1:\n                    case 2:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 9:\n                    case 10:\n                    case 11:\n                    case 12:\n                    case 13:\n                    case 14:\n                    case 15:\n                    case 16:\n                    case 17:\n                    case 18:\n                    case 19:\n                    case 20:\n                    case 21:\n                    case 22:\n                    case 23:\n                    case 24:\n                    case 25:\n                    case 26:\n                    case 27:\n                    case 28:\n                    case 29:\n                        break;\n                    }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_CLIENT_REQ_EDITOR_CREATE_SPRITE message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_CREATE_SPRITE\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_editor.OP_CLIENT_REQ_EDITOR_CREATE_SPRITE} OP_CLIENT_REQ_EDITOR_CREATE_SPRITE\n             */\n            OP_CLIENT_REQ_EDITOR_CREATE_SPRITE.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_editor.OP_CLIENT_REQ_EDITOR_CREATE_SPRITE)\n                    return object;\n                var message = new $root.op_editor.OP_CLIENT_REQ_EDITOR_CREATE_SPRITE();\n                if (object.sprites) {\n                    if (!Array.isArray(object.sprites))\n                        throw TypeError(".op_editor.OP_CLIENT_REQ_EDITOR_CREATE_SPRITE.sprites: array expected");\n                    message.sprites = [];\n                    for (var i = 0; i < object.sprites.length; ++i) {\n                        if (typeof object.sprites[i] !== "object")\n                            throw TypeError(".op_editor.OP_CLIENT_REQ_EDITOR_CREATE_SPRITE.sprites: object expected");\n                        message.sprites[i] = $root.op_client.Sprite.fromObject(object.sprites[i]);\n                    }\n                }\n                switch (object.nodeType) {\n                case "UnknownNodeType":\n                case 0:\n                    message.nodeType = 0;\n                    break;\n                case "GameNodeType":\n                case 1:\n                    message.nodeType = 1;\n                    break;\n                case "SceneNodeType":\n                case 2:\n                    message.nodeType = 2;\n                    break;\n                case "ElementNodeType":\n                case 3:\n                    message.nodeType = 3;\n                    break;\n                case "TerrainNodeType":\n                case 4:\n                    message.nodeType = 4;\n                    break;\n                case "CharacterNodeType":\n                case 5:\n                    message.nodeType = 5;\n                    break;\n                case "LocationType":\n                case 6:\n                    message.nodeType = 6;\n                    break;\n                case "MovableType":\n                case 7:\n                    message.nodeType = 7;\n                    break;\n                case "DisplayType":\n                case 8:\n                    message.nodeType = 8;\n                    break;\n                case "AttributeType":\n                case 9:\n                    message.nodeType = 9;\n                    break;\n                case "FunctionType":\n                case 10:\n                    message.nodeType = 10;\n                    break;\n                case "AnimationsType":\n                case 11:\n                    message.nodeType = 11;\n                    break;\n                case "EventType":\n                case 12:\n                    message.nodeType = 12;\n                    break;\n                case "MapSizeType":\n                case 13:\n                    message.nodeType = 13;\n                    break;\n                case "UIType":\n                case 14:\n                    message.nodeType = 14;\n                    break;\n                case "TimerType":\n                case 15:\n                    message.nodeType = 15;\n                    break;\n                case "PackageType":\n                case 16:\n                    message.nodeType = 16;\n                    break;\n                case "PackageItemType":\n                case 17:\n                    message.nodeType = 17;\n                    break;\n                case "AvatarType":\n                case 18:\n                    message.nodeType = 18;\n                    break;\n                case "SettingsType":\n                case 19:\n                    message.nodeType = 19;\n                    break;\n                case "CampType":\n                case 20:\n                    message.nodeType = 20;\n                    break;\n                case "MutexType":\n                case 21:\n                    message.nodeType = 21;\n                    break;\n                case "AnimationDataType":\n                case 22:\n                    message.nodeType = 22;\n                    break;\n                case "ForkType":\n                case 23:\n                    message.nodeType = 23;\n                    break;\n                case "ButtonType":\n                case 24:\n                    message.nodeType = 24;\n                    break;\n                case "TextType":\n                case 25:\n                    message.nodeType = 25;\n                    break;\n                case "AccessType":\n                case 26:\n                    message.nodeType = 26;\n                    break;\n                case "SpawnPointType":\n                case 27:\n                    message.nodeType = 27;\n                    break;\n                case "CommodityType":\n                case 28:\n                    message.nodeType = 28;\n                    break;\n                case "ShopType":\n                case 29:\n                    message.nodeType = 29;\n                    break;\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_CLIENT_REQ_EDITOR_CREATE_SPRITE message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_CREATE_SPRITE\n             * @static\n             * @param {op_editor.OP_CLIENT_REQ_EDITOR_CREATE_SPRITE} message OP_CLIENT_REQ_EDITOR_CREATE_SPRITE\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_CLIENT_REQ_EDITOR_CREATE_SPRITE.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.sprites = [];\n                if (options.defaults)\n                    object.nodeType = options.enums === String ? "UnknownNodeType" : 0;\n                if (message.sprites && message.sprites.length) {\n                    object.sprites = [];\n                    for (var j = 0; j < message.sprites.length; ++j)\n                        object.sprites[j] = $root.op_client.Sprite.toObject(message.sprites[j], options);\n                }\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    object.nodeType = options.enums === String ? $root.op_def.NodeType[message.nodeType] : message.nodeType;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_CLIENT_REQ_EDITOR_CREATE_SPRITE to JSON.\n             * @function toJSON\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_CREATE_SPRITE\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_CLIENT_REQ_EDITOR_CREATE_SPRITE.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_CLIENT_REQ_EDITOR_CREATE_SPRITE;\n        })();\n    \n        op_editor.OP_CLIENT_REQ_EDITOR_SYNC_SPRITE = (function() {\n    \n            /**\n             * Properties of a OP_CLIENT_REQ_EDITOR_SYNC_SPRITE.\n             * @memberof op_editor\n             * @interface IOP_CLIENT_REQ_EDITOR_SYNC_SPRITE\n             * @property {Array.<op_client.ISprite>|null} [sprites] OP_CLIENT_REQ_EDITOR_SYNC_SPRITE sprites\n             * @property {op_def.NodeType|null} [nodeType] OP_CLIENT_REQ_EDITOR_SYNC_SPRITE nodeType\n             */\n    \n            /**\n             * Constructs a new OP_CLIENT_REQ_EDITOR_SYNC_SPRITE.\n             * @memberof op_editor\n             * @classdesc Represents a OP_CLIENT_REQ_EDITOR_SYNC_SPRITE.\n             * @implements IOP_CLIENT_REQ_EDITOR_SYNC_SPRITE\n             * @constructor\n             * @param {op_editor.IOP_CLIENT_REQ_EDITOR_SYNC_SPRITE=} [properties] Properties to set\n             */\n            function OP_CLIENT_REQ_EDITOR_SYNC_SPRITE(properties) {\n                this.sprites = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_CLIENT_REQ_EDITOR_SYNC_SPRITE sprites.\n             * @member {Array.<op_client.ISprite>} sprites\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_SYNC_SPRITE\n             * @instance\n             */\n            OP_CLIENT_REQ_EDITOR_SYNC_SPRITE.prototype.sprites = $util.emptyArray;\n    \n            /**\n             * OP_CLIENT_REQ_EDITOR_SYNC_SPRITE nodeType.\n             * @member {op_def.NodeType} nodeType\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_SYNC_SPRITE\n             * @instance\n             */\n            OP_CLIENT_REQ_EDITOR_SYNC_SPRITE.prototype.nodeType = 0;\n    \n            /**\n             * Creates a new OP_CLIENT_REQ_EDITOR_SYNC_SPRITE instance using the specified properties.\n             * @function create\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_SYNC_SPRITE\n             * @static\n             * @param {op_editor.IOP_CLIENT_REQ_EDITOR_SYNC_SPRITE=} [properties] Properties to set\n             * @returns {op_editor.OP_CLIENT_REQ_EDITOR_SYNC_SPRITE} OP_CLIENT_REQ_EDITOR_SYNC_SPRITE instance\n             */\n            OP_CLIENT_REQ_EDITOR_SYNC_SPRITE.create = function create(properties) {\n                return new OP_CLIENT_REQ_EDITOR_SYNC_SPRITE(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_EDITOR_SYNC_SPRITE message. Does not implicitly {@link op_editor.OP_CLIENT_REQ_EDITOR_SYNC_SPRITE.verify|verify} messages.\n             * @function encode\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_SYNC_SPRITE\n             * @static\n             * @param {op_editor.IOP_CLIENT_REQ_EDITOR_SYNC_SPRITE} message OP_CLIENT_REQ_EDITOR_SYNC_SPRITE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_EDITOR_SYNC_SPRITE.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.sprites != null && message.sprites.length)\n                    for (var i = 0; i < message.sprites.length; ++i)\n                        $root.op_client.Sprite.encode(message.sprites[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nodeType);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_EDITOR_SYNC_SPRITE message, length delimited. Does not implicitly {@link op_editor.OP_CLIENT_REQ_EDITOR_SYNC_SPRITE.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_SYNC_SPRITE\n             * @static\n             * @param {op_editor.IOP_CLIENT_REQ_EDITOR_SYNC_SPRITE} message OP_CLIENT_REQ_EDITOR_SYNC_SPRITE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_EDITOR_SYNC_SPRITE.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_EDITOR_SYNC_SPRITE message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_SYNC_SPRITE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_editor.OP_CLIENT_REQ_EDITOR_SYNC_SPRITE} OP_CLIENT_REQ_EDITOR_SYNC_SPRITE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_EDITOR_SYNC_SPRITE.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_editor.OP_CLIENT_REQ_EDITOR_SYNC_SPRITE();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.sprites && message.sprites.length))\n                            message.sprites = [];\n                        message.sprites.push($root.op_client.Sprite.decode(reader, reader.uint32()));\n                        break;\n                    case 2:\n                        message.nodeType = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_EDITOR_SYNC_SPRITE message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_SYNC_SPRITE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_editor.OP_CLIENT_REQ_EDITOR_SYNC_SPRITE} OP_CLIENT_REQ_EDITOR_SYNC_SPRITE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_EDITOR_SYNC_SPRITE.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_CLIENT_REQ_EDITOR_SYNC_SPRITE message.\n             * @function verify\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_SYNC_SPRITE\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_CLIENT_REQ_EDITOR_SYNC_SPRITE.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.sprites != null && message.hasOwnProperty("sprites")) {\n                    if (!Array.isArray(message.sprites))\n                        return "sprites: array expected";\n                    for (var i = 0; i < message.sprites.length; ++i) {\n                        var error = $root.op_client.Sprite.verify(message.sprites[i]);\n                        if (error)\n                            return "sprites." + error;\n                    }\n                }\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    switch (message.nodeType) {\n                    default:\n                        return "nodeType: enum value expected";\n                    case 0:\n                    case 1:\n                    case 2:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 9:\n                    case 10:\n                    case 11:\n                    case 12:\n                    case 13:\n                    case 14:\n                    case 15:\n                    case 16:\n                    case 17:\n                    case 18:\n                    case 19:\n                    case 20:\n                    case 21:\n                    case 22:\n                    case 23:\n                    case 24:\n                    case 25:\n                    case 26:\n                    case 27:\n                    case 28:\n                    case 29:\n                        break;\n                    }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_CLIENT_REQ_EDITOR_SYNC_SPRITE message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_SYNC_SPRITE\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_editor.OP_CLIENT_REQ_EDITOR_SYNC_SPRITE} OP_CLIENT_REQ_EDITOR_SYNC_SPRITE\n             */\n            OP_CLIENT_REQ_EDITOR_SYNC_SPRITE.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_editor.OP_CLIENT_REQ_EDITOR_SYNC_SPRITE)\n                    return object;\n                var message = new $root.op_editor.OP_CLIENT_REQ_EDITOR_SYNC_SPRITE();\n                if (object.sprites) {\n                    if (!Array.isArray(object.sprites))\n                        throw TypeError(".op_editor.OP_CLIENT_REQ_EDITOR_SYNC_SPRITE.sprites: array expected");\n                    message.sprites = [];\n                    for (var i = 0; i < object.sprites.length; ++i) {\n                        if (typeof object.sprites[i] !== "object")\n                            throw TypeError(".op_editor.OP_CLIENT_REQ_EDITOR_SYNC_SPRITE.sprites: object expected");\n                        message.sprites[i] = $root.op_client.Sprite.fromObject(object.sprites[i]);\n                    }\n                }\n                switch (object.nodeType) {\n                case "UnknownNodeType":\n                case 0:\n                    message.nodeType = 0;\n                    break;\n                case "GameNodeType":\n                case 1:\n                    message.nodeType = 1;\n                    break;\n                case "SceneNodeType":\n                case 2:\n                    message.nodeType = 2;\n                    break;\n                case "ElementNodeType":\n                case 3:\n                    message.nodeType = 3;\n                    break;\n                case "TerrainNodeType":\n                case 4:\n                    message.nodeType = 4;\n                    break;\n                case "CharacterNodeType":\n                case 5:\n                    message.nodeType = 5;\n                    break;\n                case "LocationType":\n                case 6:\n                    message.nodeType = 6;\n                    break;\n                case "MovableType":\n                case 7:\n                    message.nodeType = 7;\n                    break;\n                case "DisplayType":\n                case 8:\n                    message.nodeType = 8;\n                    break;\n                case "AttributeType":\n                case 9:\n                    message.nodeType = 9;\n                    break;\n                case "FunctionType":\n                case 10:\n                    message.nodeType = 10;\n                    break;\n                case "AnimationsType":\n                case 11:\n                    message.nodeType = 11;\n                    break;\n                case "EventType":\n                case 12:\n                    message.nodeType = 12;\n                    break;\n                case "MapSizeType":\n                case 13:\n                    message.nodeType = 13;\n                    break;\n                case "UIType":\n                case 14:\n                    message.nodeType = 14;\n                    break;\n                case "TimerType":\n                case 15:\n                    message.nodeType = 15;\n                    break;\n                case "PackageType":\n                case 16:\n                    message.nodeType = 16;\n                    break;\n                case "PackageItemType":\n                case 17:\n                    message.nodeType = 17;\n                    break;\n                case "AvatarType":\n                case 18:\n                    message.nodeType = 18;\n                    break;\n                case "SettingsType":\n                case 19:\n                    message.nodeType = 19;\n                    break;\n                case "CampType":\n                case 20:\n                    message.nodeType = 20;\n                    break;\n                case "MutexType":\n                case 21:\n                    message.nodeType = 21;\n                    break;\n                case "AnimationDataType":\n                case 22:\n                    message.nodeType = 22;\n                    break;\n                case "ForkType":\n                case 23:\n                    message.nodeType = 23;\n                    break;\n                case "ButtonType":\n                case 24:\n                    message.nodeType = 24;\n                    break;\n                case "TextType":\n                case 25:\n                    message.nodeType = 25;\n                    break;\n                case "AccessType":\n                case 26:\n                    message.nodeType = 26;\n                    break;\n                case "SpawnPointType":\n                case 27:\n                    message.nodeType = 27;\n                    break;\n                case "CommodityType":\n                case 28:\n                    message.nodeType = 28;\n                    break;\n                case "ShopType":\n                case 29:\n                    message.nodeType = 29;\n                    break;\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_CLIENT_REQ_EDITOR_SYNC_SPRITE message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_SYNC_SPRITE\n             * @static\n             * @param {op_editor.OP_CLIENT_REQ_EDITOR_SYNC_SPRITE} message OP_CLIENT_REQ_EDITOR_SYNC_SPRITE\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_CLIENT_REQ_EDITOR_SYNC_SPRITE.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.sprites = [];\n                if (options.defaults)\n                    object.nodeType = options.enums === String ? "UnknownNodeType" : 0;\n                if (message.sprites && message.sprites.length) {\n                    object.sprites = [];\n                    for (var j = 0; j < message.sprites.length; ++j)\n                        object.sprites[j] = $root.op_client.Sprite.toObject(message.sprites[j], options);\n                }\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    object.nodeType = options.enums === String ? $root.op_def.NodeType[message.nodeType] : message.nodeType;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_CLIENT_REQ_EDITOR_SYNC_SPRITE to JSON.\n             * @function toJSON\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_SYNC_SPRITE\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_CLIENT_REQ_EDITOR_SYNC_SPRITE.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_CLIENT_REQ_EDITOR_SYNC_SPRITE;\n        })();\n    \n        op_editor.OP_CLIENT_REQ_EDITOR_DELETE_SPRITE = (function() {\n    \n            /**\n             * Properties of a OP_CLIENT_REQ_EDITOR_DELETE_SPRITE.\n             * @memberof op_editor\n             * @interface IOP_CLIENT_REQ_EDITOR_DELETE_SPRITE\n             * @property {Array.<number>|null} [ids] OP_CLIENT_REQ_EDITOR_DELETE_SPRITE ids\n             * @property {op_def.NodeType|null} [nodeType] OP_CLIENT_REQ_EDITOR_DELETE_SPRITE nodeType\n             */\n    \n            /**\n             * Constructs a new OP_CLIENT_REQ_EDITOR_DELETE_SPRITE.\n             * @memberof op_editor\n             * @classdesc Represents a OP_CLIENT_REQ_EDITOR_DELETE_SPRITE.\n             * @implements IOP_CLIENT_REQ_EDITOR_DELETE_SPRITE\n             * @constructor\n             * @param {op_editor.IOP_CLIENT_REQ_EDITOR_DELETE_SPRITE=} [properties] Properties to set\n             */\n            function OP_CLIENT_REQ_EDITOR_DELETE_SPRITE(properties) {\n                this.ids = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_CLIENT_REQ_EDITOR_DELETE_SPRITE ids.\n             * @member {Array.<number>} ids\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_DELETE_SPRITE\n             * @instance\n             */\n            OP_CLIENT_REQ_EDITOR_DELETE_SPRITE.prototype.ids = $util.emptyArray;\n    \n            /**\n             * OP_CLIENT_REQ_EDITOR_DELETE_SPRITE nodeType.\n             * @member {op_def.NodeType} nodeType\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_DELETE_SPRITE\n             * @instance\n             */\n            OP_CLIENT_REQ_EDITOR_DELETE_SPRITE.prototype.nodeType = 0;\n    \n            /**\n             * Creates a new OP_CLIENT_REQ_EDITOR_DELETE_SPRITE instance using the specified properties.\n             * @function create\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_DELETE_SPRITE\n             * @static\n             * @param {op_editor.IOP_CLIENT_REQ_EDITOR_DELETE_SPRITE=} [properties] Properties to set\n             * @returns {op_editor.OP_CLIENT_REQ_EDITOR_DELETE_SPRITE} OP_CLIENT_REQ_EDITOR_DELETE_SPRITE instance\n             */\n            OP_CLIENT_REQ_EDITOR_DELETE_SPRITE.create = function create(properties) {\n                return new OP_CLIENT_REQ_EDITOR_DELETE_SPRITE(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_EDITOR_DELETE_SPRITE message. Does not implicitly {@link op_editor.OP_CLIENT_REQ_EDITOR_DELETE_SPRITE.verify|verify} messages.\n             * @function encode\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_DELETE_SPRITE\n             * @static\n             * @param {op_editor.IOP_CLIENT_REQ_EDITOR_DELETE_SPRITE} message OP_CLIENT_REQ_EDITOR_DELETE_SPRITE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_EDITOR_DELETE_SPRITE.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.ids != null && message.ids.length)\n                    for (var i = 0; i < message.ids.length; ++i)\n                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ids[i]);\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nodeType);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_EDITOR_DELETE_SPRITE message, length delimited. Does not implicitly {@link op_editor.OP_CLIENT_REQ_EDITOR_DELETE_SPRITE.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_DELETE_SPRITE\n             * @static\n             * @param {op_editor.IOP_CLIENT_REQ_EDITOR_DELETE_SPRITE} message OP_CLIENT_REQ_EDITOR_DELETE_SPRITE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_EDITOR_DELETE_SPRITE.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_EDITOR_DELETE_SPRITE message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_DELETE_SPRITE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_editor.OP_CLIENT_REQ_EDITOR_DELETE_SPRITE} OP_CLIENT_REQ_EDITOR_DELETE_SPRITE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_EDITOR_DELETE_SPRITE.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_editor.OP_CLIENT_REQ_EDITOR_DELETE_SPRITE();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.ids && message.ids.length))\n                            message.ids = [];\n                        if ((tag & 7) === 2) {\n                            var end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2)\n                                message.ids.push(reader.int32());\n                        } else\n                            message.ids.push(reader.int32());\n                        break;\n                    case 2:\n                        message.nodeType = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_EDITOR_DELETE_SPRITE message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_DELETE_SPRITE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_editor.OP_CLIENT_REQ_EDITOR_DELETE_SPRITE} OP_CLIENT_REQ_EDITOR_DELETE_SPRITE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_EDITOR_DELETE_SPRITE.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_CLIENT_REQ_EDITOR_DELETE_SPRITE message.\n             * @function verify\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_DELETE_SPRITE\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_CLIENT_REQ_EDITOR_DELETE_SPRITE.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.ids != null && message.hasOwnProperty("ids")) {\n                    if (!Array.isArray(message.ids))\n                        return "ids: array expected";\n                    for (var i = 0; i < message.ids.length; ++i)\n                        if (!$util.isInteger(message.ids[i]))\n                            return "ids: integer[] expected";\n                }\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    switch (message.nodeType) {\n                    default:\n                        return "nodeType: enum value expected";\n                    case 0:\n                    case 1:\n                    case 2:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 9:\n                    case 10:\n                    case 11:\n                    case 12:\n                    case 13:\n                    case 14:\n                    case 15:\n                    case 16:\n                    case 17:\n                    case 18:\n                    case 19:\n                    case 20:\n                    case 21:\n                    case 22:\n                    case 23:\n                    case 24:\n                    case 25:\n                    case 26:\n                    case 27:\n                    case 28:\n                    case 29:\n                        break;\n                    }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_CLIENT_REQ_EDITOR_DELETE_SPRITE message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_DELETE_SPRITE\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_editor.OP_CLIENT_REQ_EDITOR_DELETE_SPRITE} OP_CLIENT_REQ_EDITOR_DELETE_SPRITE\n             */\n            OP_CLIENT_REQ_EDITOR_DELETE_SPRITE.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_editor.OP_CLIENT_REQ_EDITOR_DELETE_SPRITE)\n                    return object;\n                var message = new $root.op_editor.OP_CLIENT_REQ_EDITOR_DELETE_SPRITE();\n                if (object.ids) {\n                    if (!Array.isArray(object.ids))\n                        throw TypeError(".op_editor.OP_CLIENT_REQ_EDITOR_DELETE_SPRITE.ids: array expected");\n                    message.ids = [];\n                    for (var i = 0; i < object.ids.length; ++i)\n                        message.ids[i] = object.ids[i] | 0;\n                }\n                switch (object.nodeType) {\n                case "UnknownNodeType":\n                case 0:\n                    message.nodeType = 0;\n                    break;\n                case "GameNodeType":\n                case 1:\n                    message.nodeType = 1;\n                    break;\n                case "SceneNodeType":\n                case 2:\n                    message.nodeType = 2;\n                    break;\n                case "ElementNodeType":\n                case 3:\n                    message.nodeType = 3;\n                    break;\n                case "TerrainNodeType":\n                case 4:\n                    message.nodeType = 4;\n                    break;\n                case "CharacterNodeType":\n                case 5:\n                    message.nodeType = 5;\n                    break;\n                case "LocationType":\n                case 6:\n                    message.nodeType = 6;\n                    break;\n                case "MovableType":\n                case 7:\n                    message.nodeType = 7;\n                    break;\n                case "DisplayType":\n                case 8:\n                    message.nodeType = 8;\n                    break;\n                case "AttributeType":\n                case 9:\n                    message.nodeType = 9;\n                    break;\n                case "FunctionType":\n                case 10:\n                    message.nodeType = 10;\n                    break;\n                case "AnimationsType":\n                case 11:\n                    message.nodeType = 11;\n                    break;\n                case "EventType":\n                case 12:\n                    message.nodeType = 12;\n                    break;\n                case "MapSizeType":\n                case 13:\n                    message.nodeType = 13;\n                    break;\n                case "UIType":\n                case 14:\n                    message.nodeType = 14;\n                    break;\n                case "TimerType":\n                case 15:\n                    message.nodeType = 15;\n                    break;\n                case "PackageType":\n                case 16:\n                    message.nodeType = 16;\n                    break;\n                case "PackageItemType":\n                case 17:\n                    message.nodeType = 17;\n                    break;\n                case "AvatarType":\n                case 18:\n                    message.nodeType = 18;\n                    break;\n                case "SettingsType":\n                case 19:\n                    message.nodeType = 19;\n                    break;\n                case "CampType":\n                case 20:\n                    message.nodeType = 20;\n                    break;\n                case "MutexType":\n                case 21:\n                    message.nodeType = 21;\n                    break;\n                case "AnimationDataType":\n                case 22:\n                    message.nodeType = 22;\n                    break;\n                case "ForkType":\n                case 23:\n                    message.nodeType = 23;\n                    break;\n                case "ButtonType":\n                case 24:\n                    message.nodeType = 24;\n                    break;\n                case "TextType":\n                case 25:\n                    message.nodeType = 25;\n                    break;\n                case "AccessType":\n                case 26:\n                    message.nodeType = 26;\n                    break;\n                case "SpawnPointType":\n                case 27:\n                    message.nodeType = 27;\n                    break;\n                case "CommodityType":\n                case 28:\n                    message.nodeType = 28;\n                    break;\n                case "ShopType":\n                case 29:\n                    message.nodeType = 29;\n                    break;\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_CLIENT_REQ_EDITOR_DELETE_SPRITE message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_DELETE_SPRITE\n             * @static\n             * @param {op_editor.OP_CLIENT_REQ_EDITOR_DELETE_SPRITE} message OP_CLIENT_REQ_EDITOR_DELETE_SPRITE\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_CLIENT_REQ_EDITOR_DELETE_SPRITE.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.ids = [];\n                if (options.defaults)\n                    object.nodeType = options.enums === String ? "UnknownNodeType" : 0;\n                if (message.ids && message.ids.length) {\n                    object.ids = [];\n                    for (var j = 0; j < message.ids.length; ++j)\n                        object.ids[j] = message.ids[j];\n                }\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    object.nodeType = options.enums === String ? $root.op_def.NodeType[message.nodeType] : message.nodeType;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_CLIENT_REQ_EDITOR_DELETE_SPRITE to JSON.\n             * @function toJSON\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_DELETE_SPRITE\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_CLIENT_REQ_EDITOR_DELETE_SPRITE.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_CLIENT_REQ_EDITOR_DELETE_SPRITE;\n        })();\n    \n        op_editor.OP_CLIENT_REQ_EDITOR_RESET_CAMERA = (function() {\n    \n            /**\n             * Properties of a OP_CLIENT_REQ_EDITOR_RESET_CAMERA.\n             * @memberof op_editor\n             * @interface IOP_CLIENT_REQ_EDITOR_RESET_CAMERA\n             * @property {number|null} [x] OP_CLIENT_REQ_EDITOR_RESET_CAMERA x\n             * @property {number|null} [y] OP_CLIENT_REQ_EDITOR_RESET_CAMERA y\n             * @property {number|null} [width] OP_CLIENT_REQ_EDITOR_RESET_CAMERA width\n             * @property {number|null} [height] OP_CLIENT_REQ_EDITOR_RESET_CAMERA height\n             */\n    \n            /**\n             * Constructs a new OP_CLIENT_REQ_EDITOR_RESET_CAMERA.\n             * @memberof op_editor\n             * @classdesc Represents a OP_CLIENT_REQ_EDITOR_RESET_CAMERA.\n             * @implements IOP_CLIENT_REQ_EDITOR_RESET_CAMERA\n             * @constructor\n             * @param {op_editor.IOP_CLIENT_REQ_EDITOR_RESET_CAMERA=} [properties] Properties to set\n             */\n            function OP_CLIENT_REQ_EDITOR_RESET_CAMERA(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_CLIENT_REQ_EDITOR_RESET_CAMERA x.\n             * @member {number} x\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_RESET_CAMERA\n             * @instance\n             */\n            OP_CLIENT_REQ_EDITOR_RESET_CAMERA.prototype.x = 0;\n    \n            /**\n             * OP_CLIENT_REQ_EDITOR_RESET_CAMERA y.\n             * @member {number} y\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_RESET_CAMERA\n             * @instance\n             */\n            OP_CLIENT_REQ_EDITOR_RESET_CAMERA.prototype.y = 0;\n    \n            /**\n             * OP_CLIENT_REQ_EDITOR_RESET_CAMERA width.\n             * @member {number} width\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_RESET_CAMERA\n             * @instance\n             */\n            OP_CLIENT_REQ_EDITOR_RESET_CAMERA.prototype.width = 0;\n    \n            /**\n             * OP_CLIENT_REQ_EDITOR_RESET_CAMERA height.\n             * @member {number} height\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_RESET_CAMERA\n             * @instance\n             */\n            OP_CLIENT_REQ_EDITOR_RESET_CAMERA.prototype.height = 0;\n    \n            /**\n             * Creates a new OP_CLIENT_REQ_EDITOR_RESET_CAMERA instance using the specified properties.\n             * @function create\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_RESET_CAMERA\n             * @static\n             * @param {op_editor.IOP_CLIENT_REQ_EDITOR_RESET_CAMERA=} [properties] Properties to set\n             * @returns {op_editor.OP_CLIENT_REQ_EDITOR_RESET_CAMERA} OP_CLIENT_REQ_EDITOR_RESET_CAMERA instance\n             */\n            OP_CLIENT_REQ_EDITOR_RESET_CAMERA.create = function create(properties) {\n                return new OP_CLIENT_REQ_EDITOR_RESET_CAMERA(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_EDITOR_RESET_CAMERA message. Does not implicitly {@link op_editor.OP_CLIENT_REQ_EDITOR_RESET_CAMERA.verify|verify} messages.\n             * @function encode\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_RESET_CAMERA\n             * @static\n             * @param {op_editor.IOP_CLIENT_REQ_EDITOR_RESET_CAMERA} message OP_CLIENT_REQ_EDITOR_RESET_CAMERA message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_EDITOR_RESET_CAMERA.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.x != null && message.hasOwnProperty("x"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.x);\n                if (message.y != null && message.hasOwnProperty("y"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.y);\n                if (message.width != null && message.hasOwnProperty("width"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.width);\n                if (message.height != null && message.hasOwnProperty("height"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.height);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_EDITOR_RESET_CAMERA message, length delimited. Does not implicitly {@link op_editor.OP_CLIENT_REQ_EDITOR_RESET_CAMERA.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_RESET_CAMERA\n             * @static\n             * @param {op_editor.IOP_CLIENT_REQ_EDITOR_RESET_CAMERA} message OP_CLIENT_REQ_EDITOR_RESET_CAMERA message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_EDITOR_RESET_CAMERA.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_EDITOR_RESET_CAMERA message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_RESET_CAMERA\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_editor.OP_CLIENT_REQ_EDITOR_RESET_CAMERA} OP_CLIENT_REQ_EDITOR_RESET_CAMERA\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_EDITOR_RESET_CAMERA.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_editor.OP_CLIENT_REQ_EDITOR_RESET_CAMERA();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.x = reader.int32();\n                        break;\n                    case 2:\n                        message.y = reader.int32();\n                        break;\n                    case 3:\n                        message.width = reader.int32();\n                        break;\n                    case 4:\n                        message.height = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_EDITOR_RESET_CAMERA message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_RESET_CAMERA\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_editor.OP_CLIENT_REQ_EDITOR_RESET_CAMERA} OP_CLIENT_REQ_EDITOR_RESET_CAMERA\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_EDITOR_RESET_CAMERA.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_CLIENT_REQ_EDITOR_RESET_CAMERA message.\n             * @function verify\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_RESET_CAMERA\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_CLIENT_REQ_EDITOR_RESET_CAMERA.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.x != null && message.hasOwnProperty("x"))\n                    if (!$util.isInteger(message.x))\n                        return "x: integer expected";\n                if (message.y != null && message.hasOwnProperty("y"))\n                    if (!$util.isInteger(message.y))\n                        return "y: integer expected";\n                if (message.width != null && message.hasOwnProperty("width"))\n                    if (!$util.isInteger(message.width))\n                        return "width: integer expected";\n                if (message.height != null && message.hasOwnProperty("height"))\n                    if (!$util.isInteger(message.height))\n                        return "height: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_CLIENT_REQ_EDITOR_RESET_CAMERA message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_RESET_CAMERA\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_editor.OP_CLIENT_REQ_EDITOR_RESET_CAMERA} OP_CLIENT_REQ_EDITOR_RESET_CAMERA\n             */\n            OP_CLIENT_REQ_EDITOR_RESET_CAMERA.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_editor.OP_CLIENT_REQ_EDITOR_RESET_CAMERA)\n                    return object;\n                var message = new $root.op_editor.OP_CLIENT_REQ_EDITOR_RESET_CAMERA();\n                if (object.x != null)\n                    message.x = object.x | 0;\n                if (object.y != null)\n                    message.y = object.y | 0;\n                if (object.width != null)\n                    message.width = object.width | 0;\n                if (object.height != null)\n                    message.height = object.height | 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_CLIENT_REQ_EDITOR_RESET_CAMERA message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_RESET_CAMERA\n             * @static\n             * @param {op_editor.OP_CLIENT_REQ_EDITOR_RESET_CAMERA} message OP_CLIENT_REQ_EDITOR_RESET_CAMERA\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_CLIENT_REQ_EDITOR_RESET_CAMERA.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.x = 0;\n                    object.y = 0;\n                    object.width = 0;\n                    object.height = 0;\n                }\n                if (message.x != null && message.hasOwnProperty("x"))\n                    object.x = message.x;\n                if (message.y != null && message.hasOwnProperty("y"))\n                    object.y = message.y;\n                if (message.width != null && message.hasOwnProperty("width"))\n                    object.width = message.width;\n                if (message.height != null && message.hasOwnProperty("height"))\n                    object.height = message.height;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_CLIENT_REQ_EDITOR_RESET_CAMERA to JSON.\n             * @function toJSON\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_RESET_CAMERA\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_CLIENT_REQ_EDITOR_RESET_CAMERA.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_CLIENT_REQ_EDITOR_RESET_CAMERA;\n        })();\n    \n        op_editor.OP_CLIENT_REQ_EDITOR_FETCH_SPRITE = (function() {\n    \n            /**\n             * Properties of a OP_CLIENT_REQ_EDITOR_FETCH_SPRITE.\n             * @memberof op_editor\n             * @interface IOP_CLIENT_REQ_EDITOR_FETCH_SPRITE\n             * @property {Array.<number>|null} [ids] OP_CLIENT_REQ_EDITOR_FETCH_SPRITE ids\n             * @property {op_def.NodeType|null} [nodeType] OP_CLIENT_REQ_EDITOR_FETCH_SPRITE nodeType\n             */\n    \n            /**\n             * Constructs a new OP_CLIENT_REQ_EDITOR_FETCH_SPRITE.\n             * @memberof op_editor\n             * @classdesc Represents a OP_CLIENT_REQ_EDITOR_FETCH_SPRITE.\n             * @implements IOP_CLIENT_REQ_EDITOR_FETCH_SPRITE\n             * @constructor\n             * @param {op_editor.IOP_CLIENT_REQ_EDITOR_FETCH_SPRITE=} [properties] Properties to set\n             */\n            function OP_CLIENT_REQ_EDITOR_FETCH_SPRITE(properties) {\n                this.ids = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_CLIENT_REQ_EDITOR_FETCH_SPRITE ids.\n             * @member {Array.<number>} ids\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_FETCH_SPRITE\n             * @instance\n             */\n            OP_CLIENT_REQ_EDITOR_FETCH_SPRITE.prototype.ids = $util.emptyArray;\n    \n            /**\n             * OP_CLIENT_REQ_EDITOR_FETCH_SPRITE nodeType.\n             * @member {op_def.NodeType} nodeType\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_FETCH_SPRITE\n             * @instance\n             */\n            OP_CLIENT_REQ_EDITOR_FETCH_SPRITE.prototype.nodeType = 0;\n    \n            /**\n             * Creates a new OP_CLIENT_REQ_EDITOR_FETCH_SPRITE instance using the specified properties.\n             * @function create\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_FETCH_SPRITE\n             * @static\n             * @param {op_editor.IOP_CLIENT_REQ_EDITOR_FETCH_SPRITE=} [properties] Properties to set\n             * @returns {op_editor.OP_CLIENT_REQ_EDITOR_FETCH_SPRITE} OP_CLIENT_REQ_EDITOR_FETCH_SPRITE instance\n             */\n            OP_CLIENT_REQ_EDITOR_FETCH_SPRITE.create = function create(properties) {\n                return new OP_CLIENT_REQ_EDITOR_FETCH_SPRITE(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_EDITOR_FETCH_SPRITE message. Does not implicitly {@link op_editor.OP_CLIENT_REQ_EDITOR_FETCH_SPRITE.verify|verify} messages.\n             * @function encode\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_FETCH_SPRITE\n             * @static\n             * @param {op_editor.IOP_CLIENT_REQ_EDITOR_FETCH_SPRITE} message OP_CLIENT_REQ_EDITOR_FETCH_SPRITE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_EDITOR_FETCH_SPRITE.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.ids != null && message.ids.length)\n                    for (var i = 0; i < message.ids.length; ++i)\n                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ids[i]);\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nodeType);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_EDITOR_FETCH_SPRITE message, length delimited. Does not implicitly {@link op_editor.OP_CLIENT_REQ_EDITOR_FETCH_SPRITE.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_FETCH_SPRITE\n             * @static\n             * @param {op_editor.IOP_CLIENT_REQ_EDITOR_FETCH_SPRITE} message OP_CLIENT_REQ_EDITOR_FETCH_SPRITE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_EDITOR_FETCH_SPRITE.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_EDITOR_FETCH_SPRITE message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_FETCH_SPRITE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_editor.OP_CLIENT_REQ_EDITOR_FETCH_SPRITE} OP_CLIENT_REQ_EDITOR_FETCH_SPRITE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_EDITOR_FETCH_SPRITE.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_editor.OP_CLIENT_REQ_EDITOR_FETCH_SPRITE();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.ids && message.ids.length))\n                            message.ids = [];\n                        if ((tag & 7) === 2) {\n                            var end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2)\n                                message.ids.push(reader.int32());\n                        } else\n                            message.ids.push(reader.int32());\n                        break;\n                    case 2:\n                        message.nodeType = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_EDITOR_FETCH_SPRITE message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_FETCH_SPRITE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_editor.OP_CLIENT_REQ_EDITOR_FETCH_SPRITE} OP_CLIENT_REQ_EDITOR_FETCH_SPRITE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_EDITOR_FETCH_SPRITE.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_CLIENT_REQ_EDITOR_FETCH_SPRITE message.\n             * @function verify\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_FETCH_SPRITE\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_CLIENT_REQ_EDITOR_FETCH_SPRITE.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.ids != null && message.hasOwnProperty("ids")) {\n                    if (!Array.isArray(message.ids))\n                        return "ids: array expected";\n                    for (var i = 0; i < message.ids.length; ++i)\n                        if (!$util.isInteger(message.ids[i]))\n                            return "ids: integer[] expected";\n                }\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    switch (message.nodeType) {\n                    default:\n                        return "nodeType: enum value expected";\n                    case 0:\n                    case 1:\n                    case 2:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 9:\n                    case 10:\n                    case 11:\n                    case 12:\n                    case 13:\n                    case 14:\n                    case 15:\n                    case 16:\n                    case 17:\n                    case 18:\n                    case 19:\n                    case 20:\n                    case 21:\n                    case 22:\n                    case 23:\n                    case 24:\n                    case 25:\n                    case 26:\n                    case 27:\n                    case 28:\n                    case 29:\n                        break;\n                    }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_CLIENT_REQ_EDITOR_FETCH_SPRITE message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_FETCH_SPRITE\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_editor.OP_CLIENT_REQ_EDITOR_FETCH_SPRITE} OP_CLIENT_REQ_EDITOR_FETCH_SPRITE\n             */\n            OP_CLIENT_REQ_EDITOR_FETCH_SPRITE.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_editor.OP_CLIENT_REQ_EDITOR_FETCH_SPRITE)\n                    return object;\n                var message = new $root.op_editor.OP_CLIENT_REQ_EDITOR_FETCH_SPRITE();\n                if (object.ids) {\n                    if (!Array.isArray(object.ids))\n                        throw TypeError(".op_editor.OP_CLIENT_REQ_EDITOR_FETCH_SPRITE.ids: array expected");\n                    message.ids = [];\n                    for (var i = 0; i < object.ids.length; ++i)\n                        message.ids[i] = object.ids[i] | 0;\n                }\n                switch (object.nodeType) {\n                case "UnknownNodeType":\n                case 0:\n                    message.nodeType = 0;\n                    break;\n                case "GameNodeType":\n                case 1:\n                    message.nodeType = 1;\n                    break;\n                case "SceneNodeType":\n                case 2:\n                    message.nodeType = 2;\n                    break;\n                case "ElementNodeType":\n                case 3:\n                    message.nodeType = 3;\n                    break;\n                case "TerrainNodeType":\n                case 4:\n                    message.nodeType = 4;\n                    break;\n                case "CharacterNodeType":\n                case 5:\n                    message.nodeType = 5;\n                    break;\n                case "LocationType":\n                case 6:\n                    message.nodeType = 6;\n                    break;\n                case "MovableType":\n                case 7:\n                    message.nodeType = 7;\n                    break;\n                case "DisplayType":\n                case 8:\n                    message.nodeType = 8;\n                    break;\n                case "AttributeType":\n                case 9:\n                    message.nodeType = 9;\n                    break;\n                case "FunctionType":\n                case 10:\n                    message.nodeType = 10;\n                    break;\n                case "AnimationsType":\n                case 11:\n                    message.nodeType = 11;\n                    break;\n                case "EventType":\n                case 12:\n                    message.nodeType = 12;\n                    break;\n                case "MapSizeType":\n                case 13:\n                    message.nodeType = 13;\n                    break;\n                case "UIType":\n                case 14:\n                    message.nodeType = 14;\n                    break;\n                case "TimerType":\n                case 15:\n                    message.nodeType = 15;\n                    break;\n                case "PackageType":\n                case 16:\n                    message.nodeType = 16;\n                    break;\n                case "PackageItemType":\n                case 17:\n                    message.nodeType = 17;\n                    break;\n                case "AvatarType":\n                case 18:\n                    message.nodeType = 18;\n                    break;\n                case "SettingsType":\n                case 19:\n                    message.nodeType = 19;\n                    break;\n                case "CampType":\n                case 20:\n                    message.nodeType = 20;\n                    break;\n                case "MutexType":\n                case 21:\n                    message.nodeType = 21;\n                    break;\n                case "AnimationDataType":\n                case 22:\n                    message.nodeType = 22;\n                    break;\n                case "ForkType":\n                case 23:\n                    message.nodeType = 23;\n                    break;\n                case "ButtonType":\n                case 24:\n                    message.nodeType = 24;\n                    break;\n                case "TextType":\n                case 25:\n                    message.nodeType = 25;\n                    break;\n                case "AccessType":\n                case 26:\n                    message.nodeType = 26;\n                    break;\n                case "SpawnPointType":\n                case 27:\n                    message.nodeType = 27;\n                    break;\n                case "CommodityType":\n                case 28:\n                    message.nodeType = 28;\n                    break;\n                case "ShopType":\n                case 29:\n                    message.nodeType = 29;\n                    break;\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_CLIENT_REQ_EDITOR_FETCH_SPRITE message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_FETCH_SPRITE\n             * @static\n             * @param {op_editor.OP_CLIENT_REQ_EDITOR_FETCH_SPRITE} message OP_CLIENT_REQ_EDITOR_FETCH_SPRITE\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_CLIENT_REQ_EDITOR_FETCH_SPRITE.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.ids = [];\n                if (options.defaults)\n                    object.nodeType = options.enums === String ? "UnknownNodeType" : 0;\n                if (message.ids && message.ids.length) {\n                    object.ids = [];\n                    for (var j = 0; j < message.ids.length; ++j)\n                        object.ids[j] = message.ids[j];\n                }\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    object.nodeType = options.enums === String ? $root.op_def.NodeType[message.nodeType] : message.nodeType;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_CLIENT_REQ_EDITOR_FETCH_SPRITE to JSON.\n             * @function toJSON\n             * @memberof op_editor.OP_CLIENT_REQ_EDITOR_FETCH_SPRITE\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_CLIENT_REQ_EDITOR_FETCH_SPRITE.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_CLIENT_REQ_EDITOR_FETCH_SPRITE;\n        })();\n    \n        return op_editor;\n    })();\n    \n    $root.op_galaxy = (function() {\n    \n        /**\n         * Namespace op_galaxy.\n         * @exports op_galaxy\n         * @namespace\n         */\n        var op_galaxy = {};\n    \n        /**\n         * OPCODE enum.\n         * @name op_galaxy.OPCODE\n         * @enum {string}\n         * @property {number} OP_MAJOR=17 OP_MAJOR value\n         * @property {number} _OP_UNKNOWN=0 _OP_UNKNOWN value\n         * @property {number} _OP_COP_REQ_GALAXY_START_NEW_WORLD=1118209 _OP_COP_REQ_GALAXY_START_NEW_WORLD value\n         * @property {number} _OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD=1118211 _OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD value\n         * @property {number} _OP_WORLD_REQ_GALAXY_INFO_UPDATE=1114113 _OP_WORLD_REQ_GALAXY_INFO_UPDATE value\n         * @property {number} _OP_COP_RES_GALAXY_INIT=1114114 _OP_COP_RES_GALAXY_INIT value\n         * @property {number} _OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT=1114116 _OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT value\n         * @property {number} _OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS=1114118 _OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS value\n         */\n        op_galaxy.OPCODE = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[17] = "OP_MAJOR"] = 17;\n            values[valuesById[0] = "_OP_UNKNOWN"] = 0;\n            values[valuesById[1118209] = "_OP_COP_REQ_GALAXY_START_NEW_WORLD"] = 1118209;\n            values[valuesById[1118211] = "_OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD"] = 1118211;\n            values[valuesById[1114113] = "_OP_WORLD_REQ_GALAXY_INFO_UPDATE"] = 1114113;\n            values[valuesById[1114114] = "_OP_COP_RES_GALAXY_INIT"] = 1114114;\n            values[valuesById[1114116] = "_OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT"] = 1114116;\n            values[valuesById[1114118] = "_OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS"] = 1114118;\n            return values;\n        })();\n    \n        op_galaxy.OP_COP_REQ_GALAXY_START_NEW_WORLD = (function() {\n    \n            /**\n             * Properties of a OP_COP_REQ_GALAXY_START_NEW_WORLD.\n             * @memberof op_galaxy\n             * @interface IOP_COP_REQ_GALAXY_START_NEW_WORLD\n             * @property {string} gameId OP_COP_REQ_GALAXY_START_NEW_WORLD gameId\n             * @property {string|null} [userToken] OP_COP_REQ_GALAXY_START_NEW_WORLD userToken\n             */\n    \n            /**\n             * Constructs a new OP_COP_REQ_GALAXY_START_NEW_WORLD.\n             * @memberof op_galaxy\n             * @classdesc Represents a OP_COP_REQ_GALAXY_START_NEW_WORLD.\n             * @implements IOP_COP_REQ_GALAXY_START_NEW_WORLD\n             * @constructor\n             * @param {op_galaxy.IOP_COP_REQ_GALAXY_START_NEW_WORLD=} [properties] Properties to set\n             */\n            function OP_COP_REQ_GALAXY_START_NEW_WORLD(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_COP_REQ_GALAXY_START_NEW_WORLD gameId.\n             * @member {string} gameId\n             * @memberof op_galaxy.OP_COP_REQ_GALAXY_START_NEW_WORLD\n             * @instance\n             */\n            OP_COP_REQ_GALAXY_START_NEW_WORLD.prototype.gameId = "";\n    \n            /**\n             * OP_COP_REQ_GALAXY_START_NEW_WORLD userToken.\n             * @member {string} userToken\n             * @memberof op_galaxy.OP_COP_REQ_GALAXY_START_NEW_WORLD\n             * @instance\n             */\n            OP_COP_REQ_GALAXY_START_NEW_WORLD.prototype.userToken = "";\n    \n            /**\n             * Creates a new OP_COP_REQ_GALAXY_START_NEW_WORLD instance using the specified properties.\n             * @function create\n             * @memberof op_galaxy.OP_COP_REQ_GALAXY_START_NEW_WORLD\n             * @static\n             * @param {op_galaxy.IOP_COP_REQ_GALAXY_START_NEW_WORLD=} [properties] Properties to set\n             * @returns {op_galaxy.OP_COP_REQ_GALAXY_START_NEW_WORLD} OP_COP_REQ_GALAXY_START_NEW_WORLD instance\n             */\n            OP_COP_REQ_GALAXY_START_NEW_WORLD.create = function create(properties) {\n                return new OP_COP_REQ_GALAXY_START_NEW_WORLD(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_COP_REQ_GALAXY_START_NEW_WORLD message. Does not implicitly {@link op_galaxy.OP_COP_REQ_GALAXY_START_NEW_WORLD.verify|verify} messages.\n             * @function encode\n             * @memberof op_galaxy.OP_COP_REQ_GALAXY_START_NEW_WORLD\n             * @static\n             * @param {op_galaxy.IOP_COP_REQ_GALAXY_START_NEW_WORLD} message OP_COP_REQ_GALAXY_START_NEW_WORLD message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_COP_REQ_GALAXY_START_NEW_WORLD.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.gameId);\n                if (message.userToken != null && message.hasOwnProperty("userToken"))\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.userToken);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_COP_REQ_GALAXY_START_NEW_WORLD message, length delimited. Does not implicitly {@link op_galaxy.OP_COP_REQ_GALAXY_START_NEW_WORLD.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_galaxy.OP_COP_REQ_GALAXY_START_NEW_WORLD\n             * @static\n             * @param {op_galaxy.IOP_COP_REQ_GALAXY_START_NEW_WORLD} message OP_COP_REQ_GALAXY_START_NEW_WORLD message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_COP_REQ_GALAXY_START_NEW_WORLD.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_COP_REQ_GALAXY_START_NEW_WORLD message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_galaxy.OP_COP_REQ_GALAXY_START_NEW_WORLD\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_galaxy.OP_COP_REQ_GALAXY_START_NEW_WORLD} OP_COP_REQ_GALAXY_START_NEW_WORLD\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_COP_REQ_GALAXY_START_NEW_WORLD.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_galaxy.OP_COP_REQ_GALAXY_START_NEW_WORLD();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.gameId = reader.string();\n                        break;\n                    case 2:\n                        message.userToken = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("gameId"))\n                    throw $util.ProtocolError("missing required \'gameId\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_COP_REQ_GALAXY_START_NEW_WORLD message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_galaxy.OP_COP_REQ_GALAXY_START_NEW_WORLD\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_galaxy.OP_COP_REQ_GALAXY_START_NEW_WORLD} OP_COP_REQ_GALAXY_START_NEW_WORLD\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_COP_REQ_GALAXY_START_NEW_WORLD.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_COP_REQ_GALAXY_START_NEW_WORLD message.\n             * @function verify\n             * @memberof op_galaxy.OP_COP_REQ_GALAXY_START_NEW_WORLD\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_COP_REQ_GALAXY_START_NEW_WORLD.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.gameId))\n                    return "gameId: string expected";\n                if (message.userToken != null && message.hasOwnProperty("userToken"))\n                    if (!$util.isString(message.userToken))\n                        return "userToken: string expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_COP_REQ_GALAXY_START_NEW_WORLD message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_galaxy.OP_COP_REQ_GALAXY_START_NEW_WORLD\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_galaxy.OP_COP_REQ_GALAXY_START_NEW_WORLD} OP_COP_REQ_GALAXY_START_NEW_WORLD\n             */\n            OP_COP_REQ_GALAXY_START_NEW_WORLD.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_galaxy.OP_COP_REQ_GALAXY_START_NEW_WORLD)\n                    return object;\n                var message = new $root.op_galaxy.OP_COP_REQ_GALAXY_START_NEW_WORLD();\n                if (object.gameId != null)\n                    message.gameId = String(object.gameId);\n                if (object.userToken != null)\n                    message.userToken = String(object.userToken);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_COP_REQ_GALAXY_START_NEW_WORLD message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_galaxy.OP_COP_REQ_GALAXY_START_NEW_WORLD\n             * @static\n             * @param {op_galaxy.OP_COP_REQ_GALAXY_START_NEW_WORLD} message OP_COP_REQ_GALAXY_START_NEW_WORLD\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_COP_REQ_GALAXY_START_NEW_WORLD.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.gameId = "";\n                    object.userToken = "";\n                }\n                if (message.gameId != null && message.hasOwnProperty("gameId"))\n                    object.gameId = message.gameId;\n                if (message.userToken != null && message.hasOwnProperty("userToken"))\n                    object.userToken = message.userToken;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_COP_REQ_GALAXY_START_NEW_WORLD to JSON.\n             * @function toJSON\n             * @memberof op_galaxy.OP_COP_REQ_GALAXY_START_NEW_WORLD\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_COP_REQ_GALAXY_START_NEW_WORLD.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_COP_REQ_GALAXY_START_NEW_WORLD;\n        })();\n    \n        op_galaxy.OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD = (function() {\n    \n            /**\n             * Properties of a OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD.\n             * @memberof op_galaxy\n             * @interface IOP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD\n             * @property {string} gameId OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD gameId\n             * @property {string|null} [userToken] OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD userToken\n             * @property {string|null} [worldUuid] OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD worldUuid\n             * @property {string|null} [expire] OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD expire\n             * @property {string|null} [fingerprint] OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD fingerprint\n             * @property {number|null} [gatewayUuid] OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD gatewayUuid\n             * @property {number|null} [newVirtualWorldUuid] OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD newVirtualWorldUuid\n             */\n    \n            /**\n             * Constructs a new OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD.\n             * @memberof op_galaxy\n             * @classdesc Represents a OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD.\n             * @implements IOP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD\n             * @constructor\n             * @param {op_galaxy.IOP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD=} [properties] Properties to set\n             */\n            function OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD gameId.\n             * @member {string} gameId\n             * @memberof op_galaxy.OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD\n             * @instance\n             */\n            OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD.prototype.gameId = "";\n    \n            /**\n             * OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD userToken.\n             * @member {string} userToken\n             * @memberof op_galaxy.OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD\n             * @instance\n             */\n            OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD.prototype.userToken = "";\n    \n            /**\n             * OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD worldUuid.\n             * @member {string} worldUuid\n             * @memberof op_galaxy.OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD\n             * @instance\n             */\n            OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD.prototype.worldUuid = "";\n    \n            /**\n             * OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD expire.\n             * @member {string} expire\n             * @memberof op_galaxy.OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD\n             * @instance\n             */\n            OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD.prototype.expire = "";\n    \n            /**\n             * OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD fingerprint.\n             * @member {string} fingerprint\n             * @memberof op_galaxy.OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD\n             * @instance\n             */\n            OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD.prototype.fingerprint = "";\n    \n            /**\n             * OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD gatewayUuid.\n             * @member {number} gatewayUuid\n             * @memberof op_galaxy.OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD\n             * @instance\n             */\n            OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD.prototype.gatewayUuid = 0;\n    \n            /**\n             * OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD newVirtualWorldUuid.\n             * @member {number} newVirtualWorldUuid\n             * @memberof op_galaxy.OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD\n             * @instance\n             */\n            OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD.prototype.newVirtualWorldUuid = 0;\n    \n            /**\n             * Creates a new OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD instance using the specified properties.\n             * @function create\n             * @memberof op_galaxy.OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD\n             * @static\n             * @param {op_galaxy.IOP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD=} [properties] Properties to set\n             * @returns {op_galaxy.OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD} OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD instance\n             */\n            OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD.create = function create(properties) {\n                return new OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD message. Does not implicitly {@link op_galaxy.OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD.verify|verify} messages.\n             * @function encode\n             * @memberof op_galaxy.OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD\n             * @static\n             * @param {op_galaxy.IOP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD} message OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.gameId);\n                if (message.userToken != null && message.hasOwnProperty("userToken"))\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.userToken);\n                if (message.worldUuid != null && message.hasOwnProperty("worldUuid"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.worldUuid);\n                if (message.expire != null && message.hasOwnProperty("expire"))\n                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.expire);\n                if (message.fingerprint != null && message.hasOwnProperty("fingerprint"))\n                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.fingerprint);\n                if (message.gatewayUuid != null && message.hasOwnProperty("gatewayUuid"))\n                    writer.uint32(/* id 6, wireType 0 =*/48).int32(message.gatewayUuid);\n                if (message.newVirtualWorldUuid != null && message.hasOwnProperty("newVirtualWorldUuid"))\n                    writer.uint32(/* id 7, wireType 0 =*/56).int32(message.newVirtualWorldUuid);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD message, length delimited. Does not implicitly {@link op_galaxy.OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_galaxy.OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD\n             * @static\n             * @param {op_galaxy.IOP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD} message OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_galaxy.OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_galaxy.OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD} OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_galaxy.OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.gameId = reader.string();\n                        break;\n                    case 2:\n                        message.userToken = reader.string();\n                        break;\n                    case 3:\n                        message.worldUuid = reader.string();\n                        break;\n                    case 4:\n                        message.expire = reader.string();\n                        break;\n                    case 5:\n                        message.fingerprint = reader.string();\n                        break;\n                    case 6:\n                        message.gatewayUuid = reader.int32();\n                        break;\n                    case 7:\n                        message.newVirtualWorldUuid = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("gameId"))\n                    throw $util.ProtocolError("missing required \'gameId\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_galaxy.OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_galaxy.OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD} OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD message.\n             * @function verify\n             * @memberof op_galaxy.OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.gameId))\n                    return "gameId: string expected";\n                if (message.userToken != null && message.hasOwnProperty("userToken"))\n                    if (!$util.isString(message.userToken))\n                        return "userToken: string expected";\n                if (message.worldUuid != null && message.hasOwnProperty("worldUuid"))\n                    if (!$util.isString(message.worldUuid))\n                        return "worldUuid: string expected";\n                if (message.expire != null && message.hasOwnProperty("expire"))\n                    if (!$util.isString(message.expire))\n                        return "expire: string expected";\n                if (message.fingerprint != null && message.hasOwnProperty("fingerprint"))\n                    if (!$util.isString(message.fingerprint))\n                        return "fingerprint: string expected";\n                if (message.gatewayUuid != null && message.hasOwnProperty("gatewayUuid"))\n                    if (!$util.isInteger(message.gatewayUuid))\n                        return "gatewayUuid: integer expected";\n                if (message.newVirtualWorldUuid != null && message.hasOwnProperty("newVirtualWorldUuid"))\n                    if (!$util.isInteger(message.newVirtualWorldUuid))\n                        return "newVirtualWorldUuid: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_galaxy.OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_galaxy.OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD} OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD\n             */\n            OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_galaxy.OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD)\n                    return object;\n                var message = new $root.op_galaxy.OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD();\n                if (object.gameId != null)\n                    message.gameId = String(object.gameId);\n                if (object.userToken != null)\n                    message.userToken = String(object.userToken);\n                if (object.worldUuid != null)\n                    message.worldUuid = String(object.worldUuid);\n                if (object.expire != null)\n                    message.expire = String(object.expire);\n                if (object.fingerprint != null)\n                    message.fingerprint = String(object.fingerprint);\n                if (object.gatewayUuid != null)\n                    message.gatewayUuid = object.gatewayUuid | 0;\n                if (object.newVirtualWorldUuid != null)\n                    message.newVirtualWorldUuid = object.newVirtualWorldUuid | 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_galaxy.OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD\n             * @static\n             * @param {op_galaxy.OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD} message OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.gameId = "";\n                    object.userToken = "";\n                    object.worldUuid = "";\n                    object.expire = "";\n                    object.fingerprint = "";\n                    object.gatewayUuid = 0;\n                    object.newVirtualWorldUuid = 0;\n                }\n                if (message.gameId != null && message.hasOwnProperty("gameId"))\n                    object.gameId = message.gameId;\n                if (message.userToken != null && message.hasOwnProperty("userToken"))\n                    object.userToken = message.userToken;\n                if (message.worldUuid != null && message.hasOwnProperty("worldUuid"))\n                    object.worldUuid = message.worldUuid;\n                if (message.expire != null && message.hasOwnProperty("expire"))\n                    object.expire = message.expire;\n                if (message.fingerprint != null && message.hasOwnProperty("fingerprint"))\n                    object.fingerprint = message.fingerprint;\n                if (message.gatewayUuid != null && message.hasOwnProperty("gatewayUuid"))\n                    object.gatewayUuid = message.gatewayUuid;\n                if (message.newVirtualWorldUuid != null && message.hasOwnProperty("newVirtualWorldUuid"))\n                    object.newVirtualWorldUuid = message.newVirtualWorldUuid;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD to JSON.\n             * @function toJSON\n             * @memberof op_galaxy.OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_COP_REQ_GALAXY_START_NEW_VIRTUAL_WORLD;\n        })();\n    \n        op_galaxy.OP_WORLD_REQ_GALAXY_INFO_UPDATE = (function() {\n    \n            /**\n             * Properties of a OP_WORLD_REQ_GALAXY_INFO_UPDATE.\n             * @memberof op_galaxy\n             * @interface IOP_WORLD_REQ_GALAXY_INFO_UPDATE\n             * @property {op_webplatform.IWorldStatus} worldStatus OP_WORLD_REQ_GALAXY_INFO_UPDATE worldStatus\n             */\n    \n            /**\n             * Constructs a new OP_WORLD_REQ_GALAXY_INFO_UPDATE.\n             * @memberof op_galaxy\n             * @classdesc Represents a OP_WORLD_REQ_GALAXY_INFO_UPDATE.\n             * @implements IOP_WORLD_REQ_GALAXY_INFO_UPDATE\n             * @constructor\n             * @param {op_galaxy.IOP_WORLD_REQ_GALAXY_INFO_UPDATE=} [properties] Properties to set\n             */\n            function OP_WORLD_REQ_GALAXY_INFO_UPDATE(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_WORLD_REQ_GALAXY_INFO_UPDATE worldStatus.\n             * @member {op_webplatform.IWorldStatus} worldStatus\n             * @memberof op_galaxy.OP_WORLD_REQ_GALAXY_INFO_UPDATE\n             * @instance\n             */\n            OP_WORLD_REQ_GALAXY_INFO_UPDATE.prototype.worldStatus = null;\n    \n            /**\n             * Creates a new OP_WORLD_REQ_GALAXY_INFO_UPDATE instance using the specified properties.\n             * @function create\n             * @memberof op_galaxy.OP_WORLD_REQ_GALAXY_INFO_UPDATE\n             * @static\n             * @param {op_galaxy.IOP_WORLD_REQ_GALAXY_INFO_UPDATE=} [properties] Properties to set\n             * @returns {op_galaxy.OP_WORLD_REQ_GALAXY_INFO_UPDATE} OP_WORLD_REQ_GALAXY_INFO_UPDATE instance\n             */\n            OP_WORLD_REQ_GALAXY_INFO_UPDATE.create = function create(properties) {\n                return new OP_WORLD_REQ_GALAXY_INFO_UPDATE(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_WORLD_REQ_GALAXY_INFO_UPDATE message. Does not implicitly {@link op_galaxy.OP_WORLD_REQ_GALAXY_INFO_UPDATE.verify|verify} messages.\n             * @function encode\n             * @memberof op_galaxy.OP_WORLD_REQ_GALAXY_INFO_UPDATE\n             * @static\n             * @param {op_galaxy.IOP_WORLD_REQ_GALAXY_INFO_UPDATE} message OP_WORLD_REQ_GALAXY_INFO_UPDATE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_WORLD_REQ_GALAXY_INFO_UPDATE.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                $root.op_webplatform.WorldStatus.encode(message.worldStatus, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_WORLD_REQ_GALAXY_INFO_UPDATE message, length delimited. Does not implicitly {@link op_galaxy.OP_WORLD_REQ_GALAXY_INFO_UPDATE.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_galaxy.OP_WORLD_REQ_GALAXY_INFO_UPDATE\n             * @static\n             * @param {op_galaxy.IOP_WORLD_REQ_GALAXY_INFO_UPDATE} message OP_WORLD_REQ_GALAXY_INFO_UPDATE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_WORLD_REQ_GALAXY_INFO_UPDATE.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_WORLD_REQ_GALAXY_INFO_UPDATE message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_galaxy.OP_WORLD_REQ_GALAXY_INFO_UPDATE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_galaxy.OP_WORLD_REQ_GALAXY_INFO_UPDATE} OP_WORLD_REQ_GALAXY_INFO_UPDATE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_WORLD_REQ_GALAXY_INFO_UPDATE.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_galaxy.OP_WORLD_REQ_GALAXY_INFO_UPDATE();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 3:\n                        message.worldStatus = $root.op_webplatform.WorldStatus.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("worldStatus"))\n                    throw $util.ProtocolError("missing required \'worldStatus\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_WORLD_REQ_GALAXY_INFO_UPDATE message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_galaxy.OP_WORLD_REQ_GALAXY_INFO_UPDATE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_galaxy.OP_WORLD_REQ_GALAXY_INFO_UPDATE} OP_WORLD_REQ_GALAXY_INFO_UPDATE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_WORLD_REQ_GALAXY_INFO_UPDATE.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_WORLD_REQ_GALAXY_INFO_UPDATE message.\n             * @function verify\n             * @memberof op_galaxy.OP_WORLD_REQ_GALAXY_INFO_UPDATE\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_WORLD_REQ_GALAXY_INFO_UPDATE.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                {\n                    var error = $root.op_webplatform.WorldStatus.verify(message.worldStatus);\n                    if (error)\n                        return "worldStatus." + error;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_WORLD_REQ_GALAXY_INFO_UPDATE message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_galaxy.OP_WORLD_REQ_GALAXY_INFO_UPDATE\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_galaxy.OP_WORLD_REQ_GALAXY_INFO_UPDATE} OP_WORLD_REQ_GALAXY_INFO_UPDATE\n             */\n            OP_WORLD_REQ_GALAXY_INFO_UPDATE.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_galaxy.OP_WORLD_REQ_GALAXY_INFO_UPDATE)\n                    return object;\n                var message = new $root.op_galaxy.OP_WORLD_REQ_GALAXY_INFO_UPDATE();\n                if (object.worldStatus != null) {\n                    if (typeof object.worldStatus !== "object")\n                        throw TypeError(".op_galaxy.OP_WORLD_REQ_GALAXY_INFO_UPDATE.worldStatus: object expected");\n                    message.worldStatus = $root.op_webplatform.WorldStatus.fromObject(object.worldStatus);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_WORLD_REQ_GALAXY_INFO_UPDATE message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_galaxy.OP_WORLD_REQ_GALAXY_INFO_UPDATE\n             * @static\n             * @param {op_galaxy.OP_WORLD_REQ_GALAXY_INFO_UPDATE} message OP_WORLD_REQ_GALAXY_INFO_UPDATE\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_WORLD_REQ_GALAXY_INFO_UPDATE.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.worldStatus = null;\n                if (message.worldStatus != null && message.hasOwnProperty("worldStatus"))\n                    object.worldStatus = $root.op_webplatform.WorldStatus.toObject(message.worldStatus, options);\n                return object;\n            };\n    \n            /**\n             * Converts this OP_WORLD_REQ_GALAXY_INFO_UPDATE to JSON.\n             * @function toJSON\n             * @memberof op_galaxy.OP_WORLD_REQ_GALAXY_INFO_UPDATE\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_WORLD_REQ_GALAXY_INFO_UPDATE.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_WORLD_REQ_GALAXY_INFO_UPDATE;\n        })();\n    \n        op_galaxy.OP_COP_RES_GALAXY_INIT = (function() {\n    \n            /**\n             * Properties of a OP_COP_RES_GALAXY_INIT.\n             * @memberof op_galaxy\n             * @interface IOP_COP_RES_GALAXY_INIT\n             * @property {number} copUuid OP_COP_RES_GALAXY_INIT copUuid\n             */\n    \n            /**\n             * Constructs a new OP_COP_RES_GALAXY_INIT.\n             * @memberof op_galaxy\n             * @classdesc Represents a OP_COP_RES_GALAXY_INIT.\n             * @implements IOP_COP_RES_GALAXY_INIT\n             * @constructor\n             * @param {op_galaxy.IOP_COP_RES_GALAXY_INIT=} [properties] Properties to set\n             */\n            function OP_COP_RES_GALAXY_INIT(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_COP_RES_GALAXY_INIT copUuid.\n             * @member {number} copUuid\n             * @memberof op_galaxy.OP_COP_RES_GALAXY_INIT\n             * @instance\n             */\n            OP_COP_RES_GALAXY_INIT.prototype.copUuid = 0;\n    \n            /**\n             * Creates a new OP_COP_RES_GALAXY_INIT instance using the specified properties.\n             * @function create\n             * @memberof op_galaxy.OP_COP_RES_GALAXY_INIT\n             * @static\n             * @param {op_galaxy.IOP_COP_RES_GALAXY_INIT=} [properties] Properties to set\n             * @returns {op_galaxy.OP_COP_RES_GALAXY_INIT} OP_COP_RES_GALAXY_INIT instance\n             */\n            OP_COP_RES_GALAXY_INIT.create = function create(properties) {\n                return new OP_COP_RES_GALAXY_INIT(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_COP_RES_GALAXY_INIT message. Does not implicitly {@link op_galaxy.OP_COP_RES_GALAXY_INIT.verify|verify} messages.\n             * @function encode\n             * @memberof op_galaxy.OP_COP_RES_GALAXY_INIT\n             * @static\n             * @param {op_galaxy.IOP_COP_RES_GALAXY_INIT} message OP_COP_RES_GALAXY_INIT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_COP_RES_GALAXY_INIT.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.copUuid);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_COP_RES_GALAXY_INIT message, length delimited. Does not implicitly {@link op_galaxy.OP_COP_RES_GALAXY_INIT.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_galaxy.OP_COP_RES_GALAXY_INIT\n             * @static\n             * @param {op_galaxy.IOP_COP_RES_GALAXY_INIT} message OP_COP_RES_GALAXY_INIT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_COP_RES_GALAXY_INIT.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_COP_RES_GALAXY_INIT message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_galaxy.OP_COP_RES_GALAXY_INIT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_galaxy.OP_COP_RES_GALAXY_INIT} OP_COP_RES_GALAXY_INIT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_COP_RES_GALAXY_INIT.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_galaxy.OP_COP_RES_GALAXY_INIT();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.copUuid = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("copUuid"))\n                    throw $util.ProtocolError("missing required \'copUuid\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_COP_RES_GALAXY_INIT message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_galaxy.OP_COP_RES_GALAXY_INIT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_galaxy.OP_COP_RES_GALAXY_INIT} OP_COP_RES_GALAXY_INIT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_COP_RES_GALAXY_INIT.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_COP_RES_GALAXY_INIT message.\n             * @function verify\n             * @memberof op_galaxy.OP_COP_RES_GALAXY_INIT\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_COP_RES_GALAXY_INIT.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.copUuid))\n                    return "copUuid: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_COP_RES_GALAXY_INIT message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_galaxy.OP_COP_RES_GALAXY_INIT\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_galaxy.OP_COP_RES_GALAXY_INIT} OP_COP_RES_GALAXY_INIT\n             */\n            OP_COP_RES_GALAXY_INIT.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_galaxy.OP_COP_RES_GALAXY_INIT)\n                    return object;\n                var message = new $root.op_galaxy.OP_COP_RES_GALAXY_INIT();\n                if (object.copUuid != null)\n                    message.copUuid = object.copUuid | 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_COP_RES_GALAXY_INIT message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_galaxy.OP_COP_RES_GALAXY_INIT\n             * @static\n             * @param {op_galaxy.OP_COP_RES_GALAXY_INIT} message OP_COP_RES_GALAXY_INIT\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_COP_RES_GALAXY_INIT.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.copUuid = 0;\n                if (message.copUuid != null && message.hasOwnProperty("copUuid"))\n                    object.copUuid = message.copUuid;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_COP_RES_GALAXY_INIT to JSON.\n             * @function toJSON\n             * @memberof op_galaxy.OP_COP_RES_GALAXY_INIT\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_COP_RES_GALAXY_INIT.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_COP_RES_GALAXY_INIT;\n        })();\n    \n        op_galaxy.OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT = (function() {\n    \n            /**\n             * Properties of a OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT.\n             * @memberof op_galaxy\n             * @interface IOP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT\n             * @property {Array.<op_def.IConnectionCount>|null} [worldConnect] OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT worldConnect\n             */\n    \n            /**\n             * Constructs a new OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT.\n             * @memberof op_galaxy\n             * @classdesc Represents a OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT.\n             * @implements IOP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT\n             * @constructor\n             * @param {op_galaxy.IOP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT=} [properties] Properties to set\n             */\n            function OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT(properties) {\n                this.worldConnect = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT worldConnect.\n             * @member {Array.<op_def.IConnectionCount>} worldConnect\n             * @memberof op_galaxy.OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT\n             * @instance\n             */\n            OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT.prototype.worldConnect = $util.emptyArray;\n    \n            /**\n             * Creates a new OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT instance using the specified properties.\n             * @function create\n             * @memberof op_galaxy.OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT\n             * @static\n             * @param {op_galaxy.IOP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT=} [properties] Properties to set\n             * @returns {op_galaxy.OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT} OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT instance\n             */\n            OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT.create = function create(properties) {\n                return new OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT message. Does not implicitly {@link op_galaxy.OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT.verify|verify} messages.\n             * @function encode\n             * @memberof op_galaxy.OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT\n             * @static\n             * @param {op_galaxy.IOP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT} message OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.worldConnect != null && message.worldConnect.length)\n                    for (var i = 0; i < message.worldConnect.length; ++i)\n                        $root.op_def.ConnectionCount.encode(message.worldConnect[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT message, length delimited. Does not implicitly {@link op_galaxy.OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_galaxy.OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT\n             * @static\n             * @param {op_galaxy.IOP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT} message OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_galaxy.OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_galaxy.OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT} OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_galaxy.OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.worldConnect && message.worldConnect.length))\n                            message.worldConnect = [];\n                        message.worldConnect.push($root.op_def.ConnectionCount.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_galaxy.OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_galaxy.OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT} OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT message.\n             * @function verify\n             * @memberof op_galaxy.OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.worldConnect != null && message.hasOwnProperty("worldConnect")) {\n                    if (!Array.isArray(message.worldConnect))\n                        return "worldConnect: array expected";\n                    for (var i = 0; i < message.worldConnect.length; ++i) {\n                        var error = $root.op_def.ConnectionCount.verify(message.worldConnect[i]);\n                        if (error)\n                            return "worldConnect." + error;\n                    }\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_galaxy.OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_galaxy.OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT} OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT\n             */\n            OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_galaxy.OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT)\n                    return object;\n                var message = new $root.op_galaxy.OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT();\n                if (object.worldConnect) {\n                    if (!Array.isArray(object.worldConnect))\n                        throw TypeError(".op_galaxy.OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT.worldConnect: array expected");\n                    message.worldConnect = [];\n                    for (var i = 0; i < object.worldConnect.length; ++i) {\n                        if (typeof object.worldConnect[i] !== "object")\n                            throw TypeError(".op_galaxy.OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT.worldConnect: object expected");\n                        message.worldConnect[i] = $root.op_def.ConnectionCount.fromObject(object.worldConnect[i]);\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_galaxy.OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT\n             * @static\n             * @param {op_galaxy.OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT} message OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.worldConnect = [];\n                if (message.worldConnect && message.worldConnect.length) {\n                    object.worldConnect = [];\n                    for (var j = 0; j < message.worldConnect.length; ++j)\n                        object.worldConnect[j] = $root.op_def.ConnectionCount.toObject(message.worldConnect[j], options);\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT to JSON.\n             * @function toJSON\n             * @memberof op_galaxy.OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_GATEWAY_REQ_GALAXY_SYNC_WORDL_CONNECTION_COUNT;\n        })();\n    \n        op_galaxy.OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS = (function() {\n    \n            /**\n             * Properties of a OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS.\n             * @memberof op_galaxy\n             * @interface IOP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS\n             * @property {number} worldId OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS worldId\n             * @property {Array.<number>|null} [worldConnectionIds] OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS worldConnectionIds\n             */\n    \n            /**\n             * Constructs a new OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS.\n             * @memberof op_galaxy\n             * @classdesc Represents a OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS.\n             * @implements IOP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS\n             * @constructor\n             * @param {op_galaxy.IOP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS=} [properties] Properties to set\n             */\n            function OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS(properties) {\n                this.worldConnectionIds = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS worldId.\n             * @member {number} worldId\n             * @memberof op_galaxy.OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS\n             * @instance\n             */\n            OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS.prototype.worldId = 0;\n    \n            /**\n             * OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS worldConnectionIds.\n             * @member {Array.<number>} worldConnectionIds\n             * @memberof op_galaxy.OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS\n             * @instance\n             */\n            OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS.prototype.worldConnectionIds = $util.emptyArray;\n    \n            /**\n             * Creates a new OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS instance using the specified properties.\n             * @function create\n             * @memberof op_galaxy.OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS\n             * @static\n             * @param {op_galaxy.IOP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS=} [properties] Properties to set\n             * @returns {op_galaxy.OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS} OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS instance\n             */\n            OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS.create = function create(properties) {\n                return new OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS message. Does not implicitly {@link op_galaxy.OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS.verify|verify} messages.\n             * @function encode\n             * @memberof op_galaxy.OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS\n             * @static\n             * @param {op_galaxy.IOP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS} message OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.worldId);\n                if (message.worldConnectionIds != null && message.worldConnectionIds.length)\n                    for (var i = 0; i < message.worldConnectionIds.length; ++i)\n                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.worldConnectionIds[i]);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS message, length delimited. Does not implicitly {@link op_galaxy.OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_galaxy.OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS\n             * @static\n             * @param {op_galaxy.IOP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS} message OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_galaxy.OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_galaxy.OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS} OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_galaxy.OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.worldId = reader.int32();\n                        break;\n                    case 2:\n                        if (!(message.worldConnectionIds && message.worldConnectionIds.length))\n                            message.worldConnectionIds = [];\n                        if ((tag & 7) === 2) {\n                            var end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2)\n                                message.worldConnectionIds.push(reader.int32());\n                        } else\n                            message.worldConnectionIds.push(reader.int32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("worldId"))\n                    throw $util.ProtocolError("missing required \'worldId\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_galaxy.OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_galaxy.OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS} OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS message.\n             * @function verify\n             * @memberof op_galaxy.OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.worldId))\n                    return "worldId: integer expected";\n                if (message.worldConnectionIds != null && message.hasOwnProperty("worldConnectionIds")) {\n                    if (!Array.isArray(message.worldConnectionIds))\n                        return "worldConnectionIds: array expected";\n                    for (var i = 0; i < message.worldConnectionIds.length; ++i)\n                        if (!$util.isInteger(message.worldConnectionIds[i]))\n                            return "worldConnectionIds: integer[] expected";\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_galaxy.OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_galaxy.OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS} OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS\n             */\n            OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_galaxy.OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS)\n                    return object;\n                var message = new $root.op_galaxy.OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS();\n                if (object.worldId != null)\n                    message.worldId = object.worldId | 0;\n                if (object.worldConnectionIds) {\n                    if (!Array.isArray(object.worldConnectionIds))\n                        throw TypeError(".op_galaxy.OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS.worldConnectionIds: array expected");\n                    message.worldConnectionIds = [];\n                    for (var i = 0; i < object.worldConnectionIds.length; ++i)\n                        message.worldConnectionIds[i] = object.worldConnectionIds[i] | 0;\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_galaxy.OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS\n             * @static\n             * @param {op_galaxy.OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS} message OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.worldConnectionIds = [];\n                if (options.defaults)\n                    object.worldId = 0;\n                if (message.worldId != null && message.hasOwnProperty("worldId"))\n                    object.worldId = message.worldId;\n                if (message.worldConnectionIds && message.worldConnectionIds.length) {\n                    object.worldConnectionIds = [];\n                    for (var j = 0; j < message.worldConnectionIds.length; ++j)\n                        object.worldConnectionIds[j] = message.worldConnectionIds[j];\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS to JSON.\n             * @function toJSON\n             * @memberof op_galaxy.OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_GATEWAY_RES_GALAXY_SYNC_WORLD_CONNECTIONS;\n        })();\n    \n        return op_galaxy;\n    })();\n    \n    $root.op_webplatform = (function() {\n    \n        /**\n         * Namespace op_webplatform.\n         * @exports op_webplatform\n         * @namespace\n         */\n        var op_webplatform = {};\n    \n        /**\n         * OPCODE enum.\n         * @name op_webplatform.OPCODE\n         * @enum {string}\n         * @property {number} OP_MAJOR=19 OP_MAJOR value\n         * @property {number} _OP_UNKNOWN=0 _OP_UNKNOWN value\n         * @property {number} _OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR=1245187 _OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR value\n         * @property {number} _OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO=1245189 _OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO value\n         * @property {number} _OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS=1249285 _OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS value\n         * @property {number} _OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS=1249287 _OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS value\n         * @property {number} _OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE=1245193 _OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE value\n         * @property {number} _OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER=1245195 _OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER value\n         * @property {number} _OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER=1245201 _OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER value\n         * @property {number} _OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER=1245203 _OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER value\n         * @property {number} _OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS=1245205 _OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS value\n         * @property {number} _OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO=1245207 _OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO value\n         * @property {number} _OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE=1245209 _OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE value\n         * @property {number} _OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE=1245217 _OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE value\n         * @property {number} _OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO=1245218 _OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO value\n         * @property {number} _OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS=1245219 _OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS value\n         */\n        op_webplatform.OPCODE = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[19] = "OP_MAJOR"] = 19;\n            values[valuesById[0] = "_OP_UNKNOWN"] = 0;\n            values[valuesById[1245187] = "_OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR"] = 1245187;\n            values[valuesById[1245189] = "_OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO"] = 1245189;\n            values[valuesById[1249285] = "_OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS"] = 1249285;\n            values[valuesById[1249287] = "_OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS"] = 1249287;\n            values[valuesById[1245193] = "_OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE"] = 1245193;\n            values[valuesById[1245195] = "_OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER"] = 1245195;\n            values[valuesById[1245201] = "_OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER"] = 1245201;\n            values[valuesById[1245203] = "_OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER"] = 1245203;\n            values[valuesById[1245205] = "_OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS"] = 1245205;\n            values[valuesById[1245207] = "_OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO"] = 1245207;\n            values[valuesById[1245209] = "_OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE"] = 1245209;\n            values[valuesById[1245217] = "_OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE"] = 1245217;\n            values[valuesById[1245218] = "_OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO"] = 1245218;\n            values[valuesById[1245219] = "_OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS"] = 1245219;\n            return values;\n        })();\n    \n        op_webplatform.ServiceStatus = (function() {\n    \n            /**\n             * Properties of a ServiceStatus.\n             * @memberof op_webplatform\n             * @interface IServiceStatus\n             * @property {op_def.ServerStatus} status ServiceStatus status\n             * @property {string|null} [ip] ServiceStatus ip\n             * @property {number|null} [port] ServiceStatus port\n             */\n    \n            /**\n             * Constructs a new ServiceStatus.\n             * @memberof op_webplatform\n             * @classdesc Represents a ServiceStatus.\n             * @implements IServiceStatus\n             * @constructor\n             * @param {op_webplatform.IServiceStatus=} [properties] Properties to set\n             */\n            function ServiceStatus(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * ServiceStatus status.\n             * @member {op_def.ServerStatus} status\n             * @memberof op_webplatform.ServiceStatus\n             * @instance\n             */\n            ServiceStatus.prototype.status = 0;\n    \n            /**\n             * ServiceStatus ip.\n             * @member {string} ip\n             * @memberof op_webplatform.ServiceStatus\n             * @instance\n             */\n            ServiceStatus.prototype.ip = "";\n    \n            /**\n             * ServiceStatus port.\n             * @member {number} port\n             * @memberof op_webplatform.ServiceStatus\n             * @instance\n             */\n            ServiceStatus.prototype.port = 0;\n    \n            /**\n             * Creates a new ServiceStatus instance using the specified properties.\n             * @function create\n             * @memberof op_webplatform.ServiceStatus\n             * @static\n             * @param {op_webplatform.IServiceStatus=} [properties] Properties to set\n             * @returns {op_webplatform.ServiceStatus} ServiceStatus instance\n             */\n            ServiceStatus.create = function create(properties) {\n                return new ServiceStatus(properties);\n            };\n    \n            /**\n             * Encodes the specified ServiceStatus message. Does not implicitly {@link op_webplatform.ServiceStatus.verify|verify} messages.\n             * @function encode\n             * @memberof op_webplatform.ServiceStatus\n             * @static\n             * @param {op_webplatform.IServiceStatus} message ServiceStatus message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ServiceStatus.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.status);\n                if (message.ip != null && message.hasOwnProperty("ip"))\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.ip);\n                if (message.port != null && message.hasOwnProperty("port"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.port);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified ServiceStatus message, length delimited. Does not implicitly {@link op_webplatform.ServiceStatus.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_webplatform.ServiceStatus\n             * @static\n             * @param {op_webplatform.IServiceStatus} message ServiceStatus message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ServiceStatus.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a ServiceStatus message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_webplatform.ServiceStatus\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_webplatform.ServiceStatus} ServiceStatus\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ServiceStatus.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_webplatform.ServiceStatus();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.status = reader.int32();\n                        break;\n                    case 2:\n                        message.ip = reader.string();\n                        break;\n                    case 3:\n                        message.port = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("status"))\n                    throw $util.ProtocolError("missing required \'status\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a ServiceStatus message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_webplatform.ServiceStatus\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_webplatform.ServiceStatus} ServiceStatus\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ServiceStatus.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a ServiceStatus message.\n             * @function verify\n             * @memberof op_webplatform.ServiceStatus\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            ServiceStatus.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                switch (message.status) {\n                default:\n                    return "status: enum value expected";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                    break;\n                }\n                if (message.ip != null && message.hasOwnProperty("ip"))\n                    if (!$util.isString(message.ip))\n                        return "ip: string expected";\n                if (message.port != null && message.hasOwnProperty("port"))\n                    if (!$util.isInteger(message.port))\n                        return "port: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a ServiceStatus message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_webplatform.ServiceStatus\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_webplatform.ServiceStatus} ServiceStatus\n             */\n            ServiceStatus.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_webplatform.ServiceStatus)\n                    return object;\n                var message = new $root.op_webplatform.ServiceStatus();\n                switch (object.status) {\n                case "SERVER_STARTING":\n                case 0:\n                    message.status = 0;\n                    break;\n                case "SERVER_ALIVE":\n                case 1:\n                    message.status = 1;\n                    break;\n                case "SERVER_OFFLINE":\n                case 2:\n                    message.status = 2;\n                    break;\n                case "SERVER_WAITFORSHUTDOWN":\n                case 3:\n                    message.status = 3;\n                    break;\n                case "SERVER_REJECT_INIT":\n                case 4:\n                    message.status = 4;\n                    break;\n                case "SERVER_FORCE_SHUTDOWN":\n                case 5:\n                    message.status = 5;\n                    break;\n                }\n                if (object.ip != null)\n                    message.ip = String(object.ip);\n                if (object.port != null)\n                    message.port = object.port | 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a ServiceStatus message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_webplatform.ServiceStatus\n             * @static\n             * @param {op_webplatform.ServiceStatus} message ServiceStatus\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            ServiceStatus.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.status = options.enums === String ? "SERVER_STARTING" : 0;\n                    object.ip = "";\n                    object.port = 0;\n                }\n                if (message.status != null && message.hasOwnProperty("status"))\n                    object.status = options.enums === String ? $root.op_def.ServerStatus[message.status] : message.status;\n                if (message.ip != null && message.hasOwnProperty("ip"))\n                    object.ip = message.ip;\n                if (message.port != null && message.hasOwnProperty("port"))\n                    object.port = message.port;\n                return object;\n            };\n    \n            /**\n             * Converts this ServiceStatus to JSON.\n             * @function toJSON\n             * @memberof op_webplatform.ServiceStatus\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            ServiceStatus.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return ServiceStatus;\n        })();\n    \n        op_webplatform.VirtualWorldConnectionStatus = (function() {\n    \n            /**\n             * Properties of a VirtualWorldConnectionStatus.\n             * @memberof op_webplatform\n             * @interface IVirtualWorldConnectionStatus\n             * @property {string} virtualWorldUuid VirtualWorldConnectionStatus virtualWorldUuid\n             * @property {string} gameId VirtualWorldConnectionStatus gameId\n             * @property {op_webplatform.IServiceStatus} serviceStatus VirtualWorldConnectionStatus serviceStatus\n             * @property {number} connectionCount VirtualWorldConnectionStatus connectionCount\n             * @property {number|null} [maxConnection] VirtualWorldConnectionStatus maxConnection\n             */\n    \n            /**\n             * Constructs a new VirtualWorldConnectionStatus.\n             * @memberof op_webplatform\n             * @classdesc Represents a VirtualWorldConnectionStatus.\n             * @implements IVirtualWorldConnectionStatus\n             * @constructor\n             * @param {op_webplatform.IVirtualWorldConnectionStatus=} [properties] Properties to set\n             */\n            function VirtualWorldConnectionStatus(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * VirtualWorldConnectionStatus virtualWorldUuid.\n             * @member {string} virtualWorldUuid\n             * @memberof op_webplatform.VirtualWorldConnectionStatus\n             * @instance\n             */\n            VirtualWorldConnectionStatus.prototype.virtualWorldUuid = "";\n    \n            /**\n             * VirtualWorldConnectionStatus gameId.\n             * @member {string} gameId\n             * @memberof op_webplatform.VirtualWorldConnectionStatus\n             * @instance\n             */\n            VirtualWorldConnectionStatus.prototype.gameId = "";\n    \n            /**\n             * VirtualWorldConnectionStatus serviceStatus.\n             * @member {op_webplatform.IServiceStatus} serviceStatus\n             * @memberof op_webplatform.VirtualWorldConnectionStatus\n             * @instance\n             */\n            VirtualWorldConnectionStatus.prototype.serviceStatus = null;\n    \n            /**\n             * VirtualWorldConnectionStatus connectionCount.\n             * @member {number} connectionCount\n             * @memberof op_webplatform.VirtualWorldConnectionStatus\n             * @instance\n             */\n            VirtualWorldConnectionStatus.prototype.connectionCount = 0;\n    \n            /**\n             * VirtualWorldConnectionStatus maxConnection.\n             * @member {number} maxConnection\n             * @memberof op_webplatform.VirtualWorldConnectionStatus\n             * @instance\n             */\n            VirtualWorldConnectionStatus.prototype.maxConnection = 0;\n    \n            /**\n             * Creates a new VirtualWorldConnectionStatus instance using the specified properties.\n             * @function create\n             * @memberof op_webplatform.VirtualWorldConnectionStatus\n             * @static\n             * @param {op_webplatform.IVirtualWorldConnectionStatus=} [properties] Properties to set\n             * @returns {op_webplatform.VirtualWorldConnectionStatus} VirtualWorldConnectionStatus instance\n             */\n            VirtualWorldConnectionStatus.create = function create(properties) {\n                return new VirtualWorldConnectionStatus(properties);\n            };\n    \n            /**\n             * Encodes the specified VirtualWorldConnectionStatus message. Does not implicitly {@link op_webplatform.VirtualWorldConnectionStatus.verify|verify} messages.\n             * @function encode\n             * @memberof op_webplatform.VirtualWorldConnectionStatus\n             * @static\n             * @param {op_webplatform.IVirtualWorldConnectionStatus} message VirtualWorldConnectionStatus message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            VirtualWorldConnectionStatus.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.virtualWorldUuid);\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.gameId);\n                $root.op_webplatform.ServiceStatus.encode(message.serviceStatus, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.connectionCount);\n                if (message.maxConnection != null && message.hasOwnProperty("maxConnection"))\n                    writer.uint32(/* id 5, wireType 0 =*/40).int32(message.maxConnection);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified VirtualWorldConnectionStatus message, length delimited. Does not implicitly {@link op_webplatform.VirtualWorldConnectionStatus.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_webplatform.VirtualWorldConnectionStatus\n             * @static\n             * @param {op_webplatform.IVirtualWorldConnectionStatus} message VirtualWorldConnectionStatus message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            VirtualWorldConnectionStatus.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a VirtualWorldConnectionStatus message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_webplatform.VirtualWorldConnectionStatus\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_webplatform.VirtualWorldConnectionStatus} VirtualWorldConnectionStatus\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            VirtualWorldConnectionStatus.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_webplatform.VirtualWorldConnectionStatus();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.virtualWorldUuid = reader.string();\n                        break;\n                    case 2:\n                        message.gameId = reader.string();\n                        break;\n                    case 3:\n                        message.serviceStatus = $root.op_webplatform.ServiceStatus.decode(reader, reader.uint32());\n                        break;\n                    case 4:\n                        message.connectionCount = reader.int32();\n                        break;\n                    case 5:\n                        message.maxConnection = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("virtualWorldUuid"))\n                    throw $util.ProtocolError("missing required \'virtualWorldUuid\'", { instance: message });\n                if (!message.hasOwnProperty("gameId"))\n                    throw $util.ProtocolError("missing required \'gameId\'", { instance: message });\n                if (!message.hasOwnProperty("serviceStatus"))\n                    throw $util.ProtocolError("missing required \'serviceStatus\'", { instance: message });\n                if (!message.hasOwnProperty("connectionCount"))\n                    throw $util.ProtocolError("missing required \'connectionCount\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a VirtualWorldConnectionStatus message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_webplatform.VirtualWorldConnectionStatus\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_webplatform.VirtualWorldConnectionStatus} VirtualWorldConnectionStatus\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            VirtualWorldConnectionStatus.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a VirtualWorldConnectionStatus message.\n             * @function verify\n             * @memberof op_webplatform.VirtualWorldConnectionStatus\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            VirtualWorldConnectionStatus.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.virtualWorldUuid))\n                    return "virtualWorldUuid: string expected";\n                if (!$util.isString(message.gameId))\n                    return "gameId: string expected";\n                {\n                    var error = $root.op_webplatform.ServiceStatus.verify(message.serviceStatus);\n                    if (error)\n                        return "serviceStatus." + error;\n                }\n                if (!$util.isInteger(message.connectionCount))\n                    return "connectionCount: integer expected";\n                if (message.maxConnection != null && message.hasOwnProperty("maxConnection"))\n                    if (!$util.isInteger(message.maxConnection))\n                        return "maxConnection: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a VirtualWorldConnectionStatus message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_webplatform.VirtualWorldConnectionStatus\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_webplatform.VirtualWorldConnectionStatus} VirtualWorldConnectionStatus\n             */\n            VirtualWorldConnectionStatus.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_webplatform.VirtualWorldConnectionStatus)\n                    return object;\n                var message = new $root.op_webplatform.VirtualWorldConnectionStatus();\n                if (object.virtualWorldUuid != null)\n                    message.virtualWorldUuid = String(object.virtualWorldUuid);\n                if (object.gameId != null)\n                    message.gameId = String(object.gameId);\n                if (object.serviceStatus != null) {\n                    if (typeof object.serviceStatus !== "object")\n                        throw TypeError(".op_webplatform.VirtualWorldConnectionStatus.serviceStatus: object expected");\n                    message.serviceStatus = $root.op_webplatform.ServiceStatus.fromObject(object.serviceStatus);\n                }\n                if (object.connectionCount != null)\n                    message.connectionCount = object.connectionCount | 0;\n                if (object.maxConnection != null)\n                    message.maxConnection = object.maxConnection | 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a VirtualWorldConnectionStatus message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_webplatform.VirtualWorldConnectionStatus\n             * @static\n             * @param {op_webplatform.VirtualWorldConnectionStatus} message VirtualWorldConnectionStatus\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            VirtualWorldConnectionStatus.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.virtualWorldUuid = "";\n                    object.gameId = "";\n                    object.serviceStatus = null;\n                    object.connectionCount = 0;\n                    object.maxConnection = 0;\n                }\n                if (message.virtualWorldUuid != null && message.hasOwnProperty("virtualWorldUuid"))\n                    object.virtualWorldUuid = message.virtualWorldUuid;\n                if (message.gameId != null && message.hasOwnProperty("gameId"))\n                    object.gameId = message.gameId;\n                if (message.serviceStatus != null && message.hasOwnProperty("serviceStatus"))\n                    object.serviceStatus = $root.op_webplatform.ServiceStatus.toObject(message.serviceStatus, options);\n                if (message.connectionCount != null && message.hasOwnProperty("connectionCount"))\n                    object.connectionCount = message.connectionCount;\n                if (message.maxConnection != null && message.hasOwnProperty("maxConnection"))\n                    object.maxConnection = message.maxConnection;\n                return object;\n            };\n    \n            /**\n             * Converts this VirtualWorldConnectionStatus to JSON.\n             * @function toJSON\n             * @memberof op_webplatform.VirtualWorldConnectionStatus\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            VirtualWorldConnectionStatus.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return VirtualWorldConnectionStatus;\n        })();\n    \n        op_webplatform.WorldStatus = (function() {\n    \n            /**\n             * Properties of a WorldStatus.\n             * @memberof op_webplatform\n             * @interface IWorldStatus\n             * @property {string} worldUuid WorldStatus worldUuid\n             * @property {op_webplatform.IServiceStatus} serviceStatus WorldStatus serviceStatus\n             * @property {Array.<op_webplatform.IVirtualWorldConnectionStatus>|null} [virtualWorldConnectionStatus] WorldStatus virtualWorldConnectionStatus\n             */\n    \n            /**\n             * Constructs a new WorldStatus.\n             * @memberof op_webplatform\n             * @classdesc Represents a WorldStatus.\n             * @implements IWorldStatus\n             * @constructor\n             * @param {op_webplatform.IWorldStatus=} [properties] Properties to set\n             */\n            function WorldStatus(properties) {\n                this.virtualWorldConnectionStatus = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * WorldStatus worldUuid.\n             * @member {string} worldUuid\n             * @memberof op_webplatform.WorldStatus\n             * @instance\n             */\n            WorldStatus.prototype.worldUuid = "";\n    \n            /**\n             * WorldStatus serviceStatus.\n             * @member {op_webplatform.IServiceStatus} serviceStatus\n             * @memberof op_webplatform.WorldStatus\n             * @instance\n             */\n            WorldStatus.prototype.serviceStatus = null;\n    \n            /**\n             * WorldStatus virtualWorldConnectionStatus.\n             * @member {Array.<op_webplatform.IVirtualWorldConnectionStatus>} virtualWorldConnectionStatus\n             * @memberof op_webplatform.WorldStatus\n             * @instance\n             */\n            WorldStatus.prototype.virtualWorldConnectionStatus = $util.emptyArray;\n    \n            /**\n             * Creates a new WorldStatus instance using the specified properties.\n             * @function create\n             * @memberof op_webplatform.WorldStatus\n             * @static\n             * @param {op_webplatform.IWorldStatus=} [properties] Properties to set\n             * @returns {op_webplatform.WorldStatus} WorldStatus instance\n             */\n            WorldStatus.create = function create(properties) {\n                return new WorldStatus(properties);\n            };\n    \n            /**\n             * Encodes the specified WorldStatus message. Does not implicitly {@link op_webplatform.WorldStatus.verify|verify} messages.\n             * @function encode\n             * @memberof op_webplatform.WorldStatus\n             * @static\n             * @param {op_webplatform.IWorldStatus} message WorldStatus message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            WorldStatus.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.worldUuid);\n                $root.op_webplatform.ServiceStatus.encode(message.serviceStatus, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                if (message.virtualWorldConnectionStatus != null && message.virtualWorldConnectionStatus.length)\n                    for (var i = 0; i < message.virtualWorldConnectionStatus.length; ++i)\n                        $root.op_webplatform.VirtualWorldConnectionStatus.encode(message.virtualWorldConnectionStatus[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified WorldStatus message, length delimited. Does not implicitly {@link op_webplatform.WorldStatus.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_webplatform.WorldStatus\n             * @static\n             * @param {op_webplatform.IWorldStatus} message WorldStatus message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            WorldStatus.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a WorldStatus message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_webplatform.WorldStatus\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_webplatform.WorldStatus} WorldStatus\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            WorldStatus.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_webplatform.WorldStatus();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.worldUuid = reader.string();\n                        break;\n                    case 2:\n                        message.serviceStatus = $root.op_webplatform.ServiceStatus.decode(reader, reader.uint32());\n                        break;\n                    case 3:\n                        if (!(message.virtualWorldConnectionStatus && message.virtualWorldConnectionStatus.length))\n                            message.virtualWorldConnectionStatus = [];\n                        message.virtualWorldConnectionStatus.push($root.op_webplatform.VirtualWorldConnectionStatus.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("worldUuid"))\n                    throw $util.ProtocolError("missing required \'worldUuid\'", { instance: message });\n                if (!message.hasOwnProperty("serviceStatus"))\n                    throw $util.ProtocolError("missing required \'serviceStatus\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a WorldStatus message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_webplatform.WorldStatus\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_webplatform.WorldStatus} WorldStatus\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            WorldStatus.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a WorldStatus message.\n             * @function verify\n             * @memberof op_webplatform.WorldStatus\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            WorldStatus.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.worldUuid))\n                    return "worldUuid: string expected";\n                {\n                    var error = $root.op_webplatform.ServiceStatus.verify(message.serviceStatus);\n                    if (error)\n                        return "serviceStatus." + error;\n                }\n                if (message.virtualWorldConnectionStatus != null && message.hasOwnProperty("virtualWorldConnectionStatus")) {\n                    if (!Array.isArray(message.virtualWorldConnectionStatus))\n                        return "virtualWorldConnectionStatus: array expected";\n                    for (var i = 0; i < message.virtualWorldConnectionStatus.length; ++i) {\n                        var error = $root.op_webplatform.VirtualWorldConnectionStatus.verify(message.virtualWorldConnectionStatus[i]);\n                        if (error)\n                            return "virtualWorldConnectionStatus." + error;\n                    }\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a WorldStatus message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_webplatform.WorldStatus\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_webplatform.WorldStatus} WorldStatus\n             */\n            WorldStatus.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_webplatform.WorldStatus)\n                    return object;\n                var message = new $root.op_webplatform.WorldStatus();\n                if (object.worldUuid != null)\n                    message.worldUuid = String(object.worldUuid);\n                if (object.serviceStatus != null) {\n                    if (typeof object.serviceStatus !== "object")\n                        throw TypeError(".op_webplatform.WorldStatus.serviceStatus: object expected");\n                    message.serviceStatus = $root.op_webplatform.ServiceStatus.fromObject(object.serviceStatus);\n                }\n                if (object.virtualWorldConnectionStatus) {\n                    if (!Array.isArray(object.virtualWorldConnectionStatus))\n                        throw TypeError(".op_webplatform.WorldStatus.virtualWorldConnectionStatus: array expected");\n                    message.virtualWorldConnectionStatus = [];\n                    for (var i = 0; i < object.virtualWorldConnectionStatus.length; ++i) {\n                        if (typeof object.virtualWorldConnectionStatus[i] !== "object")\n                            throw TypeError(".op_webplatform.WorldStatus.virtualWorldConnectionStatus: object expected");\n                        message.virtualWorldConnectionStatus[i] = $root.op_webplatform.VirtualWorldConnectionStatus.fromObject(object.virtualWorldConnectionStatus[i]);\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a WorldStatus message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_webplatform.WorldStatus\n             * @static\n             * @param {op_webplatform.WorldStatus} message WorldStatus\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            WorldStatus.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.virtualWorldConnectionStatus = [];\n                if (options.defaults) {\n                    object.worldUuid = "";\n                    object.serviceStatus = null;\n                }\n                if (message.worldUuid != null && message.hasOwnProperty("worldUuid"))\n                    object.worldUuid = message.worldUuid;\n                if (message.serviceStatus != null && message.hasOwnProperty("serviceStatus"))\n                    object.serviceStatus = $root.op_webplatform.ServiceStatus.toObject(message.serviceStatus, options);\n                if (message.virtualWorldConnectionStatus && message.virtualWorldConnectionStatus.length) {\n                    object.virtualWorldConnectionStatus = [];\n                    for (var j = 0; j < message.virtualWorldConnectionStatus.length; ++j)\n                        object.virtualWorldConnectionStatus[j] = $root.op_webplatform.VirtualWorldConnectionStatus.toObject(message.virtualWorldConnectionStatus[j], options);\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this WorldStatus to JSON.\n             * @function toJSON\n             * @memberof op_webplatform.WorldStatus\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            WorldStatus.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return WorldStatus;\n        })();\n    \n        op_webplatform.GalaxyStatus = (function() {\n    \n            /**\n             * Properties of a GalaxyStatus.\n             * @memberof op_webplatform\n             * @interface IGalaxyStatus\n             * @property {string} galaxyUuid GalaxyStatus galaxyUuid\n             * @property {op_webplatform.IServiceStatus} serviceStatus GalaxyStatus serviceStatus\n             * @property {Array.<op_webplatform.IWorldStatus>|null} [worldStatus] GalaxyStatus worldStatus\n             */\n    \n            /**\n             * Constructs a new GalaxyStatus.\n             * @memberof op_webplatform\n             * @classdesc Represents a GalaxyStatus.\n             * @implements IGalaxyStatus\n             * @constructor\n             * @param {op_webplatform.IGalaxyStatus=} [properties] Properties to set\n             */\n            function GalaxyStatus(properties) {\n                this.worldStatus = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * GalaxyStatus galaxyUuid.\n             * @member {string} galaxyUuid\n             * @memberof op_webplatform.GalaxyStatus\n             * @instance\n             */\n            GalaxyStatus.prototype.galaxyUuid = "";\n    \n            /**\n             * GalaxyStatus serviceStatus.\n             * @member {op_webplatform.IServiceStatus} serviceStatus\n             * @memberof op_webplatform.GalaxyStatus\n             * @instance\n             */\n            GalaxyStatus.prototype.serviceStatus = null;\n    \n            /**\n             * GalaxyStatus worldStatus.\n             * @member {Array.<op_webplatform.IWorldStatus>} worldStatus\n             * @memberof op_webplatform.GalaxyStatus\n             * @instance\n             */\n            GalaxyStatus.prototype.worldStatus = $util.emptyArray;\n    \n            /**\n             * Creates a new GalaxyStatus instance using the specified properties.\n             * @function create\n             * @memberof op_webplatform.GalaxyStatus\n             * @static\n             * @param {op_webplatform.IGalaxyStatus=} [properties] Properties to set\n             * @returns {op_webplatform.GalaxyStatus} GalaxyStatus instance\n             */\n            GalaxyStatus.create = function create(properties) {\n                return new GalaxyStatus(properties);\n            };\n    \n            /**\n             * Encodes the specified GalaxyStatus message. Does not implicitly {@link op_webplatform.GalaxyStatus.verify|verify} messages.\n             * @function encode\n             * @memberof op_webplatform.GalaxyStatus\n             * @static\n             * @param {op_webplatform.IGalaxyStatus} message GalaxyStatus message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            GalaxyStatus.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.galaxyUuid);\n                $root.op_webplatform.ServiceStatus.encode(message.serviceStatus, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                if (message.worldStatus != null && message.worldStatus.length)\n                    for (var i = 0; i < message.worldStatus.length; ++i)\n                        $root.op_webplatform.WorldStatus.encode(message.worldStatus[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified GalaxyStatus message, length delimited. Does not implicitly {@link op_webplatform.GalaxyStatus.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_webplatform.GalaxyStatus\n             * @static\n             * @param {op_webplatform.IGalaxyStatus} message GalaxyStatus message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            GalaxyStatus.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a GalaxyStatus message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_webplatform.GalaxyStatus\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_webplatform.GalaxyStatus} GalaxyStatus\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            GalaxyStatus.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_webplatform.GalaxyStatus();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.galaxyUuid = reader.string();\n                        break;\n                    case 2:\n                        message.serviceStatus = $root.op_webplatform.ServiceStatus.decode(reader, reader.uint32());\n                        break;\n                    case 3:\n                        if (!(message.worldStatus && message.worldStatus.length))\n                            message.worldStatus = [];\n                        message.worldStatus.push($root.op_webplatform.WorldStatus.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("galaxyUuid"))\n                    throw $util.ProtocolError("missing required \'galaxyUuid\'", { instance: message });\n                if (!message.hasOwnProperty("serviceStatus"))\n                    throw $util.ProtocolError("missing required \'serviceStatus\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a GalaxyStatus message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_webplatform.GalaxyStatus\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_webplatform.GalaxyStatus} GalaxyStatus\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            GalaxyStatus.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a GalaxyStatus message.\n             * @function verify\n             * @memberof op_webplatform.GalaxyStatus\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            GalaxyStatus.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.galaxyUuid))\n                    return "galaxyUuid: string expected";\n                {\n                    var error = $root.op_webplatform.ServiceStatus.verify(message.serviceStatus);\n                    if (error)\n                        return "serviceStatus." + error;\n                }\n                if (message.worldStatus != null && message.hasOwnProperty("worldStatus")) {\n                    if (!Array.isArray(message.worldStatus))\n                        return "worldStatus: array expected";\n                    for (var i = 0; i < message.worldStatus.length; ++i) {\n                        var error = $root.op_webplatform.WorldStatus.verify(message.worldStatus[i]);\n                        if (error)\n                            return "worldStatus." + error;\n                    }\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a GalaxyStatus message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_webplatform.GalaxyStatus\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_webplatform.GalaxyStatus} GalaxyStatus\n             */\n            GalaxyStatus.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_webplatform.GalaxyStatus)\n                    return object;\n                var message = new $root.op_webplatform.GalaxyStatus();\n                if (object.galaxyUuid != null)\n                    message.galaxyUuid = String(object.galaxyUuid);\n                if (object.serviceStatus != null) {\n                    if (typeof object.serviceStatus !== "object")\n                        throw TypeError(".op_webplatform.GalaxyStatus.serviceStatus: object expected");\n                    message.serviceStatus = $root.op_webplatform.ServiceStatus.fromObject(object.serviceStatus);\n                }\n                if (object.worldStatus) {\n                    if (!Array.isArray(object.worldStatus))\n                        throw TypeError(".op_webplatform.GalaxyStatus.worldStatus: array expected");\n                    message.worldStatus = [];\n                    for (var i = 0; i < object.worldStatus.length; ++i) {\n                        if (typeof object.worldStatus[i] !== "object")\n                            throw TypeError(".op_webplatform.GalaxyStatus.worldStatus: object expected");\n                        message.worldStatus[i] = $root.op_webplatform.WorldStatus.fromObject(object.worldStatus[i]);\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a GalaxyStatus message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_webplatform.GalaxyStatus\n             * @static\n             * @param {op_webplatform.GalaxyStatus} message GalaxyStatus\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            GalaxyStatus.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.worldStatus = [];\n                if (options.defaults) {\n                    object.galaxyUuid = "";\n                    object.serviceStatus = null;\n                }\n                if (message.galaxyUuid != null && message.hasOwnProperty("galaxyUuid"))\n                    object.galaxyUuid = message.galaxyUuid;\n                if (message.serviceStatus != null && message.hasOwnProperty("serviceStatus"))\n                    object.serviceStatus = $root.op_webplatform.ServiceStatus.toObject(message.serviceStatus, options);\n                if (message.worldStatus && message.worldStatus.length) {\n                    object.worldStatus = [];\n                    for (var j = 0; j < message.worldStatus.length; ++j)\n                        object.worldStatus[j] = $root.op_webplatform.WorldStatus.toObject(message.worldStatus[j], options);\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this GalaxyStatus to JSON.\n             * @function toJSON\n             * @memberof op_webplatform.GalaxyStatus\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            GalaxyStatus.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return GalaxyStatus;\n        })();\n    \n        op_webplatform.GatewayStatus = (function() {\n    \n            /**\n             * Properties of a GatewayStatus.\n             * @memberof op_webplatform\n             * @interface IGatewayStatus\n             * @property {string} gatewayUuid GatewayStatus gatewayUuid\n             * @property {op_webplatform.IServiceStatus} serviceStatus GatewayStatus serviceStatus\n             */\n    \n            /**\n             * Constructs a new GatewayStatus.\n             * @memberof op_webplatform\n             * @classdesc Represents a GatewayStatus.\n             * @implements IGatewayStatus\n             * @constructor\n             * @param {op_webplatform.IGatewayStatus=} [properties] Properties to set\n             */\n            function GatewayStatus(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * GatewayStatus gatewayUuid.\n             * @member {string} gatewayUuid\n             * @memberof op_webplatform.GatewayStatus\n             * @instance\n             */\n            GatewayStatus.prototype.gatewayUuid = "";\n    \n            /**\n             * GatewayStatus serviceStatus.\n             * @member {op_webplatform.IServiceStatus} serviceStatus\n             * @memberof op_webplatform.GatewayStatus\n             * @instance\n             */\n            GatewayStatus.prototype.serviceStatus = null;\n    \n            /**\n             * Creates a new GatewayStatus instance using the specified properties.\n             * @function create\n             * @memberof op_webplatform.GatewayStatus\n             * @static\n             * @param {op_webplatform.IGatewayStatus=} [properties] Properties to set\n             * @returns {op_webplatform.GatewayStatus} GatewayStatus instance\n             */\n            GatewayStatus.create = function create(properties) {\n                return new GatewayStatus(properties);\n            };\n    \n            /**\n             * Encodes the specified GatewayStatus message. Does not implicitly {@link op_webplatform.GatewayStatus.verify|verify} messages.\n             * @function encode\n             * @memberof op_webplatform.GatewayStatus\n             * @static\n             * @param {op_webplatform.IGatewayStatus} message GatewayStatus message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            GatewayStatus.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.gatewayUuid);\n                $root.op_webplatform.ServiceStatus.encode(message.serviceStatus, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified GatewayStatus message, length delimited. Does not implicitly {@link op_webplatform.GatewayStatus.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_webplatform.GatewayStatus\n             * @static\n             * @param {op_webplatform.IGatewayStatus} message GatewayStatus message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            GatewayStatus.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a GatewayStatus message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_webplatform.GatewayStatus\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_webplatform.GatewayStatus} GatewayStatus\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            GatewayStatus.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_webplatform.GatewayStatus();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.gatewayUuid = reader.string();\n                        break;\n                    case 2:\n                        message.serviceStatus = $root.op_webplatform.ServiceStatus.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("gatewayUuid"))\n                    throw $util.ProtocolError("missing required \'gatewayUuid\'", { instance: message });\n                if (!message.hasOwnProperty("serviceStatus"))\n                    throw $util.ProtocolError("missing required \'serviceStatus\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a GatewayStatus message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_webplatform.GatewayStatus\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_webplatform.GatewayStatus} GatewayStatus\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            GatewayStatus.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a GatewayStatus message.\n             * @function verify\n             * @memberof op_webplatform.GatewayStatus\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            GatewayStatus.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.gatewayUuid))\n                    return "gatewayUuid: string expected";\n                {\n                    var error = $root.op_webplatform.ServiceStatus.verify(message.serviceStatus);\n                    if (error)\n                        return "serviceStatus." + error;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a GatewayStatus message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_webplatform.GatewayStatus\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_webplatform.GatewayStatus} GatewayStatus\n             */\n            GatewayStatus.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_webplatform.GatewayStatus)\n                    return object;\n                var message = new $root.op_webplatform.GatewayStatus();\n                if (object.gatewayUuid != null)\n                    message.gatewayUuid = String(object.gatewayUuid);\n                if (object.serviceStatus != null) {\n                    if (typeof object.serviceStatus !== "object")\n                        throw TypeError(".op_webplatform.GatewayStatus.serviceStatus: object expected");\n                    message.serviceStatus = $root.op_webplatform.ServiceStatus.fromObject(object.serviceStatus);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a GatewayStatus message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_webplatform.GatewayStatus\n             * @static\n             * @param {op_webplatform.GatewayStatus} message GatewayStatus\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            GatewayStatus.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.gatewayUuid = "";\n                    object.serviceStatus = null;\n                }\n                if (message.gatewayUuid != null && message.hasOwnProperty("gatewayUuid"))\n                    object.gatewayUuid = message.gatewayUuid;\n                if (message.serviceStatus != null && message.hasOwnProperty("serviceStatus"))\n                    object.serviceStatus = $root.op_webplatform.ServiceStatus.toObject(message.serviceStatus, options);\n                return object;\n            };\n    \n            /**\n             * Converts this GatewayStatus to JSON.\n             * @function toJSON\n             * @memberof op_webplatform.GatewayStatus\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            GatewayStatus.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return GatewayStatus;\n        })();\n    \n        op_webplatform.OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS = (function() {\n    \n            /**\n             * Properties of a OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS.\n             * @memberof op_webplatform\n             * @interface IOP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS\n             * @property {string} copUuid OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS copUuid\n             * @property {Array.<op_webplatform.IGatewayStatus>|null} [gatewayStatus] OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS gatewayStatus\n             */\n    \n            /**\n             * Constructs a new OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS.\n             * @memberof op_webplatform\n             * @classdesc Represents a OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS.\n             * @implements IOP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS\n             * @constructor\n             * @param {op_webplatform.IOP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS=} [properties] Properties to set\n             */\n            function OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS(properties) {\n                this.gatewayStatus = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS copUuid.\n             * @member {string} copUuid\n             * @memberof op_webplatform.OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS\n             * @instance\n             */\n            OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS.prototype.copUuid = "";\n    \n            /**\n             * OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS gatewayStatus.\n             * @member {Array.<op_webplatform.IGatewayStatus>} gatewayStatus\n             * @memberof op_webplatform.OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS\n             * @instance\n             */\n            OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS.prototype.gatewayStatus = $util.emptyArray;\n    \n            /**\n             * Creates a new OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS instance using the specified properties.\n             * @function create\n             * @memberof op_webplatform.OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS\n             * @static\n             * @param {op_webplatform.IOP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS=} [properties] Properties to set\n             * @returns {op_webplatform.OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS} OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS instance\n             */\n            OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS.create = function create(properties) {\n                return new OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS message. Does not implicitly {@link op_webplatform.OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS.verify|verify} messages.\n             * @function encode\n             * @memberof op_webplatform.OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS\n             * @static\n             * @param {op_webplatform.IOP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS} message OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.copUuid);\n                if (message.gatewayStatus != null && message.gatewayStatus.length)\n                    for (var i = 0; i < message.gatewayStatus.length; ++i)\n                        $root.op_webplatform.GatewayStatus.encode(message.gatewayStatus[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS message, length delimited. Does not implicitly {@link op_webplatform.OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_webplatform.OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS\n             * @static\n             * @param {op_webplatform.IOP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS} message OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_webplatform.OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_webplatform.OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS} OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_webplatform.OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.copUuid = reader.string();\n                        break;\n                    case 2:\n                        if (!(message.gatewayStatus && message.gatewayStatus.length))\n                            message.gatewayStatus = [];\n                        message.gatewayStatus.push($root.op_webplatform.GatewayStatus.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("copUuid"))\n                    throw $util.ProtocolError("missing required \'copUuid\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_webplatform.OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_webplatform.OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS} OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS message.\n             * @function verify\n             * @memberof op_webplatform.OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.copUuid))\n                    return "copUuid: string expected";\n                if (message.gatewayStatus != null && message.hasOwnProperty("gatewayStatus")) {\n                    if (!Array.isArray(message.gatewayStatus))\n                        return "gatewayStatus: array expected";\n                    for (var i = 0; i < message.gatewayStatus.length; ++i) {\n                        var error = $root.op_webplatform.GatewayStatus.verify(message.gatewayStatus[i]);\n                        if (error)\n                            return "gatewayStatus." + error;\n                    }\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_webplatform.OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_webplatform.OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS} OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS\n             */\n            OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_webplatform.OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS)\n                    return object;\n                var message = new $root.op_webplatform.OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS();\n                if (object.copUuid != null)\n                    message.copUuid = String(object.copUuid);\n                if (object.gatewayStatus) {\n                    if (!Array.isArray(object.gatewayStatus))\n                        throw TypeError(".op_webplatform.OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS.gatewayStatus: array expected");\n                    message.gatewayStatus = [];\n                    for (var i = 0; i < object.gatewayStatus.length; ++i) {\n                        if (typeof object.gatewayStatus[i] !== "object")\n                            throw TypeError(".op_webplatform.OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS.gatewayStatus: object expected");\n                        message.gatewayStatus[i] = $root.op_webplatform.GatewayStatus.fromObject(object.gatewayStatus[i]);\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_webplatform.OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS\n             * @static\n             * @param {op_webplatform.OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS} message OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.gatewayStatus = [];\n                if (options.defaults)\n                    object.copUuid = "";\n                if (message.copUuid != null && message.hasOwnProperty("copUuid"))\n                    object.copUuid = message.copUuid;\n                if (message.gatewayStatus && message.gatewayStatus.length) {\n                    object.gatewayStatus = [];\n                    for (var j = 0; j < message.gatewayStatus.length; ++j)\n                        object.gatewayStatus[j] = $root.op_webplatform.GatewayStatus.toObject(message.gatewayStatus[j], options);\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS to JSON.\n             * @function toJSON\n             * @memberof op_webplatform.OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_COP_REPORT_WEBPLATFORM_GATEWAY_STATUS;\n        })();\n    \n        op_webplatform.OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS = (function() {\n    \n            /**\n             * Properties of a OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS.\n             * @memberof op_webplatform\n             * @interface IOP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS\n             * @property {string} copUuid OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS copUuid\n             * @property {Array.<op_webplatform.IGalaxyStatus>|null} [galaxyStatus] OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS galaxyStatus\n             */\n    \n            /**\n             * Constructs a new OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS.\n             * @memberof op_webplatform\n             * @classdesc Represents a OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS.\n             * @implements IOP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS\n             * @constructor\n             * @param {op_webplatform.IOP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS=} [properties] Properties to set\n             */\n            function OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS(properties) {\n                this.galaxyStatus = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS copUuid.\n             * @member {string} copUuid\n             * @memberof op_webplatform.OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS\n             * @instance\n             */\n            OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS.prototype.copUuid = "";\n    \n            /**\n             * OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS galaxyStatus.\n             * @member {Array.<op_webplatform.IGalaxyStatus>} galaxyStatus\n             * @memberof op_webplatform.OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS\n             * @instance\n             */\n            OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS.prototype.galaxyStatus = $util.emptyArray;\n    \n            /**\n             * Creates a new OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS instance using the specified properties.\n             * @function create\n             * @memberof op_webplatform.OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS\n             * @static\n             * @param {op_webplatform.IOP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS=} [properties] Properties to set\n             * @returns {op_webplatform.OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS} OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS instance\n             */\n            OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS.create = function create(properties) {\n                return new OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS message. Does not implicitly {@link op_webplatform.OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS.verify|verify} messages.\n             * @function encode\n             * @memberof op_webplatform.OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS\n             * @static\n             * @param {op_webplatform.IOP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS} message OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.copUuid);\n                if (message.galaxyStatus != null && message.galaxyStatus.length)\n                    for (var i = 0; i < message.galaxyStatus.length; ++i)\n                        $root.op_webplatform.GalaxyStatus.encode(message.galaxyStatus[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS message, length delimited. Does not implicitly {@link op_webplatform.OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_webplatform.OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS\n             * @static\n             * @param {op_webplatform.IOP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS} message OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_webplatform.OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_webplatform.OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS} OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_webplatform.OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.copUuid = reader.string();\n                        break;\n                    case 2:\n                        if (!(message.galaxyStatus && message.galaxyStatus.length))\n                            message.galaxyStatus = [];\n                        message.galaxyStatus.push($root.op_webplatform.GalaxyStatus.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("copUuid"))\n                    throw $util.ProtocolError("missing required \'copUuid\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_webplatform.OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_webplatform.OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS} OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS message.\n             * @function verify\n             * @memberof op_webplatform.OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.copUuid))\n                    return "copUuid: string expected";\n                if (message.galaxyStatus != null && message.hasOwnProperty("galaxyStatus")) {\n                    if (!Array.isArray(message.galaxyStatus))\n                        return "galaxyStatus: array expected";\n                    for (var i = 0; i < message.galaxyStatus.length; ++i) {\n                        var error = $root.op_webplatform.GalaxyStatus.verify(message.galaxyStatus[i]);\n                        if (error)\n                            return "galaxyStatus." + error;\n                    }\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_webplatform.OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_webplatform.OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS} OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS\n             */\n            OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_webplatform.OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS)\n                    return object;\n                var message = new $root.op_webplatform.OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS();\n                if (object.copUuid != null)\n                    message.copUuid = String(object.copUuid);\n                if (object.galaxyStatus) {\n                    if (!Array.isArray(object.galaxyStatus))\n                        throw TypeError(".op_webplatform.OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS.galaxyStatus: array expected");\n                    message.galaxyStatus = [];\n                    for (var i = 0; i < object.galaxyStatus.length; ++i) {\n                        if (typeof object.galaxyStatus[i] !== "object")\n                            throw TypeError(".op_webplatform.OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS.galaxyStatus: object expected");\n                        message.galaxyStatus[i] = $root.op_webplatform.GalaxyStatus.fromObject(object.galaxyStatus[i]);\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_webplatform.OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS\n             * @static\n             * @param {op_webplatform.OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS} message OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.galaxyStatus = [];\n                if (options.defaults)\n                    object.copUuid = "";\n                if (message.copUuid != null && message.hasOwnProperty("copUuid"))\n                    object.copUuid = message.copUuid;\n                if (message.galaxyStatus && message.galaxyStatus.length) {\n                    object.galaxyStatus = [];\n                    for (var j = 0; j < message.galaxyStatus.length; ++j)\n                        object.galaxyStatus[j] = $root.op_webplatform.GalaxyStatus.toObject(message.galaxyStatus[j], options);\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS to JSON.\n             * @function toJSON\n             * @memberof op_webplatform.OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_COP_REPORT_WEBPLATFORM_GALAXY_STATUS;\n        })();\n    \n        op_webplatform.OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR = (function() {\n    \n            /**\n             * Properties of a OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR.\n             * @memberof op_webplatform\n             * @interface IOP_GATEWAY_REQ_WEB_PLATFORM_AVATAR\n             * @property {string} userId OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR userId\n             */\n    \n            /**\n             * Constructs a new OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR.\n             * @memberof op_webplatform\n             * @classdesc Represents a OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR.\n             * @implements IOP_GATEWAY_REQ_WEB_PLATFORM_AVATAR\n             * @constructor\n             * @param {op_webplatform.IOP_GATEWAY_REQ_WEB_PLATFORM_AVATAR=} [properties] Properties to set\n             */\n            function OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR userId.\n             * @member {string} userId\n             * @memberof op_webplatform.OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR\n             * @instance\n             */\n            OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR.prototype.userId = "";\n    \n            /**\n             * Creates a new OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR instance using the specified properties.\n             * @function create\n             * @memberof op_webplatform.OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR\n             * @static\n             * @param {op_webplatform.IOP_GATEWAY_REQ_WEB_PLATFORM_AVATAR=} [properties] Properties to set\n             * @returns {op_webplatform.OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR} OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR instance\n             */\n            OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR.create = function create(properties) {\n                return new OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR message. Does not implicitly {@link op_webplatform.OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR.verify|verify} messages.\n             * @function encode\n             * @memberof op_webplatform.OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR\n             * @static\n             * @param {op_webplatform.IOP_GATEWAY_REQ_WEB_PLATFORM_AVATAR} message OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.userId);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR message, length delimited. Does not implicitly {@link op_webplatform.OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_webplatform.OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR\n             * @static\n             * @param {op_webplatform.IOP_GATEWAY_REQ_WEB_PLATFORM_AVATAR} message OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_webplatform.OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_webplatform.OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR} OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_webplatform.OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.userId = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("userId"))\n                    throw $util.ProtocolError("missing required \'userId\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_webplatform.OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_webplatform.OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR} OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR message.\n             * @function verify\n             * @memberof op_webplatform.OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.userId))\n                    return "userId: string expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_webplatform.OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_webplatform.OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR} OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR\n             */\n            OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_webplatform.OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR)\n                    return object;\n                var message = new $root.op_webplatform.OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR();\n                if (object.userId != null)\n                    message.userId = String(object.userId);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_webplatform.OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR\n             * @static\n             * @param {op_webplatform.OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR} message OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.userId = "";\n                if (message.userId != null && message.hasOwnProperty("userId"))\n                    object.userId = message.userId;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR to JSON.\n             * @function toJSON\n             * @memberof op_webplatform.OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_GATEWAY_REQ_WEB_PLATFORM_AVATAR;\n        })();\n    \n        op_webplatform.OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO = (function() {\n    \n            /**\n             * Properties of a OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO.\n             * @memberof op_webplatform\n             * @interface IOP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO\n             * @property {string} userToken OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO userToken\n             */\n    \n            /**\n             * Constructs a new OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO.\n             * @memberof op_webplatform\n             * @classdesc Represents a OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO.\n             * @implements IOP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO\n             * @constructor\n             * @param {op_webplatform.IOP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO=} [properties] Properties to set\n             */\n            function OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO userToken.\n             * @member {string} userToken\n             * @memberof op_webplatform.OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO\n             * @instance\n             */\n            OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO.prototype.userToken = "";\n    \n            /**\n             * Creates a new OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO instance using the specified properties.\n             * @function create\n             * @memberof op_webplatform.OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO\n             * @static\n             * @param {op_webplatform.IOP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO=} [properties] Properties to set\n             * @returns {op_webplatform.OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO} OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO instance\n             */\n            OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO.create = function create(properties) {\n                return new OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO message. Does not implicitly {@link op_webplatform.OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO.verify|verify} messages.\n             * @function encode\n             * @memberof op_webplatform.OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO\n             * @static\n             * @param {op_webplatform.IOP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO} message OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.userToken);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO message, length delimited. Does not implicitly {@link op_webplatform.OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_webplatform.OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO\n             * @static\n             * @param {op_webplatform.IOP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO} message OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_webplatform.OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_webplatform.OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO} OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_webplatform.OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.userToken = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("userToken"))\n                    throw $util.ProtocolError("missing required \'userToken\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_webplatform.OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_webplatform.OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO} OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO message.\n             * @function verify\n             * @memberof op_webplatform.OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.userToken))\n                    return "userToken: string expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_webplatform.OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_webplatform.OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO} OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO\n             */\n            OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_webplatform.OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO)\n                    return object;\n                var message = new $root.op_webplatform.OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO();\n                if (object.userToken != null)\n                    message.userToken = String(object.userToken);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_webplatform.OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO\n             * @static\n             * @param {op_webplatform.OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO} message OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.userToken = "";\n                if (message.userToken != null && message.hasOwnProperty("userToken"))\n                    object.userToken = message.userToken;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO to JSON.\n             * @function toJSON\n             * @memberof op_webplatform.OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_GATEWAY_REQ_WEB_PLATFORM_GET_USER_INFO;\n        })();\n    \n        op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE = (function() {\n    \n            /**\n             * Properties of a OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE.\n             * @memberof op_webplatform\n             * @interface IOP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE\n             * @property {string} userId OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE userId\n             */\n    \n            /**\n             * Constructs a new OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE.\n             * @memberof op_webplatform\n             * @classdesc Represents a OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE.\n             * @implements IOP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE\n             * @constructor\n             * @param {op_webplatform.IOP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE=} [properties] Properties to set\n             */\n            function OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE userId.\n             * @member {string} userId\n             * @memberof op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE\n             * @instance\n             */\n            OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE.prototype.userId = "";\n    \n            /**\n             * Creates a new OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE instance using the specified properties.\n             * @function create\n             * @memberof op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE\n             * @static\n             * @param {op_webplatform.IOP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE=} [properties] Properties to set\n             * @returns {op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE} OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE instance\n             */\n            OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE.create = function create(properties) {\n                return new OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE message. Does not implicitly {@link op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE.verify|verify} messages.\n             * @function encode\n             * @memberof op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE\n             * @static\n             * @param {op_webplatform.IOP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE} message OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.userId);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE message, length delimited. Does not implicitly {@link op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE\n             * @static\n             * @param {op_webplatform.IOP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE} message OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE} OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.userId = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("userId"))\n                    throw $util.ProtocolError("missing required \'userId\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE} OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE message.\n             * @function verify\n             * @memberof op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.userId))\n                    return "userId: string expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE} OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE\n             */\n            OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE)\n                    return object;\n                var message = new $root.op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE();\n                if (object.userId != null)\n                    message.userId = String(object.userId);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE\n             * @static\n             * @param {op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE} message OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.userId = "";\n                if (message.userId != null && message.hasOwnProperty("userId"))\n                    object.userId = message.userId;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE to JSON.\n             * @function toJSON\n             * @memberof op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_PORTAL_REQ_WEB_PLATFORM_QUERY_USER_BALANCE;\n        })();\n    \n        op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER = (function() {\n    \n            /**\n             * Properties of a OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER.\n             * @memberof op_webplatform\n             * @interface IOP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER\n             * @property {string} userId OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER userId\n             * @property {string} orderId OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER orderId\n             * @property {string} gameId OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER gameId\n             * @property {number|null} [tuDing] OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER tuDing\n             */\n    \n            /**\n             * Constructs a new OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER.\n             * @memberof op_webplatform\n             * @classdesc Represents a OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER.\n             * @implements IOP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER\n             * @constructor\n             * @param {op_webplatform.IOP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER=} [properties] Properties to set\n             */\n            function OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER userId.\n             * @member {string} userId\n             * @memberof op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER\n             * @instance\n             */\n            OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER.prototype.userId = "";\n    \n            /**\n             * OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER orderId.\n             * @member {string} orderId\n             * @memberof op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER\n             * @instance\n             */\n            OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER.prototype.orderId = "";\n    \n            /**\n             * OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER gameId.\n             * @member {string} gameId\n             * @memberof op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER\n             * @instance\n             */\n            OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER.prototype.gameId = "";\n    \n            /**\n             * OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER tuDing.\n             * @member {number} tuDing\n             * @memberof op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER\n             * @instance\n             */\n            OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER.prototype.tuDing = 0;\n    \n            /**\n             * Creates a new OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER instance using the specified properties.\n             * @function create\n             * @memberof op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER\n             * @static\n             * @param {op_webplatform.IOP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER=} [properties] Properties to set\n             * @returns {op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER} OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER instance\n             */\n            OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER.create = function create(properties) {\n                return new OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER message. Does not implicitly {@link op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER.verify|verify} messages.\n             * @function encode\n             * @memberof op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER\n             * @static\n             * @param {op_webplatform.IOP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER} message OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.userId);\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.orderId);\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.gameId);\n                if (message.tuDing != null && message.hasOwnProperty("tuDing"))\n                    writer.uint32(/* id 4, wireType 1 =*/33).double(message.tuDing);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER message, length delimited. Does not implicitly {@link op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER\n             * @static\n             * @param {op_webplatform.IOP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER} message OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER} OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.userId = reader.string();\n                        break;\n                    case 2:\n                        message.orderId = reader.string();\n                        break;\n                    case 3:\n                        message.gameId = reader.string();\n                        break;\n                    case 4:\n                        message.tuDing = reader.double();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("userId"))\n                    throw $util.ProtocolError("missing required \'userId\'", { instance: message });\n                if (!message.hasOwnProperty("orderId"))\n                    throw $util.ProtocolError("missing required \'orderId\'", { instance: message });\n                if (!message.hasOwnProperty("gameId"))\n                    throw $util.ProtocolError("missing required \'gameId\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER} OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER message.\n             * @function verify\n             * @memberof op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.userId))\n                    return "userId: string expected";\n                if (!$util.isString(message.orderId))\n                    return "orderId: string expected";\n                if (!$util.isString(message.gameId))\n                    return "gameId: string expected";\n                if (message.tuDing != null && message.hasOwnProperty("tuDing"))\n                    if (typeof message.tuDing !== "number")\n                        return "tuDing: number expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER} OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER\n             */\n            OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER)\n                    return object;\n                var message = new $root.op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER();\n                if (object.userId != null)\n                    message.userId = String(object.userId);\n                if (object.orderId != null)\n                    message.orderId = String(object.orderId);\n                if (object.gameId != null)\n                    message.gameId = String(object.gameId);\n                if (object.tuDing != null)\n                    message.tuDing = Number(object.tuDing);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER\n             * @static\n             * @param {op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER} message OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.userId = "";\n                    object.orderId = "";\n                    object.gameId = "";\n                    object.tuDing = 0;\n                }\n                if (message.userId != null && message.hasOwnProperty("userId"))\n                    object.userId = message.userId;\n                if (message.orderId != null && message.hasOwnProperty("orderId"))\n                    object.orderId = message.orderId;\n                if (message.gameId != null && message.hasOwnProperty("gameId"))\n                    object.gameId = message.gameId;\n                if (message.tuDing != null && message.hasOwnProperty("tuDing"))\n                    object.tuDing = options.json && !isFinite(message.tuDing) ? String(message.tuDing) : message.tuDing;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER to JSON.\n             * @function toJSON\n             * @memberof op_webplatform.OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_PORTAL_REQ_WEB_PLATFORM_TRANSFER_TO_GAME_BILLER;\n        })();\n    \n        op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER.\n             * @memberof op_webplatform\n             * @interface IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER\n             * @property {string} userId OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER userId\n             * @property {string} followerId OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER followerId\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER.\n             * @memberof op_webplatform\n             * @classdesc Represents a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER.\n             * @implements IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER\n             * @constructor\n             * @param {op_webplatform.IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER userId.\n             * @member {string} userId\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER.prototype.userId = "";\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER followerId.\n             * @member {string} followerId\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER.prototype.followerId = "";\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER instance using the specified properties.\n             * @function create\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER\n             * @static\n             * @param {op_webplatform.IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER=} [properties] Properties to set\n             * @returns {op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER} OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER instance\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER message. Does not implicitly {@link op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER.verify|verify} messages.\n             * @function encode\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER\n             * @static\n             * @param {op_webplatform.IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER} message OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.userId);\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.followerId);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER message, length delimited. Does not implicitly {@link op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER\n             * @static\n             * @param {op_webplatform.IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER} message OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER} OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.userId = reader.string();\n                        break;\n                    case 2:\n                        message.followerId = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("userId"))\n                    throw $util.ProtocolError("missing required \'userId\'", { instance: message });\n                if (!message.hasOwnProperty("followerId"))\n                    throw $util.ProtocolError("missing required \'followerId\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER} OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER message.\n             * @function verify\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.userId))\n                    return "userId: string expected";\n                if (!$util.isString(message.followerId))\n                    return "followerId: string expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER} OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER)\n                    return object;\n                var message = new $root.op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER();\n                if (object.userId != null)\n                    message.userId = String(object.userId);\n                if (object.followerId != null)\n                    message.followerId = String(object.followerId);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER\n             * @static\n             * @param {op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER} message OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.userId = "";\n                    object.followerId = "";\n                }\n                if (message.userId != null && message.hasOwnProperty("userId"))\n                    object.userId = message.userId;\n                if (message.followerId != null && message.hasOwnProperty("followerId"))\n                    object.followerId = message.followerId;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER to JSON.\n             * @function toJSON\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_FOLLOWER;\n        })();\n    \n        op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER.\n             * @memberof op_webplatform\n             * @interface IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER\n             * @property {string} userId OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER userId\n             * @property {string} followerId OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER followerId\n             * @property {boolean} follow OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER follow\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER.\n             * @memberof op_webplatform\n             * @classdesc Represents a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER.\n             * @implements IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER\n             * @constructor\n             * @param {op_webplatform.IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER userId.\n             * @member {string} userId\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER.prototype.userId = "";\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER followerId.\n             * @member {string} followerId\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER.prototype.followerId = "";\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER follow.\n             * @member {boolean} follow\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER.prototype.follow = false;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER instance using the specified properties.\n             * @function create\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER\n             * @static\n             * @param {op_webplatform.IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER=} [properties] Properties to set\n             * @returns {op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER} OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER instance\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER message. Does not implicitly {@link op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER.verify|verify} messages.\n             * @function encode\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER\n             * @static\n             * @param {op_webplatform.IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER} message OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.userId);\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.followerId);\n                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.follow);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER message, length delimited. Does not implicitly {@link op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER\n             * @static\n             * @param {op_webplatform.IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER} message OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER} OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.userId = reader.string();\n                        break;\n                    case 2:\n                        message.followerId = reader.string();\n                        break;\n                    case 3:\n                        message.follow = reader.bool();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("userId"))\n                    throw $util.ProtocolError("missing required \'userId\'", { instance: message });\n                if (!message.hasOwnProperty("followerId"))\n                    throw $util.ProtocolError("missing required \'followerId\'", { instance: message });\n                if (!message.hasOwnProperty("follow"))\n                    throw $util.ProtocolError("missing required \'follow\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER} OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER message.\n             * @function verify\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.userId))\n                    return "userId: string expected";\n                if (!$util.isString(message.followerId))\n                    return "followerId: string expected";\n                if (typeof message.follow !== "boolean")\n                    return "follow: boolean expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER} OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER)\n                    return object;\n                var message = new $root.op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER();\n                if (object.userId != null)\n                    message.userId = String(object.userId);\n                if (object.followerId != null)\n                    message.followerId = String(object.followerId);\n                if (object.follow != null)\n                    message.follow = Boolean(object.follow);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER\n             * @static\n             * @param {op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER} message OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.userId = "";\n                    object.followerId = "";\n                    object.follow = false;\n                }\n                if (message.userId != null && message.hasOwnProperty("userId"))\n                    object.userId = message.userId;\n                if (message.followerId != null && message.hasOwnProperty("followerId"))\n                    object.followerId = message.followerId;\n                if (message.follow != null && message.hasOwnProperty("follow"))\n                    object.follow = message.follow;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER to JSON.\n             * @function toJSON\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_FOLLOW_USER;\n        })();\n    \n        op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS.\n             * @memberof op_webplatform\n             * @interface IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS\n             * @property {string} virtualWorldUuid OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS virtualWorldUuid\n             * @property {string} gameId OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS gameId\n             * @property {Array.<string>|null} [userId] OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS userId\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS.\n             * @memberof op_webplatform\n             * @classdesc Represents a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS.\n             * @implements IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS\n             * @constructor\n             * @param {op_webplatform.IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS(properties) {\n                this.userId = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS virtualWorldUuid.\n             * @member {string} virtualWorldUuid\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS.prototype.virtualWorldUuid = "";\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS gameId.\n             * @member {string} gameId\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS.prototype.gameId = "";\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS userId.\n             * @member {Array.<string>} userId\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS.prototype.userId = $util.emptyArray;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS instance using the specified properties.\n             * @function create\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS\n             * @static\n             * @param {op_webplatform.IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS=} [properties] Properties to set\n             * @returns {op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS} OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS instance\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS message. Does not implicitly {@link op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS.verify|verify} messages.\n             * @function encode\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS\n             * @static\n             * @param {op_webplatform.IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS} message OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.virtualWorldUuid);\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.gameId);\n                if (message.userId != null && message.userId.length)\n                    for (var i = 0; i < message.userId.length; ++i)\n                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.userId[i]);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS message, length delimited. Does not implicitly {@link op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS\n             * @static\n             * @param {op_webplatform.IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS} message OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS} OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.virtualWorldUuid = reader.string();\n                        break;\n                    case 2:\n                        message.gameId = reader.string();\n                        break;\n                    case 3:\n                        if (!(message.userId && message.userId.length))\n                            message.userId = [];\n                        message.userId.push(reader.string());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("virtualWorldUuid"))\n                    throw $util.ProtocolError("missing required \'virtualWorldUuid\'", { instance: message });\n                if (!message.hasOwnProperty("gameId"))\n                    throw $util.ProtocolError("missing required \'gameId\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS} OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS message.\n             * @function verify\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.virtualWorldUuid))\n                    return "virtualWorldUuid: string expected";\n                if (!$util.isString(message.gameId))\n                    return "gameId: string expected";\n                if (message.userId != null && message.hasOwnProperty("userId")) {\n                    if (!Array.isArray(message.userId))\n                        return "userId: array expected";\n                    for (var i = 0; i < message.userId.length; ++i)\n                        if (!$util.isString(message.userId[i]))\n                            return "userId: string[] expected";\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS} OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS)\n                    return object;\n                var message = new $root.op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS();\n                if (object.virtualWorldUuid != null)\n                    message.virtualWorldUuid = String(object.virtualWorldUuid);\n                if (object.gameId != null)\n                    message.gameId = String(object.gameId);\n                if (object.userId) {\n                    if (!Array.isArray(object.userId))\n                        throw TypeError(".op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS.userId: array expected");\n                    message.userId = [];\n                    for (var i = 0; i < object.userId.length; ++i)\n                        message.userId[i] = String(object.userId[i]);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS\n             * @static\n             * @param {op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS} message OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.userId = [];\n                if (options.defaults) {\n                    object.virtualWorldUuid = "";\n                    object.gameId = "";\n                }\n                if (message.virtualWorldUuid != null && message.hasOwnProperty("virtualWorldUuid"))\n                    object.virtualWorldUuid = message.virtualWorldUuid;\n                if (message.gameId != null && message.hasOwnProperty("gameId"))\n                    object.gameId = message.gameId;\n                if (message.userId && message.userId.length) {\n                    object.userId = [];\n                    for (var j = 0; j < message.userId.length; ++j)\n                        object.userId[j] = message.userId[j];\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS to JSON.\n             * @function toJSON\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_PLAYERS;\n        })();\n    \n        op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE.\n             * @memberof op_webplatform\n             * @interface IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE\n             * @property {string} virtualWorldUuid OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE virtualWorldUuid\n             * @property {string} gameId OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE gameId\n             * @property {Array.<string>|null} [userId] OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE userId\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE.\n             * @memberof op_webplatform\n             * @classdesc Represents a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE.\n             * @implements IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE\n             * @constructor\n             * @param {op_webplatform.IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE(properties) {\n                this.userId = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE virtualWorldUuid.\n             * @member {string} virtualWorldUuid\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE.prototype.virtualWorldUuid = "";\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE gameId.\n             * @member {string} gameId\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE.prototype.gameId = "";\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE userId.\n             * @member {Array.<string>} userId\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE.prototype.userId = $util.emptyArray;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE instance using the specified properties.\n             * @function create\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE\n             * @static\n             * @param {op_webplatform.IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE=} [properties] Properties to set\n             * @returns {op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE} OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE instance\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE message. Does not implicitly {@link op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE.verify|verify} messages.\n             * @function encode\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE\n             * @static\n             * @param {op_webplatform.IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE} message OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.virtualWorldUuid);\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.gameId);\n                if (message.userId != null && message.userId.length)\n                    for (var i = 0; i < message.userId.length; ++i)\n                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.userId[i]);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE message, length delimited. Does not implicitly {@link op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE\n             * @static\n             * @param {op_webplatform.IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE} message OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE} OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.virtualWorldUuid = reader.string();\n                        break;\n                    case 2:\n                        message.gameId = reader.string();\n                        break;\n                    case 3:\n                        if (!(message.userId && message.userId.length))\n                            message.userId = [];\n                        message.userId.push(reader.string());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("virtualWorldUuid"))\n                    throw $util.ProtocolError("missing required \'virtualWorldUuid\'", { instance: message });\n                if (!message.hasOwnProperty("gameId"))\n                    throw $util.ProtocolError("missing required \'gameId\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE} OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE message.\n             * @function verify\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.virtualWorldUuid))\n                    return "virtualWorldUuid: string expected";\n                if (!$util.isString(message.gameId))\n                    return "gameId: string expected";\n                if (message.userId != null && message.hasOwnProperty("userId")) {\n                    if (!Array.isArray(message.userId))\n                        return "userId: array expected";\n                    for (var i = 0; i < message.userId.length; ++i)\n                        if (!$util.isString(message.userId[i]))\n                            return "userId: string[] expected";\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE} OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE)\n                    return object;\n                var message = new $root.op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE();\n                if (object.virtualWorldUuid != null)\n                    message.virtualWorldUuid = String(object.virtualWorldUuid);\n                if (object.gameId != null)\n                    message.gameId = String(object.gameId);\n                if (object.userId) {\n                    if (!Array.isArray(object.userId))\n                        throw TypeError(".op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE.userId: array expected");\n                    message.userId = [];\n                    for (var i = 0; i < object.userId.length; ++i)\n                        message.userId[i] = String(object.userId[i]);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE\n             * @static\n             * @param {op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE} message OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.userId = [];\n                if (options.defaults) {\n                    object.virtualWorldUuid = "";\n                    object.gameId = "";\n                }\n                if (message.virtualWorldUuid != null && message.hasOwnProperty("virtualWorldUuid"))\n                    object.virtualWorldUuid = message.virtualWorldUuid;\n                if (message.gameId != null && message.hasOwnProperty("gameId"))\n                    object.gameId = message.gameId;\n                if (message.userId && message.userId.length) {\n                    object.userId = [];\n                    for (var j = 0; j < message.userId.length; ++j)\n                        object.userId[j] = message.userId[j];\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE to JSON.\n             * @function toJSON\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_PLAYERS_OFFLINE;\n        })();\n    \n        op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE.\n             * @memberof op_webplatform\n             * @interface IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE\n             * @property {string} virtualWorldUuid OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE virtualWorldUuid\n             * @property {string} gameId OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE gameId\n             * @property {Array.<string>|null} [userId] OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE userId\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE.\n             * @memberof op_webplatform\n             * @classdesc Represents a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE.\n             * @implements IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE\n             * @constructor\n             * @param {op_webplatform.IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE(properties) {\n                this.userId = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE virtualWorldUuid.\n             * @member {string} virtualWorldUuid\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE.prototype.virtualWorldUuid = "";\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE gameId.\n             * @member {string} gameId\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE.prototype.gameId = "";\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE userId.\n             * @member {Array.<string>} userId\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE.prototype.userId = $util.emptyArray;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE instance using the specified properties.\n             * @function create\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE\n             * @static\n             * @param {op_webplatform.IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE=} [properties] Properties to set\n             * @returns {op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE} OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE instance\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE message. Does not implicitly {@link op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE.verify|verify} messages.\n             * @function encode\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE\n             * @static\n             * @param {op_webplatform.IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE} message OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.virtualWorldUuid);\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.gameId);\n                if (message.userId != null && message.userId.length)\n                    for (var i = 0; i < message.userId.length; ++i)\n                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.userId[i]);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE message, length delimited. Does not implicitly {@link op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE\n             * @static\n             * @param {op_webplatform.IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE} message OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE} OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.virtualWorldUuid = reader.string();\n                        break;\n                    case 2:\n                        message.gameId = reader.string();\n                        break;\n                    case 3:\n                        if (!(message.userId && message.userId.length))\n                            message.userId = [];\n                        message.userId.push(reader.string());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("virtualWorldUuid"))\n                    throw $util.ProtocolError("missing required \'virtualWorldUuid\'", { instance: message });\n                if (!message.hasOwnProperty("gameId"))\n                    throw $util.ProtocolError("missing required \'gameId\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE} OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE message.\n             * @function verify\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.virtualWorldUuid))\n                    return "virtualWorldUuid: string expected";\n                if (!$util.isString(message.gameId))\n                    return "gameId: string expected";\n                if (message.userId != null && message.hasOwnProperty("userId")) {\n                    if (!Array.isArray(message.userId))\n                        return "userId: array expected";\n                    for (var i = 0; i < message.userId.length; ++i)\n                        if (!$util.isString(message.userId[i]))\n                            return "userId: string[] expected";\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE} OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE)\n                    return object;\n                var message = new $root.op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE();\n                if (object.virtualWorldUuid != null)\n                    message.virtualWorldUuid = String(object.virtualWorldUuid);\n                if (object.gameId != null)\n                    message.gameId = String(object.gameId);\n                if (object.userId) {\n                    if (!Array.isArray(object.userId))\n                        throw TypeError(".op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE.userId: array expected");\n                    message.userId = [];\n                    for (var i = 0; i < object.userId.length; ++i)\n                        message.userId[i] = String(object.userId[i]);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE\n             * @static\n             * @param {op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE} message OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.userId = [];\n                if (options.defaults) {\n                    object.virtualWorldUuid = "";\n                    object.gameId = "";\n                }\n                if (message.virtualWorldUuid != null && message.hasOwnProperty("virtualWorldUuid"))\n                    object.virtualWorldUuid = message.virtualWorldUuid;\n                if (message.gameId != null && message.hasOwnProperty("gameId"))\n                    object.gameId = message.gameId;\n                if (message.userId && message.userId.length) {\n                    object.userId = [];\n                    for (var j = 0; j < message.userId.length; ++j)\n                        object.userId[j] = message.userId[j];\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE to JSON.\n             * @function toJSON\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_NEW_PLAYERS_ONLINE;\n        })();\n    \n        op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO.\n             * @memberof op_webplatform\n             * @interface IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO\n             * @property {string} userId OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO userId\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO.\n             * @memberof op_webplatform\n             * @classdesc Represents a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO.\n             * @implements IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO\n             * @constructor\n             * @param {op_webplatform.IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO userId.\n             * @member {string} userId\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO.prototype.userId = "";\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO instance using the specified properties.\n             * @function create\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO\n             * @static\n             * @param {op_webplatform.IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO=} [properties] Properties to set\n             * @returns {op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO} OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO instance\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO message. Does not implicitly {@link op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO.verify|verify} messages.\n             * @function encode\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO\n             * @static\n             * @param {op_webplatform.IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO} message OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.userId);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO message, length delimited. Does not implicitly {@link op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO\n             * @static\n             * @param {op_webplatform.IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO} message OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO} OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.userId = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("userId"))\n                    throw $util.ProtocolError("missing required \'userId\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO} OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO message.\n             * @function verify\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.userId))\n                    return "userId: string expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO} OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO)\n                    return object;\n                var message = new $root.op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO();\n                if (object.userId != null)\n                    message.userId = String(object.userId);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO\n             * @static\n             * @param {op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO} message OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.userId = "";\n                if (message.userId != null && message.hasOwnProperty("userId"))\n                    object.userId = message.userId;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO to JSON.\n             * @function toJSON\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_SYNC_USER_INFO;\n        })();\n    \n        op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO.\n             * @memberof op_webplatform\n             * @interface IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO\n             * @property {string} gameId OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO gameId\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO.\n             * @memberof op_webplatform\n             * @classdesc Represents a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO.\n             * @implements IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO\n             * @constructor\n             * @param {op_webplatform.IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO gameId.\n             * @member {string} gameId\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO.prototype.gameId = "";\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO instance using the specified properties.\n             * @function create\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO\n             * @static\n             * @param {op_webplatform.IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO=} [properties] Properties to set\n             * @returns {op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO} OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO instance\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO message. Does not implicitly {@link op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO.verify|verify} messages.\n             * @function encode\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO\n             * @static\n             * @param {op_webplatform.IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO} message OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.gameId);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO message, length delimited. Does not implicitly {@link op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO\n             * @static\n             * @param {op_webplatform.IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO} message OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO} OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.gameId = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("gameId"))\n                    throw $util.ProtocolError("missing required \'gameId\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO} OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO message.\n             * @function verify\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.gameId))\n                    return "gameId: string expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO} OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO)\n                    return object;\n                var message = new $root.op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO();\n                if (object.gameId != null)\n                    message.gameId = String(object.gameId);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO\n             * @static\n             * @param {op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO} message OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.gameId = "";\n                if (message.gameId != null && message.hasOwnProperty("gameId"))\n                    object.gameId = message.gameId;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO to JSON.\n             * @function toJSON\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_GAME_INFO;\n        })();\n    \n        op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS.\n             * @memberof op_webplatform\n             * @interface IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS\n             * @property {string} gameId OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS gameId\n             * @property {string} token OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS token\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS.\n             * @memberof op_webplatform\n             * @classdesc Represents a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS.\n             * @implements IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS\n             * @constructor\n             * @param {op_webplatform.IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS gameId.\n             * @member {string} gameId\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS.prototype.gameId = "";\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS token.\n             * @member {string} token\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS.prototype.token = "";\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS instance using the specified properties.\n             * @function create\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS\n             * @static\n             * @param {op_webplatform.IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS=} [properties] Properties to set\n             * @returns {op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS} OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS instance\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS message. Does not implicitly {@link op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS.verify|verify} messages.\n             * @function encode\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS\n             * @static\n             * @param {op_webplatform.IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS} message OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.gameId);\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.token);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS message, length delimited. Does not implicitly {@link op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS\n             * @static\n             * @param {op_webplatform.IOP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS} message OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS} OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.gameId = reader.string();\n                        break;\n                    case 2:\n                        message.token = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("gameId"))\n                    throw $util.ProtocolError("missing required \'gameId\'", { instance: message });\n                if (!message.hasOwnProperty("token"))\n                    throw $util.ProtocolError("missing required \'token\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS} OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS message.\n             * @function verify\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.gameId))\n                    return "gameId: string expected";\n                if (!$util.isString(message.token))\n                    return "token: string expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS} OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS)\n                    return object;\n                var message = new $root.op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS();\n                if (object.gameId != null)\n                    message.gameId = String(object.gameId);\n                if (object.token != null)\n                    message.token = String(object.token);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS\n             * @static\n             * @param {op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS} message OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.gameId = "";\n                    object.token = "";\n                }\n                if (message.gameId != null && message.hasOwnProperty("gameId"))\n                    object.gameId = message.gameId;\n                if (message.token != null && message.hasOwnProperty("token"))\n                    object.token = message.token;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS to JSON.\n             * @function toJSON\n             * @memberof op_webplatform.OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_REQ_WEB_PLATFORM_CHECK_GAME_DB_ACCESS;\n        })();\n    \n        return op_webplatform;\n    })();\n    \n    $root.op_gateway = (function() {\n    \n        /**\n         * Namespace op_gateway.\n         * @exports op_gateway\n         * @namespace\n         */\n        var op_gateway = {};\n    \n        /**\n         * OPCODE enum.\n         * @name op_gateway.OPCODE\n         * @enum {string}\n         * @property {number} OP_MAJOR=1 OP_MAJOR value\n         * @property {number} _OP_UNKNOWN=0 _OP_UNKNOWN value\n         * @property {number} _OP_GATEWAY_PING=131071 _OP_GATEWAY_PING value\n         * @property {number} _OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD=69633 _OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD value\n         * @property {number} _OP_WORLD_REQ_GATEWAY_INIT=69635 _OP_WORLD_REQ_GATEWAY_INIT value\n         * @property {number} _OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT=69639 _OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT value\n         * @property {number} _OP_GALAXY_REQ_GATEWAY_INIT=69637 _OP_GALAXY_REQ_GATEWAY_INIT value\n         * @property {number} _OP_WEBPLATFORM_RES_GATEWAY_AVATAR=65537 _OP_WEBPLATFORM_RES_GATEWAY_AVATAR value\n         * @property {number} _OP_WEBPLATFORM_ERROR=65536 _OP_WEBPLATFORM_ERROR value\n         * @property {number} _OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO=65538 _OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO value\n         * @property {number} _OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS=65540 _OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS value\n         * @property {number} _OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT=126977 _OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT value\n         * @property {number} _OP_CLIENT_REQ_GATEWAY_PING=65541 _OP_CLIENT_REQ_GATEWAY_PING value\n         * @property {number} _OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS=65542 _OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS value\n         */\n        op_gateway.OPCODE = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[1] = "OP_MAJOR"] = 1;\n            values[valuesById[0] = "_OP_UNKNOWN"] = 0;\n            values[valuesById[131071] = "_OP_GATEWAY_PING"] = 131071;\n            values[valuesById[69633] = "_OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD"] = 69633;\n            values[valuesById[69635] = "_OP_WORLD_REQ_GATEWAY_INIT"] = 69635;\n            values[valuesById[69639] = "_OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT"] = 69639;\n            values[valuesById[69637] = "_OP_GALAXY_REQ_GATEWAY_INIT"] = 69637;\n            values[valuesById[65537] = "_OP_WEBPLATFORM_RES_GATEWAY_AVATAR"] = 65537;\n            values[valuesById[65536] = "_OP_WEBPLATFORM_ERROR"] = 65536;\n            values[valuesById[65538] = "_OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO"] = 65538;\n            values[valuesById[65540] = "_OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS"] = 65540;\n            values[valuesById[126977] = "_OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT"] = 126977;\n            values[valuesById[65541] = "_OP_CLIENT_REQ_GATEWAY_PING"] = 65541;\n            values[valuesById[65542] = "_OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS"] = 65542;\n            return values;\n        })();\n    \n        op_gateway.OP_GATEWAY_PING = (function() {\n    \n            /**\n             * Properties of a OP_GATEWAY_PING.\n             * @memberof op_gateway\n             * @interface IOP_GATEWAY_PING\n             * @property {string} msg OP_GATEWAY_PING msg\n             */\n    \n            /**\n             * Constructs a new OP_GATEWAY_PING.\n             * @memberof op_gateway\n             * @classdesc Represents a OP_GATEWAY_PING.\n             * @implements IOP_GATEWAY_PING\n             * @constructor\n             * @param {op_gateway.IOP_GATEWAY_PING=} [properties] Properties to set\n             */\n            function OP_GATEWAY_PING(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_GATEWAY_PING msg.\n             * @member {string} msg\n             * @memberof op_gateway.OP_GATEWAY_PING\n             * @instance\n             */\n            OP_GATEWAY_PING.prototype.msg = "";\n    \n            /**\n             * Creates a new OP_GATEWAY_PING instance using the specified properties.\n             * @function create\n             * @memberof op_gateway.OP_GATEWAY_PING\n             * @static\n             * @param {op_gateway.IOP_GATEWAY_PING=} [properties] Properties to set\n             * @returns {op_gateway.OP_GATEWAY_PING} OP_GATEWAY_PING instance\n             */\n            OP_GATEWAY_PING.create = function create(properties) {\n                return new OP_GATEWAY_PING(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_GATEWAY_PING message. Does not implicitly {@link op_gateway.OP_GATEWAY_PING.verify|verify} messages.\n             * @function encode\n             * @memberof op_gateway.OP_GATEWAY_PING\n             * @static\n             * @param {op_gateway.IOP_GATEWAY_PING} message OP_GATEWAY_PING message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_GATEWAY_PING.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.msg);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_GATEWAY_PING message, length delimited. Does not implicitly {@link op_gateway.OP_GATEWAY_PING.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gateway.OP_GATEWAY_PING\n             * @static\n             * @param {op_gateway.IOP_GATEWAY_PING} message OP_GATEWAY_PING message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_GATEWAY_PING.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_GATEWAY_PING message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gateway.OP_GATEWAY_PING\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gateway.OP_GATEWAY_PING} OP_GATEWAY_PING\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_GATEWAY_PING.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gateway.OP_GATEWAY_PING();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.msg = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("msg"))\n                    throw $util.ProtocolError("missing required \'msg\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_GATEWAY_PING message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gateway.OP_GATEWAY_PING\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gateway.OP_GATEWAY_PING} OP_GATEWAY_PING\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_GATEWAY_PING.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_GATEWAY_PING message.\n             * @function verify\n             * @memberof op_gateway.OP_GATEWAY_PING\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_GATEWAY_PING.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.msg))\n                    return "msg: string expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_GATEWAY_PING message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gateway.OP_GATEWAY_PING\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gateway.OP_GATEWAY_PING} OP_GATEWAY_PING\n             */\n            OP_GATEWAY_PING.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gateway.OP_GATEWAY_PING)\n                    return object;\n                var message = new $root.op_gateway.OP_GATEWAY_PING();\n                if (object.msg != null)\n                    message.msg = String(object.msg);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_GATEWAY_PING message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gateway.OP_GATEWAY_PING\n             * @static\n             * @param {op_gateway.OP_GATEWAY_PING} message OP_GATEWAY_PING\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_GATEWAY_PING.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.msg = "";\n                if (message.msg != null && message.hasOwnProperty("msg"))\n                    object.msg = message.msg;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_GATEWAY_PING to JSON.\n             * @function toJSON\n             * @memberof op_gateway.OP_GATEWAY_PING\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_GATEWAY_PING.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_GATEWAY_PING;\n        })();\n    \n        op_gateway.OP_GALAXY_REQ_GATEWAY_INIT = (function() {\n    \n            /**\n             * Properties of a OP_GALAXY_REQ_GATEWAY_INIT.\n             * @memberof op_gateway\n             * @interface IOP_GALAXY_REQ_GATEWAY_INIT\n             * @property {number} uuid OP_GALAXY_REQ_GATEWAY_INIT uuid\n             */\n    \n            /**\n             * Constructs a new OP_GALAXY_REQ_GATEWAY_INIT.\n             * @memberof op_gateway\n             * @classdesc Represents a OP_GALAXY_REQ_GATEWAY_INIT.\n             * @implements IOP_GALAXY_REQ_GATEWAY_INIT\n             * @constructor\n             * @param {op_gateway.IOP_GALAXY_REQ_GATEWAY_INIT=} [properties] Properties to set\n             */\n            function OP_GALAXY_REQ_GATEWAY_INIT(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_GALAXY_REQ_GATEWAY_INIT uuid.\n             * @member {number} uuid\n             * @memberof op_gateway.OP_GALAXY_REQ_GATEWAY_INIT\n             * @instance\n             */\n            OP_GALAXY_REQ_GATEWAY_INIT.prototype.uuid = 0;\n    \n            /**\n             * Creates a new OP_GALAXY_REQ_GATEWAY_INIT instance using the specified properties.\n             * @function create\n             * @memberof op_gateway.OP_GALAXY_REQ_GATEWAY_INIT\n             * @static\n             * @param {op_gateway.IOP_GALAXY_REQ_GATEWAY_INIT=} [properties] Properties to set\n             * @returns {op_gateway.OP_GALAXY_REQ_GATEWAY_INIT} OP_GALAXY_REQ_GATEWAY_INIT instance\n             */\n            OP_GALAXY_REQ_GATEWAY_INIT.create = function create(properties) {\n                return new OP_GALAXY_REQ_GATEWAY_INIT(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_GALAXY_REQ_GATEWAY_INIT message. Does not implicitly {@link op_gateway.OP_GALAXY_REQ_GATEWAY_INIT.verify|verify} messages.\n             * @function encode\n             * @memberof op_gateway.OP_GALAXY_REQ_GATEWAY_INIT\n             * @static\n             * @param {op_gateway.IOP_GALAXY_REQ_GATEWAY_INIT} message OP_GALAXY_REQ_GATEWAY_INIT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_GALAXY_REQ_GATEWAY_INIT.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.uuid);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_GALAXY_REQ_GATEWAY_INIT message, length delimited. Does not implicitly {@link op_gateway.OP_GALAXY_REQ_GATEWAY_INIT.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gateway.OP_GALAXY_REQ_GATEWAY_INIT\n             * @static\n             * @param {op_gateway.IOP_GALAXY_REQ_GATEWAY_INIT} message OP_GALAXY_REQ_GATEWAY_INIT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_GALAXY_REQ_GATEWAY_INIT.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_GALAXY_REQ_GATEWAY_INIT message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gateway.OP_GALAXY_REQ_GATEWAY_INIT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gateway.OP_GALAXY_REQ_GATEWAY_INIT} OP_GALAXY_REQ_GATEWAY_INIT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_GALAXY_REQ_GATEWAY_INIT.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gateway.OP_GALAXY_REQ_GATEWAY_INIT();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.uuid = reader.uint32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("uuid"))\n                    throw $util.ProtocolError("missing required \'uuid\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_GALAXY_REQ_GATEWAY_INIT message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gateway.OP_GALAXY_REQ_GATEWAY_INIT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gateway.OP_GALAXY_REQ_GATEWAY_INIT} OP_GALAXY_REQ_GATEWAY_INIT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_GALAXY_REQ_GATEWAY_INIT.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_GALAXY_REQ_GATEWAY_INIT message.\n             * @function verify\n             * @memberof op_gateway.OP_GALAXY_REQ_GATEWAY_INIT\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_GALAXY_REQ_GATEWAY_INIT.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.uuid))\n                    return "uuid: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_GALAXY_REQ_GATEWAY_INIT message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gateway.OP_GALAXY_REQ_GATEWAY_INIT\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gateway.OP_GALAXY_REQ_GATEWAY_INIT} OP_GALAXY_REQ_GATEWAY_INIT\n             */\n            OP_GALAXY_REQ_GATEWAY_INIT.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gateway.OP_GALAXY_REQ_GATEWAY_INIT)\n                    return object;\n                var message = new $root.op_gateway.OP_GALAXY_REQ_GATEWAY_INIT();\n                if (object.uuid != null)\n                    message.uuid = object.uuid >>> 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_GALAXY_REQ_GATEWAY_INIT message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gateway.OP_GALAXY_REQ_GATEWAY_INIT\n             * @static\n             * @param {op_gateway.OP_GALAXY_REQ_GATEWAY_INIT} message OP_GALAXY_REQ_GATEWAY_INIT\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_GALAXY_REQ_GATEWAY_INIT.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.uuid = 0;\n                if (message.uuid != null && message.hasOwnProperty("uuid"))\n                    object.uuid = message.uuid;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_GALAXY_REQ_GATEWAY_INIT to JSON.\n             * @function toJSON\n             * @memberof op_gateway.OP_GALAXY_REQ_GATEWAY_INIT\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_GALAXY_REQ_GATEWAY_INIT.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_GALAXY_REQ_GATEWAY_INIT;\n        })();\n    \n        op_gateway.OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD = (function() {\n    \n            /**\n             * Properties of a OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD.\n             * @memberof op_gateway\n             * @interface IOP_CLIENT_REQ_GATEWAY_START_NEW_WORLD\n             * @property {string} gameId OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD gameId\n             * @property {string|null} [userId] OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD userId\n             */\n    \n            /**\n             * Constructs a new OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD.\n             * @memberof op_gateway\n             * @classdesc Represents a OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD.\n             * @implements IOP_CLIENT_REQ_GATEWAY_START_NEW_WORLD\n             * @constructor\n             * @param {op_gateway.IOP_CLIENT_REQ_GATEWAY_START_NEW_WORLD=} [properties] Properties to set\n             */\n            function OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD gameId.\n             * @member {string} gameId\n             * @memberof op_gateway.OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD\n             * @instance\n             */\n            OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD.prototype.gameId = "";\n    \n            /**\n             * OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD userId.\n             * @member {string} userId\n             * @memberof op_gateway.OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD\n             * @instance\n             */\n            OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD.prototype.userId = "";\n    \n            /**\n             * Creates a new OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD instance using the specified properties.\n             * @function create\n             * @memberof op_gateway.OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD\n             * @static\n             * @param {op_gateway.IOP_CLIENT_REQ_GATEWAY_START_NEW_WORLD=} [properties] Properties to set\n             * @returns {op_gateway.OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD} OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD instance\n             */\n            OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD.create = function create(properties) {\n                return new OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD message. Does not implicitly {@link op_gateway.OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD.verify|verify} messages.\n             * @function encode\n             * @memberof op_gateway.OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD\n             * @static\n             * @param {op_gateway.IOP_CLIENT_REQ_GATEWAY_START_NEW_WORLD} message OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.gameId);\n                if (message.userId != null && message.hasOwnProperty("userId"))\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.userId);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD message, length delimited. Does not implicitly {@link op_gateway.OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gateway.OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD\n             * @static\n             * @param {op_gateway.IOP_CLIENT_REQ_GATEWAY_START_NEW_WORLD} message OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gateway.OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gateway.OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD} OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gateway.OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.gameId = reader.string();\n                        break;\n                    case 2:\n                        message.userId = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("gameId"))\n                    throw $util.ProtocolError("missing required \'gameId\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gateway.OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gateway.OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD} OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD message.\n             * @function verify\n             * @memberof op_gateway.OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.gameId))\n                    return "gameId: string expected";\n                if (message.userId != null && message.hasOwnProperty("userId"))\n                    if (!$util.isString(message.userId))\n                        return "userId: string expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gateway.OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gateway.OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD} OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD\n             */\n            OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gateway.OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD)\n                    return object;\n                var message = new $root.op_gateway.OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD();\n                if (object.gameId != null)\n                    message.gameId = String(object.gameId);\n                if (object.userId != null)\n                    message.userId = String(object.userId);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gateway.OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD\n             * @static\n             * @param {op_gateway.OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD} message OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.gameId = "";\n                    object.userId = "";\n                }\n                if (message.gameId != null && message.hasOwnProperty("gameId"))\n                    object.gameId = message.gameId;\n                if (message.userId != null && message.hasOwnProperty("userId"))\n                    object.userId = message.userId;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD to JSON.\n             * @function toJSON\n             * @memberof op_gateway.OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_CLIENT_REQ_GATEWAY_START_NEW_WORLD;\n        })();\n    \n        op_gateway.OP_WORLD_REQ_GATEWAY_INIT = (function() {\n    \n            /**\n             * Properties of a OP_WORLD_REQ_GATEWAY_INIT.\n             * @memberof op_gateway\n             * @interface IOP_WORLD_REQ_GATEWAY_INIT\n             * @property {number} uuid OP_WORLD_REQ_GATEWAY_INIT uuid\n             */\n    \n            /**\n             * Constructs a new OP_WORLD_REQ_GATEWAY_INIT.\n             * @memberof op_gateway\n             * @classdesc Represents a OP_WORLD_REQ_GATEWAY_INIT.\n             * @implements IOP_WORLD_REQ_GATEWAY_INIT\n             * @constructor\n             * @param {op_gateway.IOP_WORLD_REQ_GATEWAY_INIT=} [properties] Properties to set\n             */\n            function OP_WORLD_REQ_GATEWAY_INIT(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_WORLD_REQ_GATEWAY_INIT uuid.\n             * @member {number} uuid\n             * @memberof op_gateway.OP_WORLD_REQ_GATEWAY_INIT\n             * @instance\n             */\n            OP_WORLD_REQ_GATEWAY_INIT.prototype.uuid = 0;\n    \n            /**\n             * Creates a new OP_WORLD_REQ_GATEWAY_INIT instance using the specified properties.\n             * @function create\n             * @memberof op_gateway.OP_WORLD_REQ_GATEWAY_INIT\n             * @static\n             * @param {op_gateway.IOP_WORLD_REQ_GATEWAY_INIT=} [properties] Properties to set\n             * @returns {op_gateway.OP_WORLD_REQ_GATEWAY_INIT} OP_WORLD_REQ_GATEWAY_INIT instance\n             */\n            OP_WORLD_REQ_GATEWAY_INIT.create = function create(properties) {\n                return new OP_WORLD_REQ_GATEWAY_INIT(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_WORLD_REQ_GATEWAY_INIT message. Does not implicitly {@link op_gateway.OP_WORLD_REQ_GATEWAY_INIT.verify|verify} messages.\n             * @function encode\n             * @memberof op_gateway.OP_WORLD_REQ_GATEWAY_INIT\n             * @static\n             * @param {op_gateway.IOP_WORLD_REQ_GATEWAY_INIT} message OP_WORLD_REQ_GATEWAY_INIT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_WORLD_REQ_GATEWAY_INIT.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.uuid);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_WORLD_REQ_GATEWAY_INIT message, length delimited. Does not implicitly {@link op_gateway.OP_WORLD_REQ_GATEWAY_INIT.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gateway.OP_WORLD_REQ_GATEWAY_INIT\n             * @static\n             * @param {op_gateway.IOP_WORLD_REQ_GATEWAY_INIT} message OP_WORLD_REQ_GATEWAY_INIT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_WORLD_REQ_GATEWAY_INIT.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_WORLD_REQ_GATEWAY_INIT message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gateway.OP_WORLD_REQ_GATEWAY_INIT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gateway.OP_WORLD_REQ_GATEWAY_INIT} OP_WORLD_REQ_GATEWAY_INIT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_WORLD_REQ_GATEWAY_INIT.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gateway.OP_WORLD_REQ_GATEWAY_INIT();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.uuid = reader.uint32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("uuid"))\n                    throw $util.ProtocolError("missing required \'uuid\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_WORLD_REQ_GATEWAY_INIT message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gateway.OP_WORLD_REQ_GATEWAY_INIT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gateway.OP_WORLD_REQ_GATEWAY_INIT} OP_WORLD_REQ_GATEWAY_INIT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_WORLD_REQ_GATEWAY_INIT.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_WORLD_REQ_GATEWAY_INIT message.\n             * @function verify\n             * @memberof op_gateway.OP_WORLD_REQ_GATEWAY_INIT\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_WORLD_REQ_GATEWAY_INIT.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.uuid))\n                    return "uuid: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_WORLD_REQ_GATEWAY_INIT message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gateway.OP_WORLD_REQ_GATEWAY_INIT\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gateway.OP_WORLD_REQ_GATEWAY_INIT} OP_WORLD_REQ_GATEWAY_INIT\n             */\n            OP_WORLD_REQ_GATEWAY_INIT.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gateway.OP_WORLD_REQ_GATEWAY_INIT)\n                    return object;\n                var message = new $root.op_gateway.OP_WORLD_REQ_GATEWAY_INIT();\n                if (object.uuid != null)\n                    message.uuid = object.uuid >>> 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_WORLD_REQ_GATEWAY_INIT message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gateway.OP_WORLD_REQ_GATEWAY_INIT\n             * @static\n             * @param {op_gateway.OP_WORLD_REQ_GATEWAY_INIT} message OP_WORLD_REQ_GATEWAY_INIT\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_WORLD_REQ_GATEWAY_INIT.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.uuid = 0;\n                if (message.uuid != null && message.hasOwnProperty("uuid"))\n                    object.uuid = message.uuid;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_WORLD_REQ_GATEWAY_INIT to JSON.\n             * @function toJSON\n             * @memberof op_gateway.OP_WORLD_REQ_GATEWAY_INIT\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_WORLD_REQ_GATEWAY_INIT.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_WORLD_REQ_GATEWAY_INIT;\n        })();\n    \n        op_gateway.OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT.\n             * @memberof op_gateway\n             * @interface IOP_VIRTUAL_WORLD_REQ_GATEWAY_INIT\n             * @property {number} uuid OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT uuid\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT.\n             * @memberof op_gateway\n             * @classdesc Represents a OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT.\n             * @implements IOP_VIRTUAL_WORLD_REQ_GATEWAY_INIT\n             * @constructor\n             * @param {op_gateway.IOP_VIRTUAL_WORLD_REQ_GATEWAY_INIT=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT uuid.\n             * @member {number} uuid\n             * @memberof op_gateway.OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT.prototype.uuid = 0;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT instance using the specified properties.\n             * @function create\n             * @memberof op_gateway.OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT\n             * @static\n             * @param {op_gateway.IOP_VIRTUAL_WORLD_REQ_GATEWAY_INIT=} [properties] Properties to set\n             * @returns {op_gateway.OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT} OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT instance\n             */\n            OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT message. Does not implicitly {@link op_gateway.OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT.verify|verify} messages.\n             * @function encode\n             * @memberof op_gateway.OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT\n             * @static\n             * @param {op_gateway.IOP_VIRTUAL_WORLD_REQ_GATEWAY_INIT} message OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.uuid);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT message, length delimited. Does not implicitly {@link op_gateway.OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gateway.OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT\n             * @static\n             * @param {op_gateway.IOP_VIRTUAL_WORLD_REQ_GATEWAY_INIT} message OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gateway.OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gateway.OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT} OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gateway.OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.uuid = reader.uint32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("uuid"))\n                    throw $util.ProtocolError("missing required \'uuid\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gateway.OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gateway.OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT} OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT message.\n             * @function verify\n             * @memberof op_gateway.OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.uuid))\n                    return "uuid: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gateway.OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gateway.OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT} OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT\n             */\n            OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gateway.OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT)\n                    return object;\n                var message = new $root.op_gateway.OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT();\n                if (object.uuid != null)\n                    message.uuid = object.uuid >>> 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gateway.OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT\n             * @static\n             * @param {op_gateway.OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT} message OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.uuid = 0;\n                if (message.uuid != null && message.hasOwnProperty("uuid"))\n                    object.uuid = message.uuid;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT to JSON.\n             * @function toJSON\n             * @memberof op_gateway.OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_REQ_GATEWAY_INIT;\n        })();\n    \n        op_gateway.ServerInitInfo = (function() {\n    \n            /**\n             * Properties of a ServerInitInfo.\n             * @memberof op_gateway\n             * @interface IServerInitInfo\n             * @property {number} serialNumber ServerInitInfo serialNumber\n             * @property {op_def.ServerType} type ServerInitInfo type\n             */\n    \n            /**\n             * Constructs a new ServerInitInfo.\n             * @memberof op_gateway\n             * @classdesc Represents a ServerInitInfo.\n             * @implements IServerInitInfo\n             * @constructor\n             * @param {op_gateway.IServerInitInfo=} [properties] Properties to set\n             */\n            function ServerInitInfo(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * ServerInitInfo serialNumber.\n             * @member {number} serialNumber\n             * @memberof op_gateway.ServerInitInfo\n             * @instance\n             */\n            ServerInitInfo.prototype.serialNumber = 0;\n    \n            /**\n             * ServerInitInfo type.\n             * @member {op_def.ServerType} type\n             * @memberof op_gateway.ServerInitInfo\n             * @instance\n             */\n            ServerInitInfo.prototype.type = 0;\n    \n            /**\n             * Creates a new ServerInitInfo instance using the specified properties.\n             * @function create\n             * @memberof op_gateway.ServerInitInfo\n             * @static\n             * @param {op_gateway.IServerInitInfo=} [properties] Properties to set\n             * @returns {op_gateway.ServerInitInfo} ServerInitInfo instance\n             */\n            ServerInitInfo.create = function create(properties) {\n                return new ServerInitInfo(properties);\n            };\n    \n            /**\n             * Encodes the specified ServerInitInfo message. Does not implicitly {@link op_gateway.ServerInitInfo.verify|verify} messages.\n             * @function encode\n             * @memberof op_gateway.ServerInitInfo\n             * @static\n             * @param {op_gateway.IServerInitInfo} message ServerInitInfo message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ServerInitInfo.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.serialNumber);\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.type);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified ServerInitInfo message, length delimited. Does not implicitly {@link op_gateway.ServerInitInfo.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gateway.ServerInitInfo\n             * @static\n             * @param {op_gateway.IServerInitInfo} message ServerInitInfo message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ServerInitInfo.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a ServerInitInfo message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gateway.ServerInitInfo\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gateway.ServerInitInfo} ServerInitInfo\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ServerInitInfo.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gateway.ServerInitInfo();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.serialNumber = reader.uint32();\n                        break;\n                    case 2:\n                        message.type = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("serialNumber"))\n                    throw $util.ProtocolError("missing required \'serialNumber\'", { instance: message });\n                if (!message.hasOwnProperty("type"))\n                    throw $util.ProtocolError("missing required \'type\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a ServerInitInfo message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gateway.ServerInitInfo\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gateway.ServerInitInfo} ServerInitInfo\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ServerInitInfo.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a ServerInitInfo message.\n             * @function verify\n             * @memberof op_gateway.ServerInitInfo\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            ServerInitInfo.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.serialNumber))\n                    return "serialNumber: integer expected";\n                switch (message.type) {\n                default:\n                    return "type: enum value expected";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                    break;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a ServerInitInfo message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gateway.ServerInitInfo\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gateway.ServerInitInfo} ServerInitInfo\n             */\n            ServerInitInfo.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gateway.ServerInitInfo)\n                    return object;\n                var message = new $root.op_gateway.ServerInitInfo();\n                if (object.serialNumber != null)\n                    message.serialNumber = object.serialNumber >>> 0;\n                switch (object.type) {\n                case "UNKNOWN":\n                case 0:\n                    message.type = 0;\n                    break;\n                case "WORLD":\n                case 1:\n                    message.type = 1;\n                    break;\n                case "GALAXY":\n                case 2:\n                    message.type = 2;\n                    break;\n                case "PROPERTY":\n                case 3:\n                    message.type = 3;\n                    break;\n                case "LOGIN":\n                case 4:\n                    message.type = 4;\n                    break;\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a ServerInitInfo message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gateway.ServerInitInfo\n             * @static\n             * @param {op_gateway.ServerInitInfo} message ServerInitInfo\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            ServerInitInfo.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.serialNumber = 0;\n                    object.type = options.enums === String ? "UNKNOWN" : 0;\n                }\n                if (message.serialNumber != null && message.hasOwnProperty("serialNumber"))\n                    object.serialNumber = message.serialNumber;\n                if (message.type != null && message.hasOwnProperty("type"))\n                    object.type = options.enums === String ? $root.op_def.ServerType[message.type] : message.type;\n                return object;\n            };\n    \n            /**\n             * Converts this ServerInitInfo to JSON.\n             * @function toJSON\n             * @memberof op_gateway.ServerInitInfo\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            ServerInitInfo.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return ServerInitInfo;\n        })();\n    \n        op_gateway.OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT = (function() {\n    \n            /**\n             * Properties of a OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT.\n             * @memberof op_gateway\n             * @interface IOP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT\n             * @property {string} virtualWorldUuid OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT virtualWorldUuid\n             * @property {string} gameId OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT gameId\n             * @property {string} userToken OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT userToken\n             * @property {string|null} [expire] OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT expire\n             * @property {string|null} [fingerprint] OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT fingerprint\n             * @property {boolean|null} [forceCreate] OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT forceCreate\n             * @property {number|null} [sceneId] OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT sceneId\n             * @property {op_def.IPBPoint3f|null} [loc] OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT loc\n             */\n    \n            /**\n             * Constructs a new OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT.\n             * @memberof op_gateway\n             * @classdesc Represents a OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT.\n             * @implements IOP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT\n             * @constructor\n             * @param {op_gateway.IOP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT=} [properties] Properties to set\n             */\n            function OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT virtualWorldUuid.\n             * @member {string} virtualWorldUuid\n             * @memberof op_gateway.OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT.prototype.virtualWorldUuid = "";\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT gameId.\n             * @member {string} gameId\n             * @memberof op_gateway.OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT.prototype.gameId = "";\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT userToken.\n             * @member {string} userToken\n             * @memberof op_gateway.OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT.prototype.userToken = "";\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT expire.\n             * @member {string} expire\n             * @memberof op_gateway.OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT.prototype.expire = "";\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT fingerprint.\n             * @member {string} fingerprint\n             * @memberof op_gateway.OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT.prototype.fingerprint = "";\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT forceCreate.\n             * @member {boolean} forceCreate\n             * @memberof op_gateway.OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT.prototype.forceCreate = false;\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT sceneId.\n             * @member {number} sceneId\n             * @memberof op_gateway.OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT.prototype.sceneId = 0;\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT loc.\n             * @member {op_def.IPBPoint3f|null|undefined} loc\n             * @memberof op_gateway.OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT.prototype.loc = null;\n    \n            /**\n             * Creates a new OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT instance using the specified properties.\n             * @function create\n             * @memberof op_gateway.OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT\n             * @static\n             * @param {op_gateway.IOP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT=} [properties] Properties to set\n             * @returns {op_gateway.OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT} OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT.create = function create(properties) {\n                return new OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT message. Does not implicitly {@link op_gateway.OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT.verify|verify} messages.\n             * @function encode\n             * @memberof op_gateway.OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT\n             * @static\n             * @param {op_gateway.IOP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT} message OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.virtualWorldUuid);\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.gameId);\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.userToken);\n                if (message.expire != null && message.hasOwnProperty("expire"))\n                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.expire);\n                if (message.fingerprint != null && message.hasOwnProperty("fingerprint"))\n                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.fingerprint);\n                if (message.forceCreate != null && message.hasOwnProperty("forceCreate"))\n                    writer.uint32(/* id 6, wireType 0 =*/48).bool(message.forceCreate);\n                if (message.sceneId != null && message.hasOwnProperty("sceneId"))\n                    writer.uint32(/* id 7, wireType 0 =*/56).int32(message.sceneId);\n                if (message.loc != null && message.hasOwnProperty("loc"))\n                    $root.op_def.PBPoint3f.encode(message.loc, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT message, length delimited. Does not implicitly {@link op_gateway.OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gateway.OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT\n             * @static\n             * @param {op_gateway.IOP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT} message OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gateway.OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gateway.OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT} OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gateway.OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.virtualWorldUuid = reader.string();\n                        break;\n                    case 2:\n                        message.gameId = reader.string();\n                        break;\n                    case 3:\n                        message.userToken = reader.string();\n                        break;\n                    case 4:\n                        message.expire = reader.string();\n                        break;\n                    case 5:\n                        message.fingerprint = reader.string();\n                        break;\n                    case 6:\n                        message.forceCreate = reader.bool();\n                        break;\n                    case 7:\n                        message.sceneId = reader.int32();\n                        break;\n                    case 8:\n                        message.loc = $root.op_def.PBPoint3f.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("virtualWorldUuid"))\n                    throw $util.ProtocolError("missing required \'virtualWorldUuid\'", { instance: message });\n                if (!message.hasOwnProperty("gameId"))\n                    throw $util.ProtocolError("missing required \'gameId\'", { instance: message });\n                if (!message.hasOwnProperty("userToken"))\n                    throw $util.ProtocolError("missing required \'userToken\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gateway.OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gateway.OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT} OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT message.\n             * @function verify\n             * @memberof op_gateway.OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.virtualWorldUuid))\n                    return "virtualWorldUuid: string expected";\n                if (!$util.isString(message.gameId))\n                    return "gameId: string expected";\n                if (!$util.isString(message.userToken))\n                    return "userToken: string expected";\n                if (message.expire != null && message.hasOwnProperty("expire"))\n                    if (!$util.isString(message.expire))\n                        return "expire: string expected";\n                if (message.fingerprint != null && message.hasOwnProperty("fingerprint"))\n                    if (!$util.isString(message.fingerprint))\n                        return "fingerprint: string expected";\n                if (message.forceCreate != null && message.hasOwnProperty("forceCreate"))\n                    if (typeof message.forceCreate !== "boolean")\n                        return "forceCreate: boolean expected";\n                if (message.sceneId != null && message.hasOwnProperty("sceneId"))\n                    if (!$util.isInteger(message.sceneId))\n                        return "sceneId: integer expected";\n                if (message.loc != null && message.hasOwnProperty("loc")) {\n                    var error = $root.op_def.PBPoint3f.verify(message.loc);\n                    if (error)\n                        return "loc." + error;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gateway.OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gateway.OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT} OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gateway.OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT)\n                    return object;\n                var message = new $root.op_gateway.OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT();\n                if (object.virtualWorldUuid != null)\n                    message.virtualWorldUuid = String(object.virtualWorldUuid);\n                if (object.gameId != null)\n                    message.gameId = String(object.gameId);\n                if (object.userToken != null)\n                    message.userToken = String(object.userToken);\n                if (object.expire != null)\n                    message.expire = String(object.expire);\n                if (object.fingerprint != null)\n                    message.fingerprint = String(object.fingerprint);\n                if (object.forceCreate != null)\n                    message.forceCreate = Boolean(object.forceCreate);\n                if (object.sceneId != null)\n                    message.sceneId = object.sceneId | 0;\n                if (object.loc != null) {\n                    if (typeof object.loc !== "object")\n                        throw TypeError(".op_gateway.OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT.loc: object expected");\n                    message.loc = $root.op_def.PBPoint3f.fromObject(object.loc);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gateway.OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT\n             * @static\n             * @param {op_gateway.OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT} message OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.virtualWorldUuid = "";\n                    object.gameId = "";\n                    object.userToken = "";\n                    object.expire = "";\n                    object.fingerprint = "";\n                    object.forceCreate = false;\n                    object.sceneId = 0;\n                    object.loc = null;\n                }\n                if (message.virtualWorldUuid != null && message.hasOwnProperty("virtualWorldUuid"))\n                    object.virtualWorldUuid = message.virtualWorldUuid;\n                if (message.gameId != null && message.hasOwnProperty("gameId"))\n                    object.gameId = message.gameId;\n                if (message.userToken != null && message.hasOwnProperty("userToken"))\n                    object.userToken = message.userToken;\n                if (message.expire != null && message.hasOwnProperty("expire"))\n                    object.expire = message.expire;\n                if (message.fingerprint != null && message.hasOwnProperty("fingerprint"))\n                    object.fingerprint = message.fingerprint;\n                if (message.forceCreate != null && message.hasOwnProperty("forceCreate"))\n                    object.forceCreate = message.forceCreate;\n                if (message.sceneId != null && message.hasOwnProperty("sceneId"))\n                    object.sceneId = message.sceneId;\n                if (message.loc != null && message.hasOwnProperty("loc"))\n                    object.loc = $root.op_def.PBPoint3f.toObject(message.loc, options);\n                return object;\n            };\n    \n            /**\n             * Converts this OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT to JSON.\n             * @function toJSON\n             * @memberof op_gateway.OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_CLIENT_REQ_VIRTUAL_WORLD_PLAYER_INIT;\n        })();\n    \n        op_gateway.OP_WEBPLATFORM_RES_GATEWAY_AVATAR = (function() {\n    \n            /**\n             * Properties of a OP_WEBPLATFORM_RES_GATEWAY_AVATAR.\n             * @memberof op_gateway\n             * @interface IOP_WEBPLATFORM_RES_GATEWAY_AVATAR\n             * @property {op_gameconfig.IAvatar} avatar OP_WEBPLATFORM_RES_GATEWAY_AVATAR avatar\n             */\n    \n            /**\n             * Constructs a new OP_WEBPLATFORM_RES_GATEWAY_AVATAR.\n             * @memberof op_gateway\n             * @classdesc Represents a OP_WEBPLATFORM_RES_GATEWAY_AVATAR.\n             * @implements IOP_WEBPLATFORM_RES_GATEWAY_AVATAR\n             * @constructor\n             * @param {op_gateway.IOP_WEBPLATFORM_RES_GATEWAY_AVATAR=} [properties] Properties to set\n             */\n            function OP_WEBPLATFORM_RES_GATEWAY_AVATAR(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_WEBPLATFORM_RES_GATEWAY_AVATAR avatar.\n             * @member {op_gameconfig.IAvatar} avatar\n             * @memberof op_gateway.OP_WEBPLATFORM_RES_GATEWAY_AVATAR\n             * @instance\n             */\n            OP_WEBPLATFORM_RES_GATEWAY_AVATAR.prototype.avatar = null;\n    \n            /**\n             * Creates a new OP_WEBPLATFORM_RES_GATEWAY_AVATAR instance using the specified properties.\n             * @function create\n             * @memberof op_gateway.OP_WEBPLATFORM_RES_GATEWAY_AVATAR\n             * @static\n             * @param {op_gateway.IOP_WEBPLATFORM_RES_GATEWAY_AVATAR=} [properties] Properties to set\n             * @returns {op_gateway.OP_WEBPLATFORM_RES_GATEWAY_AVATAR} OP_WEBPLATFORM_RES_GATEWAY_AVATAR instance\n             */\n            OP_WEBPLATFORM_RES_GATEWAY_AVATAR.create = function create(properties) {\n                return new OP_WEBPLATFORM_RES_GATEWAY_AVATAR(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_WEBPLATFORM_RES_GATEWAY_AVATAR message. Does not implicitly {@link op_gateway.OP_WEBPLATFORM_RES_GATEWAY_AVATAR.verify|verify} messages.\n             * @function encode\n             * @memberof op_gateway.OP_WEBPLATFORM_RES_GATEWAY_AVATAR\n             * @static\n             * @param {op_gateway.IOP_WEBPLATFORM_RES_GATEWAY_AVATAR} message OP_WEBPLATFORM_RES_GATEWAY_AVATAR message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_WEBPLATFORM_RES_GATEWAY_AVATAR.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                $root.op_gameconfig.Avatar.encode(message.avatar, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_WEBPLATFORM_RES_GATEWAY_AVATAR message, length delimited. Does not implicitly {@link op_gateway.OP_WEBPLATFORM_RES_GATEWAY_AVATAR.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gateway.OP_WEBPLATFORM_RES_GATEWAY_AVATAR\n             * @static\n             * @param {op_gateway.IOP_WEBPLATFORM_RES_GATEWAY_AVATAR} message OP_WEBPLATFORM_RES_GATEWAY_AVATAR message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_WEBPLATFORM_RES_GATEWAY_AVATAR.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_WEBPLATFORM_RES_GATEWAY_AVATAR message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gateway.OP_WEBPLATFORM_RES_GATEWAY_AVATAR\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gateway.OP_WEBPLATFORM_RES_GATEWAY_AVATAR} OP_WEBPLATFORM_RES_GATEWAY_AVATAR\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_WEBPLATFORM_RES_GATEWAY_AVATAR.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gateway.OP_WEBPLATFORM_RES_GATEWAY_AVATAR();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.avatar = $root.op_gameconfig.Avatar.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("avatar"))\n                    throw $util.ProtocolError("missing required \'avatar\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_WEBPLATFORM_RES_GATEWAY_AVATAR message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gateway.OP_WEBPLATFORM_RES_GATEWAY_AVATAR\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gateway.OP_WEBPLATFORM_RES_GATEWAY_AVATAR} OP_WEBPLATFORM_RES_GATEWAY_AVATAR\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_WEBPLATFORM_RES_GATEWAY_AVATAR.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_WEBPLATFORM_RES_GATEWAY_AVATAR message.\n             * @function verify\n             * @memberof op_gateway.OP_WEBPLATFORM_RES_GATEWAY_AVATAR\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_WEBPLATFORM_RES_GATEWAY_AVATAR.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                {\n                    var error = $root.op_gameconfig.Avatar.verify(message.avatar);\n                    if (error)\n                        return "avatar." + error;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_WEBPLATFORM_RES_GATEWAY_AVATAR message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gateway.OP_WEBPLATFORM_RES_GATEWAY_AVATAR\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gateway.OP_WEBPLATFORM_RES_GATEWAY_AVATAR} OP_WEBPLATFORM_RES_GATEWAY_AVATAR\n             */\n            OP_WEBPLATFORM_RES_GATEWAY_AVATAR.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gateway.OP_WEBPLATFORM_RES_GATEWAY_AVATAR)\n                    return object;\n                var message = new $root.op_gateway.OP_WEBPLATFORM_RES_GATEWAY_AVATAR();\n                if (object.avatar != null) {\n                    if (typeof object.avatar !== "object")\n                        throw TypeError(".op_gateway.OP_WEBPLATFORM_RES_GATEWAY_AVATAR.avatar: object expected");\n                    message.avatar = $root.op_gameconfig.Avatar.fromObject(object.avatar);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_WEBPLATFORM_RES_GATEWAY_AVATAR message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gateway.OP_WEBPLATFORM_RES_GATEWAY_AVATAR\n             * @static\n             * @param {op_gateway.OP_WEBPLATFORM_RES_GATEWAY_AVATAR} message OP_WEBPLATFORM_RES_GATEWAY_AVATAR\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_WEBPLATFORM_RES_GATEWAY_AVATAR.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.avatar = null;\n                if (message.avatar != null && message.hasOwnProperty("avatar"))\n                    object.avatar = $root.op_gameconfig.Avatar.toObject(message.avatar, options);\n                return object;\n            };\n    \n            /**\n             * Converts this OP_WEBPLATFORM_RES_GATEWAY_AVATAR to JSON.\n             * @function toJSON\n             * @memberof op_gateway.OP_WEBPLATFORM_RES_GATEWAY_AVATAR\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_WEBPLATFORM_RES_GATEWAY_AVATAR.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_WEBPLATFORM_RES_GATEWAY_AVATAR;\n        })();\n    \n        op_gateway.OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO = (function() {\n    \n            /**\n             * Properties of a OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO.\n             * @memberof op_gateway\n             * @interface IOP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO\n             * @property {string} userId OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO userId\n             * @property {op_gameconfig.IAvatar} avatar OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO avatar\n             * @property {string|null} [nickname] OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO nickname\n             * @property {number|null} [createdAt] OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO createdAt\n             * @property {string|null} [username] OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO username\n             * @property {number|null} [level] OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO level\n             * @property {Array.<op_def.IBadgeCard>|null} [badgeCards] OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO badgeCards\n             * @property {Array.<op_def.IBadgeCard>|null} [displayBadgeCards] OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO displayBadgeCards\n             * @property {number|null} [vipLevel] OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO vipLevel\n             * @property {boolean|null} [isVip] OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO isVip\n             * @property {string|null} [bubbleResource] OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO bubbleResource\n             */\n    \n            /**\n             * Constructs a new OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO.\n             * @memberof op_gateway\n             * @classdesc Represents a OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO.\n             * @implements IOP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO\n             * @constructor\n             * @param {op_gateway.IOP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO=} [properties] Properties to set\n             */\n            function OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO(properties) {\n                this.badgeCards = [];\n                this.displayBadgeCards = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO userId.\n             * @member {string} userId\n             * @memberof op_gateway.OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO\n             * @instance\n             */\n            OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO.prototype.userId = "";\n    \n            /**\n             * OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO avatar.\n             * @member {op_gameconfig.IAvatar} avatar\n             * @memberof op_gateway.OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO\n             * @instance\n             */\n            OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO.prototype.avatar = null;\n    \n            /**\n             * OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO nickname.\n             * @member {string} nickname\n             * @memberof op_gateway.OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO\n             * @instance\n             */\n            OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO.prototype.nickname = "";\n    \n            /**\n             * OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO createdAt.\n             * @member {number} createdAt\n             * @memberof op_gateway.OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO\n             * @instance\n             */\n            OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO.prototype.createdAt = 0;\n    \n            /**\n             * OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO username.\n             * @member {string} username\n             * @memberof op_gateway.OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO\n             * @instance\n             */\n            OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO.prototype.username = "";\n    \n            /**\n             * OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO level.\n             * @member {number} level\n             * @memberof op_gateway.OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO\n             * @instance\n             */\n            OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO.prototype.level = 0;\n    \n            /**\n             * OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO badgeCards.\n             * @member {Array.<op_def.IBadgeCard>} badgeCards\n             * @memberof op_gateway.OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO\n             * @instance\n             */\n            OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO.prototype.badgeCards = $util.emptyArray;\n    \n            /**\n             * OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO displayBadgeCards.\n             * @member {Array.<op_def.IBadgeCard>} displayBadgeCards\n             * @memberof op_gateway.OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO\n             * @instance\n             */\n            OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO.prototype.displayBadgeCards = $util.emptyArray;\n    \n            /**\n             * OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO vipLevel.\n             * @member {number} vipLevel\n             * @memberof op_gateway.OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO\n             * @instance\n             */\n            OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO.prototype.vipLevel = 0;\n    \n            /**\n             * OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO isVip.\n             * @member {boolean} isVip\n             * @memberof op_gateway.OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO\n             * @instance\n             */\n            OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO.prototype.isVip = false;\n    \n            /**\n             * OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO bubbleResource.\n             * @member {string} bubbleResource\n             * @memberof op_gateway.OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO\n             * @instance\n             */\n            OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO.prototype.bubbleResource = "";\n    \n            /**\n             * Creates a new OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO instance using the specified properties.\n             * @function create\n             * @memberof op_gateway.OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO\n             * @static\n             * @param {op_gateway.IOP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO=} [properties] Properties to set\n             * @returns {op_gateway.OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO} OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO instance\n             */\n            OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO.create = function create(properties) {\n                return new OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO message. Does not implicitly {@link op_gateway.OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO.verify|verify} messages.\n             * @function encode\n             * @memberof op_gateway.OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO\n             * @static\n             * @param {op_gateway.IOP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO} message OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.userId);\n                $root.op_gameconfig.Avatar.encode(message.avatar, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                if (message.nickname != null && message.hasOwnProperty("nickname"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.nickname);\n                if (message.createdAt != null && message.hasOwnProperty("createdAt"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.createdAt);\n                if (message.username != null && message.hasOwnProperty("username"))\n                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.username);\n                if (message.level != null && message.hasOwnProperty("level"))\n                    writer.uint32(/* id 6, wireType 0 =*/48).int32(message.level);\n                if (message.badgeCards != null && message.badgeCards.length)\n                    for (var i = 0; i < message.badgeCards.length; ++i)\n                        $root.op_def.BadgeCard.encode(message.badgeCards[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n                if (message.displayBadgeCards != null && message.displayBadgeCards.length)\n                    for (var i = 0; i < message.displayBadgeCards.length; ++i)\n                        $root.op_def.BadgeCard.encode(message.displayBadgeCards[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n                if (message.vipLevel != null && message.hasOwnProperty("vipLevel"))\n                    writer.uint32(/* id 9, wireType 0 =*/72).int32(message.vipLevel);\n                if (message.isVip != null && message.hasOwnProperty("isVip"))\n                    writer.uint32(/* id 10, wireType 0 =*/80).bool(message.isVip);\n                if (message.bubbleResource != null && message.hasOwnProperty("bubbleResource"))\n                    writer.uint32(/* id 11, wireType 2 =*/90).string(message.bubbleResource);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO message, length delimited. Does not implicitly {@link op_gateway.OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gateway.OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO\n             * @static\n             * @param {op_gateway.IOP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO} message OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gateway.OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gateway.OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO} OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gateway.OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.userId = reader.string();\n                        break;\n                    case 2:\n                        message.avatar = $root.op_gameconfig.Avatar.decode(reader, reader.uint32());\n                        break;\n                    case 3:\n                        message.nickname = reader.string();\n                        break;\n                    case 4:\n                        message.createdAt = reader.int32();\n                        break;\n                    case 5:\n                        message.username = reader.string();\n                        break;\n                    case 6:\n                        message.level = reader.int32();\n                        break;\n                    case 7:\n                        if (!(message.badgeCards && message.badgeCards.length))\n                            message.badgeCards = [];\n                        message.badgeCards.push($root.op_def.BadgeCard.decode(reader, reader.uint32()));\n                        break;\n                    case 8:\n                        if (!(message.displayBadgeCards && message.displayBadgeCards.length))\n                            message.displayBadgeCards = [];\n                        message.displayBadgeCards.push($root.op_def.BadgeCard.decode(reader, reader.uint32()));\n                        break;\n                    case 9:\n                        message.vipLevel = reader.int32();\n                        break;\n                    case 10:\n                        message.isVip = reader.bool();\n                        break;\n                    case 11:\n                        message.bubbleResource = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("userId"))\n                    throw $util.ProtocolError("missing required \'userId\'", { instance: message });\n                if (!message.hasOwnProperty("avatar"))\n                    throw $util.ProtocolError("missing required \'avatar\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gateway.OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gateway.OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO} OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO message.\n             * @function verify\n             * @memberof op_gateway.OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.userId))\n                    return "userId: string expected";\n                {\n                    var error = $root.op_gameconfig.Avatar.verify(message.avatar);\n                    if (error)\n                        return "avatar." + error;\n                }\n                if (message.nickname != null && message.hasOwnProperty("nickname"))\n                    if (!$util.isString(message.nickname))\n                        return "nickname: string expected";\n                if (message.createdAt != null && message.hasOwnProperty("createdAt"))\n                    if (!$util.isInteger(message.createdAt))\n                        return "createdAt: integer expected";\n                if (message.username != null && message.hasOwnProperty("username"))\n                    if (!$util.isString(message.username))\n                        return "username: string expected";\n                if (message.level != null && message.hasOwnProperty("level"))\n                    if (!$util.isInteger(message.level))\n                        return "level: integer expected";\n                if (message.badgeCards != null && message.hasOwnProperty("badgeCards")) {\n                    if (!Array.isArray(message.badgeCards))\n                        return "badgeCards: array expected";\n                    for (var i = 0; i < message.badgeCards.length; ++i) {\n                        var error = $root.op_def.BadgeCard.verify(message.badgeCards[i]);\n                        if (error)\n                            return "badgeCards." + error;\n                    }\n                }\n                if (message.displayBadgeCards != null && message.hasOwnProperty("displayBadgeCards")) {\n                    if (!Array.isArray(message.displayBadgeCards))\n                        return "displayBadgeCards: array expected";\n                    for (var i = 0; i < message.displayBadgeCards.length; ++i) {\n                        var error = $root.op_def.BadgeCard.verify(message.displayBadgeCards[i]);\n                        if (error)\n                            return "displayBadgeCards." + error;\n                    }\n                }\n                if (message.vipLevel != null && message.hasOwnProperty("vipLevel"))\n                    if (!$util.isInteger(message.vipLevel))\n                        return "vipLevel: integer expected";\n                if (message.isVip != null && message.hasOwnProperty("isVip"))\n                    if (typeof message.isVip !== "boolean")\n                        return "isVip: boolean expected";\n                if (message.bubbleResource != null && message.hasOwnProperty("bubbleResource"))\n                    if (!$util.isString(message.bubbleResource))\n                        return "bubbleResource: string expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gateway.OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gateway.OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO} OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO\n             */\n            OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gateway.OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO)\n                    return object;\n                var message = new $root.op_gateway.OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO();\n                if (object.userId != null)\n                    message.userId = String(object.userId);\n                if (object.avatar != null) {\n                    if (typeof object.avatar !== "object")\n                        throw TypeError(".op_gateway.OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO.avatar: object expected");\n                    message.avatar = $root.op_gameconfig.Avatar.fromObject(object.avatar);\n                }\n                if (object.nickname != null)\n                    message.nickname = String(object.nickname);\n                if (object.createdAt != null)\n                    message.createdAt = object.createdAt | 0;\n                if (object.username != null)\n                    message.username = String(object.username);\n                if (object.level != null)\n                    message.level = object.level | 0;\n                if (object.badgeCards) {\n                    if (!Array.isArray(object.badgeCards))\n                        throw TypeError(".op_gateway.OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO.badgeCards: array expected");\n                    message.badgeCards = [];\n                    for (var i = 0; i < object.badgeCards.length; ++i) {\n                        if (typeof object.badgeCards[i] !== "object")\n                            throw TypeError(".op_gateway.OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO.badgeCards: object expected");\n                        message.badgeCards[i] = $root.op_def.BadgeCard.fromObject(object.badgeCards[i]);\n                    }\n                }\n                if (object.displayBadgeCards) {\n                    if (!Array.isArray(object.displayBadgeCards))\n                        throw TypeError(".op_gateway.OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO.displayBadgeCards: array expected");\n                    message.displayBadgeCards = [];\n                    for (var i = 0; i < object.displayBadgeCards.length; ++i) {\n                        if (typeof object.displayBadgeCards[i] !== "object")\n                            throw TypeError(".op_gateway.OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO.displayBadgeCards: object expected");\n                        message.displayBadgeCards[i] = $root.op_def.BadgeCard.fromObject(object.displayBadgeCards[i]);\n                    }\n                }\n                if (object.vipLevel != null)\n                    message.vipLevel = object.vipLevel | 0;\n                if (object.isVip != null)\n                    message.isVip = Boolean(object.isVip);\n                if (object.bubbleResource != null)\n                    message.bubbleResource = String(object.bubbleResource);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gateway.OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO\n             * @static\n             * @param {op_gateway.OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO} message OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults) {\n                    object.badgeCards = [];\n                    object.displayBadgeCards = [];\n                }\n                if (options.defaults) {\n                    object.userId = "";\n                    object.avatar = null;\n                    object.nickname = "";\n                    object.createdAt = 0;\n                    object.username = "";\n                    object.level = 0;\n                    object.vipLevel = 0;\n                    object.isVip = false;\n                    object.bubbleResource = "";\n                }\n                if (message.userId != null && message.hasOwnProperty("userId"))\n                    object.userId = message.userId;\n                if (message.avatar != null && message.hasOwnProperty("avatar"))\n                    object.avatar = $root.op_gameconfig.Avatar.toObject(message.avatar, options);\n                if (message.nickname != null && message.hasOwnProperty("nickname"))\n                    object.nickname = message.nickname;\n                if (message.createdAt != null && message.hasOwnProperty("createdAt"))\n                    object.createdAt = message.createdAt;\n                if (message.username != null && message.hasOwnProperty("username"))\n                    object.username = message.username;\n                if (message.level != null && message.hasOwnProperty("level"))\n                    object.level = message.level;\n                if (message.badgeCards && message.badgeCards.length) {\n                    object.badgeCards = [];\n                    for (var j = 0; j < message.badgeCards.length; ++j)\n                        object.badgeCards[j] = $root.op_def.BadgeCard.toObject(message.badgeCards[j], options);\n                }\n                if (message.displayBadgeCards && message.displayBadgeCards.length) {\n                    object.displayBadgeCards = [];\n                    for (var j = 0; j < message.displayBadgeCards.length; ++j)\n                        object.displayBadgeCards[j] = $root.op_def.BadgeCard.toObject(message.displayBadgeCards[j], options);\n                }\n                if (message.vipLevel != null && message.hasOwnProperty("vipLevel"))\n                    object.vipLevel = message.vipLevel;\n                if (message.isVip != null && message.hasOwnProperty("isVip"))\n                    object.isVip = message.isVip;\n                if (message.bubbleResource != null && message.hasOwnProperty("bubbleResource"))\n                    object.bubbleResource = message.bubbleResource;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO to JSON.\n             * @function toJSON\n             * @memberof op_gateway.OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_WEB_PLATFORM_RES_GATEWAY_GET_USER_INFO;\n        })();\n    \n        op_gateway.OP_WEBPLATFORM_ERROR = (function() {\n    \n            /**\n             * Properties of a OP_WEBPLATFORM_ERROR.\n             * @memberof op_gateway\n             * @interface IOP_WEBPLATFORM_ERROR\n             * @property {op_def.ResponseStatus} responseStatus OP_WEBPLATFORM_ERROR responseStatus\n             * @property {string} msg OP_WEBPLATFORM_ERROR msg\n             */\n    \n            /**\n             * Constructs a new OP_WEBPLATFORM_ERROR.\n             * @memberof op_gateway\n             * @classdesc Represents a OP_WEBPLATFORM_ERROR.\n             * @implements IOP_WEBPLATFORM_ERROR\n             * @constructor\n             * @param {op_gateway.IOP_WEBPLATFORM_ERROR=} [properties] Properties to set\n             */\n            function OP_WEBPLATFORM_ERROR(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_WEBPLATFORM_ERROR responseStatus.\n             * @member {op_def.ResponseStatus} responseStatus\n             * @memberof op_gateway.OP_WEBPLATFORM_ERROR\n             * @instance\n             */\n            OP_WEBPLATFORM_ERROR.prototype.responseStatus = 0;\n    \n            /**\n             * OP_WEBPLATFORM_ERROR msg.\n             * @member {string} msg\n             * @memberof op_gateway.OP_WEBPLATFORM_ERROR\n             * @instance\n             */\n            OP_WEBPLATFORM_ERROR.prototype.msg = "";\n    \n            /**\n             * Creates a new OP_WEBPLATFORM_ERROR instance using the specified properties.\n             * @function create\n             * @memberof op_gateway.OP_WEBPLATFORM_ERROR\n             * @static\n             * @param {op_gateway.IOP_WEBPLATFORM_ERROR=} [properties] Properties to set\n             * @returns {op_gateway.OP_WEBPLATFORM_ERROR} OP_WEBPLATFORM_ERROR instance\n             */\n            OP_WEBPLATFORM_ERROR.create = function create(properties) {\n                return new OP_WEBPLATFORM_ERROR(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_WEBPLATFORM_ERROR message. Does not implicitly {@link op_gateway.OP_WEBPLATFORM_ERROR.verify|verify} messages.\n             * @function encode\n             * @memberof op_gateway.OP_WEBPLATFORM_ERROR\n             * @static\n             * @param {op_gateway.IOP_WEBPLATFORM_ERROR} message OP_WEBPLATFORM_ERROR message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_WEBPLATFORM_ERROR.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.responseStatus);\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.msg);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_WEBPLATFORM_ERROR message, length delimited. Does not implicitly {@link op_gateway.OP_WEBPLATFORM_ERROR.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gateway.OP_WEBPLATFORM_ERROR\n             * @static\n             * @param {op_gateway.IOP_WEBPLATFORM_ERROR} message OP_WEBPLATFORM_ERROR message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_WEBPLATFORM_ERROR.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_WEBPLATFORM_ERROR message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gateway.OP_WEBPLATFORM_ERROR\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gateway.OP_WEBPLATFORM_ERROR} OP_WEBPLATFORM_ERROR\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_WEBPLATFORM_ERROR.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gateway.OP_WEBPLATFORM_ERROR();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.responseStatus = reader.int32();\n                        break;\n                    case 2:\n                        message.msg = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("responseStatus"))\n                    throw $util.ProtocolError("missing required \'responseStatus\'", { instance: message });\n                if (!message.hasOwnProperty("msg"))\n                    throw $util.ProtocolError("missing required \'msg\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_WEBPLATFORM_ERROR message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gateway.OP_WEBPLATFORM_ERROR\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gateway.OP_WEBPLATFORM_ERROR} OP_WEBPLATFORM_ERROR\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_WEBPLATFORM_ERROR.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_WEBPLATFORM_ERROR message.\n             * @function verify\n             * @memberof op_gateway.OP_WEBPLATFORM_ERROR\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_WEBPLATFORM_ERROR.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                switch (message.responseStatus) {\n                default:\n                    return "responseStatus: enum value expected";\n                case 0:\n                case 4096:\n                case 4098:\n                case 4099:\n                case 4100:\n                case 8193:\n                case 12289:\n                case 16385:\n                case 20481:\n                case 37888:\n                case 37889:\n                case 45056:\n                    break;\n                }\n                if (!$util.isString(message.msg))\n                    return "msg: string expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_WEBPLATFORM_ERROR message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gateway.OP_WEBPLATFORM_ERROR\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gateway.OP_WEBPLATFORM_ERROR} OP_WEBPLATFORM_ERROR\n             */\n            OP_WEBPLATFORM_ERROR.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gateway.OP_WEBPLATFORM_ERROR)\n                    return object;\n                var message = new $root.op_gateway.OP_WEBPLATFORM_ERROR();\n                switch (object.responseStatus) {\n                case "SUCCESS":\n                case 0:\n                    message.responseStatus = 0;\n                    break;\n                case "SERVER_ERROR_UNKNOWN":\n                case 4096:\n                    message.responseStatus = 4096;\n                    break;\n                case "SERVER_ERROR_BUSY":\n                case 4098:\n                    message.responseStatus = 4098;\n                    break;\n                case "SERVER_ERROR_TIMEOUT":\n                case 4099:\n                    message.responseStatus = 4099;\n                    break;\n                case "SERVER_ERROR_SERVICE_NOT_FOUND":\n                case 4100:\n                    message.responseStatus = 4100;\n                    break;\n                case "SERVER_ERROR_BAD_GATEWAY":\n                case 8193:\n                    message.responseStatus = 8193;\n                    break;\n                case "SERVER_ERROR_GALAXY_SERVICE_NOT_FOUND":\n                case 12289:\n                    message.responseStatus = 12289;\n                    break;\n                case "SERVER_ERROR_WORLD_SERVICE_NOT_FOUND":\n                case 16385:\n                    message.responseStatus = 16385;\n                    break;\n                case "SERVER_ERROR_VIRTUAL_WORLD_SERVICE_NOT_FOUND":\n                case 20481:\n                    message.responseStatus = 20481;\n                    break;\n                case "REQUEST_ERROR_WRONG_PARAM":\n                case 37888:\n                    message.responseStatus = 37888;\n                    break;\n                case "REQUEST_UNAUTHORIZED":\n                case 37889:\n                    message.responseStatus = 37889;\n                    break;\n                case "RANSFER_TO_GAME_BILLER_ERROR":\n                case 45056:\n                    message.responseStatus = 45056;\n                    break;\n                }\n                if (object.msg != null)\n                    message.msg = String(object.msg);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_WEBPLATFORM_ERROR message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gateway.OP_WEBPLATFORM_ERROR\n             * @static\n             * @param {op_gateway.OP_WEBPLATFORM_ERROR} message OP_WEBPLATFORM_ERROR\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_WEBPLATFORM_ERROR.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.responseStatus = options.enums === String ? "SUCCESS" : 0;\n                    object.msg = "";\n                }\n                if (message.responseStatus != null && message.hasOwnProperty("responseStatus"))\n                    object.responseStatus = options.enums === String ? $root.op_def.ResponseStatus[message.responseStatus] : message.responseStatus;\n                if (message.msg != null && message.hasOwnProperty("msg"))\n                    object.msg = message.msg;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_WEBPLATFORM_ERROR to JSON.\n             * @function toJSON\n             * @memberof op_gateway.OP_WEBPLATFORM_ERROR\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_WEBPLATFORM_ERROR.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_WEBPLATFORM_ERROR;\n        })();\n    \n        op_gateway.OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS = (function() {\n    \n            /**\n             * Properties of a OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS.\n             * @memberof op_gateway\n             * @interface IOP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS\n             * @property {number} worldId OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS worldId\n             */\n    \n            /**\n             * Constructs a new OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS.\n             * @memberof op_gateway\n             * @classdesc Represents a OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS.\n             * @implements IOP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS\n             * @constructor\n             * @param {op_gateway.IOP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS=} [properties] Properties to set\n             */\n            function OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS worldId.\n             * @member {number} worldId\n             * @memberof op_gateway.OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS\n             * @instance\n             */\n            OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS.prototype.worldId = 0;\n    \n            /**\n             * Creates a new OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS instance using the specified properties.\n             * @function create\n             * @memberof op_gateway.OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS\n             * @static\n             * @param {op_gateway.IOP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS=} [properties] Properties to set\n             * @returns {op_gateway.OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS} OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS instance\n             */\n            OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS.create = function create(properties) {\n                return new OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS message. Does not implicitly {@link op_gateway.OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS.verify|verify} messages.\n             * @function encode\n             * @memberof op_gateway.OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS\n             * @static\n             * @param {op_gateway.IOP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS} message OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.worldId);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS message, length delimited. Does not implicitly {@link op_gateway.OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gateway.OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS\n             * @static\n             * @param {op_gateway.IOP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS} message OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gateway.OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gateway.OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS} OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gateway.OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.worldId = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("worldId"))\n                    throw $util.ProtocolError("missing required \'worldId\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gateway.OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gateway.OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS} OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS message.\n             * @function verify\n             * @memberof op_gateway.OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.worldId))\n                    return "worldId: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gateway.OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gateway.OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS} OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS\n             */\n            OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gateway.OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS)\n                    return object;\n                var message = new $root.op_gateway.OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS();\n                if (object.worldId != null)\n                    message.worldId = object.worldId | 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gateway.OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS\n             * @static\n             * @param {op_gateway.OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS} message OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.worldId = 0;\n                if (message.worldId != null && message.hasOwnProperty("worldId"))\n                    object.worldId = message.worldId;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS to JSON.\n             * @function toJSON\n             * @memberof op_gateway.OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_REQ_GATEWAY_SYNC_WORLD_CONNECTIONS;\n        })();\n    \n        op_gateway.OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS = (function() {\n    \n            /**\n             * Properties of a OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS.\n             * @memberof op_gateway\n             * @interface IOP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS\n             * @property {boolean} enableHeartbeatCheck OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS enableHeartbeatCheck\n             */\n    \n            /**\n             * Constructs a new OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS.\n             * @memberof op_gateway\n             * @classdesc Represents a OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS.\n             * @implements IOP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS\n             * @constructor\n             * @param {op_gateway.IOP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS=} [properties] Properties to set\n             */\n            function OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS enableHeartbeatCheck.\n             * @member {boolean} enableHeartbeatCheck\n             * @memberof op_gateway.OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS\n             * @instance\n             */\n            OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS.prototype.enableHeartbeatCheck = false;\n    \n            /**\n             * Creates a new OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS instance using the specified properties.\n             * @function create\n             * @memberof op_gateway.OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS\n             * @static\n             * @param {op_gateway.IOP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS=} [properties] Properties to set\n             * @returns {op_gateway.OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS} OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS instance\n             */\n            OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS.create = function create(properties) {\n                return new OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS message. Does not implicitly {@link op_gateway.OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS.verify|verify} messages.\n             * @function encode\n             * @memberof op_gateway.OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS\n             * @static\n             * @param {op_gateway.IOP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS} message OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enableHeartbeatCheck);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS message, length delimited. Does not implicitly {@link op_gateway.OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_gateway.OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS\n             * @static\n             * @param {op_gateway.IOP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS} message OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_gateway.OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_gateway.OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS} OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_gateway.OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.enableHeartbeatCheck = reader.bool();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("enableHeartbeatCheck"))\n                    throw $util.ProtocolError("missing required \'enableHeartbeatCheck\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_gateway.OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_gateway.OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS} OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS message.\n             * @function verify\n             * @memberof op_gateway.OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (typeof message.enableHeartbeatCheck !== "boolean")\n                    return "enableHeartbeatCheck: boolean expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_gateway.OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_gateway.OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS} OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS\n             */\n            OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_gateway.OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS)\n                    return object;\n                var message = new $root.op_gateway.OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS();\n                if (object.enableHeartbeatCheck != null)\n                    message.enableHeartbeatCheck = Boolean(object.enableHeartbeatCheck);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_gateway.OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS\n             * @static\n             * @param {op_gateway.OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS} message OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.enableHeartbeatCheck = false;\n                if (message.enableHeartbeatCheck != null && message.hasOwnProperty("enableHeartbeatCheck"))\n                    object.enableHeartbeatCheck = message.enableHeartbeatCheck;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS to JSON.\n             * @function toJSON\n             * @memberof op_gateway.OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_CLIENT_REQ_GATEWAY_CHANGE_HEARTBEAT_CHECK_STATUS;\n        })();\n    \n        return op_gateway;\n    })();\n    \n    $root.op_portal = (function() {\n    \n        /**\n         * Namespace op_portal.\n         * @exports op_portal\n         * @namespace\n         */\n        var op_portal = {};\n    \n        /**\n         * OPCODE enum.\n         * @name op_portal.OPCODE\n         * @enum {string}\n         * @property {number} _OP_UNKNOWN=0 _OP_UNKNOWN value\n         * @property {number} OP_MAJOR=24 OP_MAJOR value\n         * @property {number} _OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE=1572865 _OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE value\n         * @property {number} _OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER=1572867 _OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER value\n         * @property {number} _OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE=1572868 _OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE value\n         * @property {number} _OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER=1572870 _OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER value\n         */\n        op_portal.OPCODE = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = "_OP_UNKNOWN"] = 0;\n            values[valuesById[24] = "OP_MAJOR"] = 24;\n            values[valuesById[1572865] = "_OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE"] = 1572865;\n            values[valuesById[1572867] = "_OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER"] = 1572867;\n            values[valuesById[1572868] = "_OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE"] = 1572868;\n            values[valuesById[1572870] = "_OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER"] = 1572870;\n            return values;\n        })();\n    \n        op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE.\n             * @memberof op_portal\n             * @interface IOP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE\n             * @property {string} userId OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE userId\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE.\n             * @memberof op_portal\n             * @classdesc Represents a OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE.\n             * @implements IOP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE\n             * @constructor\n             * @param {op_portal.IOP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE userId.\n             * @member {string} userId\n             * @memberof op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE.prototype.userId = "";\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE instance using the specified properties.\n             * @function create\n             * @memberof op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE\n             * @static\n             * @param {op_portal.IOP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE=} [properties] Properties to set\n             * @returns {op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE} OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE instance\n             */\n            OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE message. Does not implicitly {@link op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE.verify|verify} messages.\n             * @function encode\n             * @memberof op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE\n             * @static\n             * @param {op_portal.IOP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE} message OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.userId);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE message, length delimited. Does not implicitly {@link op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE\n             * @static\n             * @param {op_portal.IOP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE} message OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE} OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.userId = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("userId"))\n                    throw $util.ProtocolError("missing required \'userId\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE} OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE message.\n             * @function verify\n             * @memberof op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.userId))\n                    return "userId: string expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE} OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE\n             */\n            OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE)\n                    return object;\n                var message = new $root.op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE();\n                if (object.userId != null)\n                    message.userId = String(object.userId);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE\n             * @static\n             * @param {op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE} message OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.userId = "";\n                if (message.userId != null && message.hasOwnProperty("userId"))\n                    object.userId = message.userId;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE to JSON.\n             * @function toJSON\n             * @memberof op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_REQ_PORTAL_QUERY_USER_BALANCE;\n        })();\n    \n        op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER = (function() {\n    \n            /**\n             * Properties of a OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER.\n             * @memberof op_portal\n             * @interface IOP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER\n             * @property {string} userId OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER userId\n             * @property {string} orderId OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER orderId\n             * @property {string} gameId OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER gameId\n             * @property {number|null} [tuDing] OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER tuDing\n             */\n    \n            /**\n             * Constructs a new OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER.\n             * @memberof op_portal\n             * @classdesc Represents a OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER.\n             * @implements IOP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER\n             * @constructor\n             * @param {op_portal.IOP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER=} [properties] Properties to set\n             */\n            function OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER userId.\n             * @member {string} userId\n             * @memberof op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER.prototype.userId = "";\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER orderId.\n             * @member {string} orderId\n             * @memberof op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER.prototype.orderId = "";\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER gameId.\n             * @member {string} gameId\n             * @memberof op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER.prototype.gameId = "";\n    \n            /**\n             * OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER tuDing.\n             * @member {number} tuDing\n             * @memberof op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER\n             * @instance\n             */\n            OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER.prototype.tuDing = 0;\n    \n            /**\n             * Creates a new OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER instance using the specified properties.\n             * @function create\n             * @memberof op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER\n             * @static\n             * @param {op_portal.IOP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER=} [properties] Properties to set\n             * @returns {op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER} OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER instance\n             */\n            OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER.create = function create(properties) {\n                return new OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER message. Does not implicitly {@link op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER.verify|verify} messages.\n             * @function encode\n             * @memberof op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER\n             * @static\n             * @param {op_portal.IOP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER} message OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.userId);\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.orderId);\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.gameId);\n                if (message.tuDing != null && message.hasOwnProperty("tuDing"))\n                    writer.uint32(/* id 4, wireType 1 =*/33).double(message.tuDing);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER message, length delimited. Does not implicitly {@link op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER\n             * @static\n             * @param {op_portal.IOP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER} message OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER} OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.userId = reader.string();\n                        break;\n                    case 2:\n                        message.orderId = reader.string();\n                        break;\n                    case 3:\n                        message.gameId = reader.string();\n                        break;\n                    case 4:\n                        message.tuDing = reader.double();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("userId"))\n                    throw $util.ProtocolError("missing required \'userId\'", { instance: message });\n                if (!message.hasOwnProperty("orderId"))\n                    throw $util.ProtocolError("missing required \'orderId\'", { instance: message });\n                if (!message.hasOwnProperty("gameId"))\n                    throw $util.ProtocolError("missing required \'gameId\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER} OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER message.\n             * @function verify\n             * @memberof op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.userId))\n                    return "userId: string expected";\n                if (!$util.isString(message.orderId))\n                    return "orderId: string expected";\n                if (!$util.isString(message.gameId))\n                    return "gameId: string expected";\n                if (message.tuDing != null && message.hasOwnProperty("tuDing"))\n                    if (typeof message.tuDing !== "number")\n                        return "tuDing: number expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER} OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER\n             */\n            OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER)\n                    return object;\n                var message = new $root.op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER();\n                if (object.userId != null)\n                    message.userId = String(object.userId);\n                if (object.orderId != null)\n                    message.orderId = String(object.orderId);\n                if (object.gameId != null)\n                    message.gameId = String(object.gameId);\n                if (object.tuDing != null)\n                    message.tuDing = Number(object.tuDing);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER\n             * @static\n             * @param {op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER} message OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.userId = "";\n                    object.orderId = "";\n                    object.gameId = "";\n                    object.tuDing = 0;\n                }\n                if (message.userId != null && message.hasOwnProperty("userId"))\n                    object.userId = message.userId;\n                if (message.orderId != null && message.hasOwnProperty("orderId"))\n                    object.orderId = message.orderId;\n                if (message.gameId != null && message.hasOwnProperty("gameId"))\n                    object.gameId = message.gameId;\n                if (message.tuDing != null && message.hasOwnProperty("tuDing"))\n                    object.tuDing = options.json && !isFinite(message.tuDing) ? String(message.tuDing) : message.tuDing;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER to JSON.\n             * @function toJSON\n             * @memberof op_portal.OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_VIRTUAL_WORLD_REQ_PORTAL_TRANSFER_TO_GAME_BILLER;\n        })();\n    \n        op_portal.OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE = (function() {\n    \n            /**\n             * Properties of a OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE.\n             * @memberof op_portal\n             * @interface IOP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE\n             * @property {string} userId OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE userId\n             * @property {number|null} [balanceTuDing] OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE balanceTuDing\n             */\n    \n            /**\n             * Constructs a new OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE.\n             * @memberof op_portal\n             * @classdesc Represents a OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE.\n             * @implements IOP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE\n             * @constructor\n             * @param {op_portal.IOP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE=} [properties] Properties to set\n             */\n            function OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE userId.\n             * @member {string} userId\n             * @memberof op_portal.OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE\n             * @instance\n             */\n            OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE.prototype.userId = "";\n    \n            /**\n             * OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE balanceTuDing.\n             * @member {number} balanceTuDing\n             * @memberof op_portal.OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE\n             * @instance\n             */\n            OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE.prototype.balanceTuDing = 0;\n    \n            /**\n             * Creates a new OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE instance using the specified properties.\n             * @function create\n             * @memberof op_portal.OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE\n             * @static\n             * @param {op_portal.IOP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE=} [properties] Properties to set\n             * @returns {op_portal.OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE} OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE instance\n             */\n            OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE.create = function create(properties) {\n                return new OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE message. Does not implicitly {@link op_portal.OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE.verify|verify} messages.\n             * @function encode\n             * @memberof op_portal.OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE\n             * @static\n             * @param {op_portal.IOP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE} message OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.userId);\n                if (message.balanceTuDing != null && message.hasOwnProperty("balanceTuDing"))\n                    writer.uint32(/* id 2, wireType 1 =*/17).double(message.balanceTuDing);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE message, length delimited. Does not implicitly {@link op_portal.OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_portal.OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE\n             * @static\n             * @param {op_portal.IOP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE} message OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_portal.OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_portal.OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE} OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_portal.OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.userId = reader.string();\n                        break;\n                    case 2:\n                        message.balanceTuDing = reader.double();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("userId"))\n                    throw $util.ProtocolError("missing required \'userId\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_portal.OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_portal.OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE} OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE message.\n             * @function verify\n             * @memberof op_portal.OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.userId))\n                    return "userId: string expected";\n                if (message.balanceTuDing != null && message.hasOwnProperty("balanceTuDing"))\n                    if (typeof message.balanceTuDing !== "number")\n                        return "balanceTuDing: number expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_portal.OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_portal.OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE} OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE\n             */\n            OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_portal.OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE)\n                    return object;\n                var message = new $root.op_portal.OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE();\n                if (object.userId != null)\n                    message.userId = String(object.userId);\n                if (object.balanceTuDing != null)\n                    message.balanceTuDing = Number(object.balanceTuDing);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_portal.OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE\n             * @static\n             * @param {op_portal.OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE} message OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.userId = "";\n                    object.balanceTuDing = 0;\n                }\n                if (message.userId != null && message.hasOwnProperty("userId"))\n                    object.userId = message.userId;\n                if (message.balanceTuDing != null && message.hasOwnProperty("balanceTuDing"))\n                    object.balanceTuDing = options.json && !isFinite(message.balanceTuDing) ? String(message.balanceTuDing) : message.balanceTuDing;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE to JSON.\n             * @function toJSON\n             * @memberof op_portal.OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_WEB_PLATFORM_RES_PORTAL_SYNC_USER_BALANCE;\n        })();\n    \n        op_portal.OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER = (function() {\n    \n            /**\n             * Properties of a OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER.\n             * @memberof op_portal\n             * @interface IOP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER\n             * @property {string} userId OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER userId\n             * @property {string} orderId OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER orderId\n             * @property {string} gameId OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER gameId\n             * @property {op_def.ResponseStatus} responseStatus OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER responseStatus\n             * @property {string|null} [msg] OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER msg\n             * @property {number|null} [balanceTuDing] OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER balanceTuDing\n             */\n    \n            /**\n             * Constructs a new OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER.\n             * @memberof op_portal\n             * @classdesc Represents a OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER.\n             * @implements IOP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER\n             * @constructor\n             * @param {op_portal.IOP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER=} [properties] Properties to set\n             */\n            function OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER userId.\n             * @member {string} userId\n             * @memberof op_portal.OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER\n             * @instance\n             */\n            OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER.prototype.userId = "";\n    \n            /**\n             * OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER orderId.\n             * @member {string} orderId\n             * @memberof op_portal.OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER\n             * @instance\n             */\n            OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER.prototype.orderId = "";\n    \n            /**\n             * OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER gameId.\n             * @member {string} gameId\n             * @memberof op_portal.OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER\n             * @instance\n             */\n            OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER.prototype.gameId = "";\n    \n            /**\n             * OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER responseStatus.\n             * @member {op_def.ResponseStatus} responseStatus\n             * @memberof op_portal.OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER\n             * @instance\n             */\n            OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER.prototype.responseStatus = 0;\n    \n            /**\n             * OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER msg.\n             * @member {string} msg\n             * @memberof op_portal.OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER\n             * @instance\n             */\n            OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER.prototype.msg = "";\n    \n            /**\n             * OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER balanceTuDing.\n             * @member {number} balanceTuDing\n             * @memberof op_portal.OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER\n             * @instance\n             */\n            OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER.prototype.balanceTuDing = 0;\n    \n            /**\n             * Creates a new OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER instance using the specified properties.\n             * @function create\n             * @memberof op_portal.OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER\n             * @static\n             * @param {op_portal.IOP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER=} [properties] Properties to set\n             * @returns {op_portal.OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER} OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER instance\n             */\n            OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER.create = function create(properties) {\n                return new OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER message. Does not implicitly {@link op_portal.OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER.verify|verify} messages.\n             * @function encode\n             * @memberof op_portal.OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER\n             * @static\n             * @param {op_portal.IOP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER} message OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.userId);\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.orderId);\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.gameId);\n                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.responseStatus);\n                if (message.msg != null && message.hasOwnProperty("msg"))\n                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.msg);\n                if (message.balanceTuDing != null && message.hasOwnProperty("balanceTuDing"))\n                    writer.uint32(/* id 6, wireType 1 =*/49).double(message.balanceTuDing);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER message, length delimited. Does not implicitly {@link op_portal.OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_portal.OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER\n             * @static\n             * @param {op_portal.IOP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER} message OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_portal.OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_portal.OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER} OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_portal.OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.userId = reader.string();\n                        break;\n                    case 2:\n                        message.orderId = reader.string();\n                        break;\n                    case 3:\n                        message.gameId = reader.string();\n                        break;\n                    case 4:\n                        message.responseStatus = reader.int32();\n                        break;\n                    case 5:\n                        message.msg = reader.string();\n                        break;\n                    case 6:\n                        message.balanceTuDing = reader.double();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("userId"))\n                    throw $util.ProtocolError("missing required \'userId\'", { instance: message });\n                if (!message.hasOwnProperty("orderId"))\n                    throw $util.ProtocolError("missing required \'orderId\'", { instance: message });\n                if (!message.hasOwnProperty("gameId"))\n                    throw $util.ProtocolError("missing required \'gameId\'", { instance: message });\n                if (!message.hasOwnProperty("responseStatus"))\n                    throw $util.ProtocolError("missing required \'responseStatus\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_portal.OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_portal.OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER} OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER message.\n             * @function verify\n             * @memberof op_portal.OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.userId))\n                    return "userId: string expected";\n                if (!$util.isString(message.orderId))\n                    return "orderId: string expected";\n                if (!$util.isString(message.gameId))\n                    return "gameId: string expected";\n                switch (message.responseStatus) {\n                default:\n                    return "responseStatus: enum value expected";\n                case 0:\n                case 4096:\n                case 4098:\n                case 4099:\n                case 4100:\n                case 8193:\n                case 12289:\n                case 16385:\n                case 20481:\n                case 37888:\n                case 37889:\n                case 45056:\n                    break;\n                }\n                if (message.msg != null && message.hasOwnProperty("msg"))\n                    if (!$util.isString(message.msg))\n                        return "msg: string expected";\n                if (message.balanceTuDing != null && message.hasOwnProperty("balanceTuDing"))\n                    if (typeof message.balanceTuDing !== "number")\n                        return "balanceTuDing: number expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_portal.OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_portal.OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER} OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER\n             */\n            OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_portal.OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER)\n                    return object;\n                var message = new $root.op_portal.OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER();\n                if (object.userId != null)\n                    message.userId = String(object.userId);\n                if (object.orderId != null)\n                    message.orderId = String(object.orderId);\n                if (object.gameId != null)\n                    message.gameId = String(object.gameId);\n                switch (object.responseStatus) {\n                case "SUCCESS":\n                case 0:\n                    message.responseStatus = 0;\n                    break;\n                case "SERVER_ERROR_UNKNOWN":\n                case 4096:\n                    message.responseStatus = 4096;\n                    break;\n                case "SERVER_ERROR_BUSY":\n                case 4098:\n                    message.responseStatus = 4098;\n                    break;\n                case "SERVER_ERROR_TIMEOUT":\n                case 4099:\n                    message.responseStatus = 4099;\n                    break;\n                case "SERVER_ERROR_SERVICE_NOT_FOUND":\n                case 4100:\n                    message.responseStatus = 4100;\n                    break;\n                case "SERVER_ERROR_BAD_GATEWAY":\n                case 8193:\n                    message.responseStatus = 8193;\n                    break;\n                case "SERVER_ERROR_GALAXY_SERVICE_NOT_FOUND":\n                case 12289:\n                    message.responseStatus = 12289;\n                    break;\n                case "SERVER_ERROR_WORLD_SERVICE_NOT_FOUND":\n                case 16385:\n                    message.responseStatus = 16385;\n                    break;\n                case "SERVER_ERROR_VIRTUAL_WORLD_SERVICE_NOT_FOUND":\n                case 20481:\n                    message.responseStatus = 20481;\n                    break;\n                case "REQUEST_ERROR_WRONG_PARAM":\n                case 37888:\n                    message.responseStatus = 37888;\n                    break;\n                case "REQUEST_UNAUTHORIZED":\n                case 37889:\n                    message.responseStatus = 37889;\n                    break;\n                case "RANSFER_TO_GAME_BILLER_ERROR":\n                case 45056:\n                    message.responseStatus = 45056;\n                    break;\n                }\n                if (object.msg != null)\n                    message.msg = String(object.msg);\n                if (object.balanceTuDing != null)\n                    message.balanceTuDing = Number(object.balanceTuDing);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_portal.OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER\n             * @static\n             * @param {op_portal.OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER} message OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.userId = "";\n                    object.orderId = "";\n                    object.gameId = "";\n                    object.responseStatus = options.enums === String ? "SUCCESS" : 0;\n                    object.msg = "";\n                    object.balanceTuDing = 0;\n                }\n                if (message.userId != null && message.hasOwnProperty("userId"))\n                    object.userId = message.userId;\n                if (message.orderId != null && message.hasOwnProperty("orderId"))\n                    object.orderId = message.orderId;\n                if (message.gameId != null && message.hasOwnProperty("gameId"))\n                    object.gameId = message.gameId;\n                if (message.responseStatus != null && message.hasOwnProperty("responseStatus"))\n                    object.responseStatus = options.enums === String ? $root.op_def.ResponseStatus[message.responseStatus] : message.responseStatus;\n                if (message.msg != null && message.hasOwnProperty("msg"))\n                    object.msg = message.msg;\n                if (message.balanceTuDing != null && message.hasOwnProperty("balanceTuDing"))\n                    object.balanceTuDing = options.json && !isFinite(message.balanceTuDing) ? String(message.balanceTuDing) : message.balanceTuDing;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER to JSON.\n             * @function toJSON\n             * @memberof op_portal.OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_WEB_PLATFORM_RES_PORTAL_TRANSFER_TO_GAME_BILLER;\n        })();\n    \n        return op_portal;\n    })();\n    \n    $root.op_virtual_world = (function() {\n    \n        /**\n         * Namespace op_virtual_world.\n         * @exports op_virtual_world\n         * @namespace\n         */\n        var op_virtual_world = {};\n    \n        /**\n         * OPCODE enum.\n         * @name op_virtual_world.OPCODE\n         * @enum {string}\n         * @property {number} OP_MAJOR=22 OP_MAJOR value\n         * @property {number} _OP_UNKNOWN=0 _OP_UNKNOWN value\n         * @property {number} _OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND=1442820 _OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND value\n         * @property {number} _OP_CLIENT_REQ_GATEWAY_GAME_CREATED=1445895 _OP_CLIENT_REQ_GATEWAY_GAME_CREATED value\n         * @property {number} _OP_CLIENT_REQ_GATEWAY_CHARACTER_CREATED=1445897 _OP_CLIENT_REQ_GATEWAY_CHARACTER_CREATED value\n         * @property {number} _OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN=1486849 _OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN value\n         * @property {number} _OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP=1486851 _OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP value\n         * @property {number} _OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT=1445905 _OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT value\n         * @property {number} _OP_GATEWAY_RES_VIRTUAL_WORLD_INIT=1445894 _OP_GATEWAY_RES_VIRTUAL_WORLD_INIT value\n         * @property {number} _OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT=1445896 _OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT value\n         * @property {number} _OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED=1445904 _OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED value\n         * @property {number} _OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS=1445906 _OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS value\n         * @property {number} _OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI=1445908 _OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI value\n         * @property {number} _OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE=1445910 _OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE value\n         * @property {number} _OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI=1445912 _OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI value\n         * @property {number} _OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE=1445920 _OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE value\n         * @property {number} _OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM=1445922 _OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM value\n         * @property {number} _OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER=1445924 _OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER value\n         * @property {number} _OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS=1445926 _OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS value\n         * @property {number} _OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS=1445928 _OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS value\n         * @property {number} _OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE=1445936 _OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE value\n         * @property {number} _OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE=1445938 _OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE value\n         * @property {number} _OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER=1445940 _OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER value\n         * @property {number} _OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE=1445942 _OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE value\n         * @property {number} _OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT=1445944 _OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT value\n         * @property {number} _OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER=1445946 _OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER value\n         * @property {number} _OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO=1445948 _OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO value\n         * @property {number} _OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME=1445950 _OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME value\n         * @property {number} _OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS=1445953 _OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS value\n         * @property {number} _OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE=1445954 _OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE value\n         * @property {number} _OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE=1445955 _OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE value\n         * @property {number} _OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION=1445956 _OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION value\n         * @property {number} _OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW=1445957 _OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW value\n         * @property {number} _OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE=1445958 _OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE value\n         * @property {number} _OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO=1445959 _OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO value\n         * @property {number} _OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS=1445960 _OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS value\n         */\n        op_virtual_world.OPCODE = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[22] = "OP_MAJOR"] = 22;\n            values[valuesById[0] = "_OP_UNKNOWN"] = 0;\n            values[valuesById[1442820] = "_OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND"] = 1442820;\n            values[valuesById[1445895] = "_OP_CLIENT_REQ_GATEWAY_GAME_CREATED"] = 1445895;\n            values[valuesById[1445897] = "_OP_CLIENT_REQ_GATEWAY_CHARACTER_CREATED"] = 1445897;\n            values[valuesById[1486849] = "_OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN"] = 1486849;\n            values[valuesById[1486851] = "_OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP"] = 1486851;\n            values[valuesById[1445905] = "_OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT"] = 1445905;\n            values[valuesById[1445894] = "_OP_GATEWAY_RES_VIRTUAL_WORLD_INIT"] = 1445894;\n            values[valuesById[1445896] = "_OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT"] = 1445896;\n            values[valuesById[1445904] = "_OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED"] = 1445904;\n            values[valuesById[1445906] = "_OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS"] = 1445906;\n            values[valuesById[1445908] = "_OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI"] = 1445908;\n            values[valuesById[1445910] = "_OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE"] = 1445910;\n            values[valuesById[1445912] = "_OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI"] = 1445912;\n            values[valuesById[1445920] = "_OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE"] = 1445920;\n            values[valuesById[1445922] = "_OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM"] = 1445922;\n            values[valuesById[1445924] = "_OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER"] = 1445924;\n            values[valuesById[1445926] = "_OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS"] = 1445926;\n            values[valuesById[1445928] = "_OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS"] = 1445928;\n            values[valuesById[1445936] = "_OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE"] = 1445936;\n            values[valuesById[1445938] = "_OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE"] = 1445938;\n            values[valuesById[1445940] = "_OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER"] = 1445940;\n            values[valuesById[1445942] = "_OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE"] = 1445942;\n            values[valuesById[1445944] = "_OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT"] = 1445944;\n            values[valuesById[1445946] = "_OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER"] = 1445946;\n            values[valuesById[1445948] = "_OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO"] = 1445948;\n            values[valuesById[1445950] = "_OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME"] = 1445950;\n            values[valuesById[1445953] = "_OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS"] = 1445953;\n            values[valuesById[1445954] = "_OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE"] = 1445954;\n            values[valuesById[1445955] = "_OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE"] = 1445955;\n            values[valuesById[1445956] = "_OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION"] = 1445956;\n            values[valuesById[1445957] = "_OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW"] = 1445957;\n            values[valuesById[1445958] = "_OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE"] = 1445958;\n            values[valuesById[1445959] = "_OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO"] = 1445959;\n            values[valuesById[1445960] = "_OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS"] = 1445960;\n            return values;\n        })();\n    \n        op_virtual_world.OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT = (function() {\n    \n            /**\n             * Properties of a OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT.\n             * @memberof op_virtual_world\n             * @interface IOP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT\n             * @property {op_def.ChatChannel} chatChannel OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT chatChannel\n             * @property {number|null} [chatOtheractor] OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT chatOtheractor\n             * @property {string} chatContext OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT chatContext\n             */\n    \n            /**\n             * Constructs a new OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT.\n             * @memberof op_virtual_world\n             * @classdesc Represents a OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT.\n             * @implements IOP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT\n             * @constructor\n             * @param {op_virtual_world.IOP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT=} [properties] Properties to set\n             */\n            function OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT chatChannel.\n             * @member {op_def.ChatChannel} chatChannel\n             * @memberof op_virtual_world.OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT\n             * @instance\n             */\n            OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT.prototype.chatChannel = 0;\n    \n            /**\n             * OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT chatOtheractor.\n             * @member {number} chatOtheractor\n             * @memberof op_virtual_world.OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT\n             * @instance\n             */\n            OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT.prototype.chatOtheractor = 0;\n    \n            /**\n             * OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT chatContext.\n             * @member {string} chatContext\n             * @memberof op_virtual_world.OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT\n             * @instance\n             */\n            OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT.prototype.chatContext = "";\n    \n            /**\n             * Creates a new OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT instance using the specified properties.\n             * @function create\n             * @memberof op_virtual_world.OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT\n             * @static\n             * @param {op_virtual_world.IOP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT=} [properties] Properties to set\n             * @returns {op_virtual_world.OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT} OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT instance\n             */\n            OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT.create = function create(properties) {\n                return new OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT message. Does not implicitly {@link op_virtual_world.OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT.verify|verify} messages.\n             * @function encode\n             * @memberof op_virtual_world.OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT\n             * @static\n             * @param {op_virtual_world.IOP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT} message OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.chatChannel);\n                if (message.chatOtheractor != null && message.hasOwnProperty("chatOtheractor"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.chatOtheractor);\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.chatContext);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT message, length delimited. Does not implicitly {@link op_virtual_world.OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_virtual_world.OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT\n             * @static\n             * @param {op_virtual_world.IOP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT} message OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_virtual_world.OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_virtual_world.OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT} OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_virtual_world.OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.chatChannel = reader.int32();\n                        break;\n                    case 2:\n                        message.chatOtheractor = reader.int32();\n                        break;\n                    case 3:\n                        message.chatContext = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("chatChannel"))\n                    throw $util.ProtocolError("missing required \'chatChannel\'", { instance: message });\n                if (!message.hasOwnProperty("chatContext"))\n                    throw $util.ProtocolError("missing required \'chatContext\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_virtual_world.OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_virtual_world.OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT} OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT message.\n             * @function verify\n             * @memberof op_virtual_world.OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                switch (message.chatChannel) {\n                default:\n                    return "chatChannel: enum value expected";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                    break;\n                }\n                if (message.chatOtheractor != null && message.hasOwnProperty("chatOtheractor"))\n                    if (!$util.isInteger(message.chatOtheractor))\n                        return "chatOtheractor: integer expected";\n                if (!$util.isString(message.chatContext))\n                    return "chatContext: string expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_virtual_world.OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_virtual_world.OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT} OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT\n             */\n            OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_virtual_world.OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT)\n                    return object;\n                var message = new $root.op_virtual_world.OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT();\n                switch (object.chatChannel) {\n                case "CurrentScene":\n                case 0:\n                    message.chatChannel = 0;\n                    break;\n                case "World":\n                case 1:\n                    message.chatChannel = 1;\n                    break;\n                case "Team":\n                case 2:\n                    message.chatChannel = 2;\n                    break;\n                case "Private":\n                case 3:\n                    message.chatChannel = 3;\n                    break;\n                case "System":\n                case 4:\n                    message.chatChannel = 4;\n                    break;\n                }\n                if (object.chatOtheractor != null)\n                    message.chatOtheractor = object.chatOtheractor | 0;\n                if (object.chatContext != null)\n                    message.chatContext = String(object.chatContext);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_virtual_world.OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT\n             * @static\n             * @param {op_virtual_world.OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT} message OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.chatChannel = options.enums === String ? "CurrentScene" : 0;\n                    object.chatOtheractor = 0;\n                    object.chatContext = "";\n                }\n                if (message.chatChannel != null && message.hasOwnProperty("chatChannel"))\n                    object.chatChannel = options.enums === String ? $root.op_def.ChatChannel[message.chatChannel] : message.chatChannel;\n                if (message.chatOtheractor != null && message.hasOwnProperty("chatOtheractor"))\n                    object.chatOtheractor = message.chatOtheractor;\n                if (message.chatContext != null && message.hasOwnProperty("chatContext"))\n                    object.chatContext = message.chatContext;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT to JSON.\n             * @function toJSON\n             * @memberof op_virtual_world.OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_GATEWAY_REQ_VIRTUAL_WORLD_CHAT;\n        })();\n    \n        op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS = (function() {\n    \n            /**\n             * Properties of a OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS.\n             * @memberof op_virtual_world\n             * @interface IOP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS\n             * @property {number|null} [FirstIdx] OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS FirstIdx\n             * @property {number|null} [SecondIdx] OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS SecondIdx\n             */\n    \n            /**\n             * Constructs a new OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS.\n             * @memberof op_virtual_world\n             * @classdesc Represents a OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS.\n             * @implements IOP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS\n             * @constructor\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS=} [properties] Properties to set\n             */\n            function OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS FirstIdx.\n             * @member {number} FirstIdx\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS.prototype.FirstIdx = 0;\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS SecondIdx.\n             * @member {number} SecondIdx\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS.prototype.SecondIdx = 0;\n    \n            /**\n             * Creates a new OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS instance using the specified properties.\n             * @function create\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS=} [properties] Properties to set\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS} OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS.create = function create(properties) {\n                return new OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS message. Does not implicitly {@link op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS.verify|verify} messages.\n             * @function encode\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS} message OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.FirstIdx != null && message.hasOwnProperty("FirstIdx"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.FirstIdx);\n                if (message.SecondIdx != null && message.hasOwnProperty("SecondIdx"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.SecondIdx);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS message, length delimited. Does not implicitly {@link op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS} message OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS} OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.FirstIdx = reader.int32();\n                        break;\n                    case 2:\n                        message.SecondIdx = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS} OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS message.\n             * @function verify\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.FirstIdx != null && message.hasOwnProperty("FirstIdx"))\n                    if (!$util.isInteger(message.FirstIdx))\n                        return "FirstIdx: integer expected";\n                if (message.SecondIdx != null && message.hasOwnProperty("SecondIdx"))\n                    if (!$util.isInteger(message.SecondIdx))\n                        return "SecondIdx: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS} OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS)\n                    return object;\n                var message = new $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS();\n                if (object.FirstIdx != null)\n                    message.FirstIdx = object.FirstIdx | 0;\n                if (object.SecondIdx != null)\n                    message.SecondIdx = object.SecondIdx | 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS\n             * @static\n             * @param {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS} message OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.FirstIdx = 0;\n                    object.SecondIdx = 0;\n                }\n                if (message.FirstIdx != null && message.hasOwnProperty("FirstIdx"))\n                    object.FirstIdx = message.FirstIdx;\n                if (message.SecondIdx != null && message.hasOwnProperty("SecondIdx"))\n                    object.SecondIdx = message.SecondIdx;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS to JSON.\n             * @function toJSON\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_CLIENT_REQ_VIRTUAL_WORLD_EXCHANGE_ITEM_POS;\n        })();\n    \n        op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI = (function() {\n    \n            /**\n             * Properties of a OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI.\n             * @memberof op_virtual_world\n             * @interface IOP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI\n             * @property {number} uiId OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI uiId\n             * @property {number} componentId OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI componentId\n             * @property {Array.<number>|null} [data] OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI data\n             */\n    \n            /**\n             * Constructs a new OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI.\n             * @memberof op_virtual_world\n             * @classdesc Represents a OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI.\n             * @implements IOP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI\n             * @constructor\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI=} [properties] Properties to set\n             */\n            function OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI(properties) {\n                this.data = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI uiId.\n             * @member {number} uiId\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI.prototype.uiId = 0;\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI componentId.\n             * @member {number} componentId\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI.prototype.componentId = 0;\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI data.\n             * @member {Array.<number>} data\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI.prototype.data = $util.emptyArray;\n    \n            /**\n             * Creates a new OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI instance using the specified properties.\n             * @function create\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI=} [properties] Properties to set\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI} OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI.create = function create(properties) {\n                return new OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI message. Does not implicitly {@link op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI.verify|verify} messages.\n             * @function encode\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI} message OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.uiId);\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.componentId);\n                if (message.data != null && message.data.length)\n                    for (var i = 0; i < message.data.length; ++i)\n                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.data[i]);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI message, length delimited. Does not implicitly {@link op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI} message OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI} OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.uiId = reader.int32();\n                        break;\n                    case 2:\n                        message.componentId = reader.int32();\n                        break;\n                    case 3:\n                        if (!(message.data && message.data.length))\n                            message.data = [];\n                        if ((tag & 7) === 2) {\n                            var end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2)\n                                message.data.push(reader.int32());\n                        } else\n                            message.data.push(reader.int32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("uiId"))\n                    throw $util.ProtocolError("missing required \'uiId\'", { instance: message });\n                if (!message.hasOwnProperty("componentId"))\n                    throw $util.ProtocolError("missing required \'componentId\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI} OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI message.\n             * @function verify\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.uiId))\n                    return "uiId: integer expected";\n                if (!$util.isInteger(message.componentId))\n                    return "componentId: integer expected";\n                if (message.data != null && message.hasOwnProperty("data")) {\n                    if (!Array.isArray(message.data))\n                        return "data: array expected";\n                    for (var i = 0; i < message.data.length; ++i)\n                        if (!$util.isInteger(message.data[i]))\n                            return "data: integer[] expected";\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI} OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI)\n                    return object;\n                var message = new $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI();\n                if (object.uiId != null)\n                    message.uiId = object.uiId | 0;\n                if (object.componentId != null)\n                    message.componentId = object.componentId | 0;\n                if (object.data) {\n                    if (!Array.isArray(object.data))\n                        throw TypeError(".op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI.data: array expected");\n                    message.data = [];\n                    for (var i = 0; i < object.data.length; ++i)\n                        message.data[i] = object.data[i] | 0;\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI\n             * @static\n             * @param {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI} message OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.data = [];\n                if (options.defaults) {\n                    object.uiId = 0;\n                    object.componentId = 0;\n                }\n                if (message.uiId != null && message.hasOwnProperty("uiId"))\n                    object.uiId = message.uiId;\n                if (message.componentId != null && message.hasOwnProperty("componentId"))\n                    object.componentId = message.componentId;\n                if (message.data && message.data.length) {\n                    object.data = [];\n                    for (var j = 0; j < message.data.length; ++j)\n                        object.data[j] = message.data[j];\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI to JSON.\n             * @function toJSON\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_CLIENT_REQ_VIRTUAL_WORLD_TARGET_UI;\n        })();\n    \n        op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN = (function() {\n    \n            /**\n             * Properties of a OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN.\n             * @memberof op_virtual_world\n             * @interface IOP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN\n             * @property {Array.<op_def.KeyCode>|null} [keyCodes] OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN keyCodes\n             */\n    \n            /**\n             * Constructs a new OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN.\n             * @memberof op_virtual_world\n             * @classdesc Represents a OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN.\n             * @implements IOP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN\n             * @constructor\n             * @param {op_virtual_world.IOP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN=} [properties] Properties to set\n             */\n            function OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN(properties) {\n                this.keyCodes = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN keyCodes.\n             * @member {Array.<op_def.KeyCode>} keyCodes\n             * @memberof op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN\n             * @instance\n             */\n            OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN.prototype.keyCodes = $util.emptyArray;\n    \n            /**\n             * Creates a new OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN instance using the specified properties.\n             * @function create\n             * @memberof op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN=} [properties] Properties to set\n             * @returns {op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN} OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN instance\n             */\n            OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN.create = function create(properties) {\n                return new OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN message. Does not implicitly {@link op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN.verify|verify} messages.\n             * @function encode\n             * @memberof op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN} message OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.keyCodes != null && message.keyCodes.length)\n                    for (var i = 0; i < message.keyCodes.length; ++i)\n                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.keyCodes[i]);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN message, length delimited. Does not implicitly {@link op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN} message OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN} OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.keyCodes && message.keyCodes.length))\n                            message.keyCodes = [];\n                        if ((tag & 7) === 2) {\n                            var end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2)\n                                message.keyCodes.push(reader.int32());\n                        } else\n                            message.keyCodes.push(reader.int32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN} OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN message.\n             * @function verify\n             * @memberof op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.keyCodes != null && message.hasOwnProperty("keyCodes")) {\n                    if (!Array.isArray(message.keyCodes))\n                        return "keyCodes: array expected";\n                    for (var i = 0; i < message.keyCodes.length; ++i)\n                        switch (message.keyCodes[i]) {\n                        default:\n                            return "keyCodes: enum value[] expected";\n                        case -1:\n                        case 65:\n                        case 66:\n                        case 67:\n                        case 68:\n                        case 69:\n                        case 70:\n                        case 71:\n                        case 72:\n                        case 73:\n                        case 74:\n                        case 75:\n                        case 76:\n                        case 77:\n                        case 78:\n                        case 79:\n                        case 80:\n                        case 81:\n                        case 82:\n                        case 83:\n                        case 84:\n                        case 85:\n                        case 86:\n                        case 87:\n                        case 88:\n                        case 89:\n                        case 90:\n                        case 48:\n                        case 49:\n                        case 50:\n                        case 51:\n                        case 52:\n                        case 53:\n                        case 54:\n                        case 55:\n                        case 56:\n                        case 57:\n                        case 96:\n                        case 97:\n                        case 98:\n                        case 99:\n                        case 100:\n                        case 101:\n                        case 102:\n                        case 103:\n                        case 104:\n                        case 105:\n                        case 106:\n                        case 107:\n                        case 108:\n                        case 109:\n                        case 110:\n                        case 111:\n                        case 112:\n                        case 113:\n                        case 114:\n                        case 115:\n                        case 116:\n                        case 117:\n                        case 118:\n                        case 119:\n                        case 120:\n                        case 121:\n                        case 122:\n                        case 123:\n                        case 124:\n                        case 125:\n                        case 126:\n                        case 186:\n                        case 187:\n                        case 188:\n                        case 189:\n                        case 190:\n                        case 191:\n                        case 192:\n                        case 219:\n                        case 220:\n                        case 221:\n                        case 222:\n                        case 8:\n                        case 9:\n                        case 12:\n                        case 13:\n                        case 16:\n                        case 17:\n                        case 18:\n                        case 20:\n                        case 27:\n                        case 32:\n                        case 33:\n                        case 34:\n                        case 35:\n                        case 36:\n                        case 37:\n                        case 38:\n                        case 39:\n                        case 40:\n                        case 43:\n                        case 44:\n                        case 45:\n                        case 46:\n                        case 47:\n                        case 144:\n                            break;\n                        }\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN} OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN\n             */\n            OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN)\n                    return object;\n                var message = new $root.op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN();\n                if (object.keyCodes) {\n                    if (!Array.isArray(object.keyCodes))\n                        throw TypeError(".op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN.keyCodes: array expected");\n                    message.keyCodes = [];\n                    for (var i = 0; i < object.keyCodes.length; ++i)\n                        switch (object.keyCodes[i]) {\n                        default:\n                        case "Unknown":\n                        case -1:\n                            message.keyCodes[i] = -1;\n                            break;\n                        case "A":\n                        case 65:\n                            message.keyCodes[i] = 65;\n                            break;\n                        case "B":\n                        case 66:\n                            message.keyCodes[i] = 66;\n                            break;\n                        case "C":\n                        case 67:\n                            message.keyCodes[i] = 67;\n                            break;\n                        case "D":\n                        case 68:\n                            message.keyCodes[i] = 68;\n                            break;\n                        case "E":\n                        case 69:\n                            message.keyCodes[i] = 69;\n                            break;\n                        case "F":\n                        case 70:\n                            message.keyCodes[i] = 70;\n                            break;\n                        case "G":\n                        case 71:\n                            message.keyCodes[i] = 71;\n                            break;\n                        case "H":\n                        case 72:\n                            message.keyCodes[i] = 72;\n                            break;\n                        case "I":\n                        case 73:\n                            message.keyCodes[i] = 73;\n                            break;\n                        case "J":\n                        case 74:\n                            message.keyCodes[i] = 74;\n                            break;\n                        case "K":\n                        case 75:\n                            message.keyCodes[i] = 75;\n                            break;\n                        case "L":\n                        case 76:\n                            message.keyCodes[i] = 76;\n                            break;\n                        case "M":\n                        case 77:\n                            message.keyCodes[i] = 77;\n                            break;\n                        case "N":\n                        case 78:\n                            message.keyCodes[i] = 78;\n                            break;\n                        case "O":\n                        case 79:\n                            message.keyCodes[i] = 79;\n                            break;\n                        case "P":\n                        case 80:\n                            message.keyCodes[i] = 80;\n                            break;\n                        case "Q":\n                        case 81:\n                            message.keyCodes[i] = 81;\n                            break;\n                        case "R":\n                        case 82:\n                            message.keyCodes[i] = 82;\n                            break;\n                        case "S":\n                        case 83:\n                            message.keyCodes[i] = 83;\n                            break;\n                        case "T":\n                        case 84:\n                            message.keyCodes[i] = 84;\n                            break;\n                        case "U":\n                        case 85:\n                            message.keyCodes[i] = 85;\n                            break;\n                        case "V":\n                        case 86:\n                            message.keyCodes[i] = 86;\n                            break;\n                        case "W":\n                        case 87:\n                            message.keyCodes[i] = 87;\n                            break;\n                        case "X":\n                        case 88:\n                            message.keyCodes[i] = 88;\n                            break;\n                        case "Y":\n                        case 89:\n                            message.keyCodes[i] = 89;\n                            break;\n                        case "Z":\n                        case 90:\n                            message.keyCodes[i] = 90;\n                            break;\n                        case "ZERO":\n                        case 48:\n                            message.keyCodes[i] = 48;\n                            break;\n                        case "ONE":\n                        case 49:\n                            message.keyCodes[i] = 49;\n                            break;\n                        case "TWO":\n                        case 50:\n                            message.keyCodes[i] = 50;\n                            break;\n                        case "THREE":\n                        case 51:\n                            message.keyCodes[i] = 51;\n                            break;\n                        case "FOUR":\n                        case 52:\n                            message.keyCodes[i] = 52;\n                            break;\n                        case "FIVE":\n                        case 53:\n                            message.keyCodes[i] = 53;\n                            break;\n                        case "SIX":\n                        case 54:\n                            message.keyCodes[i] = 54;\n                            break;\n                        case "SEVEN":\n                        case 55:\n                            message.keyCodes[i] = 55;\n                            break;\n                        case "EIGHT":\n                        case 56:\n                            message.keyCodes[i] = 56;\n                            break;\n                        case "NINE":\n                        case 57:\n                            message.keyCodes[i] = 57;\n                            break;\n                        case "NUMPAD_0":\n                        case 96:\n                            message.keyCodes[i] = 96;\n                            break;\n                        case "NUMPAD_1":\n                        case 97:\n                            message.keyCodes[i] = 97;\n                            break;\n                        case "NUMPAD_2":\n                        case 98:\n                            message.keyCodes[i] = 98;\n                            break;\n                        case "NUMPAD_3":\n                        case 99:\n                            message.keyCodes[i] = 99;\n                            break;\n                        case "NUMPAD_4":\n                        case 100:\n                            message.keyCodes[i] = 100;\n                            break;\n                        case "NUMPAD_5":\n                        case 101:\n                            message.keyCodes[i] = 101;\n                            break;\n                        case "NUMPAD_6":\n                        case 102:\n                            message.keyCodes[i] = 102;\n                            break;\n                        case "NUMPAD_7":\n                        case 103:\n                            message.keyCodes[i] = 103;\n                            break;\n                        case "NUMPAD_8":\n                        case 104:\n                            message.keyCodes[i] = 104;\n                            break;\n                        case "NUMPAD_9":\n                        case 105:\n                            message.keyCodes[i] = 105;\n                            break;\n                        case "NUMPAD_MULTIPLY":\n                        case 106:\n                            message.keyCodes[i] = 106;\n                            break;\n                        case "NUMPAD_ADD":\n                        case 107:\n                            message.keyCodes[i] = 107;\n                            break;\n                        case "NUMPAD_ENTER":\n                        case 108:\n                            message.keyCodes[i] = 108;\n                            break;\n                        case "NUMPAD_SUBTRACT":\n                        case 109:\n                            message.keyCodes[i] = 109;\n                            break;\n                        case "NUMPAD_DECIMAL":\n                        case 110:\n                            message.keyCodes[i] = 110;\n                            break;\n                        case "NUMPAD_DIVIDE":\n                        case 111:\n                            message.keyCodes[i] = 111;\n                            break;\n                        case "F1":\n                        case 112:\n                            message.keyCodes[i] = 112;\n                            break;\n                        case "F2":\n                        case 113:\n                            message.keyCodes[i] = 113;\n                            break;\n                        case "F3":\n                        case 114:\n                            message.keyCodes[i] = 114;\n                            break;\n                        case "F4":\n                        case 115:\n                            message.keyCodes[i] = 115;\n                            break;\n                        case "F5":\n                        case 116:\n                            message.keyCodes[i] = 116;\n                            break;\n                        case "F6":\n                        case 117:\n                            message.keyCodes[i] = 117;\n                            break;\n                        case "F7":\n                        case 118:\n                            message.keyCodes[i] = 118;\n                            break;\n                        case "F8":\n                        case 119:\n                            message.keyCodes[i] = 119;\n                            break;\n                        case "F9":\n                        case 120:\n                            message.keyCodes[i] = 120;\n                            break;\n                        case "F10":\n                        case 121:\n                            message.keyCodes[i] = 121;\n                            break;\n                        case "F11":\n                        case 122:\n                            message.keyCodes[i] = 122;\n                            break;\n                        case "F12":\n                        case 123:\n                            message.keyCodes[i] = 123;\n                            break;\n                        case "F13":\n                        case 124:\n                            message.keyCodes[i] = 124;\n                            break;\n                        case "F14":\n                        case 125:\n                            message.keyCodes[i] = 125;\n                            break;\n                        case "F15":\n                        case 126:\n                            message.keyCodes[i] = 126;\n                            break;\n                        case "COLON":\n                        case 186:\n                            message.keyCodes[i] = 186;\n                            break;\n                        case "EQUALS":\n                        case 187:\n                            message.keyCodes[i] = 187;\n                            break;\n                        case "COMMA":\n                        case 188:\n                            message.keyCodes[i] = 188;\n                            break;\n                        case "UNDERSCORE":\n                        case 189:\n                            message.keyCodes[i] = 189;\n                            break;\n                        case "PERIOD":\n                        case 190:\n                            message.keyCodes[i] = 190;\n                            break;\n                        case "QUESTION_MARK":\n                        case 191:\n                            message.keyCodes[i] = 191;\n                            break;\n                        case "TILDE":\n                        case 192:\n                            message.keyCodes[i] = 192;\n                            break;\n                        case "OPEN_BRACKET":\n                        case 219:\n                            message.keyCodes[i] = 219;\n                            break;\n                        case "BACKWARD_SLASH":\n                        case 220:\n                            message.keyCodes[i] = 220;\n                            break;\n                        case "CLOSED_BRACKET":\n                        case 221:\n                            message.keyCodes[i] = 221;\n                            break;\n                        case "QUOTES":\n                        case 222:\n                            message.keyCodes[i] = 222;\n                            break;\n                        case "BACKSPACE":\n                        case 8:\n                            message.keyCodes[i] = 8;\n                            break;\n                        case "TAB":\n                        case 9:\n                            message.keyCodes[i] = 9;\n                            break;\n                        case "CLEAR":\n                        case 12:\n                            message.keyCodes[i] = 12;\n                            break;\n                        case "ENTER":\n                        case 13:\n                            message.keyCodes[i] = 13;\n                            break;\n                        case "SHIFT":\n                        case 16:\n                            message.keyCodes[i] = 16;\n                            break;\n                        case "CONTROL":\n                        case 17:\n                            message.keyCodes[i] = 17;\n                            break;\n                        case "ALT":\n                        case 18:\n                            message.keyCodes[i] = 18;\n                            break;\n                        case "CAPS_LOCK":\n                        case 20:\n                            message.keyCodes[i] = 20;\n                            break;\n                        case "ESC":\n                        case 27:\n                            message.keyCodes[i] = 27;\n                            break;\n                        case "SPACEBAR":\n                        case 32:\n                            message.keyCodes[i] = 32;\n                            break;\n                        case "PAGE_UP":\n                        case 33:\n                            message.keyCodes[i] = 33;\n                            break;\n                        case "PAGE_DOWN":\n                        case 34:\n                            message.keyCodes[i] = 34;\n                            break;\n                        case "END":\n                        case 35:\n                            message.keyCodes[i] = 35;\n                            break;\n                        case "HOME":\n                        case 36:\n                            message.keyCodes[i] = 36;\n                            break;\n                        case "KB_LEFT":\n                        case 37:\n                            message.keyCodes[i] = 37;\n                            break;\n                        case "KB_UP":\n                        case 38:\n                            message.keyCodes[i] = 38;\n                            break;\n                        case "KB_RIGHT":\n                        case 39:\n                            message.keyCodes[i] = 39;\n                            break;\n                        case "KB_DOWN":\n                        case 40:\n                            message.keyCodes[i] = 40;\n                            break;\n                        case "PLUS":\n                        case 43:\n                            message.keyCodes[i] = 43;\n                            break;\n                        case "MINUS":\n                        case 44:\n                            message.keyCodes[i] = 44;\n                            break;\n                        case "INSERT":\n                        case 45:\n                            message.keyCodes[i] = 45;\n                            break;\n                        case "DELETE":\n                        case 46:\n                            message.keyCodes[i] = 46;\n                            break;\n                        case "HELP":\n                        case 47:\n                            message.keyCodes[i] = 47;\n                            break;\n                        case "NUM_LOCK":\n                        case 144:\n                            message.keyCodes[i] = 144;\n                            break;\n                        }\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN\n             * @static\n             * @param {op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN} message OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.keyCodes = [];\n                if (message.keyCodes && message.keyCodes.length) {\n                    object.keyCodes = [];\n                    for (var j = 0; j < message.keyCodes.length; ++j)\n                        object.keyCodes[j] = options.enums === String ? $root.op_def.KeyCode[message.keyCodes[j]] : message.keyCodes[j];\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN to JSON.\n             * @function toJSON\n             * @memberof op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_CLIENT_REQ_GATEWAY_KEYBOARD_DOWN;\n        })();\n    \n        op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP = (function() {\n    \n            /**\n             * Properties of a OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP.\n             * @memberof op_virtual_world\n             * @interface IOP_CLIENT_REQ_GATEWAY_KEYBOARD_UP\n             * @property {Array.<op_def.KeyCode>|null} [keyCodes] OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP keyCodes\n             */\n    \n            /**\n             * Constructs a new OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP.\n             * @memberof op_virtual_world\n             * @classdesc Represents a OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP.\n             * @implements IOP_CLIENT_REQ_GATEWAY_KEYBOARD_UP\n             * @constructor\n             * @param {op_virtual_world.IOP_CLIENT_REQ_GATEWAY_KEYBOARD_UP=} [properties] Properties to set\n             */\n            function OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP(properties) {\n                this.keyCodes = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP keyCodes.\n             * @member {Array.<op_def.KeyCode>} keyCodes\n             * @memberof op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP\n             * @instance\n             */\n            OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP.prototype.keyCodes = $util.emptyArray;\n    \n            /**\n             * Creates a new OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP instance using the specified properties.\n             * @function create\n             * @memberof op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_GATEWAY_KEYBOARD_UP=} [properties] Properties to set\n             * @returns {op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP} OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP instance\n             */\n            OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP.create = function create(properties) {\n                return new OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP message. Does not implicitly {@link op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP.verify|verify} messages.\n             * @function encode\n             * @memberof op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_GATEWAY_KEYBOARD_UP} message OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.keyCodes != null && message.keyCodes.length)\n                    for (var i = 0; i < message.keyCodes.length; ++i)\n                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.keyCodes[i]);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP message, length delimited. Does not implicitly {@link op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_GATEWAY_KEYBOARD_UP} message OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP} OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.keyCodes && message.keyCodes.length))\n                            message.keyCodes = [];\n                        if ((tag & 7) === 2) {\n                            var end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2)\n                                message.keyCodes.push(reader.int32());\n                        } else\n                            message.keyCodes.push(reader.int32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP} OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP message.\n             * @function verify\n             * @memberof op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.keyCodes != null && message.hasOwnProperty("keyCodes")) {\n                    if (!Array.isArray(message.keyCodes))\n                        return "keyCodes: array expected";\n                    for (var i = 0; i < message.keyCodes.length; ++i)\n                        switch (message.keyCodes[i]) {\n                        default:\n                            return "keyCodes: enum value[] expected";\n                        case -1:\n                        case 65:\n                        case 66:\n                        case 67:\n                        case 68:\n                        case 69:\n                        case 70:\n                        case 71:\n                        case 72:\n                        case 73:\n                        case 74:\n                        case 75:\n                        case 76:\n                        case 77:\n                        case 78:\n                        case 79:\n                        case 80:\n                        case 81:\n                        case 82:\n                        case 83:\n                        case 84:\n                        case 85:\n                        case 86:\n                        case 87:\n                        case 88:\n                        case 89:\n                        case 90:\n                        case 48:\n                        case 49:\n                        case 50:\n                        case 51:\n                        case 52:\n                        case 53:\n                        case 54:\n                        case 55:\n                        case 56:\n                        case 57:\n                        case 96:\n                        case 97:\n                        case 98:\n                        case 99:\n                        case 100:\n                        case 101:\n                        case 102:\n                        case 103:\n                        case 104:\n                        case 105:\n                        case 106:\n                        case 107:\n                        case 108:\n                        case 109:\n                        case 110:\n                        case 111:\n                        case 112:\n                        case 113:\n                        case 114:\n                        case 115:\n                        case 116:\n                        case 117:\n                        case 118:\n                        case 119:\n                        case 120:\n                        case 121:\n                        case 122:\n                        case 123:\n                        case 124:\n                        case 125:\n                        case 126:\n                        case 186:\n                        case 187:\n                        case 188:\n                        case 189:\n                        case 190:\n                        case 191:\n                        case 192:\n                        case 219:\n                        case 220:\n                        case 221:\n                        case 222:\n                        case 8:\n                        case 9:\n                        case 12:\n                        case 13:\n                        case 16:\n                        case 17:\n                        case 18:\n                        case 20:\n                        case 27:\n                        case 32:\n                        case 33:\n                        case 34:\n                        case 35:\n                        case 36:\n                        case 37:\n                        case 38:\n                        case 39:\n                        case 40:\n                        case 43:\n                        case 44:\n                        case 45:\n                        case 46:\n                        case 47:\n                        case 144:\n                            break;\n                        }\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP} OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP\n             */\n            OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP)\n                    return object;\n                var message = new $root.op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP();\n                if (object.keyCodes) {\n                    if (!Array.isArray(object.keyCodes))\n                        throw TypeError(".op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP.keyCodes: array expected");\n                    message.keyCodes = [];\n                    for (var i = 0; i < object.keyCodes.length; ++i)\n                        switch (object.keyCodes[i]) {\n                        default:\n                        case "Unknown":\n                        case -1:\n                            message.keyCodes[i] = -1;\n                            break;\n                        case "A":\n                        case 65:\n                            message.keyCodes[i] = 65;\n                            break;\n                        case "B":\n                        case 66:\n                            message.keyCodes[i] = 66;\n                            break;\n                        case "C":\n                        case 67:\n                            message.keyCodes[i] = 67;\n                            break;\n                        case "D":\n                        case 68:\n                            message.keyCodes[i] = 68;\n                            break;\n                        case "E":\n                        case 69:\n                            message.keyCodes[i] = 69;\n                            break;\n                        case "F":\n                        case 70:\n                            message.keyCodes[i] = 70;\n                            break;\n                        case "G":\n                        case 71:\n                            message.keyCodes[i] = 71;\n                            break;\n                        case "H":\n                        case 72:\n                            message.keyCodes[i] = 72;\n                            break;\n                        case "I":\n                        case 73:\n                            message.keyCodes[i] = 73;\n                            break;\n                        case "J":\n                        case 74:\n                            message.keyCodes[i] = 74;\n                            break;\n                        case "K":\n                        case 75:\n                            message.keyCodes[i] = 75;\n                            break;\n                        case "L":\n                        case 76:\n                            message.keyCodes[i] = 76;\n                            break;\n                        case "M":\n                        case 77:\n                            message.keyCodes[i] = 77;\n                            break;\n                        case "N":\n                        case 78:\n                            message.keyCodes[i] = 78;\n                            break;\n                        case "O":\n                        case 79:\n                            message.keyCodes[i] = 79;\n                            break;\n                        case "P":\n                        case 80:\n                            message.keyCodes[i] = 80;\n                            break;\n                        case "Q":\n                        case 81:\n                            message.keyCodes[i] = 81;\n                            break;\n                        case "R":\n                        case 82:\n                            message.keyCodes[i] = 82;\n                            break;\n                        case "S":\n                        case 83:\n                            message.keyCodes[i] = 83;\n                            break;\n                        case "T":\n                        case 84:\n                            message.keyCodes[i] = 84;\n                            break;\n                        case "U":\n                        case 85:\n                            message.keyCodes[i] = 85;\n                            break;\n                        case "V":\n                        case 86:\n                            message.keyCodes[i] = 86;\n                            break;\n                        case "W":\n                        case 87:\n                            message.keyCodes[i] = 87;\n                            break;\n                        case "X":\n                        case 88:\n                            message.keyCodes[i] = 88;\n                            break;\n                        case "Y":\n                        case 89:\n                            message.keyCodes[i] = 89;\n                            break;\n                        case "Z":\n                        case 90:\n                            message.keyCodes[i] = 90;\n                            break;\n                        case "ZERO":\n                        case 48:\n                            message.keyCodes[i] = 48;\n                            break;\n                        case "ONE":\n                        case 49:\n                            message.keyCodes[i] = 49;\n                            break;\n                        case "TWO":\n                        case 50:\n                            message.keyCodes[i] = 50;\n                            break;\n                        case "THREE":\n                        case 51:\n                            message.keyCodes[i] = 51;\n                            break;\n                        case "FOUR":\n                        case 52:\n                            message.keyCodes[i] = 52;\n                            break;\n                        case "FIVE":\n                        case 53:\n                            message.keyCodes[i] = 53;\n                            break;\n                        case "SIX":\n                        case 54:\n                            message.keyCodes[i] = 54;\n                            break;\n                        case "SEVEN":\n                        case 55:\n                            message.keyCodes[i] = 55;\n                            break;\n                        case "EIGHT":\n                        case 56:\n                            message.keyCodes[i] = 56;\n                            break;\n                        case "NINE":\n                        case 57:\n                            message.keyCodes[i] = 57;\n                            break;\n                        case "NUMPAD_0":\n                        case 96:\n                            message.keyCodes[i] = 96;\n                            break;\n                        case "NUMPAD_1":\n                        case 97:\n                            message.keyCodes[i] = 97;\n                            break;\n                        case "NUMPAD_2":\n                        case 98:\n                            message.keyCodes[i] = 98;\n                            break;\n                        case "NUMPAD_3":\n                        case 99:\n                            message.keyCodes[i] = 99;\n                            break;\n                        case "NUMPAD_4":\n                        case 100:\n                            message.keyCodes[i] = 100;\n                            break;\n                        case "NUMPAD_5":\n                        case 101:\n                            message.keyCodes[i] = 101;\n                            break;\n                        case "NUMPAD_6":\n                        case 102:\n                            message.keyCodes[i] = 102;\n                            break;\n                        case "NUMPAD_7":\n                        case 103:\n                            message.keyCodes[i] = 103;\n                            break;\n                        case "NUMPAD_8":\n                        case 104:\n                            message.keyCodes[i] = 104;\n                            break;\n                        case "NUMPAD_9":\n                        case 105:\n                            message.keyCodes[i] = 105;\n                            break;\n                        case "NUMPAD_MULTIPLY":\n                        case 106:\n                            message.keyCodes[i] = 106;\n                            break;\n                        case "NUMPAD_ADD":\n                        case 107:\n                            message.keyCodes[i] = 107;\n                            break;\n                        case "NUMPAD_ENTER":\n                        case 108:\n                            message.keyCodes[i] = 108;\n                            break;\n                        case "NUMPAD_SUBTRACT":\n                        case 109:\n                            message.keyCodes[i] = 109;\n                            break;\n                        case "NUMPAD_DECIMAL":\n                        case 110:\n                            message.keyCodes[i] = 110;\n                            break;\n                        case "NUMPAD_DIVIDE":\n                        case 111:\n                            message.keyCodes[i] = 111;\n                            break;\n                        case "F1":\n                        case 112:\n                            message.keyCodes[i] = 112;\n                            break;\n                        case "F2":\n                        case 113:\n                            message.keyCodes[i] = 113;\n                            break;\n                        case "F3":\n                        case 114:\n                            message.keyCodes[i] = 114;\n                            break;\n                        case "F4":\n                        case 115:\n                            message.keyCodes[i] = 115;\n                            break;\n                        case "F5":\n                        case 116:\n                            message.keyCodes[i] = 116;\n                            break;\n                        case "F6":\n                        case 117:\n                            message.keyCodes[i] = 117;\n                            break;\n                        case "F7":\n                        case 118:\n                            message.keyCodes[i] = 118;\n                            break;\n                        case "F8":\n                        case 119:\n                            message.keyCodes[i] = 119;\n                            break;\n                        case "F9":\n                        case 120:\n                            message.keyCodes[i] = 120;\n                            break;\n                        case "F10":\n                        case 121:\n                            message.keyCodes[i] = 121;\n                            break;\n                        case "F11":\n                        case 122:\n                            message.keyCodes[i] = 122;\n                            break;\n                        case "F12":\n                        case 123:\n                            message.keyCodes[i] = 123;\n                            break;\n                        case "F13":\n                        case 124:\n                            message.keyCodes[i] = 124;\n                            break;\n                        case "F14":\n                        case 125:\n                            message.keyCodes[i] = 125;\n                            break;\n                        case "F15":\n                        case 126:\n                            message.keyCodes[i] = 126;\n                            break;\n                        case "COLON":\n                        case 186:\n                            message.keyCodes[i] = 186;\n                            break;\n                        case "EQUALS":\n                        case 187:\n                            message.keyCodes[i] = 187;\n                            break;\n                        case "COMMA":\n                        case 188:\n                            message.keyCodes[i] = 188;\n                            break;\n                        case "UNDERSCORE":\n                        case 189:\n                            message.keyCodes[i] = 189;\n                            break;\n                        case "PERIOD":\n                        case 190:\n                            message.keyCodes[i] = 190;\n                            break;\n                        case "QUESTION_MARK":\n                        case 191:\n                            message.keyCodes[i] = 191;\n                            break;\n                        case "TILDE":\n                        case 192:\n                            message.keyCodes[i] = 192;\n                            break;\n                        case "OPEN_BRACKET":\n                        case 219:\n                            message.keyCodes[i] = 219;\n                            break;\n                        case "BACKWARD_SLASH":\n                        case 220:\n                            message.keyCodes[i] = 220;\n                            break;\n                        case "CLOSED_BRACKET":\n                        case 221:\n                            message.keyCodes[i] = 221;\n                            break;\n                        case "QUOTES":\n                        case 222:\n                            message.keyCodes[i] = 222;\n                            break;\n                        case "BACKSPACE":\n                        case 8:\n                            message.keyCodes[i] = 8;\n                            break;\n                        case "TAB":\n                        case 9:\n                            message.keyCodes[i] = 9;\n                            break;\n                        case "CLEAR":\n                        case 12:\n                            message.keyCodes[i] = 12;\n                            break;\n                        case "ENTER":\n                        case 13:\n                            message.keyCodes[i] = 13;\n                            break;\n                        case "SHIFT":\n                        case 16:\n                            message.keyCodes[i] = 16;\n                            break;\n                        case "CONTROL":\n                        case 17:\n                            message.keyCodes[i] = 17;\n                            break;\n                        case "ALT":\n                        case 18:\n                            message.keyCodes[i] = 18;\n                            break;\n                        case "CAPS_LOCK":\n                        case 20:\n                            message.keyCodes[i] = 20;\n                            break;\n                        case "ESC":\n                        case 27:\n                            message.keyCodes[i] = 27;\n                            break;\n                        case "SPACEBAR":\n                        case 32:\n                            message.keyCodes[i] = 32;\n                            break;\n                        case "PAGE_UP":\n                        case 33:\n                            message.keyCodes[i] = 33;\n                            break;\n                        case "PAGE_DOWN":\n                        case 34:\n                            message.keyCodes[i] = 34;\n                            break;\n                        case "END":\n                        case 35:\n                            message.keyCodes[i] = 35;\n                            break;\n                        case "HOME":\n                        case 36:\n                            message.keyCodes[i] = 36;\n                            break;\n                        case "KB_LEFT":\n                        case 37:\n                            message.keyCodes[i] = 37;\n                            break;\n                        case "KB_UP":\n                        case 38:\n                            message.keyCodes[i] = 38;\n                            break;\n                        case "KB_RIGHT":\n                        case 39:\n                            message.keyCodes[i] = 39;\n                            break;\n                        case "KB_DOWN":\n                        case 40:\n                            message.keyCodes[i] = 40;\n                            break;\n                        case "PLUS":\n                        case 43:\n                            message.keyCodes[i] = 43;\n                            break;\n                        case "MINUS":\n                        case 44:\n                            message.keyCodes[i] = 44;\n                            break;\n                        case "INSERT":\n                        case 45:\n                            message.keyCodes[i] = 45;\n                            break;\n                        case "DELETE":\n                        case 46:\n                            message.keyCodes[i] = 46;\n                            break;\n                        case "HELP":\n                        case 47:\n                            message.keyCodes[i] = 47;\n                            break;\n                        case "NUM_LOCK":\n                        case 144:\n                            message.keyCodes[i] = 144;\n                            break;\n                        }\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP\n             * @static\n             * @param {op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP} message OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.keyCodes = [];\n                if (message.keyCodes && message.keyCodes.length) {\n                    object.keyCodes = [];\n                    for (var j = 0; j < message.keyCodes.length; ++j)\n                        object.keyCodes[j] = options.enums === String ? $root.op_def.KeyCode[message.keyCodes[j]] : message.keyCodes[j];\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP to JSON.\n             * @function toJSON\n             * @memberof op_virtual_world.OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_CLIENT_REQ_GATEWAY_KEYBOARD_UP;\n        })();\n    \n        op_virtual_world.OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND = (function() {\n    \n            /**\n             * Properties of a OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND.\n             * @memberof op_virtual_world\n             * @interface IOP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND\n             * @property {number} characterUuid OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND characterUuid\n             */\n    \n            /**\n             * Constructs a new OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND.\n             * @memberof op_virtual_world\n             * @classdesc Represents a OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND.\n             * @implements IOP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND\n             * @constructor\n             * @param {op_virtual_world.IOP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND=} [properties] Properties to set\n             */\n            function OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND characterUuid.\n             * @member {number} characterUuid\n             * @memberof op_virtual_world.OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND\n             * @instance\n             */\n            OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND.prototype.characterUuid = 0;\n    \n            /**\n             * Creates a new OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND instance using the specified properties.\n             * @function create\n             * @memberof op_virtual_world.OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND\n             * @static\n             * @param {op_virtual_world.IOP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND=} [properties] Properties to set\n             * @returns {op_virtual_world.OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND} OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND instance\n             */\n            OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND.create = function create(properties) {\n                return new OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND message. Does not implicitly {@link op_virtual_world.OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND.verify|verify} messages.\n             * @function encode\n             * @memberof op_virtual_world.OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND\n             * @static\n             * @param {op_virtual_world.IOP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND} message OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.characterUuid);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND message, length delimited. Does not implicitly {@link op_virtual_world.OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_virtual_world.OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND\n             * @static\n             * @param {op_virtual_world.IOP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND} message OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_virtual_world.OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_virtual_world.OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND} OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_virtual_world.OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.characterUuid = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("characterUuid"))\n                    throw $util.ProtocolError("missing required \'characterUuid\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_virtual_world.OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_virtual_world.OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND} OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND message.\n             * @function verify\n             * @memberof op_virtual_world.OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.characterUuid))\n                    return "characterUuid: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_virtual_world.OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_virtual_world.OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND} OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND\n             */\n            OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_virtual_world.OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND)\n                    return object;\n                var message = new $root.op_virtual_world.OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND();\n                if (object.characterUuid != null)\n                    message.characterUuid = object.characterUuid | 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_virtual_world.OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND\n             * @static\n             * @param {op_virtual_world.OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND} message OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.characterUuid = 0;\n                if (message.characterUuid != null && message.hasOwnProperty("characterUuid"))\n                    object.characterUuid = message.characterUuid;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND to JSON.\n             * @function toJSON\n             * @memberof op_virtual_world.OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_GATEWAY_RES_VIRTUAL_WORLD_CHARACTER_NOT_FOUND;\n        })();\n    \n        op_virtual_world.UI = (function() {\n    \n            /**\n             * Properties of a UI.\n             * @memberof op_virtual_world\n             * @interface IUI\n             * @property {number} uiId UI uiId\n             * @property {number} uiIndex UI uiIndex\n             * @property {string} uiName UI uiName\n             */\n    \n            /**\n             * Constructs a new UI.\n             * @memberof op_virtual_world\n             * @classdesc Represents a UI.\n             * @implements IUI\n             * @constructor\n             * @param {op_virtual_world.IUI=} [properties] Properties to set\n             */\n            function UI(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * UI uiId.\n             * @member {number} uiId\n             * @memberof op_virtual_world.UI\n             * @instance\n             */\n            UI.prototype.uiId = 0;\n    \n            /**\n             * UI uiIndex.\n             * @member {number} uiIndex\n             * @memberof op_virtual_world.UI\n             * @instance\n             */\n            UI.prototype.uiIndex = 0;\n    \n            /**\n             * UI uiName.\n             * @member {string} uiName\n             * @memberof op_virtual_world.UI\n             * @instance\n             */\n            UI.prototype.uiName = "";\n    \n            /**\n             * Creates a new UI instance using the specified properties.\n             * @function create\n             * @memberof op_virtual_world.UI\n             * @static\n             * @param {op_virtual_world.IUI=} [properties] Properties to set\n             * @returns {op_virtual_world.UI} UI instance\n             */\n            UI.create = function create(properties) {\n                return new UI(properties);\n            };\n    \n            /**\n             * Encodes the specified UI message. Does not implicitly {@link op_virtual_world.UI.verify|verify} messages.\n             * @function encode\n             * @memberof op_virtual_world.UI\n             * @static\n             * @param {op_virtual_world.IUI} message UI message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            UI.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.uiId);\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.uiIndex);\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.uiName);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified UI message, length delimited. Does not implicitly {@link op_virtual_world.UI.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_virtual_world.UI\n             * @static\n             * @param {op_virtual_world.IUI} message UI message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            UI.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a UI message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_virtual_world.UI\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_virtual_world.UI} UI\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            UI.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_virtual_world.UI();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.uiId = reader.int32();\n                        break;\n                    case 2:\n                        message.uiIndex = reader.int32();\n                        break;\n                    case 3:\n                        message.uiName = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("uiId"))\n                    throw $util.ProtocolError("missing required \'uiId\'", { instance: message });\n                if (!message.hasOwnProperty("uiIndex"))\n                    throw $util.ProtocolError("missing required \'uiIndex\'", { instance: message });\n                if (!message.hasOwnProperty("uiName"))\n                    throw $util.ProtocolError("missing required \'uiName\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a UI message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_virtual_world.UI\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_virtual_world.UI} UI\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            UI.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a UI message.\n             * @function verify\n             * @memberof op_virtual_world.UI\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            UI.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.uiId))\n                    return "uiId: integer expected";\n                if (!$util.isInteger(message.uiIndex))\n                    return "uiIndex: integer expected";\n                if (!$util.isString(message.uiName))\n                    return "uiName: string expected";\n                return null;\n            };\n    \n            /**\n             * Creates a UI message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_virtual_world.UI\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_virtual_world.UI} UI\n             */\n            UI.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_virtual_world.UI)\n                    return object;\n                var message = new $root.op_virtual_world.UI();\n                if (object.uiId != null)\n                    message.uiId = object.uiId | 0;\n                if (object.uiIndex != null)\n                    message.uiIndex = object.uiIndex | 0;\n                if (object.uiName != null)\n                    message.uiName = String(object.uiName);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a UI message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_virtual_world.UI\n             * @static\n             * @param {op_virtual_world.UI} message UI\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            UI.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.uiId = 0;\n                    object.uiIndex = 0;\n                    object.uiName = "";\n                }\n                if (message.uiId != null && message.hasOwnProperty("uiId"))\n                    object.uiId = message.uiId;\n                if (message.uiIndex != null && message.hasOwnProperty("uiIndex"))\n                    object.uiIndex = message.uiIndex;\n                if (message.uiName != null && message.hasOwnProperty("uiName"))\n                    object.uiName = message.uiName;\n                return object;\n            };\n    \n            /**\n             * Converts this UI to JSON.\n             * @function toJSON\n             * @memberof op_virtual_world.UI\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            UI.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return UI;\n        })();\n    \n        op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT = (function() {\n    \n            /**\n             * Properties of a OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT.\n             * @memberof op_virtual_world\n             * @interface IOP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT\n             * @property {Array.<op_def.MouseEvent>|null} [mouseEvent] OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT mouseEvent\n             * @property {op_def.IPBPoint3f|null} [point3f] OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT point3f\n             * @property {op_virtual_world.IUI|null} [ui] OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT ui\n             * @property {number|null} [id] OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT id\n             * @property {op_def.NodeType|null} [nodeType] OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT nodeType\n             */\n    \n            /**\n             * Constructs a new OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT.\n             * @memberof op_virtual_world\n             * @classdesc Represents a OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT.\n             * @implements IOP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT\n             * @constructor\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT=} [properties] Properties to set\n             */\n            function OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT(properties) {\n                this.mouseEvent = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT mouseEvent.\n             * @member {Array.<op_def.MouseEvent>} mouseEvent\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT.prototype.mouseEvent = $util.emptyArray;\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT point3f.\n             * @member {op_def.IPBPoint3f|null|undefined} point3f\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT.prototype.point3f = null;\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT ui.\n             * @member {op_virtual_world.IUI|null|undefined} ui\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT.prototype.ui = null;\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT id.\n             * @member {number} id\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT.prototype.id = 0;\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT nodeType.\n             * @member {op_def.NodeType} nodeType\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT.prototype.nodeType = 0;\n    \n            /**\n             * Creates a new OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT instance using the specified properties.\n             * @function create\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT=} [properties] Properties to set\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT} OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT.create = function create(properties) {\n                return new OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT message. Does not implicitly {@link op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT.verify|verify} messages.\n             * @function encode\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT} message OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.mouseEvent != null && message.mouseEvent.length)\n                    for (var i = 0; i < message.mouseEvent.length; ++i)\n                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.mouseEvent[i]);\n                if (message.point3f != null && message.hasOwnProperty("point3f"))\n                    $root.op_def.PBPoint3f.encode(message.point3f, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                if (message.ui != null && message.hasOwnProperty("ui"))\n                    $root.op_virtual_world.UI.encode(message.ui, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                if (message.id != null && message.hasOwnProperty("id"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.id);\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    writer.uint32(/* id 5, wireType 0 =*/40).int32(message.nodeType);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT message, length delimited. Does not implicitly {@link op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT} message OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT} OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.mouseEvent && message.mouseEvent.length))\n                            message.mouseEvent = [];\n                        if ((tag & 7) === 2) {\n                            var end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2)\n                                message.mouseEvent.push(reader.int32());\n                        } else\n                            message.mouseEvent.push(reader.int32());\n                        break;\n                    case 2:\n                        message.point3f = $root.op_def.PBPoint3f.decode(reader, reader.uint32());\n                        break;\n                    case 3:\n                        message.ui = $root.op_virtual_world.UI.decode(reader, reader.uint32());\n                        break;\n                    case 4:\n                        message.id = reader.int32();\n                        break;\n                    case 5:\n                        message.nodeType = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT} OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT message.\n             * @function verify\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.mouseEvent != null && message.hasOwnProperty("mouseEvent")) {\n                    if (!Array.isArray(message.mouseEvent))\n                        return "mouseEvent: array expected";\n                    for (var i = 0; i < message.mouseEvent.length; ++i)\n                        switch (message.mouseEvent[i]) {\n                        default:\n                            return "mouseEvent: enum value[] expected";\n                        case 1:\n                        case 2:\n                        case 3:\n                        case 4:\n                        case 5:\n                        case 6:\n                        case 7:\n                        case 8:\n                            break;\n                        }\n                }\n                if (message.point3f != null && message.hasOwnProperty("point3f")) {\n                    var error = $root.op_def.PBPoint3f.verify(message.point3f);\n                    if (error)\n                        return "point3f." + error;\n                }\n                if (message.ui != null && message.hasOwnProperty("ui")) {\n                    var error = $root.op_virtual_world.UI.verify(message.ui);\n                    if (error)\n                        return "ui." + error;\n                }\n                if (message.id != null && message.hasOwnProperty("id"))\n                    if (!$util.isInteger(message.id))\n                        return "id: integer expected";\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    switch (message.nodeType) {\n                    default:\n                        return "nodeType: enum value expected";\n                    case 0:\n                    case 1:\n                    case 2:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 9:\n                    case 10:\n                    case 11:\n                    case 12:\n                    case 13:\n                    case 14:\n                    case 15:\n                    case 16:\n                    case 17:\n                    case 18:\n                    case 19:\n                    case 20:\n                    case 21:\n                    case 22:\n                    case 23:\n                    case 24:\n                    case 25:\n                    case 26:\n                    case 27:\n                    case 28:\n                    case 29:\n                        break;\n                    }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT} OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT)\n                    return object;\n                var message = new $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT();\n                if (object.mouseEvent) {\n                    if (!Array.isArray(object.mouseEvent))\n                        throw TypeError(".op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT.mouseEvent: array expected");\n                    message.mouseEvent = [];\n                    for (var i = 0; i < object.mouseEvent.length; ++i)\n                        switch (object.mouseEvent[i]) {\n                        default:\n                        case "RightMouseDown":\n                        case 1:\n                            message.mouseEvent[i] = 1;\n                            break;\n                        case "RightMouseUp":\n                        case 2:\n                            message.mouseEvent[i] = 2;\n                            break;\n                        case "LeftMouseDown":\n                        case 3:\n                            message.mouseEvent[i] = 3;\n                            break;\n                        case "LeftMouseUp":\n                        case 4:\n                            message.mouseEvent[i] = 4;\n                            break;\n                        case "WheelDown":\n                        case 5:\n                            message.mouseEvent[i] = 5;\n                            break;\n                        case "WheelUp":\n                        case 6:\n                            message.mouseEvent[i] = 6;\n                            break;\n                        case "RightMouseHolding":\n                        case 7:\n                            message.mouseEvent[i] = 7;\n                            break;\n                        case "LeftMouseHolding":\n                        case 8:\n                            message.mouseEvent[i] = 8;\n                            break;\n                        }\n                }\n                if (object.point3f != null) {\n                    if (typeof object.point3f !== "object")\n                        throw TypeError(".op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT.point3f: object expected");\n                    message.point3f = $root.op_def.PBPoint3f.fromObject(object.point3f);\n                }\n                if (object.ui != null) {\n                    if (typeof object.ui !== "object")\n                        throw TypeError(".op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT.ui: object expected");\n                    message.ui = $root.op_virtual_world.UI.fromObject(object.ui);\n                }\n                if (object.id != null)\n                    message.id = object.id | 0;\n                switch (object.nodeType) {\n                case "UnknownNodeType":\n                case 0:\n                    message.nodeType = 0;\n                    break;\n                case "GameNodeType":\n                case 1:\n                    message.nodeType = 1;\n                    break;\n                case "SceneNodeType":\n                case 2:\n                    message.nodeType = 2;\n                    break;\n                case "ElementNodeType":\n                case 3:\n                    message.nodeType = 3;\n                    break;\n                case "TerrainNodeType":\n                case 4:\n                    message.nodeType = 4;\n                    break;\n                case "CharacterNodeType":\n                case 5:\n                    message.nodeType = 5;\n                    break;\n                case "LocationType":\n                case 6:\n                    message.nodeType = 6;\n                    break;\n                case "MovableType":\n                case 7:\n                    message.nodeType = 7;\n                    break;\n                case "DisplayType":\n                case 8:\n                    message.nodeType = 8;\n                    break;\n                case "AttributeType":\n                case 9:\n                    message.nodeType = 9;\n                    break;\n                case "FunctionType":\n                case 10:\n                    message.nodeType = 10;\n                    break;\n                case "AnimationsType":\n                case 11:\n                    message.nodeType = 11;\n                    break;\n                case "EventType":\n                case 12:\n                    message.nodeType = 12;\n                    break;\n                case "MapSizeType":\n                case 13:\n                    message.nodeType = 13;\n                    break;\n                case "UIType":\n                case 14:\n                    message.nodeType = 14;\n                    break;\n                case "TimerType":\n                case 15:\n                    message.nodeType = 15;\n                    break;\n                case "PackageType":\n                case 16:\n                    message.nodeType = 16;\n                    break;\n                case "PackageItemType":\n                case 17:\n                    message.nodeType = 17;\n                    break;\n                case "AvatarType":\n                case 18:\n                    message.nodeType = 18;\n                    break;\n                case "SettingsType":\n                case 19:\n                    message.nodeType = 19;\n                    break;\n                case "CampType":\n                case 20:\n                    message.nodeType = 20;\n                    break;\n                case "MutexType":\n                case 21:\n                    message.nodeType = 21;\n                    break;\n                case "AnimationDataType":\n                case 22:\n                    message.nodeType = 22;\n                    break;\n                case "ForkType":\n                case 23:\n                    message.nodeType = 23;\n                    break;\n                case "ButtonType":\n                case 24:\n                    message.nodeType = 24;\n                    break;\n                case "TextType":\n                case 25:\n                    message.nodeType = 25;\n                    break;\n                case "AccessType":\n                case 26:\n                    message.nodeType = 26;\n                    break;\n                case "SpawnPointType":\n                case 27:\n                    message.nodeType = 27;\n                    break;\n                case "CommodityType":\n                case 28:\n                    message.nodeType = 28;\n                    break;\n                case "ShopType":\n                case 29:\n                    message.nodeType = 29;\n                    break;\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT\n             * @static\n             * @param {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT} message OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.mouseEvent = [];\n                if (options.defaults) {\n                    object.point3f = null;\n                    object.ui = null;\n                    object.id = 0;\n                    object.nodeType = options.enums === String ? "UnknownNodeType" : 0;\n                }\n                if (message.mouseEvent && message.mouseEvent.length) {\n                    object.mouseEvent = [];\n                    for (var j = 0; j < message.mouseEvent.length; ++j)\n                        object.mouseEvent[j] = options.enums === String ? $root.op_def.MouseEvent[message.mouseEvent[j]] : message.mouseEvent[j];\n                }\n                if (message.point3f != null && message.hasOwnProperty("point3f"))\n                    object.point3f = $root.op_def.PBPoint3f.toObject(message.point3f, options);\n                if (message.ui != null && message.hasOwnProperty("ui"))\n                    object.ui = $root.op_virtual_world.UI.toObject(message.ui, options);\n                if (message.id != null && message.hasOwnProperty("id"))\n                    object.id = message.id;\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    object.nodeType = options.enums === String ? $root.op_def.NodeType[message.nodeType] : message.nodeType;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT to JSON.\n             * @function toJSON\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_CLIENT_REQ_VIRTUAL_WORLD_MOUSE_EVENT;\n        })();\n    \n        op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED = (function() {\n    \n            /**\n             * Properties of a OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED.\n             * @memberof op_virtual_world\n             * @interface IOP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED\n             * @property {number|null} [cameraWidth] OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED cameraWidth\n             * @property {number|null} [cameraHeight] OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED cameraHeight\n             */\n    \n            /**\n             * Constructs a new OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED.\n             * @memberof op_virtual_world\n             * @classdesc Represents a OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED.\n             * @implements IOP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED\n             * @constructor\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED=} [properties] Properties to set\n             */\n            function OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED cameraWidth.\n             * @member {number} cameraWidth\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED.prototype.cameraWidth = 0;\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED cameraHeight.\n             * @member {number} cameraHeight\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED.prototype.cameraHeight = 0;\n    \n            /**\n             * Creates a new OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED instance using the specified properties.\n             * @function create\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED=} [properties] Properties to set\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED} OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED.create = function create(properties) {\n                return new OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED message. Does not implicitly {@link op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED.verify|verify} messages.\n             * @function encode\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED} message OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.cameraWidth != null && message.hasOwnProperty("cameraWidth"))\n                    writer.uint32(/* id 1, wireType 5 =*/13).float(message.cameraWidth);\n                if (message.cameraHeight != null && message.hasOwnProperty("cameraHeight"))\n                    writer.uint32(/* id 2, wireType 5 =*/21).float(message.cameraHeight);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED message, length delimited. Does not implicitly {@link op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED} message OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED} OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.cameraWidth = reader.float();\n                        break;\n                    case 2:\n                        message.cameraHeight = reader.float();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED} OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED message.\n             * @function verify\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.cameraWidth != null && message.hasOwnProperty("cameraWidth"))\n                    if (typeof message.cameraWidth !== "number")\n                        return "cameraWidth: number expected";\n                if (message.cameraHeight != null && message.hasOwnProperty("cameraHeight"))\n                    if (typeof message.cameraHeight !== "number")\n                        return "cameraHeight: number expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED} OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED)\n                    return object;\n                var message = new $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED();\n                if (object.cameraWidth != null)\n                    message.cameraWidth = Number(object.cameraWidth);\n                if (object.cameraHeight != null)\n                    message.cameraHeight = Number(object.cameraHeight);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED\n             * @static\n             * @param {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED} message OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.cameraWidth = 0;\n                    object.cameraHeight = 0;\n                }\n                if (message.cameraWidth != null && message.hasOwnProperty("cameraWidth"))\n                    object.cameraWidth = options.json && !isFinite(message.cameraWidth) ? String(message.cameraWidth) : message.cameraWidth;\n                if (message.cameraHeight != null && message.hasOwnProperty("cameraHeight"))\n                    object.cameraHeight = options.json && !isFinite(message.cameraHeight) ? String(message.cameraHeight) : message.cameraHeight;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED to JSON.\n             * @function toJSON\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_CLIENT_REQ_VIRTUAL_WORLD_SCENE_CREATED;\n        })();\n    \n        op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE = (function() {\n    \n            /**\n             * Properties of a OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE.\n             * @memberof op_virtual_world\n             * @interface IOP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE\n             * @property {number} width OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE width\n             * @property {number} height OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE height\n             */\n    \n            /**\n             * Constructs a new OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE.\n             * @memberof op_virtual_world\n             * @classdesc Represents a OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE.\n             * @implements IOP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE\n             * @constructor\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE=} [properties] Properties to set\n             */\n            function OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE width.\n             * @member {number} width\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE.prototype.width = 0;\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE height.\n             * @member {number} height\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE.prototype.height = 0;\n    \n            /**\n             * Creates a new OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE instance using the specified properties.\n             * @function create\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE=} [properties] Properties to set\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE} OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE.create = function create(properties) {\n                return new OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE message. Does not implicitly {@link op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE.verify|verify} messages.\n             * @function encode\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE} message OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 5 =*/13).float(message.width);\n                writer.uint32(/* id 2, wireType 5 =*/21).float(message.height);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE message, length delimited. Does not implicitly {@link op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE} message OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE} OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.width = reader.float();\n                        break;\n                    case 2:\n                        message.height = reader.float();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("width"))\n                    throw $util.ProtocolError("missing required \'width\'", { instance: message });\n                if (!message.hasOwnProperty("height"))\n                    throw $util.ProtocolError("missing required \'height\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE} OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE message.\n             * @function verify\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (typeof message.width !== "number")\n                    return "width: number expected";\n                if (typeof message.height !== "number")\n                    return "height: number expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE} OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE)\n                    return object;\n                var message = new $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE();\n                if (object.width != null)\n                    message.width = Number(object.width);\n                if (object.height != null)\n                    message.height = Number(object.height);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE\n             * @static\n             * @param {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE} message OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.width = 0;\n                    object.height = 0;\n                }\n                if (message.width != null && message.hasOwnProperty("width"))\n                    object.width = options.json && !isFinite(message.width) ? String(message.width) : message.width;\n                if (message.height != null && message.hasOwnProperty("height"))\n                    object.height = options.json && !isFinite(message.height) ? String(message.height) : message.height;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE to JSON.\n             * @function toJSON\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_CLIENT_REQ_VIRTUAL_WORLD_RESET_CAMERA_SIZE;\n        })();\n    \n        op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE = (function() {\n    \n            /**\n             * Properties of a OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE.\n             * @memberof op_virtual_world\n             * @interface IOP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE\n             * @property {number} ItemIdx OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE ItemIdx\n             */\n    \n            /**\n             * Constructs a new OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE.\n             * @memberof op_virtual_world\n             * @classdesc Represents a OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE.\n             * @implements IOP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE\n             * @constructor\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE=} [properties] Properties to set\n             */\n            function OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE ItemIdx.\n             * @member {number} ItemIdx\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE.prototype.ItemIdx = 0;\n    \n            /**\n             * Creates a new OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE instance using the specified properties.\n             * @function create\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE=} [properties] Properties to set\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE} OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE.create = function create(properties) {\n                return new OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE message. Does not implicitly {@link op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE.verify|verify} messages.\n             * @function encode\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE} message OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ItemIdx);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE message, length delimited. Does not implicitly {@link op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE} message OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE} OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.ItemIdx = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("ItemIdx"))\n                    throw $util.ProtocolError("missing required \'ItemIdx\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE} OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE message.\n             * @function verify\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.ItemIdx))\n                    return "ItemIdx: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE} OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE)\n                    return object;\n                var message = new $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE();\n                if (object.ItemIdx != null)\n                    message.ItemIdx = object.ItemIdx | 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE\n             * @static\n             * @param {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE} message OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.ItemIdx = 0;\n                if (message.ItemIdx != null && message.hasOwnProperty("ItemIdx"))\n                    object.ItemIdx = message.ItemIdx;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE to JSON.\n             * @function toJSON\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_CLIENT_REQ_VIRTUAL_WORLD_PACKAGE_ITEM_USE;\n        })();\n    \n        op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM = (function() {\n    \n            /**\n             * Properties of a OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM.\n             * @memberof op_virtual_world\n             * @interface IOP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM\n             * @property {number} FirstPackageId OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM FirstPackageId\n             * @property {number} FirstIdx OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM FirstIdx\n             * @property {number} SecondPackageId OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM SecondPackageId\n             */\n    \n            /**\n             * Constructs a new OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM.\n             * @memberof op_virtual_world\n             * @classdesc Represents a OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM.\n             * @implements IOP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM\n             * @constructor\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM=} [properties] Properties to set\n             */\n            function OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM FirstPackageId.\n             * @member {number} FirstPackageId\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM.prototype.FirstPackageId = 0;\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM FirstIdx.\n             * @member {number} FirstIdx\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM.prototype.FirstIdx = 0;\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM SecondPackageId.\n             * @member {number} SecondPackageId\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM.prototype.SecondPackageId = 0;\n    \n            /**\n             * Creates a new OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM instance using the specified properties.\n             * @function create\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM=} [properties] Properties to set\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM} OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM.create = function create(properties) {\n                return new OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM message. Does not implicitly {@link op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM.verify|verify} messages.\n             * @function encode\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM} message OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.FirstPackageId);\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.FirstIdx);\n                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.SecondPackageId);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM message, length delimited. Does not implicitly {@link op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM} message OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM} OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.FirstPackageId = reader.int32();\n                        break;\n                    case 2:\n                        message.FirstIdx = reader.int32();\n                        break;\n                    case 3:\n                        message.SecondPackageId = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("FirstPackageId"))\n                    throw $util.ProtocolError("missing required \'FirstPackageId\'", { instance: message });\n                if (!message.hasOwnProperty("FirstIdx"))\n                    throw $util.ProtocolError("missing required \'FirstIdx\'", { instance: message });\n                if (!message.hasOwnProperty("SecondPackageId"))\n                    throw $util.ProtocolError("missing required \'SecondPackageId\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM} OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM message.\n             * @function verify\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.FirstPackageId))\n                    return "FirstPackageId: integer expected";\n                if (!$util.isInteger(message.FirstIdx))\n                    return "FirstIdx: integer expected";\n                if (!$util.isInteger(message.SecondPackageId))\n                    return "SecondPackageId: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM} OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM)\n                    return object;\n                var message = new $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM();\n                if (object.FirstPackageId != null)\n                    message.FirstPackageId = object.FirstPackageId | 0;\n                if (object.FirstIdx != null)\n                    message.FirstIdx = object.FirstIdx | 0;\n                if (object.SecondPackageId != null)\n                    message.SecondPackageId = object.SecondPackageId | 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM\n             * @static\n             * @param {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM} message OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.FirstPackageId = 0;\n                    object.FirstIdx = 0;\n                    object.SecondPackageId = 0;\n                }\n                if (message.FirstPackageId != null && message.hasOwnProperty("FirstPackageId"))\n                    object.FirstPackageId = message.FirstPackageId;\n                if (message.FirstIdx != null && message.hasOwnProperty("FirstIdx"))\n                    object.FirstIdx = message.FirstIdx;\n                if (message.SecondPackageId != null && message.hasOwnProperty("SecondPackageId"))\n                    object.SecondPackageId = message.SecondPackageId;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM to JSON.\n             * @function toJSON\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_CLIENT_REQ_VIRTUAL_WORLD_STORED_ITEM;\n        })();\n    \n        op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI = (function() {\n    \n            /**\n             * Properties of a OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI.\n             * @memberof op_virtual_world\n             * @interface IOP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI\n             * @property {number} showuiId OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI showuiId\n             */\n    \n            /**\n             * Constructs a new OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI.\n             * @memberof op_virtual_world\n             * @classdesc Represents a OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI.\n             * @implements IOP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI\n             * @constructor\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI=} [properties] Properties to set\n             */\n            function OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI showuiId.\n             * @member {number} showuiId\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI.prototype.showuiId = 0;\n    \n            /**\n             * Creates a new OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI instance using the specified properties.\n             * @function create\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI=} [properties] Properties to set\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI} OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI.create = function create(properties) {\n                return new OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI message. Does not implicitly {@link op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI.verify|verify} messages.\n             * @function encode\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI} message OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.showuiId);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI message, length delimited. Does not implicitly {@link op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI} message OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI} OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.showuiId = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("showuiId"))\n                    throw $util.ProtocolError("missing required \'showuiId\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI} OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI message.\n             * @function verify\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.showuiId))\n                    return "showuiId: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI} OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI)\n                    return object;\n                var message = new $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI();\n                if (object.showuiId != null)\n                    message.showuiId = object.showuiId | 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI\n             * @static\n             * @param {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI} message OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.showuiId = 0;\n                if (message.showuiId != null && message.hasOwnProperty("showuiId"))\n                    object.showuiId = message.showuiId;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI to JSON.\n             * @function toJSON\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_CLIENT_REQ_VIRTUAL_WORLD_SHOW_UI;\n        })();\n    \n        op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER = (function() {\n    \n            /**\n             * Properties of a OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER.\n             * @memberof op_virtual_world\n             * @interface IOP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER\n             * @property {number|null} [roomId] OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER roomId\n             * @property {number|null} [expire] OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER expire\n             */\n    \n            /**\n             * Constructs a new OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER.\n             * @memberof op_virtual_world\n             * @classdesc Represents a OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER.\n             * @implements IOP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER\n             * @constructor\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER=} [properties] Properties to set\n             */\n            function OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER roomId.\n             * @member {number} roomId\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER.prototype.roomId = 0;\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER expire.\n             * @member {number} expire\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER.prototype.expire = 0;\n    \n            /**\n             * Creates a new OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER instance using the specified properties.\n             * @function create\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER=} [properties] Properties to set\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER} OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER.create = function create(properties) {\n                return new OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER message. Does not implicitly {@link op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER.verify|verify} messages.\n             * @function encode\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER} message OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.roomId != null && message.hasOwnProperty("roomId"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.roomId);\n                if (message.expire != null && message.hasOwnProperty("expire"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.expire);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER message, length delimited. Does not implicitly {@link op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER} message OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER} OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.roomId = reader.int32();\n                        break;\n                    case 2:\n                        message.expire = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER} OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER message.\n             * @function verify\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.roomId != null && message.hasOwnProperty("roomId"))\n                    if (!$util.isInteger(message.roomId))\n                        return "roomId: integer expected";\n                if (message.expire != null && message.hasOwnProperty("expire"))\n                    if (!$util.isInteger(message.expire))\n                        return "expire: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER} OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER)\n                    return object;\n                var message = new $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER();\n                if (object.roomId != null)\n                    message.roomId = object.roomId | 0;\n                if (object.expire != null)\n                    message.expire = object.expire | 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER\n             * @static\n             * @param {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER} message OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.roomId = 0;\n                    object.expire = 0;\n                }\n                if (message.roomId != null && message.hasOwnProperty("roomId"))\n                    object.roomId = message.roomId;\n                if (message.expire != null && message.hasOwnProperty("expire"))\n                    object.expire = message.expire;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER to JSON.\n             * @function toJSON\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_CLIENT_REQ_VIRTUAL_WORLD_QCLOUD_GME_AUTHBUFFER;\n        })();\n    \n        op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS = (function() {\n    \n            /**\n             * Properties of a OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS.\n             * @memberof op_virtual_world\n             * @interface IOP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS\n             * @property {op_def.ChatChannel|null} [voiceChannel] OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS voiceChannel\n             * @property {number|null} [voiceRoomId] OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS voiceRoomId\n             * @property {op_def.VoiceRoomStatus|null} [voiceRoomStatus] OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS voiceRoomStatus\n             * @property {boolean|null} [talking] OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS talking\n             */\n    \n            /**\n             * Constructs a new OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS.\n             * @memberof op_virtual_world\n             * @classdesc Represents a OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS.\n             * @implements IOP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS\n             * @constructor\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS=} [properties] Properties to set\n             */\n            function OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS voiceChannel.\n             * @member {op_def.ChatChannel} voiceChannel\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS.prototype.voiceChannel = 0;\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS voiceRoomId.\n             * @member {number} voiceRoomId\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS.prototype.voiceRoomId = 0;\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS voiceRoomStatus.\n             * @member {op_def.VoiceRoomStatus} voiceRoomStatus\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS.prototype.voiceRoomStatus = 1;\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS talking.\n             * @member {boolean} talking\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS.prototype.talking = false;\n    \n            /**\n             * Creates a new OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS instance using the specified properties.\n             * @function create\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS=} [properties] Properties to set\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS} OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS.create = function create(properties) {\n                return new OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS message. Does not implicitly {@link op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS.verify|verify} messages.\n             * @function encode\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS} message OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.voiceChannel != null && message.hasOwnProperty("voiceChannel"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.voiceChannel);\n                if (message.voiceRoomId != null && message.hasOwnProperty("voiceRoomId"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.voiceRoomId);\n                if (message.voiceRoomStatus != null && message.hasOwnProperty("voiceRoomStatus"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.voiceRoomStatus);\n                if (message.talking != null && message.hasOwnProperty("talking"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).bool(message.talking);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS message, length delimited. Does not implicitly {@link op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS} message OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS} OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.voiceChannel = reader.int32();\n                        break;\n                    case 2:\n                        message.voiceRoomId = reader.int32();\n                        break;\n                    case 3:\n                        message.voiceRoomStatus = reader.int32();\n                        break;\n                    case 4:\n                        message.talking = reader.bool();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS} OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS message.\n             * @function verify\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.voiceChannel != null && message.hasOwnProperty("voiceChannel"))\n                    switch (message.voiceChannel) {\n                    default:\n                        return "voiceChannel: enum value expected";\n                    case 0:\n                    case 1:\n                    case 2:\n                    case 3:\n                    case 4:\n                        break;\n                    }\n                if (message.voiceRoomId != null && message.hasOwnProperty("voiceRoomId"))\n                    if (!$util.isInteger(message.voiceRoomId))\n                        return "voiceRoomId: integer expected";\n                if (message.voiceRoomStatus != null && message.hasOwnProperty("voiceRoomStatus"))\n                    switch (message.voiceRoomStatus) {\n                    default:\n                        return "voiceRoomStatus: enum value expected";\n                    case 1:\n                    case 2:\n                        break;\n                    }\n                if (message.talking != null && message.hasOwnProperty("talking"))\n                    if (typeof message.talking !== "boolean")\n                        return "talking: boolean expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS} OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS)\n                    return object;\n                var message = new $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS();\n                switch (object.voiceChannel) {\n                case "CurrentScene":\n                case 0:\n                    message.voiceChannel = 0;\n                    break;\n                case "World":\n                case 1:\n                    message.voiceChannel = 1;\n                    break;\n                case "Team":\n                case 2:\n                    message.voiceChannel = 2;\n                    break;\n                case "Private":\n                case 3:\n                    message.voiceChannel = 3;\n                    break;\n                case "System":\n                case 4:\n                    message.voiceChannel = 4;\n                    break;\n                }\n                if (object.voiceRoomId != null)\n                    message.voiceRoomId = object.voiceRoomId | 0;\n                switch (object.voiceRoomStatus) {\n                case "InVoiceRoom":\n                case 1:\n                    message.voiceRoomStatus = 1;\n                    break;\n                case "OutsideVoiceRoom":\n                case 2:\n                    message.voiceRoomStatus = 2;\n                    break;\n                }\n                if (object.talking != null)\n                    message.talking = Boolean(object.talking);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS\n             * @static\n             * @param {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS} message OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.voiceChannel = options.enums === String ? "CurrentScene" : 0;\n                    object.voiceRoomId = 0;\n                    object.voiceRoomStatus = options.enums === String ? "InVoiceRoom" : 1;\n                    object.talking = false;\n                }\n                if (message.voiceChannel != null && message.hasOwnProperty("voiceChannel"))\n                    object.voiceChannel = options.enums === String ? $root.op_def.ChatChannel[message.voiceChannel] : message.voiceChannel;\n                if (message.voiceRoomId != null && message.hasOwnProperty("voiceRoomId"))\n                    object.voiceRoomId = message.voiceRoomId;\n                if (message.voiceRoomStatus != null && message.hasOwnProperty("voiceRoomStatus"))\n                    object.voiceRoomStatus = options.enums === String ? $root.op_def.VoiceRoomStatus[message.voiceRoomStatus] : message.voiceRoomStatus;\n                if (message.talking != null && message.hasOwnProperty("talking"))\n                    object.talking = message.talking;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS to JSON.\n             * @function toJSON\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_CLIENT_REQ_VIRTUAL_WORLD_VOICE_ROOM_STATUS;\n        })();\n    \n        op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS = (function() {\n    \n            /**\n             * Properties of a OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS.\n             * @memberof op_virtual_world\n             * @interface IOP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS\n             * @property {op_def.GameStatus} gameStatus OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS gameStatus\n             */\n    \n            /**\n             * Constructs a new OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS.\n             * @memberof op_virtual_world\n             * @classdesc Represents a OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS.\n             * @implements IOP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS\n             * @constructor\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS=} [properties] Properties to set\n             */\n            function OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS gameStatus.\n             * @member {op_def.GameStatus} gameStatus\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS.prototype.gameStatus = 1;\n    \n            /**\n             * Creates a new OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS instance using the specified properties.\n             * @function create\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS=} [properties] Properties to set\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS} OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS.create = function create(properties) {\n                return new OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS message. Does not implicitly {@link op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS.verify|verify} messages.\n             * @function encode\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS} message OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.gameStatus);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS message, length delimited. Does not implicitly {@link op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS} message OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS} OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.gameStatus = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("gameStatus"))\n                    throw $util.ProtocolError("missing required \'gameStatus\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS} OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS message.\n             * @function verify\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                switch (message.gameStatus) {\n                default:\n                    return "gameStatus: enum value expected";\n                case 1:\n                case 2:\n                    break;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS} OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS)\n                    return object;\n                var message = new $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS();\n                switch (object.gameStatus) {\n                case "Blur":\n                case 1:\n                    message.gameStatus = 1;\n                    break;\n                case "Focus":\n                case 2:\n                    message.gameStatus = 2;\n                    break;\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS\n             * @static\n             * @param {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS} message OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.gameStatus = options.enums === String ? "Blur" : 1;\n                if (message.gameStatus != null && message.hasOwnProperty("gameStatus"))\n                    object.gameStatus = options.enums === String ? $root.op_def.GameStatus[message.gameStatus] : message.gameStatus;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS to JSON.\n             * @function toJSON\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_CLIENT_REQ_VIRTUAL_WORLD_GAME_STATUS;\n        })();\n    \n        op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE = (function() {\n    \n            /**\n             * Properties of a OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE.\n             * @memberof op_virtual_world\n             * @interface IOP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE\n             * @property {number} id OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE id\n             * @property {number|null} [page] OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE page\n             * @property {number|null} [perPage] OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE perPage\n             */\n    \n            /**\n             * Constructs a new OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE.\n             * @memberof op_virtual_world\n             * @classdesc Represents a OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE.\n             * @implements IOP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE\n             * @constructor\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE=} [properties] Properties to set\n             */\n            function OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE id.\n             * @member {number} id\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE.prototype.id = 0;\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE page.\n             * @member {number} page\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE.prototype.page = 0;\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE perPage.\n             * @member {number} perPage\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE.prototype.perPage = 0;\n    \n            /**\n             * Creates a new OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE instance using the specified properties.\n             * @function create\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE=} [properties] Properties to set\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE} OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE.create = function create(properties) {\n                return new OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE message. Does not implicitly {@link op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE.verify|verify} messages.\n             * @function encode\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE} message OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.id);\n                if (message.page != null && message.hasOwnProperty("page"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.page);\n                if (message.perPage != null && message.hasOwnProperty("perPage"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.perPage);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE message, length delimited. Does not implicitly {@link op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE} message OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE} OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.id = reader.int32();\n                        break;\n                    case 2:\n                        message.page = reader.int32();\n                        break;\n                    case 3:\n                        message.perPage = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("id"))\n                    throw $util.ProtocolError("missing required \'id\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE} OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE message.\n             * @function verify\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.id))\n                    return "id: integer expected";\n                if (message.page != null && message.hasOwnProperty("page"))\n                    if (!$util.isInteger(message.page))\n                        return "page: integer expected";\n                if (message.perPage != null && message.hasOwnProperty("perPage"))\n                    if (!$util.isInteger(message.perPage))\n                        return "perPage: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE} OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE)\n                    return object;\n                var message = new $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE();\n                if (object.id != null)\n                    message.id = object.id | 0;\n                if (object.page != null)\n                    message.page = object.page | 0;\n                if (object.perPage != null)\n                    message.perPage = object.perPage | 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE\n             * @static\n             * @param {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE} message OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.id = 0;\n                    object.page = 0;\n                    object.perPage = 0;\n                }\n                if (message.id != null && message.hasOwnProperty("id"))\n                    object.id = message.id;\n                if (message.page != null && message.hasOwnProperty("page"))\n                    object.page = message.page;\n                if (message.perPage != null && message.hasOwnProperty("perPage"))\n                    object.perPage = message.perPage;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE to JSON.\n             * @function toJSON\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_CLIENT_REQ_VIRTUAL_WORLD_QUERY_PACKAGE;\n        })();\n    \n        op_virtual_world.OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE = (function() {\n    \n            /**\n             * Properties of a OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE.\n             * @memberof op_virtual_world\n             * @interface IOP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE\n             * @property {string} userId OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE userId\n             * @property {number|null} [tuding] OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE tuding\n             */\n    \n            /**\n             * Constructs a new OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE.\n             * @memberof op_virtual_world\n             * @classdesc Represents a OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE.\n             * @implements IOP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE\n             * @constructor\n             * @param {op_virtual_world.IOP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE=} [properties] Properties to set\n             */\n            function OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE userId.\n             * @member {string} userId\n             * @memberof op_virtual_world.OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE\n             * @instance\n             */\n            OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE.prototype.userId = "";\n    \n            /**\n             * OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE tuding.\n             * @member {number} tuding\n             * @memberof op_virtual_world.OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE\n             * @instance\n             */\n            OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE.prototype.tuding = 0;\n    \n            /**\n             * Creates a new OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE instance using the specified properties.\n             * @function create\n             * @memberof op_virtual_world.OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE\n             * @static\n             * @param {op_virtual_world.IOP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE=} [properties] Properties to set\n             * @returns {op_virtual_world.OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE} OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE instance\n             */\n            OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE.create = function create(properties) {\n                return new OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE message. Does not implicitly {@link op_virtual_world.OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE.verify|verify} messages.\n             * @function encode\n             * @memberof op_virtual_world.OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE\n             * @static\n             * @param {op_virtual_world.IOP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE} message OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.userId);\n                if (message.tuding != null && message.hasOwnProperty("tuding"))\n                    writer.uint32(/* id 2, wireType 1 =*/17).double(message.tuding);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE message, length delimited. Does not implicitly {@link op_virtual_world.OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_virtual_world.OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE\n             * @static\n             * @param {op_virtual_world.IOP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE} message OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_virtual_world.OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_virtual_world.OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE} OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_virtual_world.OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.userId = reader.string();\n                        break;\n                    case 2:\n                        message.tuding = reader.double();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("userId"))\n                    throw $util.ProtocolError("missing required \'userId\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_virtual_world.OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_virtual_world.OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE} OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE message.\n             * @function verify\n             * @memberof op_virtual_world.OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.userId))\n                    return "userId: string expected";\n                if (message.tuding != null && message.hasOwnProperty("tuding"))\n                    if (typeof message.tuding !== "number")\n                        return "tuding: number expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_virtual_world.OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_virtual_world.OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE} OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE\n             */\n            OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_virtual_world.OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE)\n                    return object;\n                var message = new $root.op_virtual_world.OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE();\n                if (object.userId != null)\n                    message.userId = String(object.userId);\n                if (object.tuding != null)\n                    message.tuding = Number(object.tuding);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_virtual_world.OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE\n             * @static\n             * @param {op_virtual_world.OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE} message OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.userId = "";\n                    object.tuding = 0;\n                }\n                if (message.userId != null && message.hasOwnProperty("userId"))\n                    object.userId = message.userId;\n                if (message.tuding != null && message.hasOwnProperty("tuding"))\n                    object.tuding = options.json && !isFinite(message.tuding) ? String(message.tuding) : message.tuding;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE to JSON.\n             * @function toJSON\n             * @memberof op_virtual_world.OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_PORTAL_REQ_VIRTUAL_WORLD_SYNC_USER_BALANCE;\n        })();\n    \n        op_virtual_world.OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER = (function() {\n    \n            /**\n             * Properties of a OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER.\n             * @memberof op_virtual_world\n             * @interface IOP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER\n             * @property {string} userId OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER userId\n             * @property {string} orderId OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER orderId\n             * @property {string} gameId OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER gameId\n             * @property {op_def.ResponseStatus} responseStatus OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER responseStatus\n             * @property {string|null} [msg] OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER msg\n             * @property {number|null} [balanceTuDing] OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER balanceTuDing\n             */\n    \n            /**\n             * Constructs a new OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER.\n             * @memberof op_virtual_world\n             * @classdesc Represents a OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER.\n             * @implements IOP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER\n             * @constructor\n             * @param {op_virtual_world.IOP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER=} [properties] Properties to set\n             */\n            function OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER userId.\n             * @member {string} userId\n             * @memberof op_virtual_world.OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER\n             * @instance\n             */\n            OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER.prototype.userId = "";\n    \n            /**\n             * OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER orderId.\n             * @member {string} orderId\n             * @memberof op_virtual_world.OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER\n             * @instance\n             */\n            OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER.prototype.orderId = "";\n    \n            /**\n             * OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER gameId.\n             * @member {string} gameId\n             * @memberof op_virtual_world.OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER\n             * @instance\n             */\n            OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER.prototype.gameId = "";\n    \n            /**\n             * OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER responseStatus.\n             * @member {op_def.ResponseStatus} responseStatus\n             * @memberof op_virtual_world.OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER\n             * @instance\n             */\n            OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER.prototype.responseStatus = 0;\n    \n            /**\n             * OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER msg.\n             * @member {string} msg\n             * @memberof op_virtual_world.OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER\n             * @instance\n             */\n            OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER.prototype.msg = "";\n    \n            /**\n             * OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER balanceTuDing.\n             * @member {number} balanceTuDing\n             * @memberof op_virtual_world.OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER\n             * @instance\n             */\n            OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER.prototype.balanceTuDing = 0;\n    \n            /**\n             * Creates a new OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER instance using the specified properties.\n             * @function create\n             * @memberof op_virtual_world.OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER\n             * @static\n             * @param {op_virtual_world.IOP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER=} [properties] Properties to set\n             * @returns {op_virtual_world.OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER} OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER instance\n             */\n            OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER.create = function create(properties) {\n                return new OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER message. Does not implicitly {@link op_virtual_world.OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER.verify|verify} messages.\n             * @function encode\n             * @memberof op_virtual_world.OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER\n             * @static\n             * @param {op_virtual_world.IOP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER} message OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.userId);\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.orderId);\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.gameId);\n                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.responseStatus);\n                if (message.msg != null && message.hasOwnProperty("msg"))\n                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.msg);\n                if (message.balanceTuDing != null && message.hasOwnProperty("balanceTuDing"))\n                    writer.uint32(/* id 6, wireType 1 =*/49).double(message.balanceTuDing);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER message, length delimited. Does not implicitly {@link op_virtual_world.OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_virtual_world.OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER\n             * @static\n             * @param {op_virtual_world.IOP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER} message OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_virtual_world.OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_virtual_world.OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER} OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_virtual_world.OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.userId = reader.string();\n                        break;\n                    case 2:\n                        message.orderId = reader.string();\n                        break;\n                    case 3:\n                        message.gameId = reader.string();\n                        break;\n                    case 4:\n                        message.responseStatus = reader.int32();\n                        break;\n                    case 5:\n                        message.msg = reader.string();\n                        break;\n                    case 6:\n                        message.balanceTuDing = reader.double();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("userId"))\n                    throw $util.ProtocolError("missing required \'userId\'", { instance: message });\n                if (!message.hasOwnProperty("orderId"))\n                    throw $util.ProtocolError("missing required \'orderId\'", { instance: message });\n                if (!message.hasOwnProperty("gameId"))\n                    throw $util.ProtocolError("missing required \'gameId\'", { instance: message });\n                if (!message.hasOwnProperty("responseStatus"))\n                    throw $util.ProtocolError("missing required \'responseStatus\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_virtual_world.OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_virtual_world.OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER} OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER message.\n             * @function verify\n             * @memberof op_virtual_world.OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.userId))\n                    return "userId: string expected";\n                if (!$util.isString(message.orderId))\n                    return "orderId: string expected";\n                if (!$util.isString(message.gameId))\n                    return "gameId: string expected";\n                switch (message.responseStatus) {\n                default:\n                    return "responseStatus: enum value expected";\n                case 0:\n                case 4096:\n                case 4098:\n                case 4099:\n                case 4100:\n                case 8193:\n                case 12289:\n                case 16385:\n                case 20481:\n                case 37888:\n                case 37889:\n                case 45056:\n                    break;\n                }\n                if (message.msg != null && message.hasOwnProperty("msg"))\n                    if (!$util.isString(message.msg))\n                        return "msg: string expected";\n                if (message.balanceTuDing != null && message.hasOwnProperty("balanceTuDing"))\n                    if (typeof message.balanceTuDing !== "number")\n                        return "balanceTuDing: number expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_virtual_world.OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_virtual_world.OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER} OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER\n             */\n            OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_virtual_world.OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER)\n                    return object;\n                var message = new $root.op_virtual_world.OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER();\n                if (object.userId != null)\n                    message.userId = String(object.userId);\n                if (object.orderId != null)\n                    message.orderId = String(object.orderId);\n                if (object.gameId != null)\n                    message.gameId = String(object.gameId);\n                switch (object.responseStatus) {\n                case "SUCCESS":\n                case 0:\n                    message.responseStatus = 0;\n                    break;\n                case "SERVER_ERROR_UNKNOWN":\n                case 4096:\n                    message.responseStatus = 4096;\n                    break;\n                case "SERVER_ERROR_BUSY":\n                case 4098:\n                    message.responseStatus = 4098;\n                    break;\n                case "SERVER_ERROR_TIMEOUT":\n                case 4099:\n                    message.responseStatus = 4099;\n                    break;\n                case "SERVER_ERROR_SERVICE_NOT_FOUND":\n                case 4100:\n                    message.responseStatus = 4100;\n                    break;\n                case "SERVER_ERROR_BAD_GATEWAY":\n                case 8193:\n                    message.responseStatus = 8193;\n                    break;\n                case "SERVER_ERROR_GALAXY_SERVICE_NOT_FOUND":\n                case 12289:\n                    message.responseStatus = 12289;\n                    break;\n                case "SERVER_ERROR_WORLD_SERVICE_NOT_FOUND":\n                case 16385:\n                    message.responseStatus = 16385;\n                    break;\n                case "SERVER_ERROR_VIRTUAL_WORLD_SERVICE_NOT_FOUND":\n                case 20481:\n                    message.responseStatus = 20481;\n                    break;\n                case "REQUEST_ERROR_WRONG_PARAM":\n                case 37888:\n                    message.responseStatus = 37888;\n                    break;\n                case "REQUEST_UNAUTHORIZED":\n                case 37889:\n                    message.responseStatus = 37889;\n                    break;\n                case "RANSFER_TO_GAME_BILLER_ERROR":\n                case 45056:\n                    message.responseStatus = 45056;\n                    break;\n                }\n                if (object.msg != null)\n                    message.msg = String(object.msg);\n                if (object.balanceTuDing != null)\n                    message.balanceTuDing = Number(object.balanceTuDing);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_virtual_world.OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER\n             * @static\n             * @param {op_virtual_world.OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER} message OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.userId = "";\n                    object.orderId = "";\n                    object.gameId = "";\n                    object.responseStatus = options.enums === String ? "SUCCESS" : 0;\n                    object.msg = "";\n                    object.balanceTuDing = 0;\n                }\n                if (message.userId != null && message.hasOwnProperty("userId"))\n                    object.userId = message.userId;\n                if (message.orderId != null && message.hasOwnProperty("orderId"))\n                    object.orderId = message.orderId;\n                if (message.gameId != null && message.hasOwnProperty("gameId"))\n                    object.gameId = message.gameId;\n                if (message.responseStatus != null && message.hasOwnProperty("responseStatus"))\n                    object.responseStatus = options.enums === String ? $root.op_def.ResponseStatus[message.responseStatus] : message.responseStatus;\n                if (message.msg != null && message.hasOwnProperty("msg"))\n                    object.msg = message.msg;\n                if (message.balanceTuDing != null && message.hasOwnProperty("balanceTuDing"))\n                    object.balanceTuDing = options.json && !isFinite(message.balanceTuDing) ? String(message.balanceTuDing) : message.balanceTuDing;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER to JSON.\n             * @function toJSON\n             * @memberof op_virtual_world.OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_PORTAL_RES_VIRTUAL_WORLD_TRANSFER_TO_GAME_BILLER;\n        })();\n    \n        op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT = (function() {\n    \n            /**\n             * Properties of a OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT.\n             * @memberof op_virtual_world\n             * @interface IOP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT\n             * @property {number} id OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT id\n             * @property {op_def.MouseEvent} mouseEvent OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT mouseEvent\n             * @property {op_def.IPBPoint3f|null} [pos] OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT pos\n             * @property {op_def.NodeType|null} [nodeType] OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT nodeType\n             */\n    \n            /**\n             * Constructs a new OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT.\n             * @memberof op_virtual_world\n             * @classdesc Represents a OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT.\n             * @implements IOP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT\n             * @constructor\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT=} [properties] Properties to set\n             */\n            function OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT id.\n             * @member {number} id\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT.prototype.id = 0;\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT mouseEvent.\n             * @member {op_def.MouseEvent} mouseEvent\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT.prototype.mouseEvent = 1;\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT pos.\n             * @member {op_def.IPBPoint3f|null|undefined} pos\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT.prototype.pos = null;\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT nodeType.\n             * @member {op_def.NodeType} nodeType\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT.prototype.nodeType = 0;\n    \n            /**\n             * Creates a new OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT instance using the specified properties.\n             * @function create\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT=} [properties] Properties to set\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT} OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT.create = function create(properties) {\n                return new OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT message. Does not implicitly {@link op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT.verify|verify} messages.\n             * @function encode\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT} message OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.id);\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.mouseEvent);\n                if (message.pos != null && message.hasOwnProperty("pos"))\n                    $root.op_def.PBPoint3f.encode(message.pos, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.nodeType);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT message, length delimited. Does not implicitly {@link op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT} message OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT} OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.id = reader.int32();\n                        break;\n                    case 2:\n                        message.mouseEvent = reader.int32();\n                        break;\n                    case 3:\n                        message.pos = $root.op_def.PBPoint3f.decode(reader, reader.uint32());\n                        break;\n                    case 4:\n                        message.nodeType = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("id"))\n                    throw $util.ProtocolError("missing required \'id\'", { instance: message });\n                if (!message.hasOwnProperty("mouseEvent"))\n                    throw $util.ProtocolError("missing required \'mouseEvent\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT} OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT message.\n             * @function verify\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.id))\n                    return "id: integer expected";\n                switch (message.mouseEvent) {\n                default:\n                    return "mouseEvent: enum value expected";\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                    break;\n                }\n                if (message.pos != null && message.hasOwnProperty("pos")) {\n                    var error = $root.op_def.PBPoint3f.verify(message.pos);\n                    if (error)\n                        return "pos." + error;\n                }\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    switch (message.nodeType) {\n                    default:\n                        return "nodeType: enum value expected";\n                    case 0:\n                    case 1:\n                    case 2:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 9:\n                    case 10:\n                    case 11:\n                    case 12:\n                    case 13:\n                    case 14:\n                    case 15:\n                    case 16:\n                    case 17:\n                    case 18:\n                    case 19:\n                    case 20:\n                    case 21:\n                    case 22:\n                    case 23:\n                    case 24:\n                    case 25:\n                    case 26:\n                    case 27:\n                    case 28:\n                    case 29:\n                        break;\n                    }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT} OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT)\n                    return object;\n                var message = new $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT();\n                if (object.id != null)\n                    message.id = object.id | 0;\n                switch (object.mouseEvent) {\n                case "RightMouseDown":\n                case 1:\n                    message.mouseEvent = 1;\n                    break;\n                case "RightMouseUp":\n                case 2:\n                    message.mouseEvent = 2;\n                    break;\n                case "LeftMouseDown":\n                case 3:\n                    message.mouseEvent = 3;\n                    break;\n                case "LeftMouseUp":\n                case 4:\n                    message.mouseEvent = 4;\n                    break;\n                case "WheelDown":\n                case 5:\n                    message.mouseEvent = 5;\n                    break;\n                case "WheelUp":\n                case 6:\n                    message.mouseEvent = 6;\n                    break;\n                case "RightMouseHolding":\n                case 7:\n                    message.mouseEvent = 7;\n                    break;\n                case "LeftMouseHolding":\n                case 8:\n                    message.mouseEvent = 8;\n                    break;\n                }\n                if (object.pos != null) {\n                    if (typeof object.pos !== "object")\n                        throw TypeError(".op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT.pos: object expected");\n                    message.pos = $root.op_def.PBPoint3f.fromObject(object.pos);\n                }\n                switch (object.nodeType) {\n                case "UnknownNodeType":\n                case 0:\n                    message.nodeType = 0;\n                    break;\n                case "GameNodeType":\n                case 1:\n                    message.nodeType = 1;\n                    break;\n                case "SceneNodeType":\n                case 2:\n                    message.nodeType = 2;\n                    break;\n                case "ElementNodeType":\n                case 3:\n                    message.nodeType = 3;\n                    break;\n                case "TerrainNodeType":\n                case 4:\n                    message.nodeType = 4;\n                    break;\n                case "CharacterNodeType":\n                case 5:\n                    message.nodeType = 5;\n                    break;\n                case "LocationType":\n                case 6:\n                    message.nodeType = 6;\n                    break;\n                case "MovableType":\n                case 7:\n                    message.nodeType = 7;\n                    break;\n                case "DisplayType":\n                case 8:\n                    message.nodeType = 8;\n                    break;\n                case "AttributeType":\n                case 9:\n                    message.nodeType = 9;\n                    break;\n                case "FunctionType":\n                case 10:\n                    message.nodeType = 10;\n                    break;\n                case "AnimationsType":\n                case 11:\n                    message.nodeType = 11;\n                    break;\n                case "EventType":\n                case 12:\n                    message.nodeType = 12;\n                    break;\n                case "MapSizeType":\n                case 13:\n                    message.nodeType = 13;\n                    break;\n                case "UIType":\n                case 14:\n                    message.nodeType = 14;\n                    break;\n                case "TimerType":\n                case 15:\n                    message.nodeType = 15;\n                    break;\n                case "PackageType":\n                case 16:\n                    message.nodeType = 16;\n                    break;\n                case "PackageItemType":\n                case 17:\n                    message.nodeType = 17;\n                    break;\n                case "AvatarType":\n                case 18:\n                    message.nodeType = 18;\n                    break;\n                case "SettingsType":\n                case 19:\n                    message.nodeType = 19;\n                    break;\n                case "CampType":\n                case 20:\n                    message.nodeType = 20;\n                    break;\n                case "MutexType":\n                case 21:\n                    message.nodeType = 21;\n                    break;\n                case "AnimationDataType":\n                case 22:\n                    message.nodeType = 22;\n                    break;\n                case "ForkType":\n                case 23:\n                    message.nodeType = 23;\n                    break;\n                case "ButtonType":\n                case 24:\n                    message.nodeType = 24;\n                    break;\n                case "TextType":\n                case 25:\n                    message.nodeType = 25;\n                    break;\n                case "AccessType":\n                case 26:\n                    message.nodeType = 26;\n                    break;\n                case "SpawnPointType":\n                case 27:\n                    message.nodeType = 27;\n                    break;\n                case "CommodityType":\n                case 28:\n                    message.nodeType = 28;\n                    break;\n                case "ShopType":\n                case 29:\n                    message.nodeType = 29;\n                    break;\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT\n             * @static\n             * @param {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT} message OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.id = 0;\n                    object.mouseEvent = options.enums === String ? "RightMouseDown" : 1;\n                    object.pos = null;\n                    object.nodeType = options.enums === String ? "UnknownNodeType" : 0;\n                }\n                if (message.id != null && message.hasOwnProperty("id"))\n                    object.id = message.id;\n                if (message.mouseEvent != null && message.hasOwnProperty("mouseEvent"))\n                    object.mouseEvent = options.enums === String ? $root.op_def.MouseEvent[message.mouseEvent] : message.mouseEvent;\n                if (message.pos != null && message.hasOwnProperty("pos"))\n                    object.pos = $root.op_def.PBPoint3f.toObject(message.pos, options);\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    object.nodeType = options.enums === String ? $root.op_def.NodeType[message.nodeType] : message.nodeType;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT to JSON.\n             * @function toJSON\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_CLIENT_REQ_VIRTUAL_WORLD_SELECT_OBJECT;\n        })();\n    \n        op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER = (function() {\n    \n            /**\n             * Properties of a OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER.\n             * @memberof op_virtual_world\n             * @interface IOP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER\n             * @property {string} userId OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER userId\n             * @property {string} followerId OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER followerId\n             * @property {boolean} follow OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER follow\n             * @property {op_def.ResponseStatus} responseStatus OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER responseStatus\n             */\n    \n            /**\n             * Constructs a new OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER.\n             * @memberof op_virtual_world\n             * @classdesc Represents a OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER.\n             * @implements IOP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER\n             * @constructor\n             * @param {op_virtual_world.IOP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER=} [properties] Properties to set\n             */\n            function OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER userId.\n             * @member {string} userId\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER\n             * @instance\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER.prototype.userId = "";\n    \n            /**\n             * OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER followerId.\n             * @member {string} followerId\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER\n             * @instance\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER.prototype.followerId = "";\n    \n            /**\n             * OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER follow.\n             * @member {boolean} follow\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER\n             * @instance\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER.prototype.follow = false;\n    \n            /**\n             * OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER responseStatus.\n             * @member {op_def.ResponseStatus} responseStatus\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER\n             * @instance\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER.prototype.responseStatus = 0;\n    \n            /**\n             * Creates a new OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER instance using the specified properties.\n             * @function create\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER\n             * @static\n             * @param {op_virtual_world.IOP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER=} [properties] Properties to set\n             * @returns {op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER} OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER instance\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER.create = function create(properties) {\n                return new OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER message. Does not implicitly {@link op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER.verify|verify} messages.\n             * @function encode\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER\n             * @static\n             * @param {op_virtual_world.IOP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER} message OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.userId);\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.followerId);\n                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.follow);\n                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.responseStatus);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER message, length delimited. Does not implicitly {@link op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER\n             * @static\n             * @param {op_virtual_world.IOP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER} message OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER} OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.userId = reader.string();\n                        break;\n                    case 2:\n                        message.followerId = reader.string();\n                        break;\n                    case 3:\n                        message.follow = reader.bool();\n                        break;\n                    case 4:\n                        message.responseStatus = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("userId"))\n                    throw $util.ProtocolError("missing required \'userId\'", { instance: message });\n                if (!message.hasOwnProperty("followerId"))\n                    throw $util.ProtocolError("missing required \'followerId\'", { instance: message });\n                if (!message.hasOwnProperty("follow"))\n                    throw $util.ProtocolError("missing required \'follow\'", { instance: message });\n                if (!message.hasOwnProperty("responseStatus"))\n                    throw $util.ProtocolError("missing required \'responseStatus\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER} OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER message.\n             * @function verify\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.userId))\n                    return "userId: string expected";\n                if (!$util.isString(message.followerId))\n                    return "followerId: string expected";\n                if (typeof message.follow !== "boolean")\n                    return "follow: boolean expected";\n                switch (message.responseStatus) {\n                default:\n                    return "responseStatus: enum value expected";\n                case 0:\n                case 4096:\n                case 4098:\n                case 4099:\n                case 4100:\n                case 8193:\n                case 12289:\n                case 16385:\n                case 20481:\n                case 37888:\n                case 37889:\n                case 45056:\n                    break;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER} OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER)\n                    return object;\n                var message = new $root.op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER();\n                if (object.userId != null)\n                    message.userId = String(object.userId);\n                if (object.followerId != null)\n                    message.followerId = String(object.followerId);\n                if (object.follow != null)\n                    message.follow = Boolean(object.follow);\n                switch (object.responseStatus) {\n                case "SUCCESS":\n                case 0:\n                    message.responseStatus = 0;\n                    break;\n                case "SERVER_ERROR_UNKNOWN":\n                case 4096:\n                    message.responseStatus = 4096;\n                    break;\n                case "SERVER_ERROR_BUSY":\n                case 4098:\n                    message.responseStatus = 4098;\n                    break;\n                case "SERVER_ERROR_TIMEOUT":\n                case 4099:\n                    message.responseStatus = 4099;\n                    break;\n                case "SERVER_ERROR_SERVICE_NOT_FOUND":\n                case 4100:\n                    message.responseStatus = 4100;\n                    break;\n                case "SERVER_ERROR_BAD_GATEWAY":\n                case 8193:\n                    message.responseStatus = 8193;\n                    break;\n                case "SERVER_ERROR_GALAXY_SERVICE_NOT_FOUND":\n                case 12289:\n                    message.responseStatus = 12289;\n                    break;\n                case "SERVER_ERROR_WORLD_SERVICE_NOT_FOUND":\n                case 16385:\n                    message.responseStatus = 16385;\n                    break;\n                case "SERVER_ERROR_VIRTUAL_WORLD_SERVICE_NOT_FOUND":\n                case 20481:\n                    message.responseStatus = 20481;\n                    break;\n                case "REQUEST_ERROR_WRONG_PARAM":\n                case 37888:\n                    message.responseStatus = 37888;\n                    break;\n                case "REQUEST_UNAUTHORIZED":\n                case 37889:\n                    message.responseStatus = 37889;\n                    break;\n                case "RANSFER_TO_GAME_BILLER_ERROR":\n                case 45056:\n                    message.responseStatus = 45056;\n                    break;\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER\n             * @static\n             * @param {op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER} message OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.userId = "";\n                    object.followerId = "";\n                    object.follow = false;\n                    object.responseStatus = options.enums === String ? "SUCCESS" : 0;\n                }\n                if (message.userId != null && message.hasOwnProperty("userId"))\n                    object.userId = message.userId;\n                if (message.followerId != null && message.hasOwnProperty("followerId"))\n                    object.followerId = message.followerId;\n                if (message.follow != null && message.hasOwnProperty("follow"))\n                    object.follow = message.follow;\n                if (message.responseStatus != null && message.hasOwnProperty("responseStatus"))\n                    object.responseStatus = options.enums === String ? $root.op_def.ResponseStatus[message.responseStatus] : message.responseStatus;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER to JSON.\n             * @function toJSON\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_FOLLOW_USER;\n        })();\n    \n        op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO = (function() {\n    \n            /**\n             * Properties of a OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO.\n             * @memberof op_virtual_world\n             * @interface IOP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO\n             * @property {string} userId OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO userId\n             * @property {string|null} [nickname] OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO nickname\n             * @property {number|null} [createdAt] OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO createdAt\n             * @property {string|null} [username] OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO username\n             * @property {number|null} [level] OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO level\n             * @property {Array.<op_def.IBadgeCard>|null} [badgeCards] OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO badgeCards\n             * @property {Array.<op_def.IBadgeCard>|null} [displayBadgeCards] OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO displayBadgeCards\n             * @property {number|null} [vipLevel] OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO vipLevel\n             * @property {boolean|null} [isVip] OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO isVip\n             * @property {string|null} [bubbleResource] OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO bubbleResource\n             */\n    \n            /**\n             * Constructs a new OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO.\n             * @memberof op_virtual_world\n             * @classdesc Represents a OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO.\n             * @implements IOP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO\n             * @constructor\n             * @param {op_virtual_world.IOP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO=} [properties] Properties to set\n             */\n            function OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO(properties) {\n                this.badgeCards = [];\n                this.displayBadgeCards = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO userId.\n             * @member {string} userId\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO\n             * @instance\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO.prototype.userId = "";\n    \n            /**\n             * OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO nickname.\n             * @member {string} nickname\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO\n             * @instance\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO.prototype.nickname = "";\n    \n            /**\n             * OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO createdAt.\n             * @member {number} createdAt\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO\n             * @instance\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO.prototype.createdAt = 0;\n    \n            /**\n             * OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO username.\n             * @member {string} username\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO\n             * @instance\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO.prototype.username = "";\n    \n            /**\n             * OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO level.\n             * @member {number} level\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO\n             * @instance\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO.prototype.level = 0;\n    \n            /**\n             * OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO badgeCards.\n             * @member {Array.<op_def.IBadgeCard>} badgeCards\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO\n             * @instance\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO.prototype.badgeCards = $util.emptyArray;\n    \n            /**\n             * OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO displayBadgeCards.\n             * @member {Array.<op_def.IBadgeCard>} displayBadgeCards\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO\n             * @instance\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO.prototype.displayBadgeCards = $util.emptyArray;\n    \n            /**\n             * OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO vipLevel.\n             * @member {number} vipLevel\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO\n             * @instance\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO.prototype.vipLevel = 0;\n    \n            /**\n             * OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO isVip.\n             * @member {boolean} isVip\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO\n             * @instance\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO.prototype.isVip = false;\n    \n            /**\n             * OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO bubbleResource.\n             * @member {string} bubbleResource\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO\n             * @instance\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO.prototype.bubbleResource = "";\n    \n            /**\n             * Creates a new OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO instance using the specified properties.\n             * @function create\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO\n             * @static\n             * @param {op_virtual_world.IOP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO=} [properties] Properties to set\n             * @returns {op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO} OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO instance\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO.create = function create(properties) {\n                return new OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO message. Does not implicitly {@link op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO.verify|verify} messages.\n             * @function encode\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO\n             * @static\n             * @param {op_virtual_world.IOP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO} message OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.userId);\n                if (message.nickname != null && message.hasOwnProperty("nickname"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.nickname);\n                if (message.createdAt != null && message.hasOwnProperty("createdAt"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.createdAt);\n                if (message.username != null && message.hasOwnProperty("username"))\n                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.username);\n                if (message.level != null && message.hasOwnProperty("level"))\n                    writer.uint32(/* id 6, wireType 0 =*/48).int32(message.level);\n                if (message.badgeCards != null && message.badgeCards.length)\n                    for (var i = 0; i < message.badgeCards.length; ++i)\n                        $root.op_def.BadgeCard.encode(message.badgeCards[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n                if (message.displayBadgeCards != null && message.displayBadgeCards.length)\n                    for (var i = 0; i < message.displayBadgeCards.length; ++i)\n                        $root.op_def.BadgeCard.encode(message.displayBadgeCards[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n                if (message.vipLevel != null && message.hasOwnProperty("vipLevel"))\n                    writer.uint32(/* id 9, wireType 0 =*/72).int32(message.vipLevel);\n                if (message.isVip != null && message.hasOwnProperty("isVip"))\n                    writer.uint32(/* id 10, wireType 0 =*/80).bool(message.isVip);\n                if (message.bubbleResource != null && message.hasOwnProperty("bubbleResource"))\n                    writer.uint32(/* id 11, wireType 2 =*/90).string(message.bubbleResource);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO message, length delimited. Does not implicitly {@link op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO\n             * @static\n             * @param {op_virtual_world.IOP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO} message OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO} OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.userId = reader.string();\n                        break;\n                    case 3:\n                        message.nickname = reader.string();\n                        break;\n                    case 4:\n                        message.createdAt = reader.int32();\n                        break;\n                    case 5:\n                        message.username = reader.string();\n                        break;\n                    case 6:\n                        message.level = reader.int32();\n                        break;\n                    case 7:\n                        if (!(message.badgeCards && message.badgeCards.length))\n                            message.badgeCards = [];\n                        message.badgeCards.push($root.op_def.BadgeCard.decode(reader, reader.uint32()));\n                        break;\n                    case 8:\n                        if (!(message.displayBadgeCards && message.displayBadgeCards.length))\n                            message.displayBadgeCards = [];\n                        message.displayBadgeCards.push($root.op_def.BadgeCard.decode(reader, reader.uint32()));\n                        break;\n                    case 9:\n                        message.vipLevel = reader.int32();\n                        break;\n                    case 10:\n                        message.isVip = reader.bool();\n                        break;\n                    case 11:\n                        message.bubbleResource = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("userId"))\n                    throw $util.ProtocolError("missing required \'userId\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO} OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO message.\n             * @function verify\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.userId))\n                    return "userId: string expected";\n                if (message.nickname != null && message.hasOwnProperty("nickname"))\n                    if (!$util.isString(message.nickname))\n                        return "nickname: string expected";\n                if (message.createdAt != null && message.hasOwnProperty("createdAt"))\n                    if (!$util.isInteger(message.createdAt))\n                        return "createdAt: integer expected";\n                if (message.username != null && message.hasOwnProperty("username"))\n                    if (!$util.isString(message.username))\n                        return "username: string expected";\n                if (message.level != null && message.hasOwnProperty("level"))\n                    if (!$util.isInteger(message.level))\n                        return "level: integer expected";\n                if (message.badgeCards != null && message.hasOwnProperty("badgeCards")) {\n                    if (!Array.isArray(message.badgeCards))\n                        return "badgeCards: array expected";\n                    for (var i = 0; i < message.badgeCards.length; ++i) {\n                        var error = $root.op_def.BadgeCard.verify(message.badgeCards[i]);\n                        if (error)\n                            return "badgeCards." + error;\n                    }\n                }\n                if (message.displayBadgeCards != null && message.hasOwnProperty("displayBadgeCards")) {\n                    if (!Array.isArray(message.displayBadgeCards))\n                        return "displayBadgeCards: array expected";\n                    for (var i = 0; i < message.displayBadgeCards.length; ++i) {\n                        var error = $root.op_def.BadgeCard.verify(message.displayBadgeCards[i]);\n                        if (error)\n                            return "displayBadgeCards." + error;\n                    }\n                }\n                if (message.vipLevel != null && message.hasOwnProperty("vipLevel"))\n                    if (!$util.isInteger(message.vipLevel))\n                        return "vipLevel: integer expected";\n                if (message.isVip != null && message.hasOwnProperty("isVip"))\n                    if (typeof message.isVip !== "boolean")\n                        return "isVip: boolean expected";\n                if (message.bubbleResource != null && message.hasOwnProperty("bubbleResource"))\n                    if (!$util.isString(message.bubbleResource))\n                        return "bubbleResource: string expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO} OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO)\n                    return object;\n                var message = new $root.op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO();\n                if (object.userId != null)\n                    message.userId = String(object.userId);\n                if (object.nickname != null)\n                    message.nickname = String(object.nickname);\n                if (object.createdAt != null)\n                    message.createdAt = object.createdAt | 0;\n                if (object.username != null)\n                    message.username = String(object.username);\n                if (object.level != null)\n                    message.level = object.level | 0;\n                if (object.badgeCards) {\n                    if (!Array.isArray(object.badgeCards))\n                        throw TypeError(".op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO.badgeCards: array expected");\n                    message.badgeCards = [];\n                    for (var i = 0; i < object.badgeCards.length; ++i) {\n                        if (typeof object.badgeCards[i] !== "object")\n                            throw TypeError(".op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO.badgeCards: object expected");\n                        message.badgeCards[i] = $root.op_def.BadgeCard.fromObject(object.badgeCards[i]);\n                    }\n                }\n                if (object.displayBadgeCards) {\n                    if (!Array.isArray(object.displayBadgeCards))\n                        throw TypeError(".op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO.displayBadgeCards: array expected");\n                    message.displayBadgeCards = [];\n                    for (var i = 0; i < object.displayBadgeCards.length; ++i) {\n                        if (typeof object.displayBadgeCards[i] !== "object")\n                            throw TypeError(".op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO.displayBadgeCards: object expected");\n                        message.displayBadgeCards[i] = $root.op_def.BadgeCard.fromObject(object.displayBadgeCards[i]);\n                    }\n                }\n                if (object.vipLevel != null)\n                    message.vipLevel = object.vipLevel | 0;\n                if (object.isVip != null)\n                    message.isVip = Boolean(object.isVip);\n                if (object.bubbleResource != null)\n                    message.bubbleResource = String(object.bubbleResource);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO\n             * @static\n             * @param {op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO} message OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults) {\n                    object.badgeCards = [];\n                    object.displayBadgeCards = [];\n                }\n                if (options.defaults) {\n                    object.userId = "";\n                    object.nickname = "";\n                    object.createdAt = 0;\n                    object.username = "";\n                    object.level = 0;\n                    object.vipLevel = 0;\n                    object.isVip = false;\n                    object.bubbleResource = "";\n                }\n                if (message.userId != null && message.hasOwnProperty("userId"))\n                    object.userId = message.userId;\n                if (message.nickname != null && message.hasOwnProperty("nickname"))\n                    object.nickname = message.nickname;\n                if (message.createdAt != null && message.hasOwnProperty("createdAt"))\n                    object.createdAt = message.createdAt;\n                if (message.username != null && message.hasOwnProperty("username"))\n                    object.username = message.username;\n                if (message.level != null && message.hasOwnProperty("level"))\n                    object.level = message.level;\n                if (message.badgeCards && message.badgeCards.length) {\n                    object.badgeCards = [];\n                    for (var j = 0; j < message.badgeCards.length; ++j)\n                        object.badgeCards[j] = $root.op_def.BadgeCard.toObject(message.badgeCards[j], options);\n                }\n                if (message.displayBadgeCards && message.displayBadgeCards.length) {\n                    object.displayBadgeCards = [];\n                    for (var j = 0; j < message.displayBadgeCards.length; ++j)\n                        object.displayBadgeCards[j] = $root.op_def.BadgeCard.toObject(message.displayBadgeCards[j], options);\n                }\n                if (message.vipLevel != null && message.hasOwnProperty("vipLevel"))\n                    object.vipLevel = message.vipLevel;\n                if (message.isVip != null && message.hasOwnProperty("isVip"))\n                    object.isVip = message.isVip;\n                if (message.bubbleResource != null && message.hasOwnProperty("bubbleResource"))\n                    object.bubbleResource = message.bubbleResource;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO to JSON.\n             * @function toJSON\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_SYNC_USER_INFO;\n        })();\n    \n        op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME = (function() {\n    \n            /**\n             * Properties of a OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME.\n             * @memberof op_virtual_world\n             * @interface IOP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME\n             * @property {number} clientStartTs OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME clientStartTs\n             */\n    \n            /**\n             * Constructs a new OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME.\n             * @memberof op_virtual_world\n             * @classdesc Represents a OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME.\n             * @implements IOP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME\n             * @constructor\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME=} [properties] Properties to set\n             */\n            function OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME clientStartTs.\n             * @member {number} clientStartTs\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME.prototype.clientStartTs = 0;\n    \n            /**\n             * Creates a new OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME instance using the specified properties.\n             * @function create\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME=} [properties] Properties to set\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME} OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME.create = function create(properties) {\n                return new OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME message. Does not implicitly {@link op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME.verify|verify} messages.\n             * @function encode\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME} message OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 1 =*/9).double(message.clientStartTs);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME message, length delimited. Does not implicitly {@link op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME} message OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME} OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.clientStartTs = reader.double();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("clientStartTs"))\n                    throw $util.ProtocolError("missing required \'clientStartTs\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME} OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME message.\n             * @function verify\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (typeof message.clientStartTs !== "number")\n                    return "clientStartTs: number expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME} OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME)\n                    return object;\n                var message = new $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME();\n                if (object.clientStartTs != null)\n                    message.clientStartTs = Number(object.clientStartTs);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME\n             * @static\n             * @param {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME} message OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.clientStartTs = 0;\n                if (message.clientStartTs != null && message.hasOwnProperty("clientStartTs"))\n                    object.clientStartTs = options.json && !isFinite(message.clientStartTs) ? String(message.clientStartTs) : message.clientStartTs;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME to JSON.\n             * @function toJSON\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_TIME;\n        })();\n    \n        op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION = (function() {\n    \n            /**\n             * Properties of a OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION.\n             * @memberof op_virtual_world\n             * @interface IOP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION\n             * @property {op_def.IPBPoint3f} pos OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION pos\n             * @property {number|null} [clientSyncTs] OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION clientSyncTs\n             */\n    \n            /**\n             * Constructs a new OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION.\n             * @memberof op_virtual_world\n             * @classdesc Represents a OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION.\n             * @implements IOP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION\n             * @constructor\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION=} [properties] Properties to set\n             */\n            function OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION pos.\n             * @member {op_def.IPBPoint3f} pos\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION.prototype.pos = null;\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION clientSyncTs.\n             * @member {number} clientSyncTs\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION.prototype.clientSyncTs = 0;\n    \n            /**\n             * Creates a new OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION instance using the specified properties.\n             * @function create\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION=} [properties] Properties to set\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION} OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION.create = function create(properties) {\n                return new OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION message. Does not implicitly {@link op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION.verify|verify} messages.\n             * @function encode\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION} message OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                $root.op_def.PBPoint3f.encode(message.pos, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.clientSyncTs != null && message.hasOwnProperty("clientSyncTs"))\n                    writer.uint32(/* id 2, wireType 1 =*/17).double(message.clientSyncTs);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION message, length delimited. Does not implicitly {@link op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION} message OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION} OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.pos = $root.op_def.PBPoint3f.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        message.clientSyncTs = reader.double();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("pos"))\n                    throw $util.ProtocolError("missing required \'pos\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION} OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION message.\n             * @function verify\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                {\n                    var error = $root.op_def.PBPoint3f.verify(message.pos);\n                    if (error)\n                        return "pos." + error;\n                }\n                if (message.clientSyncTs != null && message.hasOwnProperty("clientSyncTs"))\n                    if (typeof message.clientSyncTs !== "number")\n                        return "clientSyncTs: number expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION} OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION)\n                    return object;\n                var message = new $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION();\n                if (object.pos != null) {\n                    if (typeof object.pos !== "object")\n                        throw TypeError(".op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION.pos: object expected");\n                    message.pos = $root.op_def.PBPoint3f.fromObject(object.pos);\n                }\n                if (object.clientSyncTs != null)\n                    message.clientSyncTs = Number(object.clientSyncTs);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION\n             * @static\n             * @param {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION} message OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.pos = null;\n                    object.clientSyncTs = 0;\n                }\n                if (message.pos != null && message.hasOwnProperty("pos"))\n                    object.pos = $root.op_def.PBPoint3f.toObject(message.pos, options);\n                if (message.clientSyncTs != null && message.hasOwnProperty("clientSyncTs"))\n                    object.clientSyncTs = options.json && !isFinite(message.clientSyncTs) ? String(message.clientSyncTs) : message.clientSyncTs;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION to JSON.\n             * @function toJSON\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_CLIENT_REQ_VIRTUAL_WORLD_SYNC_POSITION;\n        })();\n    \n        op_virtual_world.OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS = (function() {\n    \n            /**\n             * Properties of a OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS.\n             * @memberof op_virtual_world\n             * @interface IOP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS\n             * @property {string} gameId OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS gameId\n             * @property {op_def.ServerStatus} serverStatus OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS serverStatus\n             * @property {string|null} [msg] OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS msg\n             */\n    \n            /**\n             * Constructs a new OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS.\n             * @memberof op_virtual_world\n             * @classdesc Represents a OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS.\n             * @implements IOP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS\n             * @constructor\n             * @param {op_virtual_world.IOP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS=} [properties] Properties to set\n             */\n            function OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS gameId.\n             * @member {string} gameId\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS\n             * @instance\n             */\n            OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS.prototype.gameId = "";\n    \n            /**\n             * OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS serverStatus.\n             * @member {op_def.ServerStatus} serverStatus\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS\n             * @instance\n             */\n            OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS.prototype.serverStatus = 0;\n    \n            /**\n             * OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS msg.\n             * @member {string} msg\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS\n             * @instance\n             */\n            OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS.prototype.msg = "";\n    \n            /**\n             * Creates a new OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS instance using the specified properties.\n             * @function create\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS\n             * @static\n             * @param {op_virtual_world.IOP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS=} [properties] Properties to set\n             * @returns {op_virtual_world.OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS} OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS instance\n             */\n            OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS.create = function create(properties) {\n                return new OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS message. Does not implicitly {@link op_virtual_world.OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS.verify|verify} messages.\n             * @function encode\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS\n             * @static\n             * @param {op_virtual_world.IOP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS} message OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.gameId);\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.serverStatus);\n                if (message.msg != null && message.hasOwnProperty("msg"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.msg);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS message, length delimited. Does not implicitly {@link op_virtual_world.OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS\n             * @static\n             * @param {op_virtual_world.IOP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS} message OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_virtual_world.OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS} OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_virtual_world.OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.gameId = reader.string();\n                        break;\n                    case 2:\n                        message.serverStatus = reader.int32();\n                        break;\n                    case 3:\n                        message.msg = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("gameId"))\n                    throw $util.ProtocolError("missing required \'gameId\'", { instance: message });\n                if (!message.hasOwnProperty("serverStatus"))\n                    throw $util.ProtocolError("missing required \'serverStatus\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_virtual_world.OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS} OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS message.\n             * @function verify\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.gameId))\n                    return "gameId: string expected";\n                switch (message.serverStatus) {\n                default:\n                    return "serverStatus: enum value expected";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                    break;\n                }\n                if (message.msg != null && message.hasOwnProperty("msg"))\n                    if (!$util.isString(message.msg))\n                        return "msg: string expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_virtual_world.OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS} OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS\n             */\n            OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_virtual_world.OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS)\n                    return object;\n                var message = new $root.op_virtual_world.OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS();\n                if (object.gameId != null)\n                    message.gameId = String(object.gameId);\n                switch (object.serverStatus) {\n                case "SERVER_STARTING":\n                case 0:\n                    message.serverStatus = 0;\n                    break;\n                case "SERVER_ALIVE":\n                case 1:\n                    message.serverStatus = 1;\n                    break;\n                case "SERVER_OFFLINE":\n                case 2:\n                    message.serverStatus = 2;\n                    break;\n                case "SERVER_WAITFORSHUTDOWN":\n                case 3:\n                    message.serverStatus = 3;\n                    break;\n                case "SERVER_REJECT_INIT":\n                case 4:\n                    message.serverStatus = 4;\n                    break;\n                case "SERVER_FORCE_SHUTDOWN":\n                case 5:\n                    message.serverStatus = 5;\n                    break;\n                }\n                if (object.msg != null)\n                    message.msg = String(object.msg);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS\n             * @static\n             * @param {op_virtual_world.OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS} message OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.gameId = "";\n                    object.serverStatus = options.enums === String ? "SERVER_STARTING" : 0;\n                    object.msg = "";\n                }\n                if (message.gameId != null && message.hasOwnProperty("gameId"))\n                    object.gameId = message.gameId;\n                if (message.serverStatus != null && message.hasOwnProperty("serverStatus"))\n                    object.serverStatus = options.enums === String ? $root.op_def.ServerStatus[message.serverStatus] : message.serverStatus;\n                if (message.msg != null && message.hasOwnProperty("msg"))\n                    object.msg = message.msg;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS to JSON.\n             * @function toJSON\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_WEB_PLATFORM_REQ_VIRTUAL_WORLD_CHANGE_CHANGE_SERVER_STATUS;\n        })();\n    \n        op_virtual_world.OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE = (function() {\n    \n            /**\n             * Properties of a OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE.\n             * @memberof op_virtual_world\n             * @interface IOP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE\n             * @property {op_client.ISprite} spriteStates OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE spriteStates\n             * @property {op_def.NodeType|null} [nodeType] OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE nodeType\n             */\n    \n            /**\n             * Constructs a new OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE.\n             * @memberof op_virtual_world\n             * @classdesc Represents a OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE.\n             * @implements IOP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE\n             * @constructor\n             * @param {op_virtual_world.IOP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE=} [properties] Properties to set\n             */\n            function OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE spriteStates.\n             * @member {op_client.ISprite} spriteStates\n             * @memberof op_virtual_world.OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE\n             * @instance\n             */\n            OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE.prototype.spriteStates = null;\n    \n            /**\n             * OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE nodeType.\n             * @member {op_def.NodeType} nodeType\n             * @memberof op_virtual_world.OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE\n             * @instance\n             */\n            OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE.prototype.nodeType = 0;\n    \n            /**\n             * Creates a new OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE instance using the specified properties.\n             * @function create\n             * @memberof op_virtual_world.OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE=} [properties] Properties to set\n             * @returns {op_virtual_world.OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE} OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE instance\n             */\n            OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE.create = function create(properties) {\n                return new OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE message. Does not implicitly {@link op_virtual_world.OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE.verify|verify} messages.\n             * @function encode\n             * @memberof op_virtual_world.OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE} message OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                $root.op_client.Sprite.encode(message.spriteStates, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nodeType);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE message, length delimited. Does not implicitly {@link op_virtual_world.OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE} message OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_virtual_world.OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_virtual_world.OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE} OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_virtual_world.OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.spriteStates = $root.op_client.Sprite.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        message.nodeType = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("spriteStates"))\n                    throw $util.ProtocolError("missing required \'spriteStates\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_virtual_world.OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE} OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE message.\n             * @function verify\n             * @memberof op_virtual_world.OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                {\n                    var error = $root.op_client.Sprite.verify(message.spriteStates);\n                    if (error)\n                        return "spriteStates." + error;\n                }\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    switch (message.nodeType) {\n                    default:\n                        return "nodeType: enum value expected";\n                    case 0:\n                    case 1:\n                    case 2:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 9:\n                    case 10:\n                    case 11:\n                    case 12:\n                    case 13:\n                    case 14:\n                    case 15:\n                    case 16:\n                    case 17:\n                    case 18:\n                    case 19:\n                    case 20:\n                    case 21:\n                    case 22:\n                    case 23:\n                    case 24:\n                    case 25:\n                    case 26:\n                    case 27:\n                    case 28:\n                    case 29:\n                        break;\n                    }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_virtual_world.OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_virtual_world.OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE} OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE\n             */\n            OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_virtual_world.OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE)\n                    return object;\n                var message = new $root.op_virtual_world.OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE();\n                if (object.spriteStates != null) {\n                    if (typeof object.spriteStates !== "object")\n                        throw TypeError(".op_virtual_world.OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE.spriteStates: object expected");\n                    message.spriteStates = $root.op_client.Sprite.fromObject(object.spriteStates);\n                }\n                switch (object.nodeType) {\n                case "UnknownNodeType":\n                case 0:\n                    message.nodeType = 0;\n                    break;\n                case "GameNodeType":\n                case 1:\n                    message.nodeType = 1;\n                    break;\n                case "SceneNodeType":\n                case 2:\n                    message.nodeType = 2;\n                    break;\n                case "ElementNodeType":\n                case 3:\n                    message.nodeType = 3;\n                    break;\n                case "TerrainNodeType":\n                case 4:\n                    message.nodeType = 4;\n                    break;\n                case "CharacterNodeType":\n                case 5:\n                    message.nodeType = 5;\n                    break;\n                case "LocationType":\n                case 6:\n                    message.nodeType = 6;\n                    break;\n                case "MovableType":\n                case 7:\n                    message.nodeType = 7;\n                    break;\n                case "DisplayType":\n                case 8:\n                    message.nodeType = 8;\n                    break;\n                case "AttributeType":\n                case 9:\n                    message.nodeType = 9;\n                    break;\n                case "FunctionType":\n                case 10:\n                    message.nodeType = 10;\n                    break;\n                case "AnimationsType":\n                case 11:\n                    message.nodeType = 11;\n                    break;\n                case "EventType":\n                case 12:\n                    message.nodeType = 12;\n                    break;\n                case "MapSizeType":\n                case 13:\n                    message.nodeType = 13;\n                    break;\n                case "UIType":\n                case 14:\n                    message.nodeType = 14;\n                    break;\n                case "TimerType":\n                case 15:\n                    message.nodeType = 15;\n                    break;\n                case "PackageType":\n                case 16:\n                    message.nodeType = 16;\n                    break;\n                case "PackageItemType":\n                case 17:\n                    message.nodeType = 17;\n                    break;\n                case "AvatarType":\n                case 18:\n                    message.nodeType = 18;\n                    break;\n                case "SettingsType":\n                case 19:\n                    message.nodeType = 19;\n                    break;\n                case "CampType":\n                case 20:\n                    message.nodeType = 20;\n                    break;\n                case "MutexType":\n                case 21:\n                    message.nodeType = 21;\n                    break;\n                case "AnimationDataType":\n                case 22:\n                    message.nodeType = 22;\n                    break;\n                case "ForkType":\n                case 23:\n                    message.nodeType = 23;\n                    break;\n                case "ButtonType":\n                case 24:\n                    message.nodeType = 24;\n                    break;\n                case "TextType":\n                case 25:\n                    message.nodeType = 25;\n                    break;\n                case "AccessType":\n                case 26:\n                    message.nodeType = 26;\n                    break;\n                case "SpawnPointType":\n                case 27:\n                    message.nodeType = 27;\n                    break;\n                case "CommodityType":\n                case 28:\n                    message.nodeType = 28;\n                    break;\n                case "ShopType":\n                case 29:\n                    message.nodeType = 29;\n                    break;\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_virtual_world.OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE\n             * @static\n             * @param {op_virtual_world.OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE} message OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.spriteStates = null;\n                    object.nodeType = options.enums === String ? "UnknownNodeType" : 0;\n                }\n                if (message.spriteStates != null && message.hasOwnProperty("spriteStates"))\n                    object.spriteStates = $root.op_client.Sprite.toObject(message.spriteStates, options);\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    object.nodeType = options.enums === String ? $root.op_def.NodeType[message.nodeType] : message.nodeType;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE to JSON.\n             * @function toJSON\n             * @memberof op_virtual_world.OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_CLIENT_RES_VIRTUAL_WORLD_SYNC_SPRITE;\n        })();\n    \n        op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE = (function() {\n    \n            /**\n             * Properties of a OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE.\n             * @memberof op_virtual_world\n             * @interface IOP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE\n             * @property {op_client.ISprite} spritePositions OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE spritePositions\n             * @property {op_def.NodeType|null} [nodeType] OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE nodeType\n             */\n    \n            /**\n             * Constructs a new OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE.\n             * @memberof op_virtual_world\n             * @classdesc Represents a OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE.\n             * @implements IOP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE\n             * @constructor\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE=} [properties] Properties to set\n             */\n            function OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE spritePositions.\n             * @member {op_client.ISprite} spritePositions\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE.prototype.spritePositions = null;\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE nodeType.\n             * @member {op_def.NodeType} nodeType\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE.prototype.nodeType = 0;\n    \n            /**\n             * Creates a new OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE instance using the specified properties.\n             * @function create\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE=} [properties] Properties to set\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE} OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE.create = function create(properties) {\n                return new OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE message. Does not implicitly {@link op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE.verify|verify} messages.\n             * @function encode\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE} message OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                $root.op_client.Sprite.encode(message.spritePositions, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nodeType);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE message, length delimited. Does not implicitly {@link op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE} message OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE} OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.spritePositions = $root.op_client.Sprite.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        message.nodeType = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("spritePositions"))\n                    throw $util.ProtocolError("missing required \'spritePositions\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE} OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE message.\n             * @function verify\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                {\n                    var error = $root.op_client.Sprite.verify(message.spritePositions);\n                    if (error)\n                        return "spritePositions." + error;\n                }\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    switch (message.nodeType) {\n                    default:\n                        return "nodeType: enum value expected";\n                    case 0:\n                    case 1:\n                    case 2:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 9:\n                    case 10:\n                    case 11:\n                    case 12:\n                    case 13:\n                    case 14:\n                    case 15:\n                    case 16:\n                    case 17:\n                    case 18:\n                    case 19:\n                    case 20:\n                    case 21:\n                    case 22:\n                    case 23:\n                    case 24:\n                    case 25:\n                    case 26:\n                    case 27:\n                    case 28:\n                    case 29:\n                        break;\n                    }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE} OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE)\n                    return object;\n                var message = new $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE();\n                if (object.spritePositions != null) {\n                    if (typeof object.spritePositions !== "object")\n                        throw TypeError(".op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE.spritePositions: object expected");\n                    message.spritePositions = $root.op_client.Sprite.fromObject(object.spritePositions);\n                }\n                switch (object.nodeType) {\n                case "UnknownNodeType":\n                case 0:\n                    message.nodeType = 0;\n                    break;\n                case "GameNodeType":\n                case 1:\n                    message.nodeType = 1;\n                    break;\n                case "SceneNodeType":\n                case 2:\n                    message.nodeType = 2;\n                    break;\n                case "ElementNodeType":\n                case 3:\n                    message.nodeType = 3;\n                    break;\n                case "TerrainNodeType":\n                case 4:\n                    message.nodeType = 4;\n                    break;\n                case "CharacterNodeType":\n                case 5:\n                    message.nodeType = 5;\n                    break;\n                case "LocationType":\n                case 6:\n                    message.nodeType = 6;\n                    break;\n                case "MovableType":\n                case 7:\n                    message.nodeType = 7;\n                    break;\n                case "DisplayType":\n                case 8:\n                    message.nodeType = 8;\n                    break;\n                case "AttributeType":\n                case 9:\n                    message.nodeType = 9;\n                    break;\n                case "FunctionType":\n                case 10:\n                    message.nodeType = 10;\n                    break;\n                case "AnimationsType":\n                case 11:\n                    message.nodeType = 11;\n                    break;\n                case "EventType":\n                case 12:\n                    message.nodeType = 12;\n                    break;\n                case "MapSizeType":\n                case 13:\n                    message.nodeType = 13;\n                    break;\n                case "UIType":\n                case 14:\n                    message.nodeType = 14;\n                    break;\n                case "TimerType":\n                case 15:\n                    message.nodeType = 15;\n                    break;\n                case "PackageType":\n                case 16:\n                    message.nodeType = 16;\n                    break;\n                case "PackageItemType":\n                case 17:\n                    message.nodeType = 17;\n                    break;\n                case "AvatarType":\n                case 18:\n                    message.nodeType = 18;\n                    break;\n                case "SettingsType":\n                case 19:\n                    message.nodeType = 19;\n                    break;\n                case "CampType":\n                case 20:\n                    message.nodeType = 20;\n                    break;\n                case "MutexType":\n                case 21:\n                    message.nodeType = 21;\n                    break;\n                case "AnimationDataType":\n                case 22:\n                    message.nodeType = 22;\n                    break;\n                case "ForkType":\n                case 23:\n                    message.nodeType = 23;\n                    break;\n                case "ButtonType":\n                case 24:\n                    message.nodeType = 24;\n                    break;\n                case "TextType":\n                case 25:\n                    message.nodeType = 25;\n                    break;\n                case "AccessType":\n                case 26:\n                    message.nodeType = 26;\n                    break;\n                case "SpawnPointType":\n                case 27:\n                    message.nodeType = 27;\n                    break;\n                case "CommodityType":\n                case 28:\n                    message.nodeType = 28;\n                    break;\n                case "ShopType":\n                case 29:\n                    message.nodeType = 29;\n                    break;\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE\n             * @static\n             * @param {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE} message OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.spritePositions = null;\n                    object.nodeType = options.enums === String ? "UnknownNodeType" : 0;\n                }\n                if (message.spritePositions != null && message.hasOwnProperty("spritePositions"))\n                    object.spritePositions = $root.op_client.Sprite.toObject(message.spritePositions, options);\n                if (message.nodeType != null && message.hasOwnProperty("nodeType"))\n                    object.nodeType = options.enums === String ? $root.op_def.NodeType[message.nodeType] : message.nodeType;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE to JSON.\n             * @function toJSON\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_CLIENT_REQ_VIRTUAL_WORLD_STOP_SPRITE;\n        })();\n    \n        op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI = (function() {\n    \n            /**\n             * Properties of a OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI.\n             * @memberof op_virtual_world\n             * @interface IOP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI\n             * @property {Array.<number>|null} [uiIds] OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI uiIds\n             */\n    \n            /**\n             * Constructs a new OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI.\n             * @memberof op_virtual_world\n             * @classdesc Represents a OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI.\n             * @implements IOP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI\n             * @constructor\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI=} [properties] Properties to set\n             */\n            function OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI(properties) {\n                this.uiIds = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI uiIds.\n             * @member {Array.<number>} uiIds\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI.prototype.uiIds = $util.emptyArray;\n    \n            /**\n             * Creates a new OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI instance using the specified properties.\n             * @function create\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI=} [properties] Properties to set\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI} OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI.create = function create(properties) {\n                return new OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI message. Does not implicitly {@link op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI.verify|verify} messages.\n             * @function encode\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI} message OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.uiIds != null && message.uiIds.length)\n                    for (var i = 0; i < message.uiIds.length; ++i)\n                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.uiIds[i]);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI message, length delimited. Does not implicitly {@link op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI} message OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI} OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.uiIds && message.uiIds.length))\n                            message.uiIds = [];\n                        if ((tag & 7) === 2) {\n                            var end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2)\n                                message.uiIds.push(reader.int32());\n                        } else\n                            message.uiIds.push(reader.int32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI} OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI message.\n             * @function verify\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.uiIds != null && message.hasOwnProperty("uiIds")) {\n                    if (!Array.isArray(message.uiIds))\n                        return "uiIds: array expected";\n                    for (var i = 0; i < message.uiIds.length; ++i)\n                        if (!$util.isInteger(message.uiIds[i]))\n                            return "uiIds: integer[] expected";\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI} OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI)\n                    return object;\n                var message = new $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI();\n                if (object.uiIds) {\n                    if (!Array.isArray(object.uiIds))\n                        throw TypeError(".op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI.uiIds: array expected");\n                    message.uiIds = [];\n                    for (var i = 0; i < object.uiIds.length; ++i)\n                        message.uiIds[i] = object.uiIds[i] | 0;\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI\n             * @static\n             * @param {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI} message OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.uiIds = [];\n                if (message.uiIds && message.uiIds.length) {\n                    object.uiIds = [];\n                    for (var j = 0; j < message.uiIds.length; ++j)\n                        object.uiIds[j] = message.uiIds[j];\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI to JSON.\n             * @function toJSON\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_CLIENT_REQ_VIRTUAL_WORLD_CLOSE_UI;\n        })();\n    \n        op_virtual_world.OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE = (function() {\n    \n            /**\n             * Properties of a OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE.\n             * @memberof op_virtual_world\n             * @interface IOP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE\n             * @property {Array.<number>|null} [ids] OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE ids\n             */\n    \n            /**\n             * Constructs a new OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE.\n             * @memberof op_virtual_world\n             * @classdesc Represents a OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE.\n             * @implements IOP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE\n             * @constructor\n             * @param {op_virtual_world.IOP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE=} [properties] Properties to set\n             */\n            function OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE(properties) {\n                this.ids = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE ids.\n             * @member {Array.<number>} ids\n             * @memberof op_virtual_world.OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE\n             * @instance\n             */\n            OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE.prototype.ids = $util.emptyArray;\n    \n            /**\n             * Creates a new OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE instance using the specified properties.\n             * @function create\n             * @memberof op_virtual_world.OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE\n             * @static\n             * @param {op_virtual_world.IOP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE=} [properties] Properties to set\n             * @returns {op_virtual_world.OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE} OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE instance\n             */\n            OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE.create = function create(properties) {\n                return new OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE message. Does not implicitly {@link op_virtual_world.OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE.verify|verify} messages.\n             * @function encode\n             * @memberof op_virtual_world.OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE\n             * @static\n             * @param {op_virtual_world.IOP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE} message OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.ids != null && message.ids.length)\n                    for (var i = 0; i < message.ids.length; ++i)\n                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ids[i]);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE message, length delimited. Does not implicitly {@link op_virtual_world.OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_virtual_world.OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE\n             * @static\n             * @param {op_virtual_world.IOP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE} message OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_virtual_world.OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_virtual_world.OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE} OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_virtual_world.OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.ids && message.ids.length))\n                            message.ids = [];\n                        if ((tag & 7) === 2) {\n                            var end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2)\n                                message.ids.push(reader.int32());\n                        } else\n                            message.ids.push(reader.int32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_virtual_world.OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_virtual_world.OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE} OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE message.\n             * @function verify\n             * @memberof op_virtual_world.OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.ids != null && message.hasOwnProperty("ids")) {\n                    if (!Array.isArray(message.ids))\n                        return "ids: array expected";\n                    for (var i = 0; i < message.ids.length; ++i)\n                        if (!$util.isInteger(message.ids[i]))\n                            return "ids: integer[] expected";\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_virtual_world.OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_virtual_world.OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE} OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE\n             */\n            OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_virtual_world.OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE)\n                    return object;\n                var message = new $root.op_virtual_world.OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE();\n                if (object.ids) {\n                    if (!Array.isArray(object.ids))\n                        throw TypeError(".op_virtual_world.OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE.ids: array expected");\n                    message.ids = [];\n                    for (var i = 0; i < object.ids.length; ++i)\n                        message.ids[i] = object.ids[i] | 0;\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_virtual_world.OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE\n             * @static\n             * @param {op_virtual_world.OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE} message OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.ids = [];\n                if (message.ids && message.ids.length) {\n                    object.ids = [];\n                    for (var j = 0; j < message.ids.length; ++j)\n                        object.ids[j] = message.ids[j];\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE to JSON.\n             * @function toJSON\n             * @memberof op_virtual_world.OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_REQ_VIRTUAL_WORLD_QUERY_SPRITE_RESOURCE;\n        })();\n    \n        op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION = (function() {\n    \n            /**\n             * Properties of a OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION.\n             * @memberof op_virtual_world\n             * @interface IOP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION\n             * @property {op_def.IPBPoint3f|null} [pos] OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION pos\n             */\n    \n            /**\n             * Constructs a new OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION.\n             * @memberof op_virtual_world\n             * @classdesc Represents a OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION.\n             * @implements IOP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION\n             * @constructor\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION=} [properties] Properties to set\n             */\n            function OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION pos.\n             * @member {op_def.IPBPoint3f|null|undefined} pos\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION.prototype.pos = null;\n    \n            /**\n             * Creates a new OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION instance using the specified properties.\n             * @function create\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION=} [properties] Properties to set\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION} OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION.create = function create(properties) {\n                return new OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION message. Does not implicitly {@link op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION.verify|verify} messages.\n             * @function encode\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION} message OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.pos != null && message.hasOwnProperty("pos"))\n                    $root.op_def.PBPoint3f.encode(message.pos, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION message, length delimited. Does not implicitly {@link op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION} message OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION} OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.pos = $root.op_def.PBPoint3f.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION} OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION message.\n             * @function verify\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.pos != null && message.hasOwnProperty("pos")) {\n                    var error = $root.op_def.PBPoint3f.verify(message.pos);\n                    if (error)\n                        return "pos." + error;\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION} OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION)\n                    return object;\n                var message = new $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION();\n                if (object.pos != null) {\n                    if (typeof object.pos !== "object")\n                        throw TypeError(".op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION.pos: object expected");\n                    message.pos = $root.op_def.PBPoint3f.fromObject(object.pos);\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION\n             * @static\n             * @param {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION} message OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.pos = null;\n                if (message.pos != null && message.hasOwnProperty("pos"))\n                    object.pos = $root.op_def.PBPoint3f.toObject(message.pos, options);\n                return object;\n            };\n    \n            /**\n             * Converts this OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION to JSON.\n             * @function toJSON\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_POSITION;\n        })();\n    \n        op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW = (function() {\n    \n            /**\n             * Properties of a OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW.\n             * @memberof op_virtual_world\n             * @interface IOP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW\n             * @property {number|null} [id] OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW id\n             */\n    \n            /**\n             * Constructs a new OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW.\n             * @memberof op_virtual_world\n             * @classdesc Represents a OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW.\n             * @implements IOP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW\n             * @constructor\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW=} [properties] Properties to set\n             */\n            function OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW id.\n             * @member {number} id\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW\n             * @instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW.prototype.id = 0;\n    \n            /**\n             * Creates a new OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW instance using the specified properties.\n             * @function create\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW=} [properties] Properties to set\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW} OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW instance\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW.create = function create(properties) {\n                return new OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW message. Does not implicitly {@link op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW.verify|verify} messages.\n             * @function encode\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW} message OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.id != null && message.hasOwnProperty("id"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.id);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW message, length delimited. Does not implicitly {@link op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW\n             * @static\n             * @param {op_virtual_world.IOP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW} message OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW} OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.id = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW} OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW message.\n             * @function verify\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.id != null && message.hasOwnProperty("id"))\n                    if (!$util.isInteger(message.id))\n                        return "id: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW} OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW)\n                    return object;\n                var message = new $root.op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW();\n                if (object.id != null)\n                    message.id = object.id | 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW\n             * @static\n             * @param {op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW} message OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.id = 0;\n                if (message.id != null && message.hasOwnProperty("id"))\n                    object.id = message.id;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW to JSON.\n             * @function toJSON\n             * @memberof op_virtual_world.OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_CLIENT_REQ_VIRTUAL_WORLD_SET_CAMERA_FOLLOW;\n        })();\n    \n        op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO = (function() {\n    \n            /**\n             * Properties of a OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO.\n             * @memberof op_virtual_world\n             * @interface IOP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO\n             * @property {string} gameId OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO gameId\n             * @property {string} ownerId OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO ownerId\n             * @property {string|null} [permission] OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO permission\n             */\n    \n            /**\n             * Constructs a new OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO.\n             * @memberof op_virtual_world\n             * @classdesc Represents a OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO.\n             * @implements IOP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO\n             * @constructor\n             * @param {op_virtual_world.IOP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO=} [properties] Properties to set\n             */\n            function OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO gameId.\n             * @member {string} gameId\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO\n             * @instance\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO.prototype.gameId = "";\n    \n            /**\n             * OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO ownerId.\n             * @member {string} ownerId\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO\n             * @instance\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO.prototype.ownerId = "";\n    \n            /**\n             * OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO permission.\n             * @member {string} permission\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO\n             * @instance\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO.prototype.permission = "";\n    \n            /**\n             * Creates a new OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO instance using the specified properties.\n             * @function create\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO\n             * @static\n             * @param {op_virtual_world.IOP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO=} [properties] Properties to set\n             * @returns {op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO} OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO instance\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO.create = function create(properties) {\n                return new OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO message. Does not implicitly {@link op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO.verify|verify} messages.\n             * @function encode\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO\n             * @static\n             * @param {op_virtual_world.IOP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO} message OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.gameId);\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.ownerId);\n                if (message.permission != null && message.hasOwnProperty("permission"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.permission);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO message, length delimited. Does not implicitly {@link op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO\n             * @static\n             * @param {op_virtual_world.IOP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO} message OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO} OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.gameId = reader.string();\n                        break;\n                    case 2:\n                        message.ownerId = reader.string();\n                        break;\n                    case 3:\n                        message.permission = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("gameId"))\n                    throw $util.ProtocolError("missing required \'gameId\'", { instance: message });\n                if (!message.hasOwnProperty("ownerId"))\n                    throw $util.ProtocolError("missing required \'ownerId\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO} OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO message.\n             * @function verify\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.gameId))\n                    return "gameId: string expected";\n                if (!$util.isString(message.ownerId))\n                    return "ownerId: string expected";\n                if (message.permission != null && message.hasOwnProperty("permission"))\n                    if (!$util.isString(message.permission))\n                        return "permission: string expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO} OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO)\n                    return object;\n                var message = new $root.op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO();\n                if (object.gameId != null)\n                    message.gameId = String(object.gameId);\n                if (object.ownerId != null)\n                    message.ownerId = String(object.ownerId);\n                if (object.permission != null)\n                    message.permission = String(object.permission);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO\n             * @static\n             * @param {op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO} message OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.gameId = "";\n                    object.ownerId = "";\n                    object.permission = "";\n                }\n                if (message.gameId != null && message.hasOwnProperty("gameId"))\n                    object.gameId = message.gameId;\n                if (message.ownerId != null && message.hasOwnProperty("ownerId"))\n                    object.ownerId = message.ownerId;\n                if (message.permission != null && message.hasOwnProperty("permission"))\n                    object.permission = message.permission;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO to JSON.\n             * @function toJSON\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_INFO;\n        })();\n    \n        op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS = (function() {\n    \n            /**\n             * Properties of a OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS.\n             * @memberof op_virtual_world\n             * @interface IOP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS\n             * @property {string} gameId OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS gameId\n             * @property {string} token OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS token\n             * @property {boolean|null} [hasPermission] OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS hasPermission\n             */\n    \n            /**\n             * Constructs a new OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS.\n             * @memberof op_virtual_world\n             * @classdesc Represents a OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS.\n             * @implements IOP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS\n             * @constructor\n             * @param {op_virtual_world.IOP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS=} [properties] Properties to set\n             */\n            function OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS gameId.\n             * @member {string} gameId\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS\n             * @instance\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS.prototype.gameId = "";\n    \n            /**\n             * OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS token.\n             * @member {string} token\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS\n             * @instance\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS.prototype.token = "";\n    \n            /**\n             * OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS hasPermission.\n             * @member {boolean} hasPermission\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS\n             * @instance\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS.prototype.hasPermission = false;\n    \n            /**\n             * Creates a new OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS instance using the specified properties.\n             * @function create\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS\n             * @static\n             * @param {op_virtual_world.IOP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS=} [properties] Properties to set\n             * @returns {op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS} OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS instance\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS.create = function create(properties) {\n                return new OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS message. Does not implicitly {@link op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS.verify|verify} messages.\n             * @function encode\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS\n             * @static\n             * @param {op_virtual_world.IOP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS} message OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.gameId);\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.token);\n                if (message.hasPermission != null && message.hasOwnProperty("hasPermission"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.hasPermission);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS message, length delimited. Does not implicitly {@link op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS\n             * @static\n             * @param {op_virtual_world.IOP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS} message OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS} OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.gameId = reader.string();\n                        break;\n                    case 2:\n                        message.token = reader.string();\n                        break;\n                    case 3:\n                        message.hasPermission = reader.bool();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("gameId"))\n                    throw $util.ProtocolError("missing required \'gameId\'", { instance: message });\n                if (!message.hasOwnProperty("token"))\n                    throw $util.ProtocolError("missing required \'token\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS} OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS message.\n             * @function verify\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isString(message.gameId))\n                    return "gameId: string expected";\n                if (!$util.isString(message.token))\n                    return "token: string expected";\n                if (message.hasPermission != null && message.hasOwnProperty("hasPermission"))\n                    if (typeof message.hasPermission !== "boolean")\n                        return "hasPermission: boolean expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS} OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS)\n                    return object;\n                var message = new $root.op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS();\n                if (object.gameId != null)\n                    message.gameId = String(object.gameId);\n                if (object.token != null)\n                    message.token = String(object.token);\n                if (object.hasPermission != null)\n                    message.hasPermission = Boolean(object.hasPermission);\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS\n             * @static\n             * @param {op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS} message OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.gameId = "";\n                    object.token = "";\n                    object.hasPermission = false;\n                }\n                if (message.gameId != null && message.hasOwnProperty("gameId"))\n                    object.gameId = message.gameId;\n                if (message.token != null && message.hasOwnProperty("token"))\n                    object.token = message.token;\n                if (message.hasPermission != null && message.hasOwnProperty("hasPermission"))\n                    object.hasPermission = message.hasPermission;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS to JSON.\n             * @function toJSON\n             * @memberof op_virtual_world.OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_WEB_PLATFORM_RES_VIRTUAL_WORLD_GAME_DB_ACCESS;\n        })();\n    \n        return op_virtual_world;\n    })();\n    \n    $root.op_world = (function() {\n    \n        /**\n         * Namespace op_world.\n         * @exports op_world\n         * @namespace\n         */\n        var op_world = {};\n    \n        /**\n         * OPCODE enum.\n         * @name op_world.OPCODE\n         * @enum {string}\n         * @property {number} OP_MAJOR=18 OP_MAJOR value\n         * @property {number} _OP_UNKNOWN=0 _OP_UNKNOWN value\n         * @property {number} _OP_GALAXY_REQ_WORLD_SHUTDOWN=1183745 _OP_GALAXY_REQ_WORLD_SHUTDOWN value\n         * @property {number} _OP_GALAXY_RES_WORLD_INIT=1183746 _OP_GALAXY_RES_WORLD_INIT value\n         * @property {number} _OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION=1183748 _OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION value\n         */\n        op_world.OPCODE = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[18] = "OP_MAJOR"] = 18;\n            values[valuesById[0] = "_OP_UNKNOWN"] = 0;\n            values[valuesById[1183745] = "_OP_GALAXY_REQ_WORLD_SHUTDOWN"] = 1183745;\n            values[valuesById[1183746] = "_OP_GALAXY_RES_WORLD_INIT"] = 1183746;\n            values[valuesById[1183748] = "_OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION"] = 1183748;\n            return values;\n        })();\n    \n        op_world.OP_GALAXY_RES_WORLD_INIT = (function() {\n    \n            /**\n             * Properties of a OP_GALAXY_RES_WORLD_INIT.\n             * @memberof op_world\n             * @interface IOP_GALAXY_RES_WORLD_INIT\n             * @property {number} rc OP_GALAXY_RES_WORLD_INIT rc\n             */\n    \n            /**\n             * Constructs a new OP_GALAXY_RES_WORLD_INIT.\n             * @memberof op_world\n             * @classdesc Represents a OP_GALAXY_RES_WORLD_INIT.\n             * @implements IOP_GALAXY_RES_WORLD_INIT\n             * @constructor\n             * @param {op_world.IOP_GALAXY_RES_WORLD_INIT=} [properties] Properties to set\n             */\n            function OP_GALAXY_RES_WORLD_INIT(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_GALAXY_RES_WORLD_INIT rc.\n             * @member {number} rc\n             * @memberof op_world.OP_GALAXY_RES_WORLD_INIT\n             * @instance\n             */\n            OP_GALAXY_RES_WORLD_INIT.prototype.rc = 0;\n    \n            /**\n             * Creates a new OP_GALAXY_RES_WORLD_INIT instance using the specified properties.\n             * @function create\n             * @memberof op_world.OP_GALAXY_RES_WORLD_INIT\n             * @static\n             * @param {op_world.IOP_GALAXY_RES_WORLD_INIT=} [properties] Properties to set\n             * @returns {op_world.OP_GALAXY_RES_WORLD_INIT} OP_GALAXY_RES_WORLD_INIT instance\n             */\n            OP_GALAXY_RES_WORLD_INIT.create = function create(properties) {\n                return new OP_GALAXY_RES_WORLD_INIT(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_GALAXY_RES_WORLD_INIT message. Does not implicitly {@link op_world.OP_GALAXY_RES_WORLD_INIT.verify|verify} messages.\n             * @function encode\n             * @memberof op_world.OP_GALAXY_RES_WORLD_INIT\n             * @static\n             * @param {op_world.IOP_GALAXY_RES_WORLD_INIT} message OP_GALAXY_RES_WORLD_INIT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_GALAXY_RES_WORLD_INIT.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.rc);\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_GALAXY_RES_WORLD_INIT message, length delimited. Does not implicitly {@link op_world.OP_GALAXY_RES_WORLD_INIT.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_world.OP_GALAXY_RES_WORLD_INIT\n             * @static\n             * @param {op_world.IOP_GALAXY_RES_WORLD_INIT} message OP_GALAXY_RES_WORLD_INIT message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_GALAXY_RES_WORLD_INIT.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_GALAXY_RES_WORLD_INIT message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_world.OP_GALAXY_RES_WORLD_INIT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_world.OP_GALAXY_RES_WORLD_INIT} OP_GALAXY_RES_WORLD_INIT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_GALAXY_RES_WORLD_INIT.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_world.OP_GALAXY_RES_WORLD_INIT();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.rc = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                if (!message.hasOwnProperty("rc"))\n                    throw $util.ProtocolError("missing required \'rc\'", { instance: message });\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_GALAXY_RES_WORLD_INIT message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_world.OP_GALAXY_RES_WORLD_INIT\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_world.OP_GALAXY_RES_WORLD_INIT} OP_GALAXY_RES_WORLD_INIT\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_GALAXY_RES_WORLD_INIT.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_GALAXY_RES_WORLD_INIT message.\n             * @function verify\n             * @memberof op_world.OP_GALAXY_RES_WORLD_INIT\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_GALAXY_RES_WORLD_INIT.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (!$util.isInteger(message.rc))\n                    return "rc: integer expected";\n                return null;\n            };\n    \n            /**\n             * Creates a OP_GALAXY_RES_WORLD_INIT message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_world.OP_GALAXY_RES_WORLD_INIT\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_world.OP_GALAXY_RES_WORLD_INIT} OP_GALAXY_RES_WORLD_INIT\n             */\n            OP_GALAXY_RES_WORLD_INIT.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_world.OP_GALAXY_RES_WORLD_INIT)\n                    return object;\n                var message = new $root.op_world.OP_GALAXY_RES_WORLD_INIT();\n                if (object.rc != null)\n                    message.rc = object.rc | 0;\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_GALAXY_RES_WORLD_INIT message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_world.OP_GALAXY_RES_WORLD_INIT\n             * @static\n             * @param {op_world.OP_GALAXY_RES_WORLD_INIT} message OP_GALAXY_RES_WORLD_INIT\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_GALAXY_RES_WORLD_INIT.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.rc = 0;\n                if (message.rc != null && message.hasOwnProperty("rc"))\n                    object.rc = message.rc;\n                return object;\n            };\n    \n            /**\n             * Converts this OP_GALAXY_RES_WORLD_INIT to JSON.\n             * @function toJSON\n             * @memberof op_world.OP_GALAXY_RES_WORLD_INIT\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_GALAXY_RES_WORLD_INIT.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_GALAXY_RES_WORLD_INIT;\n        })();\n    \n        op_world.OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION = (function() {\n    \n            /**\n             * Properties of a OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION.\n             * @memberof op_world\n             * @interface IOP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION\n             * @property {Array.<op_def.IConnectionCount>|null} [virtualWorldConnect] OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION virtualWorldConnect\n             */\n    \n            /**\n             * Constructs a new OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION.\n             * @memberof op_world\n             * @classdesc Represents a OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION.\n             * @implements IOP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION\n             * @constructor\n             * @param {op_world.IOP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION=} [properties] Properties to set\n             */\n            function OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION(properties) {\n                this.virtualWorldConnect = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n    \n            /**\n             * OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION virtualWorldConnect.\n             * @member {Array.<op_def.IConnectionCount>} virtualWorldConnect\n             * @memberof op_world.OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION\n             * @instance\n             */\n            OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION.prototype.virtualWorldConnect = $util.emptyArray;\n    \n            /**\n             * Creates a new OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION instance using the specified properties.\n             * @function create\n             * @memberof op_world.OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION\n             * @static\n             * @param {op_world.IOP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION=} [properties] Properties to set\n             * @returns {op_world.OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION} OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION instance\n             */\n            OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION.create = function create(properties) {\n                return new OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION(properties);\n            };\n    \n            /**\n             * Encodes the specified OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION message. Does not implicitly {@link op_world.OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION.verify|verify} messages.\n             * @function encode\n             * @memberof op_world.OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION\n             * @static\n             * @param {op_world.IOP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION} message OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.virtualWorldConnect != null && message.virtualWorldConnect.length)\n                    for (var i = 0; i < message.virtualWorldConnect.length; ++i)\n                        $root.op_def.ConnectionCount.encode(message.virtualWorldConnect[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                return writer;\n            };\n    \n            /**\n             * Encodes the specified OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION message, length delimited. Does not implicitly {@link op_world.OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof op_world.OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION\n             * @static\n             * @param {op_world.IOP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION} message OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n    \n            /**\n             * Decodes a OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION message from the specified reader or buffer.\n             * @function decode\n             * @memberof op_world.OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {op_world.OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION} OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.op_world.OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.virtualWorldConnect && message.virtualWorldConnect.length))\n                            message.virtualWorldConnect = [];\n                        message.virtualWorldConnect.push($root.op_def.ConnectionCount.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Decodes a OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof op_world.OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {op_world.OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION} OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n    \n            /**\n             * Verifies a OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION message.\n             * @function verify\n             * @memberof op_world.OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION.verify = function verify(message) {\n                if (typeof message !== "object" || message === null)\n                    return "object expected";\n                if (message.virtualWorldConnect != null && message.hasOwnProperty("virtualWorldConnect")) {\n                    if (!Array.isArray(message.virtualWorldConnect))\n                        return "virtualWorldConnect: array expected";\n                    for (var i = 0; i < message.virtualWorldConnect.length; ++i) {\n                        var error = $root.op_def.ConnectionCount.verify(message.virtualWorldConnect[i]);\n                        if (error)\n                            return "virtualWorldConnect." + error;\n                    }\n                }\n                return null;\n            };\n    \n            /**\n             * Creates a OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof op_world.OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {op_world.OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION} OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION\n             */\n            OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION.fromObject = function fromObject(object) {\n                if (object instanceof $root.op_world.OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION)\n                    return object;\n                var message = new $root.op_world.OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION();\n                if (object.virtualWorldConnect) {\n                    if (!Array.isArray(object.virtualWorldConnect))\n                        throw TypeError(".op_world.OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION.virtualWorldConnect: array expected");\n                    message.virtualWorldConnect = [];\n                    for (var i = 0; i < object.virtualWorldConnect.length; ++i) {\n                        if (typeof object.virtualWorldConnect[i] !== "object")\n                            throw TypeError(".op_world.OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION.virtualWorldConnect: object expected");\n                        message.virtualWorldConnect[i] = $root.op_def.ConnectionCount.fromObject(object.virtualWorldConnect[i]);\n                    }\n                }\n                return message;\n            };\n    \n            /**\n             * Creates a plain object from a OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof op_world.OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION\n             * @static\n             * @param {op_world.OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION} message OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.virtualWorldConnect = [];\n                if (message.virtualWorldConnect && message.virtualWorldConnect.length) {\n                    object.virtualWorldConnect = [];\n                    for (var j = 0; j < message.virtualWorldConnect.length; ++j)\n                        object.virtualWorldConnect[j] = $root.op_def.ConnectionCount.toObject(message.virtualWorldConnect[j], options);\n                }\n                return object;\n            };\n    \n            /**\n             * Converts this OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION to JSON.\n             * @function toJSON\n             * @memberof op_world.OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n    \n            return OP_GALAXY_REQ_WORLD_SYNC_VIRTUAL_WORLD_CONNECTION;\n        })();\n    \n        return op_world;\n    })();\n\n    return $root;\n});\n\n\n//# sourceURL=webpack://TooqingCore/./node_modules/pixelpai_proto/protocols.js?')},"./node_modules/protobufjs/minimal.js":function(module,exports,__webpack_require__){"use strict";eval('// minimal library entry point.\r\n\r\n\r\nmodule.exports = __webpack_require__(/*! ./src/index-minimal */ "./node_modules/protobufjs/src/index-minimal.js");\r\n\n\n//# sourceURL=webpack://TooqingCore/./node_modules/protobufjs/minimal.js?')},"./node_modules/protobufjs/src/index-minimal.js":function(module,exports,__webpack_require__){"use strict";eval('\r\nvar protobuf = exports;\r\n\r\n/**\r\n * Build type, one of `"full"`, `"light"` or `"minimal"`.\r\n * @name build\r\n * @type {string}\r\n * @const\r\n */\r\nprotobuf.build = "minimal";\r\n\r\n// Serialization\r\nprotobuf.Writer       = __webpack_require__(/*! ./writer */ "./node_modules/protobufjs/src/writer.js");\r\nprotobuf.BufferWriter = __webpack_require__(/*! ./writer_buffer */ "./node_modules/protobufjs/src/writer_buffer.js");\r\nprotobuf.Reader       = __webpack_require__(/*! ./reader */ "./node_modules/protobufjs/src/reader.js");\r\nprotobuf.BufferReader = __webpack_require__(/*! ./reader_buffer */ "./node_modules/protobufjs/src/reader_buffer.js");\r\n\r\n// Utility\r\nprotobuf.util         = __webpack_require__(/*! ./util/minimal */ "./node_modules/protobufjs/src/util/minimal.js");\r\nprotobuf.rpc          = __webpack_require__(/*! ./rpc */ "./node_modules/protobufjs/src/rpc.js");\r\nprotobuf.roots        = __webpack_require__(/*! ./roots */ "./node_modules/protobufjs/src/roots.js");\r\nprotobuf.configure    = configure;\r\n\r\n/* istanbul ignore next */\r\n/**\r\n * Reconfigures the library according to the environment.\r\n * @returns {undefined}\r\n */\r\nfunction configure() {\r\n    protobuf.Reader._configure(protobuf.BufferReader);\r\n    protobuf.util._configure();\r\n}\r\n\r\n// Set up buffer utility according to the environment\r\nprotobuf.Writer._configure(protobuf.BufferWriter);\r\nconfigure();\r\n\n\n//# sourceURL=webpack://TooqingCore/./node_modules/protobufjs/src/index-minimal.js?')},"./node_modules/protobufjs/src/reader.js":function(module,exports,__webpack_require__){"use strict";eval('\r\nmodule.exports = Reader;\r\n\r\nvar util      = __webpack_require__(/*! ./util/minimal */ "./node_modules/protobufjs/src/util/minimal.js");\r\n\r\nvar BufferReader; // cyclic\r\n\r\nvar LongBits  = util.LongBits,\r\n    utf8      = util.utf8;\r\n\r\n/* istanbul ignore next */\r\nfunction indexOutOfRange(reader, writeLength) {\r\n    return RangeError("index out of range: " + reader.pos + " + " + (writeLength || 1) + " > " + reader.len);\r\n}\r\n\r\n/**\r\n * Constructs a new reader instance using the specified buffer.\r\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\r\n * @constructor\r\n * @param {Uint8Array} buffer Buffer to read from\r\n */\r\nfunction Reader(buffer) {\r\n\r\n    /**\r\n     * Read buffer.\r\n     * @type {Uint8Array}\r\n     */\r\n    this.buf = buffer;\r\n\r\n    /**\r\n     * Read buffer position.\r\n     * @type {number}\r\n     */\r\n    this.pos = 0;\r\n\r\n    /**\r\n     * Read buffer length.\r\n     * @type {number}\r\n     */\r\n    this.len = buffer.length;\r\n}\r\n\r\nvar create_array = typeof Uint8Array !== "undefined"\r\n    ? function create_typed_array(buffer) {\r\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\r\n            return new Reader(buffer);\r\n        throw Error("illegal buffer");\r\n    }\r\n    /* istanbul ignore next */\r\n    : function create_array(buffer) {\r\n        if (Array.isArray(buffer))\r\n            return new Reader(buffer);\r\n        throw Error("illegal buffer");\r\n    };\r\n\r\n/**\r\n * Creates a new reader using the specified buffer.\r\n * @function\r\n * @param {Uint8Array|Buffer} buffer Buffer to read from\r\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\r\n * @throws {Error} If `buffer` is not a valid buffer\r\n */\r\nReader.create = util.Buffer\r\n    ? function create_buffer_setup(buffer) {\r\n        return (Reader.create = function create_buffer(buffer) {\r\n            return util.Buffer.isBuffer(buffer)\r\n                ? new BufferReader(buffer)\r\n                /* istanbul ignore next */\r\n                : create_array(buffer);\r\n        })(buffer);\r\n    }\r\n    /* istanbul ignore next */\r\n    : create_array;\r\n\r\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\r\n\r\n/**\r\n * Reads a varint as an unsigned 32 bit value.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.uint32 = (function read_uint32_setup() {\r\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\r\n    return function read_uint32() {\r\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n\r\n        /* istanbul ignore if */\r\n        if ((this.pos += 5) > this.len) {\r\n            this.pos = this.len;\r\n            throw indexOutOfRange(this, 10);\r\n        }\r\n        return value;\r\n    };\r\n})();\r\n\r\n/**\r\n * Reads a varint as a signed 32 bit value.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.int32 = function read_int32() {\r\n    return this.uint32() | 0;\r\n};\r\n\r\n/**\r\n * Reads a zig-zag encoded varint as a signed 32 bit value.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.sint32 = function read_sint32() {\r\n    var value = this.uint32();\r\n    return value >>> 1 ^ -(value & 1) | 0;\r\n};\r\n\r\n/* eslint-disable no-invalid-this */\r\n\r\nfunction readLongVarint() {\r\n    // tends to deopt with local vars for octet etc.\r\n    var bits = new LongBits(0, 0);\r\n    var i = 0;\r\n    if (this.len - this.pos > 4) { // fast route (lo)\r\n        for (; i < 4; ++i) {\r\n            // 1st..4th\r\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n        // 5th\r\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\r\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\r\n        if (this.buf[this.pos++] < 128)\r\n            return bits;\r\n        i = 0;\r\n    } else {\r\n        for (; i < 3; ++i) {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n            // 1st..3th\r\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n        // 4th\r\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\r\n        return bits;\r\n    }\r\n    if (this.len - this.pos > 4) { // fast route (hi)\r\n        for (; i < 5; ++i) {\r\n            // 6th..10th\r\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n    } else {\r\n        for (; i < 5; ++i) {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n            // 6th..10th\r\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n    }\r\n    /* istanbul ignore next */\r\n    throw Error("invalid varint encoding");\r\n}\r\n\r\n/* eslint-enable no-invalid-this */\r\n\r\n/**\r\n * Reads a varint as a signed 64 bit value.\r\n * @name Reader#int64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a varint as an unsigned 64 bit value.\r\n * @name Reader#uint64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a zig-zag encoded varint as a signed 64 bit value.\r\n * @name Reader#sint64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a varint as a boolean.\r\n * @returns {boolean} Value read\r\n */\r\nReader.prototype.bool = function read_bool() {\r\n    return this.uint32() !== 0;\r\n};\r\n\r\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\r\n    return (buf[end - 4]\r\n          | buf[end - 3] << 8\r\n          | buf[end - 2] << 16\r\n          | buf[end - 1] << 24) >>> 0;\r\n}\r\n\r\n/**\r\n * Reads fixed 32 bits as an unsigned 32 bit integer.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.fixed32 = function read_fixed32() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    return readFixed32_end(this.buf, this.pos += 4);\r\n};\r\n\r\n/**\r\n * Reads fixed 32 bits as a signed 32 bit integer.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.sfixed32 = function read_sfixed32() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\r\n};\r\n\r\n/* eslint-disable no-invalid-this */\r\n\r\nfunction readFixed64(/* this: Reader */) {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 8 > this.len)\r\n        throw indexOutOfRange(this, 8);\r\n\r\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\r\n}\r\n\r\n/* eslint-enable no-invalid-this */\r\n\r\n/**\r\n * Reads fixed 64 bits.\r\n * @name Reader#fixed64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads zig-zag encoded fixed 64 bits.\r\n * @name Reader#sfixed64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a float (32 bit) as a number.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.float = function read_float() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    var value = util.float.readFloatLE(this.buf, this.pos);\r\n    this.pos += 4;\r\n    return value;\r\n};\r\n\r\n/**\r\n * Reads a double (64 bit float) as a number.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.double = function read_double() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 8 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    var value = util.float.readDoubleLE(this.buf, this.pos);\r\n    this.pos += 8;\r\n    return value;\r\n};\r\n\r\n/**\r\n * Reads a sequence of bytes preceeded by its length as a varint.\r\n * @returns {Uint8Array} Value read\r\n */\r\nReader.prototype.bytes = function read_bytes() {\r\n    var length = this.uint32(),\r\n        start  = this.pos,\r\n        end    = this.pos + length;\r\n\r\n    /* istanbul ignore if */\r\n    if (end > this.len)\r\n        throw indexOutOfRange(this, length);\r\n\r\n    this.pos += length;\r\n    if (Array.isArray(this.buf)) // plain array\r\n        return this.buf.slice(start, end);\r\n    return start === end // fix for IE 10/Win8 and others\' subarray returning array of size 1\r\n        ? new this.buf.constructor(0)\r\n        : this._slice.call(this.buf, start, end);\r\n};\r\n\r\n/**\r\n * Reads a string preceeded by its byte length as a varint.\r\n * @returns {string} Value read\r\n */\r\nReader.prototype.string = function read_string() {\r\n    var bytes = this.bytes();\r\n    return utf8.read(bytes, 0, bytes.length);\r\n};\r\n\r\n/**\r\n * Skips the specified number of bytes if specified, otherwise skips a varint.\r\n * @param {number} [length] Length if known, otherwise a varint is assumed\r\n * @returns {Reader} `this`\r\n */\r\nReader.prototype.skip = function skip(length) {\r\n    if (typeof length === "number") {\r\n        /* istanbul ignore if */\r\n        if (this.pos + length > this.len)\r\n            throw indexOutOfRange(this, length);\r\n        this.pos += length;\r\n    } else {\r\n        do {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n        } while (this.buf[this.pos++] & 128);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Skips the next element of the specified wire type.\r\n * @param {number} wireType Wire type received\r\n * @returns {Reader} `this`\r\n */\r\nReader.prototype.skipType = function(wireType) {\r\n    switch (wireType) {\r\n        case 0:\r\n            this.skip();\r\n            break;\r\n        case 1:\r\n            this.skip(8);\r\n            break;\r\n        case 2:\r\n            this.skip(this.uint32());\r\n            break;\r\n        case 3:\r\n            while ((wireType = this.uint32() & 7) !== 4) {\r\n                this.skipType(wireType);\r\n            }\r\n            break;\r\n        case 5:\r\n            this.skip(4);\r\n            break;\r\n\r\n        /* istanbul ignore next */\r\n        default:\r\n            throw Error("invalid wire type " + wireType + " at offset " + this.pos);\r\n    }\r\n    return this;\r\n};\r\n\r\nReader._configure = function(BufferReader_) {\r\n    BufferReader = BufferReader_;\r\n\r\n    var fn = util.Long ? "toLong" : /* istanbul ignore next */ "toNumber";\r\n    util.merge(Reader.prototype, {\r\n\r\n        int64: function read_int64() {\r\n            return readLongVarint.call(this)[fn](false);\r\n        },\r\n\r\n        uint64: function read_uint64() {\r\n            return readLongVarint.call(this)[fn](true);\r\n        },\r\n\r\n        sint64: function read_sint64() {\r\n            return readLongVarint.call(this).zzDecode()[fn](false);\r\n        },\r\n\r\n        fixed64: function read_fixed64() {\r\n            return readFixed64.call(this)[fn](true);\r\n        },\r\n\r\n        sfixed64: function read_sfixed64() {\r\n            return readFixed64.call(this)[fn](false);\r\n        }\r\n\r\n    });\r\n};\r\n\n\n//# sourceURL=webpack://TooqingCore/./node_modules/protobufjs/src/reader.js?')},"./node_modules/protobufjs/src/reader_buffer.js":function(module,exports,__webpack_require__){"use strict";eval('\r\nmodule.exports = BufferReader;\r\n\r\n// extends Reader\r\nvar Reader = __webpack_require__(/*! ./reader */ "./node_modules/protobufjs/src/reader.js");\r\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\r\n\r\nvar util = __webpack_require__(/*! ./util/minimal */ "./node_modules/protobufjs/src/util/minimal.js");\r\n\r\n/**\r\n * Constructs a new buffer reader instance.\r\n * @classdesc Wire format reader using node buffers.\r\n * @extends Reader\r\n * @constructor\r\n * @param {Buffer} buffer Buffer to read from\r\n */\r\nfunction BufferReader(buffer) {\r\n    Reader.call(this, buffer);\r\n\r\n    /**\r\n     * Read buffer.\r\n     * @name BufferReader#buf\r\n     * @type {Buffer}\r\n     */\r\n}\r\n\r\n/* istanbul ignore else */\r\nif (util.Buffer)\r\n    BufferReader.prototype._slice = util.Buffer.prototype.slice;\r\n\r\n/**\r\n * @override\r\n */\r\nBufferReader.prototype.string = function read_string_buffer() {\r\n    var len = this.uint32(); // modifies pos\r\n    return this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len));\r\n};\r\n\r\n/**\r\n * Reads a sequence of bytes preceeded by its length as a varint.\r\n * @name BufferReader#bytes\r\n * @function\r\n * @returns {Buffer} Value read\r\n */\r\n\n\n//# sourceURL=webpack://TooqingCore/./node_modules/protobufjs/src/reader_buffer.js?')},"./node_modules/protobufjs/src/roots.js":function(module,exports,__webpack_require__){"use strict";eval('\r\nmodule.exports = {};\r\n\r\n/**\r\n * Named roots.\r\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\r\n * Can also be used manually to make roots available accross modules.\r\n * @name roots\r\n * @type {Object.<string,Root>}\r\n * @example\r\n * // pbjs -r myroot -o compiled.js ...\r\n *\r\n * // in another module:\r\n * require("./compiled.js");\r\n *\r\n * // in any subsequent module:\r\n * var root = protobuf.roots["myroot"];\r\n */\r\n\n\n//# sourceURL=webpack://TooqingCore/./node_modules/protobufjs/src/roots.js?')},"./node_modules/protobufjs/src/rpc.js":function(module,exports,__webpack_require__){"use strict";eval('\r\n\r\n/**\r\n * Streaming RPC helpers.\r\n * @namespace\r\n */\r\nvar rpc = exports;\r\n\r\n/**\r\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\r\n * @typedef RPCImpl\r\n * @type {function}\r\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\r\n * @param {Uint8Array} requestData Request data\r\n * @param {RPCImplCallback} callback Callback function\r\n * @returns {undefined}\r\n * @example\r\n * function rpcImpl(method, requestData, callback) {\r\n *     if (protobuf.util.lcFirst(method.name) !== "myMethod") // compatible with static code\r\n *         throw Error("no such method");\r\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\r\n *         callback(err, responseData);\r\n *     });\r\n * }\r\n */\r\n\r\n/**\r\n * Node-style callback as used by {@link RPCImpl}.\r\n * @typedef RPCImplCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any, otherwise `null`\r\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn\'t been an error\r\n * @returns {undefined}\r\n */\r\n\r\nrpc.Service = __webpack_require__(/*! ./rpc/service */ "./node_modules/protobufjs/src/rpc/service.js");\r\n\n\n//# sourceURL=webpack://TooqingCore/./node_modules/protobufjs/src/rpc.js?')},"./node_modules/protobufjs/src/rpc/service.js":function(module,exports,__webpack_require__){"use strict";eval('\r\nmodule.exports = Service;\r\n\r\nvar util = __webpack_require__(/*! ../util/minimal */ "./node_modules/protobufjs/src/util/minimal.js");\r\n\r\n// Extends EventEmitter\r\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\r\n\r\n/**\r\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\r\n *\r\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\r\n * @typedef rpc.ServiceMethodCallback\r\n * @template TRes extends Message<TRes>\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {TRes} [response] Response message\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\r\n * @typedef rpc.ServiceMethod\r\n * @template TReq extends Message<TReq>\r\n * @template TRes extends Message<TRes>\r\n * @type {function}\r\n * @param {TReq|Properties<TReq>} request Request message or plain object\r\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\r\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\r\n */\r\n\r\n/**\r\n * Constructs a new RPC service instance.\r\n * @classdesc An RPC service as returned by {@link Service#create}.\r\n * @exports rpc.Service\r\n * @extends util.EventEmitter\r\n * @constructor\r\n * @param {RPCImpl} rpcImpl RPC implementation\r\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\r\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\r\n */\r\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\r\n\r\n    if (typeof rpcImpl !== "function")\r\n        throw TypeError("rpcImpl must be a function");\r\n\r\n    util.EventEmitter.call(this);\r\n\r\n    /**\r\n     * RPC implementation. Becomes `null` once the service is ended.\r\n     * @type {RPCImpl|null}\r\n     */\r\n    this.rpcImpl = rpcImpl;\r\n\r\n    /**\r\n     * Whether requests are length-delimited.\r\n     * @type {boolean}\r\n     */\r\n    this.requestDelimited = Boolean(requestDelimited);\r\n\r\n    /**\r\n     * Whether responses are length-delimited.\r\n     * @type {boolean}\r\n     */\r\n    this.responseDelimited = Boolean(responseDelimited);\r\n}\r\n\r\n/**\r\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\r\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\r\n * @param {Constructor<TReq>} requestCtor Request constructor\r\n * @param {Constructor<TRes>} responseCtor Response constructor\r\n * @param {TReq|Properties<TReq>} request Request message or plain object\r\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\r\n * @returns {undefined}\r\n * @template TReq extends Message<TReq>\r\n * @template TRes extends Message<TRes>\r\n */\r\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\r\n\r\n    if (!request)\r\n        throw TypeError("request must be specified");\r\n\r\n    var self = this;\r\n    if (!callback)\r\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\r\n\r\n    if (!self.rpcImpl) {\r\n        setTimeout(function() { callback(Error("already ended")); }, 0);\r\n        return undefined;\r\n    }\r\n\r\n    try {\r\n        return self.rpcImpl(\r\n            method,\r\n            requestCtor[self.requestDelimited ? "encodeDelimited" : "encode"](request).finish(),\r\n            function rpcCallback(err, response) {\r\n\r\n                if (err) {\r\n                    self.emit("error", err, method);\r\n                    return callback(err);\r\n                }\r\n\r\n                if (response === null) {\r\n                    self.end(/* endedByRPC */ true);\r\n                    return undefined;\r\n                }\r\n\r\n                if (!(response instanceof responseCtor)) {\r\n                    try {\r\n                        response = responseCtor[self.responseDelimited ? "decodeDelimited" : "decode"](response);\r\n                    } catch (err) {\r\n                        self.emit("error", err, method);\r\n                        return callback(err);\r\n                    }\r\n                }\r\n\r\n                self.emit("data", response, method);\r\n                return callback(null, response);\r\n            }\r\n        );\r\n    } catch (err) {\r\n        self.emit("error", err, method);\r\n        setTimeout(function() { callback(err); }, 0);\r\n        return undefined;\r\n    }\r\n};\r\n\r\n/**\r\n * Ends this service and emits the `end` event.\r\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\r\n * @returns {rpc.Service} `this`\r\n */\r\nService.prototype.end = function end(endedByRPC) {\r\n    if (this.rpcImpl) {\r\n        if (!endedByRPC) // signal end to rpcImpl\r\n            this.rpcImpl(null, null, null);\r\n        this.rpcImpl = null;\r\n        this.emit("end").off();\r\n    }\r\n    return this;\r\n};\r\n\n\n//# sourceURL=webpack://TooqingCore/./node_modules/protobufjs/src/rpc/service.js?')},"./node_modules/protobufjs/src/util/longbits.js":function(module,exports,__webpack_require__){"use strict";eval('\r\nmodule.exports = LongBits;\r\n\r\nvar util = __webpack_require__(/*! ../util/minimal */ "./node_modules/protobufjs/src/util/minimal.js");\r\n\r\n/**\r\n * Constructs new long bits.\r\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\r\n * @memberof util\r\n * @constructor\r\n * @param {number} lo Low 32 bits, unsigned\r\n * @param {number} hi High 32 bits, unsigned\r\n */\r\nfunction LongBits(lo, hi) {\r\n\r\n    // note that the casts below are theoretically unnecessary as of today, but older statically\r\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\r\n\r\n    /**\r\n     * Low bits.\r\n     * @type {number}\r\n     */\r\n    this.lo = lo >>> 0;\r\n\r\n    /**\r\n     * High bits.\r\n     * @type {number}\r\n     */\r\n    this.hi = hi >>> 0;\r\n}\r\n\r\n/**\r\n * Zero bits.\r\n * @memberof util.LongBits\r\n * @type {util.LongBits}\r\n */\r\nvar zero = LongBits.zero = new LongBits(0, 0);\r\n\r\nzero.toNumber = function() { return 0; };\r\nzero.zzEncode = zero.zzDecode = function() { return this; };\r\nzero.length = function() { return 1; };\r\n\r\n/**\r\n * Zero hash.\r\n * @memberof util.LongBits\r\n * @type {string}\r\n */\r\nvar zeroHash = LongBits.zeroHash = "\\0\\0\\0\\0\\0\\0\\0\\0";\r\n\r\n/**\r\n * Constructs new long bits from the specified number.\r\n * @param {number} value Value\r\n * @returns {util.LongBits} Instance\r\n */\r\nLongBits.fromNumber = function fromNumber(value) {\r\n    if (value === 0)\r\n        return zero;\r\n    var sign = value < 0;\r\n    if (sign)\r\n        value = -value;\r\n    var lo = value >>> 0,\r\n        hi = (value - lo) / 4294967296 >>> 0;\r\n    if (sign) {\r\n        hi = ~hi >>> 0;\r\n        lo = ~lo >>> 0;\r\n        if (++lo > 4294967295) {\r\n            lo = 0;\r\n            if (++hi > 4294967295)\r\n                hi = 0;\r\n        }\r\n    }\r\n    return new LongBits(lo, hi);\r\n};\r\n\r\n/**\r\n * Constructs new long bits from a number, long or string.\r\n * @param {Long|number|string} value Value\r\n * @returns {util.LongBits} Instance\r\n */\r\nLongBits.from = function from(value) {\r\n    if (typeof value === "number")\r\n        return LongBits.fromNumber(value);\r\n    if (util.isString(value)) {\r\n        /* istanbul ignore else */\r\n        if (util.Long)\r\n            value = util.Long.fromString(value);\r\n        else\r\n            return LongBits.fromNumber(parseInt(value, 10));\r\n    }\r\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\r\n};\r\n\r\n/**\r\n * Converts this long bits to a possibly unsafe JavaScript number.\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {number} Possibly unsafe number\r\n */\r\nLongBits.prototype.toNumber = function toNumber(unsigned) {\r\n    if (!unsigned && this.hi >>> 31) {\r\n        var lo = ~this.lo + 1 >>> 0,\r\n            hi = ~this.hi     >>> 0;\r\n        if (!lo)\r\n            hi = hi + 1 >>> 0;\r\n        return -(lo + hi * 4294967296);\r\n    }\r\n    return this.lo + this.hi * 4294967296;\r\n};\r\n\r\n/**\r\n * Converts this long bits to a long.\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {Long} Long\r\n */\r\nLongBits.prototype.toLong = function toLong(unsigned) {\r\n    return util.Long\r\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\r\n        /* istanbul ignore next */\r\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\r\n};\r\n\r\nvar charCodeAt = String.prototype.charCodeAt;\r\n\r\n/**\r\n * Constructs new long bits from the specified 8 characters long hash.\r\n * @param {string} hash Hash\r\n * @returns {util.LongBits} Bits\r\n */\r\nLongBits.fromHash = function fromHash(hash) {\r\n    if (hash === zeroHash)\r\n        return zero;\r\n    return new LongBits(\r\n        ( charCodeAt.call(hash, 0)\r\n        | charCodeAt.call(hash, 1) << 8\r\n        | charCodeAt.call(hash, 2) << 16\r\n        | charCodeAt.call(hash, 3) << 24) >>> 0\r\n    ,\r\n        ( charCodeAt.call(hash, 4)\r\n        | charCodeAt.call(hash, 5) << 8\r\n        | charCodeAt.call(hash, 6) << 16\r\n        | charCodeAt.call(hash, 7) << 24) >>> 0\r\n    );\r\n};\r\n\r\n/**\r\n * Converts this long bits to a 8 characters long hash.\r\n * @returns {string} Hash\r\n */\r\nLongBits.prototype.toHash = function toHash() {\r\n    return String.fromCharCode(\r\n        this.lo        & 255,\r\n        this.lo >>> 8  & 255,\r\n        this.lo >>> 16 & 255,\r\n        this.lo >>> 24      ,\r\n        this.hi        & 255,\r\n        this.hi >>> 8  & 255,\r\n        this.hi >>> 16 & 255,\r\n        this.hi >>> 24\r\n    );\r\n};\r\n\r\n/**\r\n * Zig-zag encodes this long bits.\r\n * @returns {util.LongBits} `this`\r\n */\r\nLongBits.prototype.zzEncode = function zzEncode() {\r\n    var mask =   this.hi >> 31;\r\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\r\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Zig-zag decodes this long bits.\r\n * @returns {util.LongBits} `this`\r\n */\r\nLongBits.prototype.zzDecode = function zzDecode() {\r\n    var mask = -(this.lo & 1);\r\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\r\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Calculates the length of this longbits when encoded as a varint.\r\n * @returns {number} Length\r\n */\r\nLongBits.prototype.length = function length() {\r\n    var part0 =  this.lo,\r\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\r\n        part2 =  this.hi >>> 24;\r\n    return part2 === 0\r\n         ? part1 === 0\r\n           ? part0 < 16384\r\n             ? part0 < 128 ? 1 : 2\r\n             : part0 < 2097152 ? 3 : 4\r\n           : part1 < 16384\r\n             ? part1 < 128 ? 5 : 6\r\n             : part1 < 2097152 ? 7 : 8\r\n         : part2 < 128 ? 9 : 10;\r\n};\r\n\n\n//# sourceURL=webpack://TooqingCore/./node_modules/protobufjs/src/util/longbits.js?')},"./node_modules/protobufjs/src/util/minimal.js":function(module,exports,__webpack_require__){"use strict";eval('/* WEBPACK VAR INJECTION */(function(global) {\r\nvar util = exports;\r\n\r\n// used to return a Promise where callback is omitted\r\nutil.asPromise = __webpack_require__(/*! @protobufjs/aspromise */ "./node_modules/@protobufjs/aspromise/index.js");\r\n\r\n// converts to / from base64 encoded strings\r\nutil.base64 = __webpack_require__(/*! @protobufjs/base64 */ "./node_modules/@protobufjs/base64/index.js");\r\n\r\n// base class of rpc.Service\r\nutil.EventEmitter = __webpack_require__(/*! @protobufjs/eventemitter */ "./node_modules/@protobufjs/eventemitter/index.js");\r\n\r\n// float handling accross browsers\r\nutil.float = __webpack_require__(/*! @protobufjs/float */ "./node_modules/@protobufjs/float/index.js");\r\n\r\n// requires modules optionally and hides the call from bundlers\r\nutil.inquire = __webpack_require__(/*! @protobufjs/inquire */ "./node_modules/@protobufjs/inquire/index.js");\r\n\r\n// converts to / from utf8 encoded strings\r\nutil.utf8 = __webpack_require__(/*! @protobufjs/utf8 */ "./node_modules/@protobufjs/utf8/index.js");\r\n\r\n// provides a node-like buffer pool in the browser\r\nutil.pool = __webpack_require__(/*! @protobufjs/pool */ "./node_modules/@protobufjs/pool/index.js");\r\n\r\n// utility to work with the low and high bits of a 64 bit value\r\nutil.LongBits = __webpack_require__(/*! ./longbits */ "./node_modules/protobufjs/src/util/longbits.js");\r\n\r\n// global object reference\r\nutil.global = typeof window !== "undefined" && window\r\n           || typeof global !== "undefined" && global\r\n           || typeof self   !== "undefined" && self\r\n           || this; // eslint-disable-line no-invalid-this\r\n\r\n/**\r\n * An immuable empty array.\r\n * @memberof util\r\n * @type {Array.<*>}\r\n * @const\r\n */\r\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\r\n\r\n/**\r\n * An immutable empty object.\r\n * @type {Object}\r\n * @const\r\n */\r\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\r\n\r\n/**\r\n * Whether running within node or not.\r\n * @memberof util\r\n * @type {boolean}\r\n * @const\r\n */\r\nutil.isNode = Boolean(util.global.process && util.global.process.versions && util.global.process.versions.node);\r\n\r\n/**\r\n * Tests if the specified value is an integer.\r\n * @function\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is an integer\r\n */\r\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\r\n    return typeof value === "number" && isFinite(value) && Math.floor(value) === value;\r\n};\r\n\r\n/**\r\n * Tests if the specified value is a string.\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is a string\r\n */\r\nutil.isString = function isString(value) {\r\n    return typeof value === "string" || value instanceof String;\r\n};\r\n\r\n/**\r\n * Tests if the specified value is a non-null object.\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is a non-null object\r\n */\r\nutil.isObject = function isObject(value) {\r\n    return value && typeof value === "object";\r\n};\r\n\r\n/**\r\n * Checks if a property on a message is considered to be present.\r\n * This is an alias of {@link util.isSet}.\r\n * @function\r\n * @param {Object} obj Plain object or message instance\r\n * @param {string} prop Property name\r\n * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n */\r\nutil.isset =\r\n\r\n/**\r\n * Checks if a property on a message is considered to be present.\r\n * @param {Object} obj Plain object or message instance\r\n * @param {string} prop Property name\r\n * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n */\r\nutil.isSet = function isSet(obj, prop) {\r\n    var value = obj[prop];\r\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\r\n        return typeof value !== "object" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Any compatible Buffer instance.\r\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node\'s typings.\r\n * @interface Buffer\r\n * @extends Uint8Array\r\n */\r\n\r\n/**\r\n * Node\'s Buffer class if available.\r\n * @type {Constructor<Buffer>}\r\n */\r\nutil.Buffer = (function() {\r\n    try {\r\n        var Buffer = util.inquire("buffer").Buffer;\r\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\r\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\r\n    } catch (e) {\r\n        /* istanbul ignore next */\r\n        return null;\r\n    }\r\n})();\r\n\r\n// Internal alias of or polyfull for Buffer.from.\r\nutil._Buffer_from = null;\r\n\r\n// Internal alias of or polyfill for Buffer.allocUnsafe.\r\nutil._Buffer_allocUnsafe = null;\r\n\r\n/**\r\n * Creates a new buffer of whatever type supported by the environment.\r\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\r\n * @returns {Uint8Array|Buffer} Buffer\r\n */\r\nutil.newBuffer = function newBuffer(sizeOrArray) {\r\n    /* istanbul ignore next */\r\n    return typeof sizeOrArray === "number"\r\n        ? util.Buffer\r\n            ? util._Buffer_allocUnsafe(sizeOrArray)\r\n            : new util.Array(sizeOrArray)\r\n        : util.Buffer\r\n            ? util._Buffer_from(sizeOrArray)\r\n            : typeof Uint8Array === "undefined"\r\n                ? sizeOrArray\r\n                : new Uint8Array(sizeOrArray);\r\n};\r\n\r\n/**\r\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\r\n * @type {Constructor<Uint8Array>}\r\n */\r\nutil.Array = typeof Uint8Array !== "undefined" ? Uint8Array /* istanbul ignore next */ : Array;\r\n\r\n/**\r\n * Any compatible Long instance.\r\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\r\n * @interface Long\r\n * @property {number} low Low bits\r\n * @property {number} high High bits\r\n * @property {boolean} unsigned Whether unsigned or not\r\n */\r\n\r\n/**\r\n * Long.js\'s Long class if available.\r\n * @type {Constructor<Long>}\r\n */\r\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\r\n         || /* istanbul ignore next */ util.global.Long\r\n         || util.inquire("long");\r\n\r\n/**\r\n * Regular expression used to verify 2 bit (`bool`) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key2Re = /^true|false|0|1$/;\r\n\r\n/**\r\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\r\n\r\n/**\r\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\r\n\r\n/**\r\n * Converts a number or long to an 8 characters long hash string.\r\n * @param {Long|number} value Value to convert\r\n * @returns {string} Hash\r\n */\r\nutil.longToHash = function longToHash(value) {\r\n    return value\r\n        ? util.LongBits.from(value).toHash()\r\n        : util.LongBits.zeroHash;\r\n};\r\n\r\n/**\r\n * Converts an 8 characters long hash string to a long or number.\r\n * @param {string} hash Hash\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {Long|number} Original value\r\n */\r\nutil.longFromHash = function longFromHash(hash, unsigned) {\r\n    var bits = util.LongBits.fromHash(hash);\r\n    if (util.Long)\r\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\r\n    return bits.toNumber(Boolean(unsigned));\r\n};\r\n\r\n/**\r\n * Merges the properties of the source object into the destination object.\r\n * @memberof util\r\n * @param {Object.<string,*>} dst Destination object\r\n * @param {Object.<string,*>} src Source object\r\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\r\n * @returns {Object.<string,*>} Destination object\r\n */\r\nfunction merge(dst, src, ifNotSet) { // used by converters\r\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\r\n        if (dst[keys[i]] === undefined || !ifNotSet)\r\n            dst[keys[i]] = src[keys[i]];\r\n    return dst;\r\n}\r\n\r\nutil.merge = merge;\r\n\r\n/**\r\n * Converts the first character of a string to lower case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.lcFirst = function lcFirst(str) {\r\n    return str.charAt(0).toLowerCase() + str.substring(1);\r\n};\r\n\r\n/**\r\n * Creates a custom error constructor.\r\n * @memberof util\r\n * @param {string} name Error name\r\n * @returns {Constructor<Error>} Custom error constructor\r\n */\r\nfunction newError(name) {\r\n\r\n    function CustomError(message, properties) {\r\n\r\n        if (!(this instanceof CustomError))\r\n            return new CustomError(message, properties);\r\n\r\n        // Error.call(this, message);\r\n        // ^ just returns a new error instance because the ctor can be called as a function\r\n\r\n        Object.defineProperty(this, "message", { get: function() { return message; } });\r\n\r\n        /* istanbul ignore next */\r\n        if (Error.captureStackTrace) // node\r\n            Error.captureStackTrace(this, CustomError);\r\n        else\r\n            Object.defineProperty(this, "stack", { value: (new Error()).stack || "" });\r\n\r\n        if (properties)\r\n            merge(this, properties);\r\n    }\r\n\r\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\r\n\r\n    Object.defineProperty(CustomError.prototype, "name", { get: function() { return name; } });\r\n\r\n    CustomError.prototype.toString = function toString() {\r\n        return this.name + ": " + this.message;\r\n    };\r\n\r\n    return CustomError;\r\n}\r\n\r\nutil.newError = newError;\r\n\r\n/**\r\n * Constructs a new protocol error.\r\n * @classdesc Error subclass indicating a protocol specifc error.\r\n * @memberof util\r\n * @extends Error\r\n * @template T extends Message<T>\r\n * @constructor\r\n * @param {string} message Error message\r\n * @param {Object.<string,*>} [properties] Additional properties\r\n * @example\r\n * try {\r\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\r\n * } catch (e) {\r\n *     if (e instanceof ProtocolError && e.instance)\r\n *         console.log("decoded so far: " + JSON.stringify(e.instance));\r\n * }\r\n */\r\nutil.ProtocolError = newError("ProtocolError");\r\n\r\n/**\r\n * So far decoded message instance.\r\n * @name util.ProtocolError#instance\r\n * @type {Message<T>}\r\n */\r\n\r\n/**\r\n * A OneOf getter as returned by {@link util.oneOfGetter}.\r\n * @typedef OneOfGetter\r\n * @type {function}\r\n * @returns {string|undefined} Set field name, if any\r\n */\r\n\r\n/**\r\n * Builds a getter for a oneof\'s present field name.\r\n * @param {string[]} fieldNames Field names\r\n * @returns {OneOfGetter} Unbound getter\r\n */\r\nutil.oneOfGetter = function getOneOf(fieldNames) {\r\n    var fieldMap = {};\r\n    for (var i = 0; i < fieldNames.length; ++i)\r\n        fieldMap[fieldNames[i]] = 1;\r\n\r\n    /**\r\n     * @returns {string|undefined} Set field name, if any\r\n     * @this Object\r\n     * @ignore\r\n     */\r\n    return function() { // eslint-disable-line consistent-return\r\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\r\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\r\n                return keys[i];\r\n    };\r\n};\r\n\r\n/**\r\n * A OneOf setter as returned by {@link util.oneOfSetter}.\r\n * @typedef OneOfSetter\r\n * @type {function}\r\n * @param {string|undefined} value Field name\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Builds a setter for a oneof\'s present field name.\r\n * @param {string[]} fieldNames Field names\r\n * @returns {OneOfSetter} Unbound setter\r\n */\r\nutil.oneOfSetter = function setOneOf(fieldNames) {\r\n\r\n    /**\r\n     * @param {string} name Field name\r\n     * @returns {undefined}\r\n     * @this Object\r\n     * @ignore\r\n     */\r\n    return function(name) {\r\n        for (var i = 0; i < fieldNames.length; ++i)\r\n            if (fieldNames[i] !== name)\r\n                delete this[fieldNames[i]];\r\n    };\r\n};\r\n\r\n/**\r\n * Default conversion options used for {@link Message#toJSON} implementations.\r\n *\r\n * These options are close to proto3\'s JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\r\n *\r\n * - Longs become strings\r\n * - Enums become string keys\r\n * - Bytes become base64 encoded strings\r\n * - (Sub-)Messages become plain objects\r\n * - Maps become plain objects with all string keys\r\n * - Repeated fields become arrays\r\n * - NaN and Infinity for float and double fields become strings\r\n *\r\n * @type {IConversionOptions}\r\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\r\n */\r\nutil.toJSONOptions = {\r\n    longs: String,\r\n    enums: String,\r\n    bytes: String,\r\n    json: true\r\n};\r\n\r\n// Sets up buffer utility according to the environment (called in index-minimal)\r\nutil._configure = function() {\r\n    var Buffer = util.Buffer;\r\n    /* istanbul ignore if */\r\n    if (!Buffer) {\r\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\r\n        return;\r\n    }\r\n    // because node 4.x buffers are incompatible & immutable\r\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\r\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\r\n        /* istanbul ignore next */\r\n        function Buffer_from(value, encoding) {\r\n            return new Buffer(value, encoding);\r\n        };\r\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\r\n        /* istanbul ignore next */\r\n        function Buffer_allocUnsafe(size) {\r\n            return new Buffer(size);\r\n        };\r\n};\r\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))\n\n//# sourceURL=webpack://TooqingCore/./node_modules/protobufjs/src/util/minimal.js?')},"./node_modules/protobufjs/src/writer.js":function(module,exports,__webpack_require__){"use strict";eval("\r\nmodule.exports = Writer;\r\n\r\nvar util      = __webpack_require__(/*! ./util/minimal */ \"./node_modules/protobufjs/src/util/minimal.js\");\r\n\r\nvar BufferWriter; // cyclic\r\n\r\nvar LongBits  = util.LongBits,\r\n    base64    = util.base64,\r\n    utf8      = util.utf8;\r\n\r\n/**\r\n * Constructs a new writer operation instance.\r\n * @classdesc Scheduled writer operation.\r\n * @constructor\r\n * @param {function(*, Uint8Array, number)} fn Function to call\r\n * @param {number} len Value byte length\r\n * @param {*} val Value to write\r\n * @ignore\r\n */\r\nfunction Op(fn, len, val) {\r\n\r\n    /**\r\n     * Function to call.\r\n     * @type {function(Uint8Array, number, *)}\r\n     */\r\n    this.fn = fn;\r\n\r\n    /**\r\n     * Value byte length.\r\n     * @type {number}\r\n     */\r\n    this.len = len;\r\n\r\n    /**\r\n     * Next operation.\r\n     * @type {Writer.Op|undefined}\r\n     */\r\n    this.next = undefined;\r\n\r\n    /**\r\n     * Value to write.\r\n     * @type {*}\r\n     */\r\n    this.val = val; // type varies\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction noop() {} // eslint-disable-line no-empty-function\r\n\r\n/**\r\n * Constructs a new writer state instance.\r\n * @classdesc Copied writer state.\r\n * @memberof Writer\r\n * @constructor\r\n * @param {Writer} writer Writer to copy state from\r\n * @ignore\r\n */\r\nfunction State(writer) {\r\n\r\n    /**\r\n     * Current head.\r\n     * @type {Writer.Op}\r\n     */\r\n    this.head = writer.head;\r\n\r\n    /**\r\n     * Current tail.\r\n     * @type {Writer.Op}\r\n     */\r\n    this.tail = writer.tail;\r\n\r\n    /**\r\n     * Current buffer length.\r\n     * @type {number}\r\n     */\r\n    this.len = writer.len;\r\n\r\n    /**\r\n     * Next state.\r\n     * @type {State|null}\r\n     */\r\n    this.next = writer.states;\r\n}\r\n\r\n/**\r\n * Constructs a new writer instance.\r\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\r\n * @constructor\r\n */\r\nfunction Writer() {\r\n\r\n    /**\r\n     * Current length.\r\n     * @type {number}\r\n     */\r\n    this.len = 0;\r\n\r\n    /**\r\n     * Operations head.\r\n     * @type {Object}\r\n     */\r\n    this.head = new Op(noop, 0, 0);\r\n\r\n    /**\r\n     * Operations tail\r\n     * @type {Object}\r\n     */\r\n    this.tail = this.head;\r\n\r\n    /**\r\n     * Linked forked states.\r\n     * @type {Object|null}\r\n     */\r\n    this.states = null;\r\n\r\n    // When a value is written, the writer calculates its byte length and puts it into a linked\r\n    // list of operations to perform when finish() is called. This both allows us to allocate\r\n    // buffers of the exact required size and reduces the amount of work we have to do compared\r\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\r\n    // part is just a linked list walk calling operations with already prepared values.\r\n}\r\n\r\n/**\r\n * Creates a new writer.\r\n * @function\r\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\r\n */\r\nWriter.create = util.Buffer\r\n    ? function create_buffer_setup() {\r\n        return (Writer.create = function create_buffer() {\r\n            return new BufferWriter();\r\n        })();\r\n    }\r\n    /* istanbul ignore next */\r\n    : function create_array() {\r\n        return new Writer();\r\n    };\r\n\r\n/**\r\n * Allocates a buffer of the specified size.\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\nWriter.alloc = function alloc(size) {\r\n    return new util.Array(size);\r\n};\r\n\r\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\r\n/* istanbul ignore else */\r\nif (util.Array !== Array)\r\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\r\n\r\n/**\r\n * Pushes a new operation to the queue.\r\n * @param {function(Uint8Array, number, *)} fn Function to call\r\n * @param {number} len Value byte length\r\n * @param {number} val Value to write\r\n * @returns {Writer} `this`\r\n * @private\r\n */\r\nWriter.prototype._push = function push(fn, len, val) {\r\n    this.tail = this.tail.next = new Op(fn, len, val);\r\n    this.len += len;\r\n    return this;\r\n};\r\n\r\nfunction writeByte(val, buf, pos) {\r\n    buf[pos] = val & 255;\r\n}\r\n\r\nfunction writeVarint32(val, buf, pos) {\r\n    while (val > 127) {\r\n        buf[pos++] = val & 127 | 128;\r\n        val >>>= 7;\r\n    }\r\n    buf[pos] = val;\r\n}\r\n\r\n/**\r\n * Constructs a new varint writer operation instance.\r\n * @classdesc Scheduled varint writer operation.\r\n * @extends Op\r\n * @constructor\r\n * @param {number} len Value byte length\r\n * @param {number} val Value to write\r\n * @ignore\r\n */\r\nfunction VarintOp(len, val) {\r\n    this.len = len;\r\n    this.next = undefined;\r\n    this.val = val;\r\n}\r\n\r\nVarintOp.prototype = Object.create(Op.prototype);\r\nVarintOp.prototype.fn = writeVarint32;\r\n\r\n/**\r\n * Writes an unsigned 32 bit value as a varint.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.uint32 = function write_uint32(value) {\r\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\r\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\r\n    this.len += (this.tail = this.tail.next = new VarintOp(\r\n        (value = value >>> 0)\r\n                < 128       ? 1\r\n        : value < 16384     ? 2\r\n        : value < 2097152   ? 3\r\n        : value < 268435456 ? 4\r\n        :                     5,\r\n    value)).len;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Writes a signed 32 bit value as a varint.\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.int32 = function write_int32(value) {\r\n    return value < 0\r\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\r\n        : this.uint32(value);\r\n};\r\n\r\n/**\r\n * Writes a 32 bit value as a varint, zig-zag encoded.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.sint32 = function write_sint32(value) {\r\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\r\n};\r\n\r\nfunction writeVarint64(val, buf, pos) {\r\n    while (val.hi) {\r\n        buf[pos++] = val.lo & 127 | 128;\r\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\r\n        val.hi >>>= 7;\r\n    }\r\n    while (val.lo > 127) {\r\n        buf[pos++] = val.lo & 127 | 128;\r\n        val.lo = val.lo >>> 7;\r\n    }\r\n    buf[pos++] = val.lo;\r\n}\r\n\r\n/**\r\n * Writes an unsigned 64 bit value as a varint.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.uint64 = function write_uint64(value) {\r\n    var bits = LongBits.from(value);\r\n    return this._push(writeVarint64, bits.length(), bits);\r\n};\r\n\r\n/**\r\n * Writes a signed 64 bit value as a varint.\r\n * @function\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.int64 = Writer.prototype.uint64;\r\n\r\n/**\r\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.sint64 = function write_sint64(value) {\r\n    var bits = LongBits.from(value).zzEncode();\r\n    return this._push(writeVarint64, bits.length(), bits);\r\n};\r\n\r\n/**\r\n * Writes a boolish value as a varint.\r\n * @param {boolean} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.bool = function write_bool(value) {\r\n    return this._push(writeByte, 1, value ? 1 : 0);\r\n};\r\n\r\nfunction writeFixed32(val, buf, pos) {\r\n    buf[pos    ] =  val         & 255;\r\n    buf[pos + 1] =  val >>> 8   & 255;\r\n    buf[pos + 2] =  val >>> 16  & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\n/**\r\n * Writes an unsigned 32 bit value as fixed 32 bits.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.fixed32 = function write_fixed32(value) {\r\n    return this._push(writeFixed32, 4, value >>> 0);\r\n};\r\n\r\n/**\r\n * Writes a signed 32 bit value as fixed 32 bits.\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\r\n\r\n/**\r\n * Writes an unsigned 64 bit value as fixed 64 bits.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.fixed64 = function write_fixed64(value) {\r\n    var bits = LongBits.from(value);\r\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\r\n};\r\n\r\n/**\r\n * Writes a signed 64 bit value as fixed 64 bits.\r\n * @function\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\r\n\r\n/**\r\n * Writes a float (32 bit).\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.float = function write_float(value) {\r\n    return this._push(util.float.writeFloatLE, 4, value);\r\n};\r\n\r\n/**\r\n * Writes a double (64 bit float).\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.double = function write_double(value) {\r\n    return this._push(util.float.writeDoubleLE, 8, value);\r\n};\r\n\r\nvar writeBytes = util.Array.prototype.set\r\n    ? function writeBytes_set(val, buf, pos) {\r\n        buf.set(val, pos); // also works for plain array values\r\n    }\r\n    /* istanbul ignore next */\r\n    : function writeBytes_for(val, buf, pos) {\r\n        for (var i = 0; i < val.length; ++i)\r\n            buf[pos + i] = val[i];\r\n    };\r\n\r\n/**\r\n * Writes a sequence of bytes.\r\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.bytes = function write_bytes(value) {\r\n    var len = value.length >>> 0;\r\n    if (!len)\r\n        return this._push(writeByte, 1, 0);\r\n    if (util.isString(value)) {\r\n        var buf = Writer.alloc(len = base64.length(value));\r\n        base64.decode(value, buf, 0);\r\n        value = buf;\r\n    }\r\n    return this.uint32(len)._push(writeBytes, len, value);\r\n};\r\n\r\n/**\r\n * Writes a string.\r\n * @param {string} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.string = function write_string(value) {\r\n    var len = utf8.length(value);\r\n    return len\r\n        ? this.uint32(len)._push(utf8.write, len, value)\r\n        : this._push(writeByte, 1, 0);\r\n};\r\n\r\n/**\r\n * Forks this writer's state by pushing it to a stack.\r\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.fork = function fork() {\r\n    this.states = new State(this);\r\n    this.head = this.tail = new Op(noop, 0, 0);\r\n    this.len = 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Resets this instance to the last state.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.reset = function reset() {\r\n    if (this.states) {\r\n        this.head   = this.states.head;\r\n        this.tail   = this.states.tail;\r\n        this.len    = this.states.len;\r\n        this.states = this.states.next;\r\n    } else {\r\n        this.head = this.tail = new Op(noop, 0, 0);\r\n        this.len  = 0;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.ldelim = function ldelim() {\r\n    var head = this.head,\r\n        tail = this.tail,\r\n        len  = this.len;\r\n    this.reset().uint32(len);\r\n    if (len) {\r\n        this.tail.next = head.next; // skip noop\r\n        this.tail = tail;\r\n        this.len += len;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Finishes the write operation.\r\n * @returns {Uint8Array} Finished buffer\r\n */\r\nWriter.prototype.finish = function finish() {\r\n    var head = this.head.next, // skip noop\r\n        buf  = this.constructor.alloc(this.len),\r\n        pos  = 0;\r\n    while (head) {\r\n        head.fn(head.val, buf, pos);\r\n        pos += head.len;\r\n        head = head.next;\r\n    }\r\n    // this.head = this.tail = null;\r\n    return buf;\r\n};\r\n\r\nWriter._configure = function(BufferWriter_) {\r\n    BufferWriter = BufferWriter_;\r\n};\r\n\n\n//# sourceURL=webpack://TooqingCore/./node_modules/protobufjs/src/writer.js?")},"./node_modules/protobufjs/src/writer_buffer.js":function(module,exports,__webpack_require__){"use strict";eval('\r\nmodule.exports = BufferWriter;\r\n\r\n// extends Writer\r\nvar Writer = __webpack_require__(/*! ./writer */ "./node_modules/protobufjs/src/writer.js");\r\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\r\n\r\nvar util = __webpack_require__(/*! ./util/minimal */ "./node_modules/protobufjs/src/util/minimal.js");\r\n\r\nvar Buffer = util.Buffer;\r\n\r\n/**\r\n * Constructs a new buffer writer instance.\r\n * @classdesc Wire format writer using node buffers.\r\n * @extends Writer\r\n * @constructor\r\n */\r\nfunction BufferWriter() {\r\n    Writer.call(this);\r\n}\r\n\r\n/**\r\n * Allocates a buffer of the specified size.\r\n * @param {number} size Buffer size\r\n * @returns {Buffer} Buffer\r\n */\r\nBufferWriter.alloc = function alloc_buffer(size) {\r\n    return (BufferWriter.alloc = util._Buffer_allocUnsafe)(size);\r\n};\r\n\r\nvar writeBytesBuffer = Buffer && Buffer.prototype instanceof Uint8Array && Buffer.prototype.set.name === "set"\r\n    ? function writeBytesBuffer_set(val, buf, pos) {\r\n        buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\r\n                           // also works for plain array values\r\n    }\r\n    /* istanbul ignore next */\r\n    : function writeBytesBuffer_copy(val, buf, pos) {\r\n        if (val.copy) // Buffer values\r\n            val.copy(buf, pos, 0, val.length);\r\n        else for (var i = 0; i < val.length;) // plain array values\r\n            buf[pos++] = val[i++];\r\n    };\r\n\r\n/**\r\n * @override\r\n */\r\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\r\n    if (util.isString(value))\r\n        value = util._Buffer_from(value, "base64");\r\n    var len = value.length >>> 0;\r\n    this.uint32(len);\r\n    if (len)\r\n        this._push(writeBytesBuffer, len, value);\r\n    return this;\r\n};\r\n\r\nfunction writeStringBuffer(val, buf, pos) {\r\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\r\n        util.utf8.write(val, buf, pos);\r\n    else\r\n        buf.utf8Write(val, pos);\r\n}\r\n\r\n/**\r\n * @override\r\n */\r\nBufferWriter.prototype.string = function write_string_buffer(value) {\r\n    var len = Buffer.byteLength(value);\r\n    this.uint32(len);\r\n    if (len)\r\n        this._push(writeStringBuffer, len, value);\r\n    return this;\r\n};\r\n\r\n\r\n/**\r\n * Finishes the write operation.\r\n * @name BufferWriter#finish\r\n * @function\r\n * @returns {Buffer} Finished buffer\r\n */\r\n\n\n//# sourceURL=webpack://TooqingCore/./node_modules/protobufjs/src/writer_buffer.js?')},"./node_modules/ts-loader/index.js!./src/net/networker.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _socket__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./socket */ "./src/net/socket.ts");\n/* harmony import */ var net_socket_packet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! net-socket-packet */ "./node_modules/net-socket-packet/dist/index.js");\n/* harmony import */ var net_socket_packet__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(net_socket_packet__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_log__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/log */ "./src/utils/log.ts");\n/* harmony import */ var pixelpai_proto__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! pixelpai_proto */ "./node_modules/pixelpai_proto/protocols.js");\n/* harmony import */ var pixelpai_proto__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(pixelpai_proto__WEBPACK_IMPORTED_MODULE_3__);\nvar __extends = (undefined && undefined.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\n\r\n\r\n\r\nfor (var key in pixelpai_proto__WEBPACK_IMPORTED_MODULE_3__) {\r\n    net_socket_packet__WEBPACK_IMPORTED_MODULE_1__["PBpacket"].addProtocol(pixelpai_proto__WEBPACK_IMPORTED_MODULE_3__[key]);\r\n}\r\nvar ctx = self;\r\nvar ConnListener = /** @class */ (function () {\r\n    function ConnListener() {\r\n    }\r\n    ConnListener.prototype.onConnected = function (connection) {\r\n        ctx.postMessage({\r\n            method: "onConnected",\r\n        });\r\n        _utils_log__WEBPACK_IMPORTED_MODULE_2__["Logger"].getInstance().info("NetWorker[\\u5DF2\\u8FDE\\u63A5]");\r\n    };\r\n    ConnListener.prototype.onDisConnected = function (connection) {\r\n        ctx.postMessage({\r\n            method: "onDisConnected",\r\n        });\r\n        _utils_log__WEBPACK_IMPORTED_MODULE_2__["Logger"].getInstance().info("NetWorker[\\u5DF2\\u65AD\\u5F00]");\r\n    };\r\n    ConnListener.prototype.onError = function (reason) {\r\n        if (reason) {\r\n            ctx.postMessage({\r\n                method: "onConnectError",\r\n                error: reason.message,\r\n            });\r\n            _utils_log__WEBPACK_IMPORTED_MODULE_2__["Logger"].getInstance().error("NetWorker[\\u9519\\u8BEF]:" + reason.message);\r\n        }\r\n        else {\r\n            _utils_log__WEBPACK_IMPORTED_MODULE_2__["Logger"].getInstance().error("NetWorker[\\u9519\\u8BEF]:" + reason);\r\n        }\r\n    };\r\n    return ConnListener;\r\n}());\r\nvar WorkerClient = /** @class */ (function (_super) {\r\n    __extends(WorkerClient, _super);\r\n    function WorkerClient() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.mUuid = 0;\r\n        return _this;\r\n    }\r\n    WorkerClient.prototype.send = function (data) {\r\n        var protobuf_packet = new net_socket_packet__WEBPACK_IMPORTED_MODULE_1__["PBpacket"]();\r\n        protobuf_packet.Deserialization(new net_socket_packet__WEBPACK_IMPORTED_MODULE_1__["Buffer"](data));\r\n        protobuf_packet.header.uuid = this.mUuid || 0;\r\n        _super.prototype.send.call(this, protobuf_packet.Serialization());\r\n        _utils_log__WEBPACK_IMPORTED_MODULE_2__["Logger"].getInstance().info("NetWorker[\\u53D1\\u9001] >>> " + protobuf_packet.toString());\r\n    };\r\n    WorkerClient.prototype.onData = function (data) {\r\n        var protobuf_packet = new net_socket_packet__WEBPACK_IMPORTED_MODULE_1__["PBpacket"]();\r\n        protobuf_packet.Deserialization(new net_socket_packet__WEBPACK_IMPORTED_MODULE_1__["Buffer"](data));\r\n        this.mUuid = protobuf_packet.header.uuid;\r\n        _utils_log__WEBPACK_IMPORTED_MODULE_2__["Logger"].getInstance().info("NetWorker[\\u63A5\\u6536] <<< " + protobuf_packet.toString() + " ");\r\n        // Send the packet to parent thread\r\n        ctx.postMessage({\r\n            method: "onData",\r\n            buffer: protobuf_packet.Serialization(),\r\n        });\r\n    };\r\n    return WorkerClient;\r\n}(_socket__WEBPACK_IMPORTED_MODULE_0__["SocketConnection"]));\r\n// run socket client through web-worker\r\nvar socket = new WorkerClient(new ConnListener());\r\nctx.onmessage = function (ev) {\r\n    var data = ev.data;\r\n    switch (data.method) {\r\n        case "connect":\r\n            var addr = data.address;\r\n            if (addr)\r\n                socket.startConnect(addr);\r\n            break;\r\n        case "send":\r\n            var buf = data.buffer;\r\n            socket.send(new net_socket_packet__WEBPACK_IMPORTED_MODULE_1__["Buffer"](buf));\r\n            break;\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://TooqingCore/./src/net/networker.ts?./node_modules/ts-loader')},"./node_modules/typescript-collections/dist/lib/BSTree.js":function(module,exports,__webpack_require__){"use strict";eval('\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, "__esModule", { value: true });\nvar BSTreeKV_1 = __webpack_require__(/*! ./BSTreeKV */ "./node_modules/typescript-collections/dist/lib/BSTreeKV.js");\n/**\n * Special-case of the binary search tree in which the search key is equal to the element type.\n * This definition is suitable when the element type can not be split between what defines its order\n * and what does not (eg. primitive types as opposed to indexed records).\n *\n * The table below shows some use-case examples for both interfaces:\n *\n *           element type              |  most suitable interface\n * ------------------------------------|----------------------------\n *    number                           |  BSTree<number>\n *    string                           |  BSTree<string>\n * { order: number, data: string }     |  BSTreeKV<{order: number}, {order: number, data: string}>\n *\n * @see BSTreeKV\n */\nvar BSTree = /** @class */ (function (_super) {\n    __extends(BSTree, _super);\n    function BSTree() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return BSTree;\n}(BSTreeKV_1.default));\nexports.default = BSTree;\n//# sourceMappingURL=BSTree.js.map\n\n//# sourceURL=webpack://TooqingCore/./node_modules/typescript-collections/dist/lib/BSTree.js?')},"./node_modules/typescript-collections/dist/lib/BSTreeKV.js":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nvar util = __webpack_require__(/*! ./util */ "./node_modules/typescript-collections/dist/lib/util.js");\nvar Queue_1 = __webpack_require__(/*! ./Queue */ "./node_modules/typescript-collections/dist/lib/Queue.js");\n/**\n * General binary search tree implementation.\n *\n * This interface allows one to search elements using a subset of their attributes (thus the\n * tree can be used as an index for complex objects).\n * The attributes required to define an ordering in the tree must be defined in the type K.\n * Any additional attribute must be defined in the type V.\n *\n * @see BSTree\n */\nvar BSTreeKV = /** @class */ (function () {\n    /**\n     * Creates an empty binary search tree.\n     * @class <p>A binary search tree is a binary tree in which each\n     * internal node stores an element such that the elements stored in the\n     * left subtree are less than it and the elements\n     * stored in the right subtree are greater.</p>\n     * <p>Formally, a binary search tree is a node-based binary tree data structure which\n     * has the following properties:</p>\n     * <ul>\n     * <li>The left subtree of a node contains only nodes with elements less\n     * than the node\'s element</li>\n     * <li>The right subtree of a node contains only nodes with elements greater\n     * than the node\'s element</li>\n     * <li>Both the left and right subtrees must also be binary search trees.</li>\n     * </ul>\n     * <p>If the inserted elements are custom objects a compare function must\n     * be provided at construction time, otherwise the <=, === and >= operators are\n     * used to compare elements. Example:</p>\n     * <pre>\n     * function compare(a, b) {\n     *  if (a is less than b by some ordering criterion) {\n     *     return -1;\n     *  } if (a is greater than b by the ordering criterion) {\n     *     return 1;\n     *  }\n     *  // a must be equal to b\n     *  return 0;\n     * }\n     * </pre>\n     * @constructor\n     * @param {function(Object,Object):number=} compareFunction optional\n     * function used to compare two elements. Must return a negative integer,\n     * zero, or a positive integer as the first argument is less than, equal to,\n     * or greater than the second.\n     */\n    function BSTreeKV(compareFunction) {\n        this.root = null;\n        this.compare = compareFunction || util.defaultCompare;\n        this.nElements = 0;\n    }\n    /**\n     * Adds the specified element to this tree if it is not already present.\n     * @param {Object} element the element to insert.\n     * @return {boolean} true if this tree did not already contain the specified element.\n     */\n    BSTreeKV.prototype.add = function (element) {\n        if (util.isUndefined(element)) {\n            return false;\n        }\n        if (this.insertNode(this.createNode(element)) !== null) {\n            this.nElements++;\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Removes all of the elements from this tree.\n     */\n    BSTreeKV.prototype.clear = function () {\n        this.root = null;\n        this.nElements = 0;\n    };\n    /**\n     * Returns true if this tree contains no elements.\n     * @return {boolean} true if this tree contains no elements.\n     */\n    BSTreeKV.prototype.isEmpty = function () {\n        return this.nElements === 0;\n    };\n    /**\n     * Returns the number of elements in this tree.\n     * @return {number} the number of elements in this tree.\n     */\n    BSTreeKV.prototype.size = function () {\n        return this.nElements;\n    };\n    /**\n     * Returns true if this tree contains the specified element.\n     * @param {Object} element element to search for.\n     * @return {boolean} true if this tree contains the specified element,\n     * false otherwise.\n     */\n    BSTreeKV.prototype.contains = function (element) {\n        if (util.isUndefined(element)) {\n            return false;\n        }\n        return this.searchNode(this.root, element) !== null;\n    };\n    /**\n     * Looks for the value with the provided search key.\n     * @param {Object} element The key to look for\n     * @return {Object} The value found or undefined if it was not found.\n     */\n    BSTreeKV.prototype.search = function (element) {\n        var ret = this.searchNode(this.root, element);\n        if (ret === null) {\n            return undefined;\n        }\n        return ret.element;\n    };\n    /**\n     * Removes the specified element from this tree if it is present.\n     * @return {boolean} true if this tree contained the specified element.\n     */\n    BSTreeKV.prototype.remove = function (element) {\n        var node = this.searchNode(this.root, element);\n        if (node === null) {\n            return false;\n        }\n        this.removeNode(node);\n        this.nElements--;\n        return true;\n    };\n    /**\n     * Executes the provided function once for each element present in this tree in\n     * in-order.\n     * @param {function(Object):*} callback function to execute, it is invoked with one\n     * argument: the element value, to break the iteration you can optionally return false.\n     */\n    BSTreeKV.prototype.inorderTraversal = function (callback) {\n        this.inorderTraversalAux(this.root, callback, {\n            stop: false\n        });\n    };\n    /**\n     * Executes the provided function once for each element present in this tree in pre-order.\n     * @param {function(Object):*} callback function to execute, it is invoked with one\n     * argument: the element value, to break the iteration you can optionally return false.\n     */\n    BSTreeKV.prototype.preorderTraversal = function (callback) {\n        this.preorderTraversalAux(this.root, callback, {\n            stop: false\n        });\n    };\n    /**\n     * Executes the provided function once for each element present in this tree in post-order.\n     * @param {function(Object):*} callback function to execute, it is invoked with one\n     * argument: the element value, to break the iteration you can optionally return false.\n     */\n    BSTreeKV.prototype.postorderTraversal = function (callback) {\n        this.postorderTraversalAux(this.root, callback, {\n            stop: false\n        });\n    };\n    /**\n     * Executes the provided function once for each element present in this tree in\n     * level-order.\n     * @param {function(Object):*} callback function to execute, it is invoked with one\n     * argument: the element value, to break the iteration you can optionally return false.\n     */\n    BSTreeKV.prototype.levelTraversal = function (callback) {\n        this.levelTraversalAux(this.root, callback);\n    };\n    /**\n     * Returns the minimum element of this tree.\n     * @return {*} the minimum element of this tree or undefined if this tree is\n     * is empty.\n     */\n    BSTreeKV.prototype.minimum = function () {\n        if (this.isEmpty() || this.root === null) {\n            return undefined;\n        }\n        return this.minimumAux(this.root).element;\n    };\n    /**\n     * Returns the maximum element of this tree.\n     * @return {*} the maximum element of this tree or undefined if this tree is\n     * is empty.\n     */\n    BSTreeKV.prototype.maximum = function () {\n        if (this.isEmpty() || this.root === null) {\n            return undefined;\n        }\n        return this.maximumAux(this.root).element;\n    };\n    /**\n     * Executes the provided function once for each element present in this tree in inorder.\n     * Equivalent to inorderTraversal.\n     * @param {function(Object):*} callback function to execute, it is\n     * invoked with one argument: the element value, to break the iteration you can\n     * optionally return false.\n     */\n    BSTreeKV.prototype.forEach = function (callback) {\n        this.inorderTraversal(callback);\n    };\n    /**\n     * Returns an array containing all of the elements in this tree in in-order.\n     * @return {Array} an array containing all of the elements in this tree in in-order.\n     */\n    BSTreeKV.prototype.toArray = function () {\n        var array = [];\n        this.inorderTraversal(function (element) {\n            array.push(element);\n            return true;\n        });\n        return array;\n    };\n    /**\n     * Returns the height of this tree.\n     * @return {number} the height of this tree or -1 if is empty.\n     */\n    BSTreeKV.prototype.height = function () {\n        return this.heightAux(this.root);\n    };\n    /**\n    * @private\n    */\n    BSTreeKV.prototype.searchNode = function (node, element) {\n        var cmp = 1;\n        while (node !== null && cmp !== 0) {\n            cmp = this.compare(element, node.element);\n            if (cmp < 0) {\n                node = node.leftCh;\n            }\n            else if (cmp > 0) {\n                node = node.rightCh;\n            }\n        }\n        return node;\n    };\n    /**\n    * @private\n    */\n    BSTreeKV.prototype.transplant = function (n1, n2) {\n        if (n1.parent === null) {\n            this.root = n2;\n        }\n        else if (n1 === n1.parent.leftCh) {\n            n1.parent.leftCh = n2;\n        }\n        else {\n            n1.parent.rightCh = n2;\n        }\n        if (n2 !== null) {\n            n2.parent = n1.parent;\n        }\n    };\n    /**\n    * @private\n    */\n    BSTreeKV.prototype.removeNode = function (node) {\n        if (node.leftCh === null) {\n            this.transplant(node, node.rightCh);\n        }\n        else if (node.rightCh === null) {\n            this.transplant(node, node.leftCh);\n        }\n        else {\n            var y = this.minimumAux(node.rightCh);\n            if (y.parent !== node) {\n                this.transplant(y, y.rightCh);\n                y.rightCh = node.rightCh;\n                y.rightCh.parent = y;\n            }\n            this.transplant(node, y);\n            y.leftCh = node.leftCh;\n            y.leftCh.parent = y;\n        }\n    };\n    /**\n    * @private\n    */\n    BSTreeKV.prototype.inorderTraversalAux = function (node, callback, signal) {\n        if (node === null || signal.stop) {\n            return;\n        }\n        this.inorderTraversalAux(node.leftCh, callback, signal);\n        if (signal.stop) {\n            return;\n        }\n        signal.stop = callback(node.element) === false;\n        if (signal.stop) {\n            return;\n        }\n        this.inorderTraversalAux(node.rightCh, callback, signal);\n    };\n    /**\n    * @private\n    */\n    BSTreeKV.prototype.levelTraversalAux = function (node, callback) {\n        var queue = new Queue_1.default();\n        if (node !== null) {\n            queue.enqueue(node);\n        }\n        node = queue.dequeue() || null;\n        while (node != null) {\n            if (callback(node.element) === false) {\n                return;\n            }\n            if (node.leftCh !== null) {\n                queue.enqueue(node.leftCh);\n            }\n            if (node.rightCh !== null) {\n                queue.enqueue(node.rightCh);\n            }\n            node = queue.dequeue() || null;\n        }\n    };\n    /**\n    * @private\n    */\n    BSTreeKV.prototype.preorderTraversalAux = function (node, callback, signal) {\n        if (node === null || signal.stop) {\n            return;\n        }\n        signal.stop = callback(node.element) === false;\n        if (signal.stop) {\n            return;\n        }\n        this.preorderTraversalAux(node.leftCh, callback, signal);\n        if (signal.stop) {\n            return;\n        }\n        this.preorderTraversalAux(node.rightCh, callback, signal);\n    };\n    /**\n    * @private\n    */\n    BSTreeKV.prototype.postorderTraversalAux = function (node, callback, signal) {\n        if (node === null || signal.stop) {\n            return;\n        }\n        this.postorderTraversalAux(node.leftCh, callback, signal);\n        if (signal.stop) {\n            return;\n        }\n        this.postorderTraversalAux(node.rightCh, callback, signal);\n        if (signal.stop) {\n            return;\n        }\n        signal.stop = callback(node.element) === false;\n    };\n    BSTreeKV.prototype.minimumAux = function (node) {\n        while (node != null && node.leftCh !== null) {\n            node = node.leftCh;\n        }\n        return node;\n    };\n    BSTreeKV.prototype.maximumAux = function (node) {\n        while (node != null && node.rightCh !== null) {\n            node = node.rightCh;\n        }\n        return node;\n    };\n    /**\n      * @private\n      */\n    BSTreeKV.prototype.heightAux = function (node) {\n        if (node === null) {\n            return -1;\n        }\n        return Math.max(this.heightAux(node.leftCh), this.heightAux(node.rightCh)) + 1;\n    };\n    /*\n    * @private\n    */\n    BSTreeKV.prototype.insertNode = function (node) {\n        var parent = null;\n        var position = this.root;\n        while (position !== null) {\n            var cmp = this.compare(node.element, position.element);\n            if (cmp === 0) {\n                return null;\n            }\n            else if (cmp < 0) {\n                parent = position;\n                position = position.leftCh;\n            }\n            else {\n                parent = position;\n                position = position.rightCh;\n            }\n        }\n        node.parent = parent;\n        if (parent === null) {\n            // tree is empty\n            this.root = node;\n        }\n        else if (this.compare(node.element, parent.element) < 0) {\n            parent.leftCh = node;\n        }\n        else {\n            parent.rightCh = node;\n        }\n        return node;\n    };\n    /**\n    * @private\n    */\n    BSTreeKV.prototype.createNode = function (element) {\n        return {\n            element: element,\n            leftCh: null,\n            rightCh: null,\n            parent: null\n        };\n    };\n    return BSTreeKV;\n}());\nexports.default = BSTreeKV;\n//# sourceMappingURL=BSTreeKV.js.map\n\n//# sourceURL=webpack://TooqingCore/./node_modules/typescript-collections/dist/lib/BSTreeKV.js?')},"./node_modules/typescript-collections/dist/lib/Bag.js":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nvar util = __webpack_require__(/*! ./util */ "./node_modules/typescript-collections/dist/lib/util.js");\nvar Dictionary_1 = __webpack_require__(/*! ./Dictionary */ "./node_modules/typescript-collections/dist/lib/Dictionary.js");\nvar Set_1 = __webpack_require__(/*! ./Set */ "./node_modules/typescript-collections/dist/lib/Set.js");\nvar Bag = /** @class */ (function () {\n    /**\n     * Creates an empty bag.\n     * @class <p>A bag is a special kind of set in which members are\n     * allowed to appear more than once.</p>\n     * <p>If the inserted elements are custom objects a function\n     * which converts elements to unique strings must be provided. Example:</p>\n     *\n     * <pre>\n     * function petToString(pet) {\n     *  return pet.name;\n     * }\n     * </pre>\n     *\n     * @constructor\n     * @param {function(Object):string=} toStrFunction optional function used\n     * to convert elements to strings. If the elements aren\'t strings or if toString()\n     * is not appropriate, a custom function which receives an object and returns a\n     * unique string must be provided.\n     */\n    function Bag(toStrFunction) {\n        this.toStrF = toStrFunction || util.defaultToString;\n        this.dictionary = new Dictionary_1.default(this.toStrF);\n        this.nElements = 0;\n    }\n    /**\n    * Adds nCopies of the specified object to this bag.\n    * @param {Object} element element to add.\n    * @param {number=} nCopies the number of copies to add, if this argument is\n    * undefined 1 copy is added.\n    * @return {boolean} true unless element is undefined.\n    */\n    Bag.prototype.add = function (element, nCopies) {\n        if (nCopies === void 0) { nCopies = 1; }\n        if (util.isUndefined(element) || nCopies <= 0) {\n            return false;\n        }\n        if (!this.contains(element)) {\n            var node = {\n                value: element,\n                copies: nCopies\n            };\n            this.dictionary.setValue(element, node);\n        }\n        else {\n            this.dictionary.getValue(element).copies += nCopies;\n        }\n        this.nElements += nCopies;\n        return true;\n    };\n    /**\n    * Counts the number of copies of the specified object in this bag.\n    * @param {Object} element the object to search for..\n    * @return {number} the number of copies of the object, 0 if not found\n    */\n    Bag.prototype.count = function (element) {\n        if (!this.contains(element)) {\n            return 0;\n        }\n        else {\n            return this.dictionary.getValue(element).copies;\n        }\n    };\n    /**\n     * Returns true if this bag contains the specified element.\n     * @param {Object} element element to search for.\n     * @return {boolean} true if this bag contains the specified element,\n     * false otherwise.\n     */\n    Bag.prototype.contains = function (element) {\n        return this.dictionary.containsKey(element);\n    };\n    /**\n    * Removes nCopies of the specified object to this bag.\n    * If the number of copies to remove is greater than the actual number\n    * of copies in the Bag, all copies are removed.\n    * @param {Object} element element to remove.\n    * @param {number=} nCopies the number of copies to remove, if this argument is\n    * undefined 1 copy is removed.\n    * @return {boolean} true if at least 1 element was removed.\n    */\n    Bag.prototype.remove = function (element, nCopies) {\n        if (nCopies === void 0) { nCopies = 1; }\n        if (util.isUndefined(element) || nCopies <= 0) {\n            return false;\n        }\n        if (!this.contains(element)) {\n            return false;\n        }\n        else {\n            var node = this.dictionary.getValue(element);\n            if (nCopies > node.copies) {\n                this.nElements -= node.copies;\n            }\n            else {\n                this.nElements -= nCopies;\n            }\n            node.copies -= nCopies;\n            if (node.copies <= 0) {\n                this.dictionary.remove(element);\n            }\n            return true;\n        }\n    };\n    /**\n     * Returns an array containing all of the elements in this big in arbitrary order,\n     * including multiple copies.\n     * @return {Array} an array containing all of the elements in this bag.\n     */\n    Bag.prototype.toArray = function () {\n        var a = [];\n        var values = this.dictionary.values();\n        for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n            var node = values_1[_i];\n            var element = node.value;\n            var copies = node.copies;\n            for (var j = 0; j < copies; j++) {\n                a.push(element);\n            }\n        }\n        return a;\n    };\n    /**\n     * Returns a set of unique elements in this bag.\n     * @return {collections.Set<T>} a set of unique elements in this bag.\n     */\n    Bag.prototype.toSet = function () {\n        var toret = new Set_1.default(this.toStrF);\n        var elements = this.dictionary.values();\n        for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n            var ele = elements_1[_i];\n            var value = ele.value;\n            toret.add(value);\n        }\n        return toret;\n    };\n    /**\n     * Executes the provided function once for each element\n     * present in this bag, including multiple copies.\n     * @param {function(Object):*} callback function to execute, it is\n     * invoked with one argument: the element. To break the iteration you can\n     * optionally return false.\n     */\n    Bag.prototype.forEach = function (callback) {\n        this.dictionary.forEach(function (k, v) {\n            var value = v.value;\n            var copies = v.copies;\n            for (var i = 0; i < copies; i++) {\n                if (callback(value) === false) {\n                    return false;\n                }\n            }\n            return true;\n        });\n    };\n    /**\n     * Returns the number of elements in this bag.\n     * @return {number} the number of elements in this bag.\n     */\n    Bag.prototype.size = function () {\n        return this.nElements;\n    };\n    /**\n     * Returns true if this bag contains no elements.\n     * @return {boolean} true if this bag contains no elements.\n     */\n    Bag.prototype.isEmpty = function () {\n        return this.nElements === 0;\n    };\n    /**\n     * Removes all of the elements from this bag.\n     */\n    Bag.prototype.clear = function () {\n        this.nElements = 0;\n        this.dictionary.clear();\n    };\n    return Bag;\n}()); // End of bag\nexports.default = Bag;\n//# sourceMappingURL=Bag.js.map\n\n//# sourceURL=webpack://TooqingCore/./node_modules/typescript-collections/dist/lib/Bag.js?')},"./node_modules/typescript-collections/dist/lib/Dictionary.js":function(module,exports,__webpack_require__){"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = __webpack_require__(/*! ./util */ \"./node_modules/typescript-collections/dist/lib/util.js\");\nvar Dictionary = /** @class */ (function () {\n    /**\n     * Creates an empty dictionary.\n     * @class <p>Dictionaries map keys to values; each key can map to at most one value.\n     * This implementation accepts any kind of objects as keys.</p>\n     *\n     * <p>If the keys are custom objects a function which converts keys to unique\n     * strings must be provided. Example:</p>\n     * <pre>\n     * function petToString(pet) {\n     *  return pet.name;\n     * }\n     * </pre>\n     * @constructor\n     * @param {function(Object):string=} toStrFunction optional function used\n     * to convert keys to strings. If the keys aren't strings or if toString()\n     * is not appropriate, a custom function which receives a key and returns a\n     * unique string must be provided.\n     */\n    function Dictionary(toStrFunction) {\n        this.table = {};\n        this.nElements = 0;\n        this.toStr = toStrFunction || util.defaultToString;\n    }\n    /**\n     * Returns the value to which this dictionary maps the specified key.\n     * Returns undefined if this dictionary contains no mapping for this key.\n     * @param {Object} key key whose associated value is to be returned.\n     * @return {*} the value to which this dictionary maps the specified key or\n     * undefined if the map contains no mapping for this key.\n     */\n    Dictionary.prototype.getValue = function (key) {\n        var pair = this.table['$' + this.toStr(key)];\n        if (util.isUndefined(pair)) {\n            return undefined;\n        }\n        return pair.value;\n    };\n    /**\n     * Associates the specified value with the specified key in this dictionary.\n     * If the dictionary previously contained a mapping for this key, the old\n     * value is replaced by the specified value.\n     * @param {Object} key key with which the specified value is to be\n     * associated.\n     * @param {Object} value value to be associated with the specified key.\n     * @return {*} previous value associated with the specified key, or undefined if\n     * there was no mapping for the key or if the key/value are undefined.\n     */\n    Dictionary.prototype.setValue = function (key, value) {\n        if (util.isUndefined(key) || util.isUndefined(value)) {\n            return undefined;\n        }\n        var ret;\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        if (util.isUndefined(previousElement)) {\n            this.nElements++;\n            ret = undefined;\n        }\n        else {\n            ret = previousElement.value;\n        }\n        this.table[k] = {\n            key: key,\n            value: value\n        };\n        return ret;\n    };\n    /**\n     * Removes the mapping for this key from this dictionary if it is present.\n     * @param {Object} key key whose mapping is to be removed from the\n     * dictionary.\n     * @return {*} previous value associated with specified key, or undefined if\n     * there was no mapping for key.\n     */\n    Dictionary.prototype.remove = function (key) {\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        if (!util.isUndefined(previousElement)) {\n            delete this.table[k];\n            this.nElements--;\n            return previousElement.value;\n        }\n        return undefined;\n    };\n    /**\n     * Returns an array containing all of the keys in this dictionary.\n     * @return {Array} an array containing all of the keys in this dictionary.\n     */\n    Dictionary.prototype.keys = function () {\n        var array = [];\n        for (var name_1 in this.table) {\n            if (util.has(this.table, name_1)) {\n                var pair = this.table[name_1];\n                array.push(pair.key);\n            }\n        }\n        return array;\n    };\n    /**\n     * Returns an array containing all of the values in this dictionary.\n     * @return {Array} an array containing all of the values in this dictionary.\n     */\n    Dictionary.prototype.values = function () {\n        var array = [];\n        for (var name_2 in this.table) {\n            if (util.has(this.table, name_2)) {\n                var pair = this.table[name_2];\n                array.push(pair.value);\n            }\n        }\n        return array;\n    };\n    /**\n    * Executes the provided function once for each key-value pair\n    * present in this dictionary.\n    * @param {function(Object,Object):*} callback function to execute, it is\n    * invoked with two arguments: key and value. To break the iteration you can\n    * optionally return false.\n    */\n    Dictionary.prototype.forEach = function (callback) {\n        for (var name_3 in this.table) {\n            if (util.has(this.table, name_3)) {\n                var pair = this.table[name_3];\n                var ret = callback(pair.key, pair.value);\n                if (ret === false) {\n                    return;\n                }\n            }\n        }\n    };\n    /**\n     * Returns true if this dictionary contains a mapping for the specified key.\n     * @param {Object} key key whose presence in this dictionary is to be\n     * tested.\n     * @return {boolean} true if this dictionary contains a mapping for the\n     * specified key.\n     */\n    Dictionary.prototype.containsKey = function (key) {\n        return !util.isUndefined(this.getValue(key));\n    };\n    /**\n    * Removes all mappings from this dictionary.\n    * @this {collections.Dictionary}\n    */\n    Dictionary.prototype.clear = function () {\n        this.table = {};\n        this.nElements = 0;\n    };\n    /**\n     * Returns the number of keys in this dictionary.\n     * @return {number} the number of key-value mappings in this dictionary.\n     */\n    Dictionary.prototype.size = function () {\n        return this.nElements;\n    };\n    /**\n     * Returns true if this dictionary contains no mappings.\n     * @return {boolean} true if this dictionary contains no mappings.\n     */\n    Dictionary.prototype.isEmpty = function () {\n        return this.nElements <= 0;\n    };\n    Dictionary.prototype.toString = function () {\n        var toret = '{';\n        this.forEach(function (k, v) {\n            toret += \"\\n\\t\" + k + \" : \" + v;\n        });\n        return toret + '\\n}';\n    };\n    return Dictionary;\n}()); // End of dictionary\nexports.default = Dictionary;\n//# sourceMappingURL=Dictionary.js.map\n\n//# sourceURL=webpack://TooqingCore/./node_modules/typescript-collections/dist/lib/Dictionary.js?")},"./node_modules/typescript-collections/dist/lib/FactoryDictionary.js":function(module,exports,__webpack_require__){"use strict";eval('\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, "__esModule", { value: true });\nvar Dictionary_1 = __webpack_require__(/*! ./Dictionary */ "./node_modules/typescript-collections/dist/lib/Dictionary.js");\nvar util = __webpack_require__(/*! ./util */ "./node_modules/typescript-collections/dist/lib/util.js");\nvar FactoryDictionary = /** @class */ (function (_super) {\n    __extends(FactoryDictionary, _super);\n    /**\n     * Creates an empty dictionary.\n     * @class <p>Dictionaries map keys to values; each key can map to at most one value.\n     * This implementation accepts any kind of objects as keys.</p>\n     *\n     * <p>The default factory function should return a new object of the provided\n     * type. Example:</p>\n     * <pre>\n     * function petFactory() {\n     *  return new Pet();\n     * }\n     * </pre>\n     *\n     * <p>If the keys are custom objects a function which converts keys to unique\n     * strings must be provided. Example:</p>\n     * <pre>\n     * function petToString(pet) {\n     *  return pet.name;\n     * }\n     * </pre>\n     * @constructor\n     * @param {function():V=} defaultFactoryFunction function used to create a\n     * default object.\n     * @param {function(Object):string=} toStrFunction optional function used\n     * to convert keys to strings. If the keys aren\'t strings or if toString()\n     * is not appropriate, a custom function which receives a key and returns a\n     * unique string must be provided.\n     */\n    function FactoryDictionary(defaultFactoryFunction, toStrFunction) {\n        var _this = _super.call(this, toStrFunction) || this;\n        _this.defaultFactoryFunction = defaultFactoryFunction;\n        return _this;\n    }\n    /**\n     * Associates the specified default value with the specified key in this dictionary,\n     * if it didn\'t contain the key yet. If the key existed, the existing value will be used.\n     * @param {Object} key key with which the specified value is to be\n     * associated.\n     * @param {Object} defaultValue default value to be associated with the specified key.\n     * @return {*} previous value associated with the specified key, or the default value,\n     * if the key didn\'t exist yet.\n     */\n    FactoryDictionary.prototype.setDefault = function (key, defaultValue) {\n        var currentValue = _super.prototype.getValue.call(this, key);\n        if (util.isUndefined(currentValue)) {\n            this.setValue(key, defaultValue);\n            return defaultValue;\n        }\n        return currentValue;\n    };\n    /**\n     * Returns the value to which this dictionary maps the specified key.\n     * Returns a default value created by the factory passed in the constructor,\n     * if this dictionary contains no mapping for this key. The missing key will\n     * automatically be added to the dictionary.\n     * @param {Object} key key whose associated value is to be returned.\n     * @return {*} the value to which this dictionary maps the specified key or\n     * a default value if the map contains no mapping for this key.\n     */\n    FactoryDictionary.prototype.getValue = function (key) {\n        return this.setDefault(key, this.defaultFactoryFunction());\n    };\n    return FactoryDictionary;\n}(Dictionary_1.default));\nexports.default = FactoryDictionary;\n//# sourceMappingURL=FactoryDictionary.js.map\n\n//# sourceURL=webpack://TooqingCore/./node_modules/typescript-collections/dist/lib/FactoryDictionary.js?')},"./node_modules/typescript-collections/dist/lib/Heap.js":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nvar collections = __webpack_require__(/*! ./util */ "./node_modules/typescript-collections/dist/lib/util.js");\nvar arrays = __webpack_require__(/*! ./arrays */ "./node_modules/typescript-collections/dist/lib/arrays.js");\nvar Heap = /** @class */ (function () {\n    /**\n     * Creates an empty Heap.\n     * @class\n     * <p>A heap is a binary tree, where the nodes maintain the heap property:\n     * each node is smaller than each of its children and therefore a MinHeap\n     * This implementation uses an array to store elements.</p>\n     * <p>If the inserted elements are custom objects a compare function must be provided,\n     *  at construction time, otherwise the <=, === and >= operators are\n     * used to compare elements. Example:</p>\n     *\n     * <pre>\n     * function compare(a, b) {\n     *  if (a is less than b by some ordering criterion) {\n     *     return -1;\n     *  } if (a is greater than b by the ordering criterion) {\n     *     return 1;\n     *  }\n     *  // a must be equal to b\n     *  return 0;\n     * }\n     * </pre>\n     *\n     * <p>If a Max-Heap is wanted (greater elements on top) you can a provide a\n     * reverse compare function to accomplish that behavior. Example:</p>\n     *\n     * <pre>\n     * function reverseCompare(a, b) {\n     *  if (a is less than b by some ordering criterion) {\n     *     return 1;\n     *  } if (a is greater than b by the ordering criterion) {\n     *     return -1;\n     *  }\n     *  // a must be equal to b\n     *  return 0;\n     * }\n     * </pre>\n     *\n     * @constructor\n     * @param {function(Object,Object):number=} compareFunction optional\n     * function used to compare two elements. Must return a negative integer,\n     * zero, or a positive integer as the first argument is less than, equal to,\n     * or greater than the second.\n     */\n    function Heap(compareFunction) {\n        /**\n         * Array used to store the elements of the heap.\n         * @type {Array.<Object>}\n         * @private\n         */\n        this.data = [];\n        this.compare = compareFunction || collections.defaultCompare;\n    }\n    /**\n     * Returns the index of the left child of the node at the given index.\n     * @param {number} nodeIndex The index of the node to get the left child\n     * for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    Heap.prototype.leftChildIndex = function (nodeIndex) {\n        return (2 * nodeIndex) + 1;\n    };\n    /**\n     * Returns the index of the right child of the node at the given index.\n     * @param {number} nodeIndex The index of the node to get the right child\n     * for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    Heap.prototype.rightChildIndex = function (nodeIndex) {\n        return (2 * nodeIndex) + 2;\n    };\n    /**\n     * Returns the index of the parent of the node at the given index.\n     * @param {number} nodeIndex The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    Heap.prototype.parentIndex = function (nodeIndex) {\n        return Math.floor((nodeIndex - 1) / 2);\n    };\n    /**\n     * Returns the index of the smaller child node (if it exists).\n     * @param {number} leftChild left child index.\n     * @param {number} rightChild right child index.\n     * @return {number} the index with the minimum value or -1 if it doesn\'t\n     * exists.\n     * @private\n     */\n    Heap.prototype.minIndex = function (leftChild, rightChild) {\n        if (rightChild >= this.data.length) {\n            if (leftChild >= this.data.length) {\n                return -1;\n            }\n            else {\n                return leftChild;\n            }\n        }\n        else {\n            if (this.compare(this.data[leftChild], this.data[rightChild]) <= 0) {\n                return leftChild;\n            }\n            else {\n                return rightChild;\n            }\n        }\n    };\n    /**\n     * Moves the node at the given index up to its proper place in the heap.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    Heap.prototype.siftUp = function (index) {\n        var parent = this.parentIndex(index);\n        while (index > 0 && this.compare(this.data[parent], this.data[index]) > 0) {\n            arrays.swap(this.data, parent, index);\n            index = parent;\n            parent = this.parentIndex(index);\n        }\n    };\n    /**\n     * Moves the node at the given index down to its proper place in the heap.\n     * @param {number} nodeIndex The index of the node to move down.\n     * @private\n     */\n    Heap.prototype.siftDown = function (nodeIndex) {\n        //smaller child index\n        var min = this.minIndex(this.leftChildIndex(nodeIndex), this.rightChildIndex(nodeIndex));\n        while (min >= 0 && this.compare(this.data[nodeIndex], this.data[min]) > 0) {\n            arrays.swap(this.data, min, nodeIndex);\n            nodeIndex = min;\n            min = this.minIndex(this.leftChildIndex(nodeIndex), this.rightChildIndex(nodeIndex));\n        }\n    };\n    /**\n     * Retrieves but does not remove the root element of this heap.\n     * @return {*} The value at the root of the heap. Returns undefined if the\n     * heap is empty.\n     */\n    Heap.prototype.peek = function () {\n        if (this.data.length > 0) {\n            return this.data[0];\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * Adds the given element into the heap.\n     * @param {*} element the element.\n     * @return true if the element was added or fals if it is undefined.\n     */\n    Heap.prototype.add = function (element) {\n        if (collections.isUndefined(element)) {\n            return false;\n        }\n        this.data.push(element);\n        this.siftUp(this.data.length - 1);\n        return true;\n    };\n    /**\n     * Retrieves and removes the root element of this heap.\n     * @return {*} The value removed from the root of the heap. Returns\n     * undefined if the heap is empty.\n     */\n    Heap.prototype.removeRoot = function () {\n        if (this.data.length > 0) {\n            var obj = this.data[0];\n            this.data[0] = this.data[this.data.length - 1];\n            this.data.splice(this.data.length - 1, 1);\n            if (this.data.length > 0) {\n                this.siftDown(0);\n            }\n            return obj;\n        }\n        return undefined;\n    };\n    /**\n     * Returns true if this heap contains the specified element.\n     * @param {Object} element element to search for.\n     * @return {boolean} true if this Heap contains the specified element, false\n     * otherwise.\n     */\n    Heap.prototype.contains = function (element) {\n        var equF = collections.compareToEquals(this.compare);\n        return arrays.contains(this.data, element, equF);\n    };\n    /**\n     * Returns the number of elements in this heap.\n     * @return {number} the number of elements in this heap.\n     */\n    Heap.prototype.size = function () {\n        return this.data.length;\n    };\n    /**\n     * Checks if this heap is empty.\n     * @return {boolean} true if and only if this heap contains no items; false\n     * otherwise.\n     */\n    Heap.prototype.isEmpty = function () {\n        return this.data.length <= 0;\n    };\n    /**\n     * Removes all of the elements from this heap.\n     */\n    Heap.prototype.clear = function () {\n        this.data.length = 0;\n    };\n    /**\n     * Executes the provided function once for each element present in this heap in\n     * no particular order.\n     * @param {function(Object):*} callback function to execute, it is\n     * invoked with one argument: the element value, to break the iteration you can\n     * optionally return false.\n     */\n    Heap.prototype.forEach = function (callback) {\n        arrays.forEach(this.data, callback);\n    };\n    return Heap;\n}());\nexports.default = Heap;\n//# sourceMappingURL=Heap.js.map\n\n//# sourceURL=webpack://TooqingCore/./node_modules/typescript-collections/dist/lib/Heap.js?')},"./node_modules/typescript-collections/dist/lib/LinkedDictionary.js":function(module,exports,__webpack_require__){"use strict";eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Dictionary_1 = __webpack_require__(/*! ./Dictionary */ \"./node_modules/typescript-collections/dist/lib/Dictionary.js\");\nvar util = __webpack_require__(/*! ./util */ \"./node_modules/typescript-collections/dist/lib/util.js\");\n/**\n * This class is used by the LinkedDictionary Internally\n * Has to be a class, not an interface, because it needs to have\n * the 'unlink' function defined.\n */\nvar LinkedDictionaryPair = /** @class */ (function () {\n    function LinkedDictionaryPair(key, value) {\n        this.key = key;\n        this.value = value;\n    }\n    LinkedDictionaryPair.prototype.unlink = function () {\n        this.prev.next = this.next;\n        this.next.prev = this.prev;\n    };\n    return LinkedDictionaryPair;\n}());\n/**\n * The head and tail elements of the list have null key and value properties but they\n * usually link to normal nodes.\n */\nvar HeadOrTailLinkedDictionaryPair = /** @class */ (function () {\n    function HeadOrTailLinkedDictionaryPair() {\n        this.key = null;\n        this.value = null;\n    }\n    HeadOrTailLinkedDictionaryPair.prototype.unlink = function () {\n        this.prev.next = this.next;\n        this.next.prev = this.prev;\n    };\n    return HeadOrTailLinkedDictionaryPair;\n}());\nfunction isHeadOrTailLinkedDictionaryPair(p) {\n    return p.next === null;\n}\nvar LinkedDictionary = /** @class */ (function (_super) {\n    __extends(LinkedDictionary, _super);\n    function LinkedDictionary(toStrFunction) {\n        var _this = _super.call(this, toStrFunction) || this;\n        _this.head = new HeadOrTailLinkedDictionaryPair();\n        _this.tail = new HeadOrTailLinkedDictionaryPair();\n        _this.head.next = _this.tail;\n        _this.tail.prev = _this.head;\n        return _this;\n    }\n    /**\n     * Inserts the new node to the 'tail' of the list, updating the\n     * neighbors, and moving 'this.tail' (the End of List indicator) that\n     * to the end.\n     */\n    LinkedDictionary.prototype.appendToTail = function (entry) {\n        var lastNode = this.tail.prev;\n        lastNode.next = entry;\n        entry.prev = lastNode;\n        entry.next = this.tail;\n        this.tail.prev = entry;\n    };\n    /**\n     * Retrieves a linked dictionary from the table internally\n     */\n    LinkedDictionary.prototype.getLinkedDictionaryPair = function (key) {\n        if (util.isUndefined(key)) {\n            return undefined;\n        }\n        var k = '$' + this.toStr(key);\n        var pair = (this.table[k]);\n        return pair;\n    };\n    /**\n     * Returns the value to which this dictionary maps the specified key.\n     * Returns undefined if this dictionary contains no mapping for this key.\n     * @param {Object} key key whose associated value is to be returned.\n     * @return {*} the value to which this dictionary maps the specified key or\n     * undefined if the map contains no mapping for this key.\n     */\n    LinkedDictionary.prototype.getValue = function (key) {\n        var pair = this.getLinkedDictionaryPair(key);\n        if (!util.isUndefined(pair)) {\n            return pair.value;\n        }\n        return undefined;\n    };\n    /**\n     * Removes the mapping for this key from this dictionary if it is present.\n     * Also, if a value is present for this key, the entry is removed from the\n     * insertion ordering.\n     * @param {Object} key key whose mapping is to be removed from the\n     * dictionary.\n     * @return {*} previous value associated with specified key, or undefined if\n     * there was no mapping for key.\n     */\n    LinkedDictionary.prototype.remove = function (key) {\n        var pair = this.getLinkedDictionaryPair(key);\n        if (!util.isUndefined(pair)) {\n            _super.prototype.remove.call(this, key); // This will remove it from the table\n            pair.unlink(); // This will unlink it from the chain\n            return pair.value;\n        }\n        return undefined;\n    };\n    /**\n    * Removes all mappings from this LinkedDictionary.\n    * @this {collections.LinkedDictionary}\n    */\n    LinkedDictionary.prototype.clear = function () {\n        _super.prototype.clear.call(this);\n        this.head.next = this.tail;\n        this.tail.prev = this.head;\n    };\n    /**\n     * Internal function used when updating an existing KeyValue pair.\n     * It places the new value indexed by key into the table, but maintains\n     * its place in the linked ordering.\n     */\n    LinkedDictionary.prototype.replace = function (oldPair, newPair) {\n        var k = '$' + this.toStr(newPair.key);\n        // set the new Pair's links to existingPair's links\n        newPair.next = oldPair.next;\n        newPair.prev = oldPair.prev;\n        // Delete Existing Pair from the table, unlink it from chain.\n        // As a result, the nElements gets decremented by this operation\n        this.remove(oldPair.key);\n        // Link new Pair in place of where oldPair was,\n        // by pointing the old pair's neighbors to it.\n        newPair.prev.next = newPair;\n        newPair.next.prev = newPair;\n        this.table[k] = newPair;\n        // To make up for the fact that the number of elements was decremented,\n        // We need to increase it by one.\n        ++this.nElements;\n    };\n    /**\n     * Associates the specified value with the specified key in this dictionary.\n     * If the dictionary previously contained a mapping for this key, the old\n     * value is replaced by the specified value.\n     * Updating of a key that already exists maintains its place in the\n     * insertion order into the map.\n     * @param {Object} key key with which the specified value is to be\n     * associated.\n     * @param {Object} value value to be associated with the specified key.\n     * @return {*} previous value associated with the specified key, or undefined if\n     * there was no mapping for the key or if the key/value are undefined.\n     */\n    LinkedDictionary.prototype.setValue = function (key, value) {\n        if (util.isUndefined(key) || util.isUndefined(value)) {\n            return undefined;\n        }\n        var existingPair = this.getLinkedDictionaryPair(key);\n        var newPair = new LinkedDictionaryPair(key, value);\n        var k = '$' + this.toStr(key);\n        // If there is already an element for that key, we\n        // keep it's place in the LinkedList\n        if (!util.isUndefined(existingPair)) {\n            this.replace(existingPair, newPair);\n            return existingPair.value;\n        }\n        else {\n            this.appendToTail(newPair);\n            this.table[k] = newPair;\n            ++this.nElements;\n            return undefined;\n        }\n    };\n    /**\n     * Returns an array containing all of the keys in this LinkedDictionary, ordered\n     * by insertion order.\n     * @return {Array} an array containing all of the keys in this LinkedDictionary,\n     * ordered by insertion order.\n     */\n    LinkedDictionary.prototype.keys = function () {\n        var array = [];\n        this.forEach(function (key, value) {\n            array.push(key);\n        });\n        return array;\n    };\n    /**\n     * Returns an array containing all of the values in this LinkedDictionary, ordered by\n     * insertion order.\n     * @return {Array} an array containing all of the values in this LinkedDictionary,\n     * ordered by insertion order.\n     */\n    LinkedDictionary.prototype.values = function () {\n        var array = [];\n        this.forEach(function (key, value) {\n            array.push(value);\n        });\n        return array;\n    };\n    /**\n    * Executes the provided function once for each key-value pair\n    * present in this LinkedDictionary. It is done in the order of insertion\n    * into the LinkedDictionary\n    * @param {function(Object,Object):*} callback function to execute, it is\n    * invoked with two arguments: key and value. To break the iteration you can\n    * optionally return false.\n    */\n    LinkedDictionary.prototype.forEach = function (callback) {\n        var crawlNode = this.head.next;\n        while (!isHeadOrTailLinkedDictionaryPair(crawlNode)) {\n            var ret = callback(crawlNode.key, crawlNode.value);\n            if (ret === false) {\n                return;\n            }\n            crawlNode = crawlNode.next;\n        }\n    };\n    return LinkedDictionary;\n}(Dictionary_1.default)); // End of LinkedDictionary\nexports.default = LinkedDictionary;\n// /**\n//  * Returns true if this dictionary is equal to the given dictionary.\n//  * Two dictionaries are equal if they contain the same mappings.\n//  * @param {collections.Dictionary} other the other dictionary.\n//  * @param {function(Object,Object):boolean=} valuesEqualFunction optional\n//  * function used to check if two values are equal.\n//  * @return {boolean} true if this dictionary is equal to the given dictionary.\n//  */\n// collections.Dictionary.prototype.equals = function(other,valuesEqualFunction) {\n// \tconst eqF = valuesEqualFunction || collections.defaultEquals;\n// \tif(!(other instanceof collections.Dictionary)){\n// \t\treturn false;\n// \t}\n// \tif(this.size() !== other.size()){\n// \t\treturn false;\n// \t}\n// \treturn this.equalsAux(this.firstNode,other.firstNode,eqF);\n// }\n//# sourceMappingURL=LinkedDictionary.js.map\n\n//# sourceURL=webpack://TooqingCore/./node_modules/typescript-collections/dist/lib/LinkedDictionary.js?")},"./node_modules/typescript-collections/dist/lib/LinkedList.js":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nvar util = __webpack_require__(/*! ./util */ "./node_modules/typescript-collections/dist/lib/util.js");\nvar arrays = __webpack_require__(/*! ./arrays */ "./node_modules/typescript-collections/dist/lib/arrays.js");\nvar LinkedList = /** @class */ (function () {\n    /**\n    * Creates an empty Linked List.\n    * @class A linked list is a data structure consisting of a group of nodes\n    * which together represent a sequence.\n    * @constructor\n    */\n    function LinkedList() {\n        /**\n        * First node in the list\n        * @type {Object}\n        * @private\n        */\n        this.firstNode = null;\n        /**\n        * Last node in the list\n        * @type {Object}\n        * @private\n        */\n        this.lastNode = null;\n        /**\n        * Number of elements in the list\n        * @type {number}\n        * @private\n        */\n        this.nElements = 0;\n    }\n    /**\n    * Adds an element to this list.\n    * @param {Object} item element to be added.\n    * @param {number=} index optional index to add the element. If no index is specified\n    * the element is added to the end of this list.\n    * @return {boolean} true if the element was added or false if the index is invalid\n    * or if the element is undefined.\n    */\n    LinkedList.prototype.add = function (item, index) {\n        if (util.isUndefined(index)) {\n            index = this.nElements;\n        }\n        if (index < 0 || index > this.nElements || util.isUndefined(item)) {\n            return false;\n        }\n        var newNode = this.createNode(item);\n        if (this.nElements === 0 || this.lastNode === null) {\n            // First node in the list.\n            this.firstNode = newNode;\n            this.lastNode = newNode;\n        }\n        else if (index === this.nElements) {\n            // Insert at the end.\n            this.lastNode.next = newNode;\n            this.lastNode = newNode;\n        }\n        else if (index === 0) {\n            // Change first node.\n            newNode.next = this.firstNode;\n            this.firstNode = newNode;\n        }\n        else {\n            var prev = this.nodeAtIndex(index - 1);\n            if (prev == null) {\n                return false;\n            }\n            newNode.next = prev.next;\n            prev.next = newNode;\n        }\n        this.nElements++;\n        return true;\n    };\n    /**\n    * Returns the first element in this list.\n    * @return {*} the first element of the list or undefined if the list is\n    * empty.\n    */\n    LinkedList.prototype.first = function () {\n        if (this.firstNode !== null) {\n            return this.firstNode.element;\n        }\n        return undefined;\n    };\n    /**\n    * Returns the last element in this list.\n    * @return {*} the last element in the list or undefined if the list is\n    * empty.\n    */\n    LinkedList.prototype.last = function () {\n        if (this.lastNode !== null) {\n            return this.lastNode.element;\n        }\n        return undefined;\n    };\n    /**\n     * Returns the element at the specified position in this list.\n     * @param {number} index desired index.\n     * @return {*} the element at the given index or undefined if the index is\n     * out of bounds.\n     */\n    LinkedList.prototype.elementAtIndex = function (index) {\n        var node = this.nodeAtIndex(index);\n        if (node === null) {\n            return undefined;\n        }\n        return node.element;\n    };\n    /**\n     * Returns the index in this list of the first occurrence of the\n     * specified element, or -1 if the List does not contain this element.\n     * <p>If the elements inside this list are\n     * not comparable with the === operator a custom equals function should be\n     * provided to perform searches, the function must receive two arguments and\n     * return true if they are equal, false otherwise. Example:</p>\n     *\n     * <pre>\n     * const petsAreEqualByName = function(pet1, pet2) {\n     *  return pet1.name === pet2.name;\n     * }\n     * </pre>\n     * @param {Object} item element to search for.\n     * @param {function(Object,Object):boolean=} equalsFunction Optional\n     * function used to check if two elements are equal.\n     * @return {number} the index in this list of the first occurrence\n     * of the specified element, or -1 if this list does not contain the\n     * element.\n     */\n    LinkedList.prototype.indexOf = function (item, equalsFunction) {\n        var equalsF = equalsFunction || util.defaultEquals;\n        if (util.isUndefined(item)) {\n            return -1;\n        }\n        var currentNode = this.firstNode;\n        var index = 0;\n        while (currentNode !== null) {\n            if (equalsF(currentNode.element, item)) {\n                return index;\n            }\n            index++;\n            currentNode = currentNode.next;\n        }\n        return -1;\n    };\n    /**\n       * Returns true if this list contains the specified element.\n       * <p>If the elements inside the list are\n       * not comparable with the === operator a custom equals function should be\n       * provided to perform searches, the function must receive two arguments and\n       * return true if they are equal, false otherwise. Example:</p>\n       *\n       * <pre>\n       * const petsAreEqualByName = function(pet1, pet2) {\n       *  return pet1.name === pet2.name;\n       * }\n       * </pre>\n       * @param {Object} item element to search for.\n       * @param {function(Object,Object):boolean=} equalsFunction Optional\n       * function used to check if two elements are equal.\n       * @return {boolean} true if this list contains the specified element, false\n       * otherwise.\n       */\n    LinkedList.prototype.contains = function (item, equalsFunction) {\n        return (this.indexOf(item, equalsFunction) >= 0);\n    };\n    /**\n     * Removes the first occurrence of the specified element in this list.\n     * <p>If the elements inside the list are\n     * not comparable with the === operator a custom equals function should be\n     * provided to perform searches, the function must receive two arguments and\n     * return true if they are equal, false otherwise. Example:</p>\n     *\n     * <pre>\n     * const petsAreEqualByName = function(pet1, pet2) {\n     *  return pet1.name === pet2.name;\n     * }\n     * </pre>\n     * @param {Object} item element to be removed from this list, if present.\n     * @return {boolean} true if the list contained the specified element.\n     */\n    LinkedList.prototype.remove = function (item, equalsFunction) {\n        var equalsF = equalsFunction || util.defaultEquals;\n        if (this.nElements < 1 || util.isUndefined(item)) {\n            return false;\n        }\n        var previous = null;\n        var currentNode = this.firstNode;\n        while (currentNode !== null) {\n            if (equalsF(currentNode.element, item)) {\n                if (previous == null) {\n                    this.firstNode = currentNode.next;\n                    if (currentNode === this.lastNode) {\n                        this.lastNode = null;\n                    }\n                }\n                else if (currentNode === this.lastNode) {\n                    this.lastNode = previous;\n                    previous.next = currentNode.next;\n                    currentNode.next = null;\n                }\n                else {\n                    previous.next = currentNode.next;\n                    currentNode.next = null;\n                }\n                this.nElements--;\n                return true;\n            }\n            previous = currentNode;\n            currentNode = currentNode.next;\n        }\n        return false;\n    };\n    /**\n     * Removes all of the elements from this list.\n     */\n    LinkedList.prototype.clear = function () {\n        this.firstNode = null;\n        this.lastNode = null;\n        this.nElements = 0;\n    };\n    /**\n     * Returns true if this list is equal to the given list.\n     * Two lists are equal if they have the same elements in the same order.\n     * @param {LinkedList} other the other list.\n     * @param {function(Object,Object):boolean=} equalsFunction optional\n     * function used to check if two elements are equal. If the elements in the lists\n     * are custom objects you should provide a function, otherwise\n     * the === operator is used to check equality between elements.\n     * @return {boolean} true if this list is equal to the given list.\n     */\n    LinkedList.prototype.equals = function (other, equalsFunction) {\n        var eqF = equalsFunction || util.defaultEquals;\n        if (!(other instanceof LinkedList)) {\n            return false;\n        }\n        if (this.size() !== other.size()) {\n            return false;\n        }\n        return this.equalsAux(this.firstNode, other.firstNode, eqF);\n    };\n    /**\n    * @private\n    */\n    LinkedList.prototype.equalsAux = function (n1, n2, eqF) {\n        while (n1 !== null && n2 !== null) {\n            if (!eqF(n1.element, n2.element)) {\n                return false;\n            }\n            n1 = n1.next;\n            n2 = n2.next;\n        }\n        return true;\n    };\n    /**\n     * Removes the element at the specified position in this list.\n     * @param {number} index given index.\n     * @return {*} removed element or undefined if the index is out of bounds.\n     */\n    LinkedList.prototype.removeElementAtIndex = function (index) {\n        if (index < 0 || index >= this.nElements || this.firstNode === null || this.lastNode === null) {\n            return undefined;\n        }\n        var element;\n        if (this.nElements === 1) {\n            //First node in the list.\n            element = this.firstNode.element;\n            this.firstNode = null;\n            this.lastNode = null;\n        }\n        else {\n            var previous = this.nodeAtIndex(index - 1);\n            if (previous === null) {\n                element = this.firstNode.element;\n                this.firstNode = this.firstNode.next;\n            }\n            else if (previous.next === this.lastNode) {\n                element = this.lastNode.element;\n                this.lastNode = previous;\n            }\n            if (previous !== null && previous.next !== null) {\n                element = previous.next.element;\n                previous.next = previous.next.next;\n            }\n        }\n        this.nElements--;\n        return element;\n    };\n    /**\n     * Executes the provided function once for each element present in this list in order.\n     * @param {function(Object):*} callback function to execute, it is\n     * invoked with one argument: the element value, to break the iteration you can\n     * optionally return false.\n     */\n    LinkedList.prototype.forEach = function (callback) {\n        var currentNode = this.firstNode;\n        while (currentNode !== null) {\n            if (callback(currentNode.element) === false) {\n                break;\n            }\n            currentNode = currentNode.next;\n        }\n    };\n    /**\n     * Reverses the order of the elements in this linked list (makes the last\n     * element first, and the first element last).\n     */\n    LinkedList.prototype.reverse = function () {\n        var previous = null;\n        var current = this.firstNode;\n        var temp = null;\n        while (current !== null) {\n            temp = current.next;\n            current.next = previous;\n            previous = current;\n            current = temp;\n        }\n        temp = this.firstNode;\n        this.firstNode = this.lastNode;\n        this.lastNode = temp;\n    };\n    /**\n     * Returns an array containing all of the elements in this list in proper\n     * sequence.\n     * @return {Array.<*>} an array containing all of the elements in this list,\n     * in proper sequence.\n     */\n    LinkedList.prototype.toArray = function () {\n        var array = [];\n        var currentNode = this.firstNode;\n        while (currentNode !== null) {\n            array.push(currentNode.element);\n            currentNode = currentNode.next;\n        }\n        return array;\n    };\n    /**\n     * Returns the number of elements in this list.\n     * @return {number} the number of elements in this list.\n     */\n    LinkedList.prototype.size = function () {\n        return this.nElements;\n    };\n    /**\n     * Returns true if this list contains no elements.\n     * @return {boolean} true if this list contains no elements.\n     */\n    LinkedList.prototype.isEmpty = function () {\n        return this.nElements <= 0;\n    };\n    LinkedList.prototype.toString = function () {\n        return arrays.toString(this.toArray());\n    };\n    /**\n     * @private\n     */\n    LinkedList.prototype.nodeAtIndex = function (index) {\n        if (index < 0 || index >= this.nElements) {\n            return null;\n        }\n        if (index === (this.nElements - 1)) {\n            return this.lastNode;\n        }\n        var node = this.firstNode;\n        for (var i = 0; i < index && node != null; i++) {\n            node = node.next;\n        }\n        return node;\n    };\n    /**\n     * @private\n     */\n    LinkedList.prototype.createNode = function (item) {\n        return {\n            element: item,\n            next: null\n        };\n    };\n    return LinkedList;\n}()); // End of linked list\nexports.default = LinkedList;\n//# sourceMappingURL=LinkedList.js.map\n\n//# sourceURL=webpack://TooqingCore/./node_modules/typescript-collections/dist/lib/LinkedList.js?')},"./node_modules/typescript-collections/dist/lib/MultiDictionary.js":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nvar util = __webpack_require__(/*! ./util */ "./node_modules/typescript-collections/dist/lib/util.js");\nvar Dictionary_1 = __webpack_require__(/*! ./Dictionary */ "./node_modules/typescript-collections/dist/lib/Dictionary.js");\nvar arrays = __webpack_require__(/*! ./arrays */ "./node_modules/typescript-collections/dist/lib/arrays.js");\nvar MultiDictionary = /** @class */ (function () {\n    /**\n     * Creates an empty multi dictionary.\n     * @class <p>A multi dictionary is a special kind of dictionary that holds\n     * multiple values against each key. Setting a value into the dictionary will\n     * add the value to an array at that key. Getting a key will return an array,\n     * holding all the values set to that key.\n     * You can configure to allow duplicates in the values.\n     * This implementation accepts any kind of objects as keys.</p>\n     *\n     * <p>If the keys are custom objects a function which converts keys to strings must be\n     * provided. Example:</p>\n     *\n     * <pre>\n     * function petToString(pet) {\n       *  return pet.name;\n       * }\n     * </pre>\n     * <p>If the values are custom objects a function to check equality between values\n     * must be provided. Example:</p>\n     *\n     * <pre>\n     * function petsAreEqualByAge(pet1,pet2) {\n       *  return pet1.age===pet2.age;\n       * }\n     * </pre>\n     * @constructor\n     * @param {function(Object):string=} toStrFunction optional function\n     * to convert keys to strings. If the keys aren\'t strings or if toString()\n     * is not appropriate, a custom function which receives a key and returns a\n     * unique string must be provided.\n     * @param {function(Object,Object):boolean=} valuesEqualsFunction optional\n     * function to check if two values are equal.\n     *\n     * @param allowDuplicateValues\n     */\n    function MultiDictionary(toStrFunction, valuesEqualsFunction, allowDuplicateValues) {\n        if (allowDuplicateValues === void 0) { allowDuplicateValues = false; }\n        this.dict = new Dictionary_1.default(toStrFunction);\n        this.equalsF = valuesEqualsFunction || util.defaultEquals;\n        this.allowDuplicate = allowDuplicateValues;\n    }\n    /**\n    * Returns an array holding the values to which this dictionary maps\n    * the specified key.\n    * Returns an empty array if this dictionary contains no mappings for this key.\n    * @param {Object} key key whose associated values are to be returned.\n    * @return {Array} an array holding the values to which this dictionary maps\n    * the specified key.\n    */\n    MultiDictionary.prototype.getValue = function (key) {\n        var values = this.dict.getValue(key);\n        if (util.isUndefined(values)) {\n            return [];\n        }\n        return arrays.copy(values);\n    };\n    /**\n     * Adds the value to the array associated with the specified key, if\n     * it is not already present.\n     * @param {Object} key key with which the specified value is to be\n     * associated.\n     * @param {Object} value the value to add to the array at the key\n     * @return {boolean} true if the value was not already associated with that key.\n     */\n    MultiDictionary.prototype.setValue = function (key, value) {\n        if (util.isUndefined(key) || util.isUndefined(value)) {\n            return false;\n        }\n        var array = this.dict.getValue(key);\n        if (util.isUndefined(array)) {\n            this.dict.setValue(key, [value]);\n            return true;\n        }\n        if (!this.allowDuplicate) {\n            if (arrays.contains(array, value, this.equalsF)) {\n                return false;\n            }\n        }\n        array.push(value);\n        return true;\n    };\n    /**\n     * Removes the specified values from the array of values associated with the\n     * specified key. If a value isn\'t given, all values associated with the specified\n     * key are removed.\n     * @param {Object} key key whose mapping is to be removed from the\n     * dictionary.\n     * @param {Object=} value optional argument to specify the value to remove\n     * from the array associated with the specified key.\n     * @return {*} true if the dictionary changed, false if the key doesn\'t exist or\n     * if the specified value isn\'t associated with the specified key.\n     */\n    MultiDictionary.prototype.remove = function (key, value) {\n        if (util.isUndefined(value)) {\n            var v = this.dict.remove(key);\n            return !util.isUndefined(v);\n        }\n        var array = this.dict.getValue(key);\n        if (!util.isUndefined(array) && arrays.remove(array, value, this.equalsF)) {\n            if (array.length === 0) {\n                this.dict.remove(key);\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Returns an array containing all of the keys in this dictionary.\n     * @return {Array} an array containing all of the keys in this dictionary.\n     */\n    MultiDictionary.prototype.keys = function () {\n        return this.dict.keys();\n    };\n    /**\n     * Returns an array containing all of the values in this dictionary.\n     * @return {Array} an array containing all of the values in this dictionary.\n     */\n    MultiDictionary.prototype.values = function () {\n        var values = this.dict.values();\n        var array = [];\n        for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n            var v = values_1[_i];\n            for (var _a = 0, v_1 = v; _a < v_1.length; _a++) {\n                var w = v_1[_a];\n                array.push(w);\n            }\n        }\n        return array;\n    };\n    /**\n     * Returns true if this dictionary at least one value associatted the specified key.\n     * @param {Object} key key whose presence in this dictionary is to be\n     * tested.\n     * @return {boolean} true if this dictionary at least one value associatted\n     * the specified key.\n     */\n    MultiDictionary.prototype.containsKey = function (key) {\n        return this.dict.containsKey(key);\n    };\n    /**\n     * Removes all mappings from this dictionary.\n     */\n    MultiDictionary.prototype.clear = function () {\n        this.dict.clear();\n    };\n    /**\n     * Returns the number of keys in this dictionary.\n     * @return {number} the number of key-value mappings in this dictionary.\n     */\n    MultiDictionary.prototype.size = function () {\n        return this.dict.size();\n    };\n    /**\n     * Returns true if this dictionary contains no mappings.\n     * @return {boolean} true if this dictionary contains no mappings.\n     */\n    MultiDictionary.prototype.isEmpty = function () {\n        return this.dict.isEmpty();\n    };\n    return MultiDictionary;\n}()); // end of multi dictionary\nexports.default = MultiDictionary;\n//# sourceMappingURL=MultiDictionary.js.map\n\n//# sourceURL=webpack://TooqingCore/./node_modules/typescript-collections/dist/lib/MultiDictionary.js?')},"./node_modules/typescript-collections/dist/lib/MultiRootTree.js":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nvar Direction;\n(function (Direction) {\n    Direction[Direction["BEFORE"] = 0] = "BEFORE";\n    Direction[Direction["AFTER"] = 1] = "AFTER";\n    Direction[Direction["INSIDE_AT_END"] = 2] = "INSIDE_AT_END";\n    Direction[Direction["INSIDE_AT_START"] = 3] = "INSIDE_AT_START";\n})(Direction || (Direction = {}));\nvar MultiRootTree = /** @class */ (function () {\n    function MultiRootTree(rootIds, nodes) {\n        if (rootIds === void 0) { rootIds = []; }\n        if (nodes === void 0) { nodes = {}; }\n        this.rootIds = rootIds;\n        this.nodes = nodes;\n        this.initRootIds();\n        this.initNodes();\n    }\n    MultiRootTree.prototype.initRootIds = function () {\n        for (var _i = 0, _a = this.rootIds; _i < _a.length; _i++) {\n            var rootId = _a[_i];\n            this.createEmptyNodeIfNotExist(rootId);\n        }\n    };\n    MultiRootTree.prototype.initNodes = function () {\n        for (var nodeKey in this.nodes) {\n            if (this.nodes.hasOwnProperty(nodeKey)) {\n                for (var _i = 0, _a = this.nodes[nodeKey]; _i < _a.length; _i++) {\n                    var nodeListItem = _a[_i];\n                    this.createEmptyNodeIfNotExist(nodeListItem);\n                }\n            }\n        }\n    };\n    MultiRootTree.prototype.createEmptyNodeIfNotExist = function (nodeKey) {\n        if (!this.nodes[nodeKey]) {\n            this.nodes[nodeKey] = [];\n        }\n    };\n    MultiRootTree.prototype.getRootIds = function () {\n        var clone = this.rootIds.slice();\n        return clone;\n    };\n    MultiRootTree.prototype.getNodes = function () {\n        var clone = {};\n        for (var nodeKey in this.nodes) {\n            if (this.nodes.hasOwnProperty(nodeKey)) {\n                clone[nodeKey] = this.nodes[nodeKey].slice();\n            }\n        }\n        return clone;\n    };\n    MultiRootTree.prototype.getObject = function () {\n        return {\n            rootIds: this.getRootIds(),\n            nodes: this.getNodes(),\n        };\n    };\n    MultiRootTree.prototype.toObject = function () {\n        return this.getObject();\n    };\n    MultiRootTree.prototype.flatten = function () {\n        var _this = this;\n        var extraPropsObject = [];\n        for (var i = 0; i < this.rootIds.length; i++) {\n            var rootId = this.rootIds[i];\n            extraPropsObject.push({\n                id: rootId,\n                level: 0,\n                hasParent: false,\n                childrenCount: 0,\n            });\n            traverse(rootId, this.nodes, extraPropsObject, 0);\n        }\n        for (var _i = 0, extraPropsObject_1 = extraPropsObject; _i < extraPropsObject_1.length; _i++) {\n            var o = extraPropsObject_1[_i];\n            o.childrenCount = countChildren(o.id);\n        }\n        return extraPropsObject;\n        function countChildren(id) {\n            if (!_this.nodes[id]) {\n                return 0;\n            }\n            else {\n                var childrenCount = _this.nodes[id].length;\n                return childrenCount;\n            }\n        }\n        function traverse(startId, nodes, returnArray, level) {\n            if (level === void 0) { level = 0; }\n            if (!startId || !nodes || !returnArray || !nodes[startId]) {\n                return;\n            }\n            level++;\n            var idsList = nodes[startId];\n            for (var i = 0; i < idsList.length; i++) {\n                var id = idsList[i];\n                returnArray.push({ id: id, level: level, hasParent: true });\n                traverse(id, nodes, returnArray, level);\n            }\n            level--;\n        }\n    };\n    MultiRootTree.prototype.moveIdBeforeId = function (moveId, beforeId) {\n        return this.moveId(moveId, beforeId, Direction.BEFORE);\n    };\n    MultiRootTree.prototype.moveIdAfterId = function (moveId, afterId) {\n        return this.moveId(moveId, afterId, Direction.AFTER);\n    };\n    MultiRootTree.prototype.moveIdIntoId = function (moveId, insideId, atStart) {\n        if (atStart === void 0) { atStart = true; }\n        if (atStart) {\n            return this.moveId(moveId, insideId, Direction.INSIDE_AT_START);\n        }\n        else {\n            return this.moveId(moveId, insideId, Direction.INSIDE_AT_END);\n        }\n    };\n    MultiRootTree.prototype.swapRootIdWithRootId = function (rootId, withRootId) {\n        var leftIndex = this.findRootId(rootId);\n        var rightIndex = this.findRootId(withRootId);\n        this.swapRootPositionWithRootPosition(leftIndex, rightIndex);\n    };\n    MultiRootTree.prototype.swapRootPositionWithRootPosition = function (swapRootPosition, withRootPosition) {\n        var temp = this.rootIds[withRootPosition];\n        this.rootIds[withRootPosition] = this.rootIds[swapRootPosition];\n        this.rootIds[swapRootPosition] = temp;\n    };\n    MultiRootTree.prototype.deleteId = function (id) {\n        this.rootDeleteId(id);\n        this.nodeAndSubNodesDelete(id);\n        this.nodeRefrencesDelete(id);\n    };\n    MultiRootTree.prototype.insertIdBeforeId = function (beforeId, insertId) {\n        var foundRootIdIndex = this.findRootId(beforeId);\n        if (foundRootIdIndex > -1) {\n            this.insertIdIntoRoot(insertId, foundRootIdIndex);\n        }\n        for (var nodeKey in this.nodes) {\n            if (this.nodes.hasOwnProperty(nodeKey)) {\n                var foundNodeIdIndex = this.findNodeId(nodeKey, beforeId);\n                if (foundNodeIdIndex > -1) {\n                    this.insertIdIntoNode(nodeKey, insertId, foundNodeIdIndex);\n                }\n            }\n        }\n    };\n    MultiRootTree.prototype.insertIdAfterId = function (belowId, insertId) {\n        var foundRootIdIndex = this.findRootId(belowId);\n        if (foundRootIdIndex > -1) {\n            this.insertIdIntoRoot(insertId, foundRootIdIndex + 1);\n        }\n        for (var nodeKey in this.nodes) {\n            if (this.nodes.hasOwnProperty(nodeKey)) {\n                var foundNodeIdIndex = this.findNodeId(nodeKey, belowId);\n                if (foundNodeIdIndex > -1) {\n                    this.insertIdIntoNode(nodeKey, insertId, foundNodeIdIndex + 1);\n                }\n            }\n        }\n    };\n    MultiRootTree.prototype.insertIdIntoId = function (insideId, insertId) {\n        this.nodeInsertAtEnd(insideId, insertId);\n        this.nodes[insertId] = [];\n    };\n    MultiRootTree.prototype.insertIdIntoRoot = function (id, position) {\n        if (position === undefined) {\n            this.rootInsertAtEnd(id);\n        }\n        else {\n            if (position < 0) {\n                var length_1 = this.rootIds.length;\n                this.rootIds.splice((position + length_1 + 1), 0, id);\n            }\n            else {\n                this.rootIds.splice(position, 0, id);\n            }\n        }\n        this.nodes[id] = this.nodes[id] || [];\n    };\n    MultiRootTree.prototype.insertIdIntoNode = function (nodeKey, id, position) {\n        this.nodes[nodeKey] = this.nodes[nodeKey] || [];\n        this.nodes[id] = this.nodes[id] || [];\n        if (position === undefined) {\n            this.nodeInsertAtEnd(nodeKey, id);\n        }\n        else {\n            if (position < 0) {\n                var length_2 = this.nodes[nodeKey].length;\n                this.nodes[nodeKey].splice((position + length_2 + 1), 0, id);\n            }\n            else {\n                this.nodes[nodeKey].splice(position, 0, id);\n            }\n        }\n    };\n    MultiRootTree.prototype.moveId = function (moveId, beforeId, direction) {\n        var sourceId = moveId;\n        var sourceRootIndex = this.findRootId(sourceId);\n        var sourceNodeKey;\n        var sourceNodeIdIndex;\n        if (this.nodes[beforeId]) {\n            sourceNodeKey = beforeId;\n        }\n        for (var nodeKey in this.nodes) {\n            if (this.nodes.hasOwnProperty(nodeKey)) {\n                sourceNodeIdIndex = this.findNodeId(nodeKey, beforeId);\n                break;\n            }\n        }\n        // got all\n        var targetId = beforeId;\n        var targetRootIndex = this.findRootId(targetId);\n        var targetNodeKey;\n        var targetNodeIdIndex;\n        if (this.nodes[beforeId]) {\n            targetNodeKey = beforeId;\n        }\n        for (var nodeKey in this.nodes) {\n            if (this.nodes.hasOwnProperty(nodeKey)) {\n                targetNodeIdIndex = this.findNodeId(nodeKey, beforeId);\n                break;\n            }\n        }\n        // got all\n        if (sourceRootIndex > -1) {\n            if (targetRootIndex > -1) {\n                // moving root to root\n                // console.log(`Moving ROOT to ROOT`);\n                // console.log(`RootIds:`);\n                // console.log(this.rootIds);\n                // console.log(`TargetIndex=${targetRootIndex}, SourceIndex=${sourceRootIndex}`);\n                // console.log(`TargetId=${targetId}, SourceId=${sourceId}`);\n                this.rootDelete(sourceRootIndex); // indexes change now\n                if (targetRootIndex > sourceRootIndex) {\n                    targetRootIndex--;\n                }\n                else {\n                }\n                switch (direction) {\n                    case Direction.BEFORE:\n                        this.insertIdIntoRoot(sourceId, targetRootIndex);\n                        break;\n                    case Direction.AFTER:\n                        this.insertIdIntoRoot(sourceId, targetRootIndex + 1);\n                        break;\n                    case Direction.INSIDE_AT_START:\n                        this.nodeInsertAtStart(targetId, sourceId);\n                        break;\n                    case Direction.INSIDE_AT_END:\n                        this.nodeInsertAtEnd(targetId, sourceId);\n                        break;\n                }\n            }\n            else {\n                // moving root (source) ABOVE node (target)\n                // will remove one entry from roots\n                this.rootDelete(sourceRootIndex);\n                for (var nodeKey in this.nodes) {\n                    if (this.nodes.hasOwnProperty(nodeKey)) {\n                        var index = this.findNodeId(nodeKey, targetId);\n                        if (index > -1) {\n                            switch (direction) {\n                                case Direction.BEFORE:\n                                    this.insertIdIntoNode(nodeKey, sourceId, index);\n                                    break;\n                                case Direction.AFTER:\n                                    this.insertIdIntoNode(nodeKey, sourceId, index + 1);\n                                    break;\n                                case Direction.INSIDE_AT_START:\n                                    this.nodeInsertAtStart(targetId, sourceId);\n                                    break;\n                                case Direction.INSIDE_AT_END:\n                                    this.nodeInsertAtEnd(targetId, sourceId);\n                                    break;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (targetRootIndex > -1) {\n                // moving node (source) ABOVE root (target)\n                // delete source id from each node\n                for (var nodeKey in this.nodes) {\n                    if (this.nodes.hasOwnProperty(nodeKey)) {\n                        var index = this.findNodeId(nodeKey, sourceId);\n                        if (index > -1) {\n                            // this.nodeInsertId(nodeKey, sourceId, index);\n                            this.nodeDeleteAtIndex(nodeKey, index);\n                            break;\n                        }\n                    }\n                }\n                switch (direction) {\n                    case Direction.BEFORE:\n                        this.insertIdIntoRoot(sourceId, targetRootIndex);\n                        break;\n                    case Direction.AFTER:\n                        this.insertIdIntoRoot(sourceId, targetRootIndex + 1);\n                        break;\n                    case Direction.INSIDE_AT_START:\n                        this.nodeInsertAtStart(targetId, sourceId);\n                        break;\n                    case Direction.INSIDE_AT_END:\n                        this.nodeInsertAtEnd(targetId, sourceId);\n                        break;\n                }\n            }\n            else {\n                // moving node (source) ABOVE node (target)\n                // delete source id from each node\n                for (var nodeKey in this.nodes) {\n                    if (this.nodes.hasOwnProperty(nodeKey)) {\n                        var index = this.findNodeId(nodeKey, sourceId);\n                        if (index > -1) {\n                            this.nodeDeleteAtIndex(nodeKey, index);\n                            break;\n                        }\n                    }\n                }\n                for (var nodeKey in this.nodes) {\n                    if (this.nodes.hasOwnProperty(nodeKey)) {\n                        var index = this.findNodeId(nodeKey, targetId);\n                        if (index > -1) {\n                            switch (direction) {\n                                case Direction.BEFORE:\n                                    this.insertIdIntoNode(nodeKey, sourceId, index);\n                                    break;\n                                case Direction.AFTER:\n                                    this.insertIdIntoNode(nodeKey, sourceId, index + 1);\n                                    break;\n                                case Direction.INSIDE_AT_START:\n                                    this.nodeInsertAtStart(targetId, sourceId);\n                                    break;\n                                case Direction.INSIDE_AT_END:\n                                    this.nodeInsertAtEnd(targetId, sourceId);\n                                    break;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    MultiRootTree.prototype.swapArrayElements = function (arr, indexA, indexB) {\n        var temp = arr[indexA];\n        arr[indexA] = arr[indexB];\n        arr[indexB] = temp;\n        return arr;\n    };\n    MultiRootTree.prototype.rootDeleteId = function (id) {\n        var index = this.findRootId(id);\n        if (index > -1) {\n            this.rootDelete(index);\n        }\n    };\n    MultiRootTree.prototype.nodeAndSubNodesDelete = function (nodeKey) {\n        var toDeleteLater = [];\n        for (var i = 0; i < this.nodes[nodeKey].length; i++) {\n            var id = this.nodes[nodeKey][i];\n            this.nodeAndSubNodesDelete(id);\n            toDeleteLater.push(nodeKey);\n        }\n        this.nodeDelete(nodeKey);\n        for (var i = 0; i < toDeleteLater.length; i++) {\n            this.nodeDelete(toDeleteLater[i]);\n        }\n    };\n    MultiRootTree.prototype.nodeRefrencesDelete = function (id) {\n        for (var nodeKey in this.nodes) {\n            if (this.nodes.hasOwnProperty(nodeKey)) {\n                for (var i = 0; i < this.nodes[nodeKey].length; i++) {\n                    var targetId = this.nodes[nodeKey][i];\n                    if (targetId === id) {\n                        this.nodeDeleteAtIndex(nodeKey, i);\n                    }\n                }\n            }\n        }\n    };\n    MultiRootTree.prototype.nodeDelete = function (nodeKey) {\n        delete this.nodes[nodeKey];\n    };\n    MultiRootTree.prototype.findRootId = function (id) {\n        return this.rootIds.indexOf(id);\n    };\n    MultiRootTree.prototype.findNodeId = function (nodeKey, id) {\n        return this.nodes[nodeKey].indexOf(id);\n    };\n    MultiRootTree.prototype.findNode = function (nodeKey) {\n        return this.nodes[nodeKey];\n    };\n    MultiRootTree.prototype.nodeInsertAtStart = function (nodeKey, id) {\n        this.nodes[nodeKey].unshift(id);\n    };\n    MultiRootTree.prototype.nodeInsertAtEnd = function (nodeKey, id) {\n        this.nodes[nodeKey].push(id);\n    };\n    MultiRootTree.prototype.rootDelete = function (index) {\n        this.rootIds.splice(index, 1);\n    };\n    MultiRootTree.prototype.nodeDeleteAtIndex = function (nodeKey, index) {\n        this.nodes[nodeKey].splice(index, 1);\n    };\n    MultiRootTree.prototype.rootInsertAtStart = function (id) {\n        this.rootIds.unshift(id);\n    };\n    MultiRootTree.prototype.rootInsertAtEnd = function (id) {\n        this.rootIds.push(id);\n    };\n    return MultiRootTree;\n}());\nexports.default = MultiRootTree;\n//# sourceMappingURL=MultiRootTree.js.map\n\n//# sourceURL=webpack://TooqingCore/./node_modules/typescript-collections/dist/lib/MultiRootTree.js?')},"./node_modules/typescript-collections/dist/lib/PriorityQueue.js":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nvar util = __webpack_require__(/*! ./util */ "./node_modules/typescript-collections/dist/lib/util.js");\nvar Heap_1 = __webpack_require__(/*! ./Heap */ "./node_modules/typescript-collections/dist/lib/Heap.js");\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * Creates an empty priority queue.\n     * @class <p>In a priority queue each element is associated with a "priority",\n     * elements are dequeued in highest-priority-first order (the elements with the\n     * highest priority are dequeued first). Priority Queues are implemented as heaps.\n     * If the inserted elements are custom objects a compare function must be provided,\n     * otherwise the <=, === and >= operators are used to compare object priority.</p>\n     * <pre>\n     * function compare(a, b) {\n     *  if (a is less than b by some ordering criterion) {\n     *     return -1;\n     *  } if (a is greater than b by the ordering criterion) {\n     *     return 1;\n     *  }\n     *  // a must be equal to b\n     *  return 0;\n     * }\n     * </pre>\n     * @constructor\n     * @param {function(Object,Object):number=} compareFunction optional\n     * function used to compare two element priorities. Must return a negative integer,\n     * zero, or a positive integer as the first argument is less than, equal to,\n     * or greater than the second.\n     */\n    function PriorityQueue(compareFunction) {\n        this.heap = new Heap_1.default(util.reverseCompareFunction(compareFunction));\n    }\n    /**\n     * Inserts the specified element into this priority queue.\n     * @param {Object} element the element to insert.\n     * @return {boolean} true if the element was inserted, or false if it is undefined.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        return this.heap.add(element);\n    };\n    /**\n     * Inserts the specified element into this priority queue.\n     * @param {Object} element the element to insert.\n     * @return {boolean} true if the element was inserted, or false if it is undefined.\n     */\n    PriorityQueue.prototype.add = function (element) {\n        return this.heap.add(element);\n    };\n    /**\n     * Retrieves and removes the highest priority element of this queue.\n     * @return {*} the the highest priority element of this queue,\n     *  or undefined if this queue is empty.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        if (this.heap.size() !== 0) {\n            var el = this.heap.peek();\n            this.heap.removeRoot();\n            return el;\n        }\n        return undefined;\n    };\n    /**\n     * Retrieves, but does not remove, the highest priority element of this queue.\n     * @return {*} the highest priority element of this queue, or undefined if this queue is empty.\n     */\n    PriorityQueue.prototype.peek = function () {\n        return this.heap.peek();\n    };\n    /**\n     * Returns true if this priority queue contains the specified element.\n     * @param {Object} element element to search for.\n     * @return {boolean} true if this priority queue contains the specified element,\n     * false otherwise.\n     */\n    PriorityQueue.prototype.contains = function (element) {\n        return this.heap.contains(element);\n    };\n    /**\n     * Checks if this priority queue is empty.\n     * @return {boolean} true if and only if this priority queue contains no items; false\n     * otherwise.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.heap.isEmpty();\n    };\n    /**\n     * Returns the number of elements in this priority queue.\n     * @return {number} the number of elements in this priority queue.\n     */\n    PriorityQueue.prototype.size = function () {\n        return this.heap.size();\n    };\n    /**\n     * Removes all of the elements from this priority queue.\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.heap.clear();\n    };\n    /**\n     * Executes the provided function once for each element present in this queue in\n     * no particular order.\n     * @param {function(Object):*} callback function to execute, it is\n     * invoked with one argument: the element value, to break the iteration you can\n     * optionally return false.\n     */\n    PriorityQueue.prototype.forEach = function (callback) {\n        this.heap.forEach(callback);\n    };\n    return PriorityQueue;\n}()); // end of priority queue\nexports.default = PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map\n\n//# sourceURL=webpack://TooqingCore/./node_modules/typescript-collections/dist/lib/PriorityQueue.js?')},"./node_modules/typescript-collections/dist/lib/Queue.js":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nvar LinkedList_1 = __webpack_require__(/*! ./LinkedList */ "./node_modules/typescript-collections/dist/lib/LinkedList.js");\nvar Queue = /** @class */ (function () {\n    /**\n     * Creates an empty queue.\n     * @class A queue is a First-In-First-Out (FIFO) data structure, the first\n     * element added to the queue will be the first one to be removed. This\n     * implementation uses a linked list as a container.\n     * @constructor\n     */\n    function Queue() {\n        this.list = new LinkedList_1.default();\n    }\n    /**\n     * Inserts the specified element into the end of this queue.\n     * @param {Object} elem the element to insert.\n     * @return {boolean} true if the element was inserted, or false if it is undefined.\n     */\n    Queue.prototype.enqueue = function (elem) {\n        return this.list.add(elem);\n    };\n    /**\n     * Inserts the specified element into the end of this queue.\n     * @param {Object} elem the element to insert.\n     * @return {boolean} true if the element was inserted, or false if it is undefined.\n     */\n    Queue.prototype.add = function (elem) {\n        return this.list.add(elem);\n    };\n    /**\n     * Retrieves and removes the head of this queue.\n     * @return {*} the head of this queue, or undefined if this queue is empty.\n     */\n    Queue.prototype.dequeue = function () {\n        if (this.list.size() !== 0) {\n            var el = this.list.first();\n            this.list.removeElementAtIndex(0);\n            return el;\n        }\n        return undefined;\n    };\n    /**\n     * Retrieves, but does not remove, the head of this queue.\n     * @return {*} the head of this queue, or undefined if this queue is empty.\n     */\n    Queue.prototype.peek = function () {\n        if (this.list.size() !== 0) {\n            return this.list.first();\n        }\n        return undefined;\n    };\n    /**\n     * Returns the number of elements in this queue.\n     * @return {number} the number of elements in this queue.\n     */\n    Queue.prototype.size = function () {\n        return this.list.size();\n    };\n    /**\n     * Returns true if this queue contains the specified element.\n     * <p>If the elements inside this stack are\n     * not comparable with the === operator, a custom equals function should be\n     * provided to perform searches, the function must receive two arguments and\n     * return true if they are equal, false otherwise. Example:</p>\n     *\n     * <pre>\n     * const petsAreEqualByName (pet1, pet2) {\n     *  return pet1.name === pet2.name;\n     * }\n     * </pre>\n     * @param {Object} elem element to search for.\n     * @param {function(Object,Object):boolean=} equalsFunction optional\n     * function to check if two elements are equal.\n     * @return {boolean} true if this queue contains the specified element,\n     * false otherwise.\n     */\n    Queue.prototype.contains = function (elem, equalsFunction) {\n        return this.list.contains(elem, equalsFunction);\n    };\n    /**\n     * Checks if this queue is empty.\n     * @return {boolean} true if and only if this queue contains no items; false\n     * otherwise.\n     */\n    Queue.prototype.isEmpty = function () {\n        return this.list.size() <= 0;\n    };\n    /**\n     * Removes all of the elements from this queue.\n     */\n    Queue.prototype.clear = function () {\n        this.list.clear();\n    };\n    /**\n     * Executes the provided function once for each element present in this queue in\n     * FIFO order.\n     * @param {function(Object):*} callback function to execute, it is\n     * invoked with one argument: the element value, to break the iteration you can\n     * optionally return false.\n     */\n    Queue.prototype.forEach = function (callback) {\n        this.list.forEach(callback);\n    };\n    return Queue;\n}()); // End of queue\nexports.default = Queue;\n//# sourceMappingURL=Queue.js.map\n\n//# sourceURL=webpack://TooqingCore/./node_modules/typescript-collections/dist/lib/Queue.js?')},"./node_modules/typescript-collections/dist/lib/Set.js":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nvar util = __webpack_require__(/*! ./util */ "./node_modules/typescript-collections/dist/lib/util.js");\nvar arrays = __webpack_require__(/*! ./arrays */ "./node_modules/typescript-collections/dist/lib/arrays.js");\nvar Dictionary_1 = __webpack_require__(/*! ./Dictionary */ "./node_modules/typescript-collections/dist/lib/Dictionary.js");\nvar Set = /** @class */ (function () {\n    /**\n     * Creates an empty set.\n     * @class <p>A set is a data structure that contains no duplicate items.</p>\n     * <p>If the inserted elements are custom objects a function\n     * which converts elements to strings must be provided. Example:</p>\n     *\n     * <pre>\n     * function petToString(pet) {\n     *  return pet.name;\n     * }\n     * </pre>\n     *\n     * @constructor\n     * @param {function(Object):string=} toStringFunction optional function used\n     * to convert elements to strings. If the elements aren\'t strings or if toString()\n     * is not appropriate, a custom function which receives an object and returns a\n     * unique string must be provided.\n     */\n    function Set(toStringFunction) {\n        this.dictionary = new Dictionary_1.default(toStringFunction);\n    }\n    /**\n     * Returns true if this set contains the specified element.\n     * @param {Object} element element to search for.\n     * @return {boolean} true if this set contains the specified element,\n     * false otherwise.\n     */\n    Set.prototype.contains = function (element) {\n        return this.dictionary.containsKey(element);\n    };\n    /**\n     * Adds the specified element to this set if it is not already present.\n     * @param {Object} element the element to insert.\n     * @return {boolean} true if this set did not already contain the specified element.\n     */\n    Set.prototype.add = function (element) {\n        if (this.contains(element) || util.isUndefined(element)) {\n            return false;\n        }\n        else {\n            this.dictionary.setValue(element, element);\n            return true;\n        }\n    };\n    /**\n     * Performs an intersecion between this and another set.\n     * Removes all values that are not present this set and the given set.\n     * @param {collections.Set} otherSet other set.\n     */\n    Set.prototype.intersection = function (otherSet) {\n        var set = this;\n        this.forEach(function (element) {\n            if (!otherSet.contains(element)) {\n                set.remove(element);\n            }\n            return true;\n        });\n    };\n    /**\n     * Performs a union between this and another set.\n     * Adds all values from the given set to this set.\n     * @param {collections.Set} otherSet other set.\n     */\n    Set.prototype.union = function (otherSet) {\n        var set = this;\n        otherSet.forEach(function (element) {\n            set.add(element);\n            return true;\n        });\n    };\n    /**\n     * Performs a difference between this and another set.\n     * Removes from this set all the values that are present in the given set.\n     * @param {collections.Set} otherSet other set.\n     */\n    Set.prototype.difference = function (otherSet) {\n        var set = this;\n        otherSet.forEach(function (element) {\n            set.remove(element);\n            return true;\n        });\n    };\n    /**\n     * Checks whether the given set contains all the elements in this set.\n     * @param {collections.Set} otherSet other set.\n     * @return {boolean} true if this set is a subset of the given set.\n     */\n    Set.prototype.isSubsetOf = function (otherSet) {\n        if (this.size() > otherSet.size()) {\n            return false;\n        }\n        var isSub = true;\n        this.forEach(function (element) {\n            if (!otherSet.contains(element)) {\n                isSub = false;\n                return false;\n            }\n            return true;\n        });\n        return isSub;\n    };\n    /**\n     * Removes the specified element from this set if it is present.\n     * @return {boolean} true if this set contained the specified element.\n     */\n    Set.prototype.remove = function (element) {\n        if (!this.contains(element)) {\n            return false;\n        }\n        else {\n            this.dictionary.remove(element);\n            return true;\n        }\n    };\n    /**\n     * Executes the provided function once for each element\n     * present in this set.\n     * @param {function(Object):*} callback function to execute, it is\n     * invoked with one arguments: the element. To break the iteration you can\n     * optionally return false.\n     */\n    Set.prototype.forEach = function (callback) {\n        this.dictionary.forEach(function (k, v) {\n            return callback(v);\n        });\n    };\n    /**\n     * Returns an array containing all of the elements in this set in arbitrary order.\n     * @return {Array} an array containing all of the elements in this set.\n     */\n    Set.prototype.toArray = function () {\n        return this.dictionary.values();\n    };\n    /**\n     * Returns true if this set contains no elements.\n     * @return {boolean} true if this set contains no elements.\n     */\n    Set.prototype.isEmpty = function () {\n        return this.dictionary.isEmpty();\n    };\n    /**\n     * Returns the number of elements in this set.\n     * @return {number} the number of elements in this set.\n     */\n    Set.prototype.size = function () {\n        return this.dictionary.size();\n    };\n    /**\n     * Removes all of the elements from this set.\n     */\n    Set.prototype.clear = function () {\n        this.dictionary.clear();\n    };\n    /*\n    * Provides a string representation for display\n    */\n    Set.prototype.toString = function () {\n        return arrays.toString(this.toArray());\n    };\n    return Set;\n}()); // end of Set\nexports.default = Set;\n//# sourceMappingURL=Set.js.map\n\n//# sourceURL=webpack://TooqingCore/./node_modules/typescript-collections/dist/lib/Set.js?')},"./node_modules/typescript-collections/dist/lib/Stack.js":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nvar LinkedList_1 = __webpack_require__(/*! ./LinkedList */ "./node_modules/typescript-collections/dist/lib/LinkedList.js");\nvar Stack = /** @class */ (function () {\n    /**\n     * Creates an empty Stack.\n     * @class A Stack is a Last-In-First-Out (LIFO) data structure, the last\n     * element added to the stack will be the first one to be removed. This\n     * implementation uses a linked list as a container.\n     * @constructor\n     */\n    function Stack() {\n        this.list = new LinkedList_1.default();\n    }\n    /**\n     * Pushes an item onto the top of this stack.\n     * @param {Object} elem the element to be pushed onto this stack.\n     * @return {boolean} true if the element was pushed or false if it is undefined.\n     */\n    Stack.prototype.push = function (elem) {\n        return this.list.add(elem, 0);\n    };\n    /**\n     * Pushes an item onto the top of this stack.\n     * @param {Object} elem the element to be pushed onto this stack.\n     * @return {boolean} true if the element was pushed or false if it is undefined.\n     */\n    Stack.prototype.add = function (elem) {\n        return this.list.add(elem, 0);\n    };\n    /**\n     * Removes the object at the top of this stack and returns that object.\n     * @return {*} the object at the top of this stack or undefined if the\n     * stack is empty.\n     */\n    Stack.prototype.pop = function () {\n        return this.list.removeElementAtIndex(0);\n    };\n    /**\n     * Looks at the object at the top of this stack without removing it from the\n     * stack.\n     * @return {*} the object at the top of this stack or undefined if the\n     * stack is empty.\n     */\n    Stack.prototype.peek = function () {\n        return this.list.first();\n    };\n    /**\n     * Returns the number of elements in this stack.\n     * @return {number} the number of elements in this stack.\n     */\n    Stack.prototype.size = function () {\n        return this.list.size();\n    };\n    /**\n     * Returns true if this stack contains the specified element.\n     * <p>If the elements inside this stack are\n     * not comparable with the === operator, a custom equals function should be\n     * provided to perform searches, the function must receive two arguments and\n     * return true if they are equal, false otherwise. Example:</p>\n     *\n     * <pre>\n     * const petsAreEqualByName (pet1, pet2) {\n     *  return pet1.name === pet2.name;\n     * }\n     * </pre>\n     * @param {Object} elem element to search for.\n     * @param {function(Object,Object):boolean=} equalsFunction optional\n     * function to check if two elements are equal.\n     * @return {boolean} true if this stack contains the specified element,\n     * false otherwise.\n     */\n    Stack.prototype.contains = function (elem, equalsFunction) {\n        return this.list.contains(elem, equalsFunction);\n    };\n    /**\n     * Checks if this stack is empty.\n     * @return {boolean} true if and only if this stack contains no items; false\n     * otherwise.\n     */\n    Stack.prototype.isEmpty = function () {\n        return this.list.isEmpty();\n    };\n    /**\n     * Removes all of the elements from this stack.\n     */\n    Stack.prototype.clear = function () {\n        this.list.clear();\n    };\n    /**\n     * Executes the provided function once for each element present in this stack in\n     * LIFO order.\n     * @param {function(Object):*} callback function to execute, it is\n     * invoked with one argument: the element value, to break the iteration you can\n     * optionally return false.\n     */\n    Stack.prototype.forEach = function (callback) {\n        this.list.forEach(callback);\n    };\n    return Stack;\n}()); // End of stack\nexports.default = Stack;\n//# sourceMappingURL=Stack.js.map\n\n//# sourceURL=webpack://TooqingCore/./node_modules/typescript-collections/dist/lib/Stack.js?')},"./node_modules/typescript-collections/dist/lib/arrays.js":function(module,exports,__webpack_require__){"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util = __webpack_require__(/*! ./util */ \"./node_modules/typescript-collections/dist/lib/util.js\");\n/**\n * Returns the position of the first occurrence of the specified item\n * within the specified array.4\n * @param {*} array the array in which to search the element.\n * @param {Object} item the element to search.\n * @param {function(Object,Object):boolean=} equalsFunction optional function used to\n * check equality between 2 elements.\n * @return {number} the position of the first occurrence of the specified element\n * within the specified array, or -1 if not found.\n */\nfunction indexOf(array, item, equalsFunction) {\n    var equals = equalsFunction || util.defaultEquals;\n    var length = array.length;\n    for (var i = 0; i < length; i++) {\n        if (equals(array[i], item)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexports.indexOf = indexOf;\n/**\n * Returns the position of the last occurrence of the specified element\n * within the specified array.\n * @param {*} array the array in which to search the element.\n * @param {Object} item the element to search.\n * @param {function(Object,Object):boolean=} equalsFunction optional function used to\n * check equality between 2 elements.\n * @return {number} the position of the last occurrence of the specified element\n * within the specified array or -1 if not found.\n */\nfunction lastIndexOf(array, item, equalsFunction) {\n    var equals = equalsFunction || util.defaultEquals;\n    var length = array.length;\n    for (var i = length - 1; i >= 0; i--) {\n        if (equals(array[i], item)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexports.lastIndexOf = lastIndexOf;\n/**\n * Returns true if the specified array contains the specified element.\n * @param {*} array the array in which to search the element.\n * @param {Object} item the element to search.\n * @param {function(Object,Object):boolean=} equalsFunction optional function to\n * check equality between 2 elements.\n * @return {boolean} true if the specified array contains the specified element.\n */\nfunction contains(array, item, equalsFunction) {\n    return indexOf(array, item, equalsFunction) >= 0;\n}\nexports.contains = contains;\n/**\n * Removes the first ocurrence of the specified element from the specified array.\n * @param {*} array the array in which to search element.\n * @param {Object} item the element to search.\n * @param {function(Object,Object):boolean=} equalsFunction optional function to\n * check equality between 2 elements.\n * @return {boolean} true if the array changed after this call.\n */\nfunction remove(array, item, equalsFunction) {\n    var index = indexOf(array, item, equalsFunction);\n    if (index < 0) {\n        return false;\n    }\n    array.splice(index, 1);\n    return true;\n}\nexports.remove = remove;\n/**\n * Returns the number of elements in the specified array equal\n * to the specified object.\n * @param {Array} array the array in which to determine the frequency of the element.\n * @param {Object} item the element whose frequency is to be determined.\n * @param {function(Object,Object):boolean=} equalsFunction optional function used to\n * check equality between 2 elements.\n * @return {number} the number of elements in the specified array\n * equal to the specified object.\n */\nfunction frequency(array, item, equalsFunction) {\n    var equals = equalsFunction || util.defaultEquals;\n    var length = array.length;\n    var freq = 0;\n    for (var i = 0; i < length; i++) {\n        if (equals(array[i], item)) {\n            freq++;\n        }\n    }\n    return freq;\n}\nexports.frequency = frequency;\n/**\n * Returns true if the two specified arrays are equal to one another.\n * Two arrays are considered equal if both arrays contain the same number\n * of elements, and all corresponding pairs of elements in the two\n * arrays are equal and are in the same order.\n * @param {Array} array1 one array to be tested for equality.\n * @param {Array} array2 the other array to be tested for equality.\n * @param {function(Object,Object):boolean=} equalsFunction optional function used to\n * check equality between elemements in the arrays.\n * @return {boolean} true if the two arrays are equal\n */\nfunction equals(array1, array2, equalsFunction) {\n    var equals = equalsFunction || util.defaultEquals;\n    if (array1.length !== array2.length) {\n        return false;\n    }\n    var length = array1.length;\n    for (var i = 0; i < length; i++) {\n        if (!equals(array1[i], array2[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.equals = equals;\n/**\n * Returns shallow a copy of the specified array.\n * @param {*} array the array to copy.\n * @return {Array} a copy of the specified array\n */\nfunction copy(array) {\n    return array.concat();\n}\nexports.copy = copy;\n/**\n * Swaps the elements at the specified positions in the specified array.\n * @param {Array} array The array in which to swap elements.\n * @param {number} i the index of one element to be swapped.\n * @param {number} j the index of the other element to be swapped.\n * @return {boolean} true if the array is defined and the indexes are valid.\n */\nfunction swap(array, i, j) {\n    if (i < 0 || i >= array.length || j < 0 || j >= array.length) {\n        return false;\n    }\n    var temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n    return true;\n}\nexports.swap = swap;\nfunction toString(array) {\n    return '[' + array.toString() + ']';\n}\nexports.toString = toString;\n/**\n * Executes the provided function once for each element present in this array\n * starting from index 0 to length - 1.\n * @param {Array} array The array in which to iterate.\n * @param {function(Object):*} callback function to execute, it is\n * invoked with one argument: the element value, to break the iteration you can\n * optionally return false.\n */\nfunction forEach(array, callback) {\n    for (var _i = 0, array_1 = array; _i < array_1.length; _i++) {\n        var ele = array_1[_i];\n        if (callback(ele) === false) {\n            return;\n        }\n    }\n}\nexports.forEach = forEach;\n//# sourceMappingURL=arrays.js.map\n\n//# sourceURL=webpack://TooqingCore/./node_modules/typescript-collections/dist/lib/arrays.js?")},"./node_modules/typescript-collections/dist/lib/index.js":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\n// Copyright 2013 Basarat Ali Syed. All Rights Reserved.\n//\n// Licensed under MIT open source license http://opensource.org/licenses/MIT\n//\n// Orginal javascript code was by Mauricio Santos\n//\nvar _arrays = __webpack_require__(/*! ./arrays */ "./node_modules/typescript-collections/dist/lib/arrays.js");\nexports.arrays = _arrays;\nvar Bag_1 = __webpack_require__(/*! ./Bag */ "./node_modules/typescript-collections/dist/lib/Bag.js");\nexports.Bag = Bag_1.default;\nvar BSTree_1 = __webpack_require__(/*! ./BSTree */ "./node_modules/typescript-collections/dist/lib/BSTree.js");\nexports.BSTree = BSTree_1.default;\nvar BSTreeKV_1 = __webpack_require__(/*! ./BSTreeKV */ "./node_modules/typescript-collections/dist/lib/BSTreeKV.js");\nexports.BSTreeKV = BSTreeKV_1.default;\nvar Dictionary_1 = __webpack_require__(/*! ./Dictionary */ "./node_modules/typescript-collections/dist/lib/Dictionary.js");\nexports.Dictionary = Dictionary_1.default;\nvar Heap_1 = __webpack_require__(/*! ./Heap */ "./node_modules/typescript-collections/dist/lib/Heap.js");\nexports.Heap = Heap_1.default;\nvar LinkedDictionary_1 = __webpack_require__(/*! ./LinkedDictionary */ "./node_modules/typescript-collections/dist/lib/LinkedDictionary.js");\nexports.LinkedDictionary = LinkedDictionary_1.default;\nvar LinkedList_1 = __webpack_require__(/*! ./LinkedList */ "./node_modules/typescript-collections/dist/lib/LinkedList.js");\nexports.LinkedList = LinkedList_1.default;\nvar MultiDictionary_1 = __webpack_require__(/*! ./MultiDictionary */ "./node_modules/typescript-collections/dist/lib/MultiDictionary.js");\nexports.MultiDictionary = MultiDictionary_1.default;\nvar FactoryDictionary_1 = __webpack_require__(/*! ./FactoryDictionary */ "./node_modules/typescript-collections/dist/lib/FactoryDictionary.js");\nexports.FactoryDictionary = FactoryDictionary_1.default;\nvar FactoryDictionary_2 = __webpack_require__(/*! ./FactoryDictionary */ "./node_modules/typescript-collections/dist/lib/FactoryDictionary.js");\nexports.DefaultDictionary = FactoryDictionary_2.default;\nvar Queue_1 = __webpack_require__(/*! ./Queue */ "./node_modules/typescript-collections/dist/lib/Queue.js");\nexports.Queue = Queue_1.default;\nvar PriorityQueue_1 = __webpack_require__(/*! ./PriorityQueue */ "./node_modules/typescript-collections/dist/lib/PriorityQueue.js");\nexports.PriorityQueue = PriorityQueue_1.default;\nvar Set_1 = __webpack_require__(/*! ./Set */ "./node_modules/typescript-collections/dist/lib/Set.js");\nexports.Set = Set_1.default;\nvar Stack_1 = __webpack_require__(/*! ./Stack */ "./node_modules/typescript-collections/dist/lib/Stack.js");\nexports.Stack = Stack_1.default;\nvar MultiRootTree_1 = __webpack_require__(/*! ./MultiRootTree */ "./node_modules/typescript-collections/dist/lib/MultiRootTree.js");\nexports.MultiRootTree = MultiRootTree_1.default;\nvar _util = __webpack_require__(/*! ./util */ "./node_modules/typescript-collections/dist/lib/util.js");\nexports.util = _util;\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://TooqingCore/./node_modules/typescript-collections/dist/lib/index.js?')},"./node_modules/typescript-collections/dist/lib/util.js":function(module,exports,__webpack_require__){"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\nexports.has = function (obj, prop) {\n    return _hasOwnProperty.call(obj, prop);\n};\n/**\n * Default function to compare element order.\n * @function\n */\nfunction defaultCompare(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    else if (a === b) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}\nexports.defaultCompare = defaultCompare;\n/**\n * Default function to test equality.\n * @function\n */\nfunction defaultEquals(a, b) {\n    return a === b;\n}\nexports.defaultEquals = defaultEquals;\n/**\n * Default function to convert an object to a string.\n * @function\n */\nfunction defaultToString(item) {\n    if (item === null) {\n        return 'COLLECTION_NULL';\n    }\n    else if (isUndefined(item)) {\n        return 'COLLECTION_UNDEFINED';\n    }\n    else if (isString(item)) {\n        return '$s' + item;\n    }\n    else {\n        return '$o' + item.toString();\n    }\n}\nexports.defaultToString = defaultToString;\n/**\n* Joins all the properies of the object using the provided join string\n*/\nfunction makeString(item, join) {\n    if (join === void 0) { join = ','; }\n    if (item === null) {\n        return 'COLLECTION_NULL';\n    }\n    else if (isUndefined(item)) {\n        return 'COLLECTION_UNDEFINED';\n    }\n    else if (isString(item)) {\n        return item.toString();\n    }\n    else {\n        var toret = '{';\n        var first = true;\n        for (var prop in item) {\n            if (exports.has(item, prop)) {\n                if (first) {\n                    first = false;\n                }\n                else {\n                    toret = toret + join;\n                }\n                toret = toret + prop + ':' + item[prop];\n            }\n        }\n        return toret + '}';\n    }\n}\nexports.makeString = makeString;\n/**\n * Checks if the given argument is a function.\n * @function\n */\nfunction isFunction(func) {\n    return (typeof func) === 'function';\n}\nexports.isFunction = isFunction;\n/**\n * Checks if the given argument is undefined.\n * @function\n */\nfunction isUndefined(obj) {\n    return (typeof obj) === 'undefined';\n}\nexports.isUndefined = isUndefined;\n/**\n * Checks if the given argument is a string.\n * @function\n */\nfunction isString(obj) {\n    return Object.prototype.toString.call(obj) === '[object String]';\n}\nexports.isString = isString;\n/**\n * Reverses a compare function.\n * @function\n */\nfunction reverseCompareFunction(compareFunction) {\n    if (isUndefined(compareFunction) || !isFunction(compareFunction)) {\n        return function (a, b) {\n            if (a < b) {\n                return 1;\n            }\n            else if (a === b) {\n                return 0;\n            }\n            else {\n                return -1;\n            }\n        };\n    }\n    else {\n        return function (d, v) {\n            return compareFunction(d, v) * -1;\n        };\n    }\n}\nexports.reverseCompareFunction = reverseCompareFunction;\n/**\n * Returns an equal function given a compare function.\n * @function\n */\nfunction compareToEquals(compareFunction) {\n    return function (a, b) {\n        return compareFunction(a, b) === 0;\n    };\n}\nexports.compareToEquals = compareToEquals;\n//# sourceMappingURL=util.js.map\n\n//# sourceURL=webpack://TooqingCore/./node_modules/typescript-collections/dist/lib/util.js?")},"./node_modules/webpack/buildin/global.js":function(module,exports){eval('var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function("return this")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === "object") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it\'s\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n//# sourceURL=webpack://TooqingCore/(webpack)/buildin/global.js?')},"./src/net/socket.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SocketConnectionError", function() { return SocketConnectionError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SocketConnection", function() { return SocketConnection; });\n/* harmony import */ var _transport_websocket__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transport/websocket */ "./src/net/transport/websocket.ts");\n/* harmony import */ var _utils_log__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/log */ "./src/utils/log.ts");\nvar __extends = (undefined && undefined.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\n\r\nvar SocketConnectionError = /** @class */ (function (_super) {\r\n    __extends(SocketConnectionError, _super);\r\n    function SocketConnectionError(reason) {\r\n        var _this = _super.call(this, "SocketConnectionError: " + JSON.stringify(reason)) || this;\r\n        _this.name = "SocketConnectionError";\r\n        _this.stack = new Error().stack;\r\n        return _this;\r\n    }\r\n    return SocketConnectionError;\r\n}(Error));\r\n\r\n// 实际工作在Web-Worker内的WebSocket客户端\r\nvar SocketConnection = /** @class */ (function () {\r\n    function SocketConnection($listener) {\r\n        var _this = this;\r\n        this.mServerAddr = { host: "localhost", port: 80 };\r\n        this.mTransport = new _transport_websocket__WEBPACK_IMPORTED_MODULE_0__["WSWrapper"]();\r\n        this.mConnectListener = $listener;\r\n        // add connection event to listener\r\n        if (typeof this.mTransport !== "undefined" && typeof this.mConnectListener !== "undefined") {\r\n            var listener_1 = this.mConnectListener;\r\n            this.mTransport.on("open", function () {\r\n                _utils_log__WEBPACK_IMPORTED_MODULE_1__["Logger"].getInstance().info("SocketConnection ready.[" + _this.mServerAddr.host + ":" + _this.mServerAddr.port + "]");\r\n                listener_1.onConnected(_this);\r\n                _this.onConnected();\r\n            });\r\n            this.mTransport.on("close", function () {\r\n                _utils_log__WEBPACK_IMPORTED_MODULE_1__["Logger"].getInstance().info("SocketConnection close.");\r\n                listener_1.onDisConnected(_this);\r\n            });\r\n            this.mTransport.on("error", function (reason) {\r\n                _utils_log__WEBPACK_IMPORTED_MODULE_1__["Logger"].getInstance().info("SocketConnection error.");\r\n                listener_1.onError(reason);\r\n            });\r\n        }\r\n    }\r\n    SocketConnection.prototype.startConnect = function (addr) {\r\n        this.mServerAddr = addr;\r\n        this.doConnect();\r\n    };\r\n    SocketConnection.prototype.stopConnect = function () {\r\n        // TODO Maybe not necessary.\r\n    };\r\n    SocketConnection.prototype.send = function (data) {\r\n        if (!this.mTransport) {\r\n            return _utils_log__WEBPACK_IMPORTED_MODULE_1__["Logger"].getInstance().error("Empty transport.");\r\n        }\r\n        this.mTransport.Send(data);\r\n    };\r\n    // Frees all resources for garbage collection.\r\n    SocketConnection.prototype.destroy = function () {\r\n        if (this.mTransport) {\r\n            this.mTransport.destroy();\r\n        }\r\n    };\r\n    SocketConnection.prototype.onConnected = function () {\r\n        if (!this.mTransport) {\r\n            return _utils_log__WEBPACK_IMPORTED_MODULE_1__["Logger"].getInstance().error("Empty transport.");\r\n        }\r\n        this.mTransport.on("packet", this.onData);\r\n    };\r\n    SocketConnection.prototype.onData = function (data) {\r\n        // do nothing.\r\n        // override by subclass.\r\n    };\r\n    SocketConnection.prototype.doConnect = function () {\r\n        if (!this.mTransport) {\r\n            return _utils_log__WEBPACK_IMPORTED_MODULE_1__["Logger"].getInstance().error("Empty transport.");\r\n        }\r\n        if (this.mServerAddr.secure !== undefined)\r\n            this.mTransport.secure = this.mServerAddr.secure;\r\n        this.mTransport.Open(this.mServerAddr.host, this.mServerAddr.port);\r\n    };\r\n    return SocketConnection;\r\n}());\r\n\r\n\n\n//# sourceURL=webpack://TooqingCore/./src/net/socket.ts?')},"./src/net/transport/websocket.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WSWrapper", function() { return WSWrapper; });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ "./node_modules/events/events.js");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\nvar __extends = (undefined && undefined.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\n// @ts-ignore\r\nvar Socket = WebSocket || MozWebSocket;\r\nvar ReadyState;\r\n(function (ReadyState) {\r\n    ReadyState[ReadyState["CONNECTING"] = 0] = "CONNECTING";\r\n    ReadyState[ReadyState["OPEN"] = 1] = "OPEN";\r\n    ReadyState[ReadyState["CLOSING"] = 2] = "CLOSING";\r\n    ReadyState[ReadyState["CLOSED"] = 3] = "CLOSED";\r\n})(ReadyState || (ReadyState = {}));\r\nvar WSWrapper = /** @class */ (function (_super) {\r\n    __extends(WSWrapper, _super);\r\n    function WSWrapper(host, port, autoReconnect) {\r\n        var _this = _super.call(this) || this;\r\n        _this.secure = true;\r\n        _this._connection = undefined;\r\n        _this._readyState = ReadyState.CLOSED;\r\n        _this._packets_q = [];\r\n        _this._writable = false;\r\n        _this._sent_count = 0;\r\n        _this._auto_reconnect = false;\r\n        _this._force_close = false;\r\n        _this._host = host || "localhost";\r\n        _this._port = port || 80;\r\n        if (typeof autoReconnect !== "undefined")\r\n            _this._auto_reconnect = autoReconnect;\r\n        return _this;\r\n    }\r\n    WSWrapper.prototype.Open = function (host, port) {\r\n        if (typeof host !== "undefined" && typeof port !== "undefined") {\r\n            this._host = host;\r\n            this._port = port;\r\n        }\r\n        this.doOpen();\r\n    };\r\n    WSWrapper.prototype.Close = function () {\r\n        if (ReadyState.OPEN === this._readyState || ReadyState.CONNECTING === this._readyState) {\r\n            this.doClose();\r\n        }\r\n    };\r\n    WSWrapper.prototype.Send = function (packet) {\r\n        if (ReadyState.OPEN === this._readyState) {\r\n            this._packets_q.push(packet);\r\n            this.write();\r\n        }\r\n        else {\r\n            this.emit("error", "Transport not open yet.");\r\n        }\r\n    };\r\n    // Frees all resources for garbage collection.\r\n    WSWrapper.prototype.destroy = function () {\r\n        // TODO\r\n    };\r\n    WSWrapper.prototype.addCallBacks = function () {\r\n        var _this = this;\r\n        this._connection.onopen = function () {\r\n            _this.onOpen();\r\n        };\r\n        this._connection.onclose = function () {\r\n            _this.onClose();\r\n        };\r\n        this._connection.onmessage = function (ev) {\r\n            // console.info(`_connection.onmessage`);\r\n            _this.onData(ev.data);\r\n        };\r\n        this._connection.onerror = function (e) {\r\n            _this.emit("error", e);\r\n        };\r\n    };\r\n    WSWrapper.prototype.onOpen = function () {\r\n        this._readyState = ReadyState.OPEN;\r\n        this._writable = true;\r\n        this.emit("open");\r\n    };\r\n    WSWrapper.prototype.onClose = function () {\r\n        this._readyState = ReadyState.CLOSED;\r\n        this._writable = false;\r\n        this.emit("close");\r\n        if (this._auto_reconnect && !this._force_close) {\r\n            this.emit("reopen");\r\n            this.doOpen();\r\n        }\r\n    };\r\n    WSWrapper.prototype.onData = function (data) {\r\n        this.emit("packet", data);\r\n    };\r\n    WSWrapper.prototype.doOpen = function () {\r\n        /**\r\n         * Get either the `WebSocket` or `MozWebSocket` globals\r\n         * in the browser\r\n         */\r\n        if (typeof Socket === "undefined") {\r\n            this.emit("error", "WebSocket is NOT support by this Browser.");\r\n            return;\r\n        }\r\n        var uri = this.uri();\r\n        try {\r\n            this._connection = new Socket(uri);\r\n            this._connection.binaryType = "arraybuffer";\r\n            this.addCallBacks();\r\n        }\r\n        catch (e) {\r\n            this.emit("error", e);\r\n        }\r\n    };\r\n    WSWrapper.prototype.doClose = function () {\r\n        if (typeof this._connection !== "undefined") {\r\n            this._force_close = true;\r\n            this._connection.close();\r\n            this._readyState = ReadyState.CLOSING;\r\n            this.emit("closing");\r\n        }\r\n    };\r\n    WSWrapper.prototype.uri = function () {\r\n        var schema = this.secure ? "wss" : "ws";\r\n        var port = "";\r\n        if (this._port && (("wss" === schema && Number(this._port) !== 443) ||\r\n            ("ws" === schema && Number(this._port) !== 80))) {\r\n            port = ":" + this._port;\r\n        }\r\n        return schema + "://" + this._host + port;\r\n    };\r\n    WSWrapper.prototype.write = function () {\r\n        var _this = this;\r\n        if (this._packets_q.length > 0 && this._writable) {\r\n            var packet_1 = this._packets_q.shift();\r\n            this._writable = false; // write lock!\r\n            new Promise(function (resolve, reject) {\r\n                try {\r\n                    _this._connection.send(packet_1);\r\n                    resolve();\r\n                }\r\n                catch (e) {\r\n                    reject(e);\r\n                }\r\n            }).then(function () {\r\n                // send ok\r\n                _this.emit("sent", [++_this._sent_count, packet_1]);\r\n                _this._writable = true;\r\n                _this.write();\r\n            }).catch(function (reason) {\r\n                _this.emit("error", reason);\r\n            });\r\n        }\r\n    };\r\n    return WSWrapper;\r\n}(events__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]));\r\n\r\n\n\n//# sourceURL=webpack://TooqingCore/./src/net/transport/websocket.ts?')},"./src/utils/log.ts":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Logger", function() { return Logger; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "log", function() { return log; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "error", function() { return error; });\nvar __spreadArrays = (undefined && undefined.__spreadArrays) || function () {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n/* tslint:disable */\r\nvar Logger = /** @class */ (function () {\r\n    function Logger() {\r\n        this.mErrorList = [];\r\n        this.mWarnList = [];\r\n    }\r\n    Logger.getInstance = function () {\r\n        if (!Logger._instance)\r\n            Logger._instance = new Logger();\r\n        return Logger._instance;\r\n    };\r\n    Logger.prototype.log = function (message) {\r\n        var optionalParams = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            optionalParams[_i - 1] = arguments[_i];\r\n        }\r\n        console.log.apply(console, __spreadArrays([message], optionalParams));\r\n    };\r\n    Logger.prototype.error = function (message) {\r\n        var optionalParams = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            optionalParams[_i - 1] = arguments[_i];\r\n        }\r\n        console.error.apply(console, __spreadArrays([message], optionalParams));\r\n        this.mErrorList.push(message);\r\n    };\r\n    Logger.prototype.warn = function (message) {\r\n        var optionalParams = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            optionalParams[_i - 1] = arguments[_i];\r\n        }\r\n        console.warn.apply(console, __spreadArrays([message], optionalParams));\r\n        this.mWarnList.push(message);\r\n    };\r\n    Logger.prototype.debug = function (message) {\r\n        var optionalParams = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            optionalParams[_i - 1] = arguments[_i];\r\n        }\r\n        console.log.apply(console, __spreadArrays([message], optionalParams));\r\n    };\r\n    Logger.prototype.info = function (message) {\r\n        var optionalParams = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            optionalParams[_i - 1] = arguments[_i];\r\n        }\r\n        console.info.apply(console, __spreadArrays([message], optionalParams));\r\n    };\r\n    Logger.prototype.getErrorList = function () {\r\n        return this.mErrorList;\r\n    };\r\n    Logger.prototype.getWarnList = function () {\r\n        return this.mWarnList;\r\n    };\r\n    return Logger;\r\n}());\r\n\r\nfunction log(message) {\r\n    var optionalParams = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        optionalParams[_i - 1] = arguments[_i];\r\n    }\r\n    console.log.apply(console, __spreadArrays([message], optionalParams));\r\n}\r\nfunction error(message) {\r\n    var optionalParams = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        optionalParams[_i - 1] = arguments[_i];\r\n    }\r\n    console.error.apply(console, __spreadArrays([message], optionalParams));\r\n}\r\n\n\n//# sourceURL=webpack://TooqingCore/./src/utils/log.ts?')}});