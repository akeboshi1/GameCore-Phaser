import { PacketHandler } from "net-socket-packet";
import { op_client, op_gameconfig } from "pixelpai_proto";
import { Player } from "./player";
import { IElementManager } from "../element/element.manager";
import { User } from "../../actor/user";
import { IRoomService, Room } from "../room/room";
import { ISprite } from "structure";
import { ConnectionService } from "../../../../lib/net/connection.service";
import { IElement } from "../element/element";
export declare class PlayerManager extends PacketHandler implements IElementManager {
    private mRoom;
    hasAddComplete: boolean;
    private mActor;
    private mPlayerMap;
    private mActionMgr;
    constructor(mRoom: Room);
    addLisenter(): void;
    removeLisenter(): void;
    createActor(actor: op_client.IActor): void;
    get actor(): User;
    destroy(): void;
    update(time: number, delta: number): void;
    get(id: number): Player;
    has(id: number): boolean;
    add(sprite: ISprite[]): void;
    remove(id: number): IElement;
    setMe(user: User): void;
    addToWalkableMap(sprite: ISprite): void;
    removeFromWalkableMap(sprite: ISprite): void;
    resetWalkable(sprite: ISprite): void;
    getElements(): IElement[];
    set(id: number, player: Player): void;
    onActiveSprite(id: number, targetId: number, data: any): void;
    addWeapon(id: number, weaponID: string): void;
    playAnimator(id: number, aniName: string, times?: number): void;
    addPackItems(elementId: number, items: op_gameconfig.IItem[]): void;
    removePackItems(elementId: number, itemId: number): boolean;
    onDisplayCreated(id: number): void;
    onDisplayRemoved(id: number): void;
    hideAll(): void;
    showAll(): void;
    setState(state: op_client.IStateGroup): void;
    private onSync;
    private _loadSprite;
    private onAdjust;
    private onAdd;
    private _add;
    private checkSuitAvatarSprite;
    private addComplete;
    private onRemove;
    private onMove;
    private onSetPosition;
    private onShowBubble;
    private onOnlyBubbleHandler;
    private onClearBubbleHandler;
    private onShowEffect;
    private onChangeAnimation;
    private onQueryElementHandler;
    private checkPlayerAction;
    private onActiveSpriteHandler;
    private onActiveSpriteEndHandler;
    private onSyncActorHandler;
    get roomService(): IRoomService;
    get connection(): ConnectionService;
}
