import { Handler } from "utils";
import { op_client } from "pixelpai_proto";
import { NineSliceButton } from "apowophaserui";
import { ICountablePackageItem, IExploreChapterData, IExploreLevelData } from "../../../structure";
export declare class PicaExploreListLevelPanel extends Phaser.GameObjects.Container {
    levelItems: ChapterLevelItem[];
    addHei: number;
    private dpr;
    private zoom;
    private captorScroll;
    private titlebg;
    private titleTex;
    private forewordItem;
    private lockItem;
    private finalItem;
    private topbg;
    private chapterResult;
    private send;
    private posValue;
    private topHeight;
    private bottomHeight;
    private powerValue;
    private scrollToIndex;
    constructor(scene: Phaser.Scene, width: number, height: number, dpr: number, zoom: number);
    resize(w: number, h: number): void;
    refreshMask(): void;
    setHandler(send: Handler): void;
    setTopAndBottomHeight(top: number, bottom: number): void;
    setCaptoreResult(result: op_client.OP_VIRTUAL_WORLD_RES_CLIENT_PKT_QUERY_CHAPTER_RESULT, nextLevelID: number): void;
    setLevelDatas(levels: IExploreLevelData[], nextLevelID: number): void;
    setForwardDatas(data: IExploreChapterData, lock: boolean): void;
    setPowerValue(value: number): void;
    protected init(): void;
    private setIndexedLayout;
    private onScrollClickHandler;
    private onScrollValueChange;
    private onForewordClickHandler;
    private onChapterLevelHandler;
    private onChapterLockHandler;
}
declare class ChapterLevelBaseItem extends Phaser.GameObjects.Container {
    protected dpr: number;
    protected unlock: boolean;
    protected send: Handler;
    protected chapterData: any;
    constructor(scene: Phaser.Scene, dpr: number);
    refreshMask(): void;
    setLevelData(data: any, lock: boolean): void;
    setHandler(send: Handler): void;
    protected init(): void;
}
declare class ChapterLevelItem extends ChapterLevelBaseItem {
    openButton: NineSliceButton;
    protected dpr: number;
    private bg;
    private iconbg;
    private imgMask;
    private levelTex;
    private nameTex;
    private leftLine;
    private rightLine;
    private starProgress;
    private icon;
    private unlockTex;
    private energyImg;
    private lockimg;
    private clueItms;
    constructor(scene: Phaser.Scene, dpr: number);
    refreshMask(): void;
    setLevelData(data: IExploreLevelData, lock: boolean): void;
    setClueData(datas: ICountablePackageItem[], star: number): void;
    setLayoutItems(count: number): void;
    setHandler(send: Handler): void;
    protected init(): void;
    private getProgressValue;
    private onClickHandler;
}
export {};
